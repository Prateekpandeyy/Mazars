[{"/home/pooja/MazarsRepo/src/index.js":"1","/home/pooja/MazarsRepo/src/App.js":"2","/home/pooja/MazarsRepo/src/reportWebVitals.js":"3","/home/pooja/MazarsRepo/src/Service/PublicRouteTP.js":"4","/home/pooja/MazarsRepo/src/Service/PublicRouteTL.js":"5","/home/pooja/MazarsRepo/src/Service/PublicRouteAdmin.js":"6","/home/pooja/MazarsRepo/src/components/PageNotFound/PageNotFound.js":"7","/home/pooja/MazarsRepo/src/components/LoginForm/LoginFun.js":"8","/home/pooja/MazarsRepo/src/views/Login/Login.js":"9","/home/pooja/MazarsRepo/src/views/SignUpForm/SignUp.js":"10","/home/pooja/MazarsRepo/src/views/MyAssingment/MyAssingment.js":"11","/home/pooja/MazarsRepo/src/views/Dashboard/Dashboard.js":"12","/home/pooja/MazarsRepo/src/views/SelectCategoryPage/SelectCategoryPage.js":"13","/home/pooja/MazarsRepo/src/views/QueriesTab/QueriesTab.js":"14","/home/pooja/MazarsRepo/src/views/ProposalTab/ProposalTab.js":"15","/home/pooja/MazarsRepo/src/views/AssignmentTab/AssignmentTab.js":"16","/home/pooja/MazarsRepo/src/views/AddFressAssignment/AddFreshAssingment.js":"17","/home/pooja/MazarsRepo/src/views/ForgetPassword/ForgetPassword.js":"18","/home/pooja/MazarsRepo/src/views/ProposalView/ProposalView.js":"19","/home/pooja/MazarsRepo/src/views/NewPassword/NewPassword.js":"20","/home/pooja/MazarsRepo/src/views/VideoCall/VideoCall.js":"21","/home/pooja/MazarsRepo/src/views/MeetingComponent/MeetingComponent.js":"22","/home/pooja/MazarsRepo/src/views/ChangePassword/ChangePassword.js":"23","/home/pooja/MazarsRepo/src/views/Schedule/schedule.js":"24","/home/pooja/MazarsRepo/src/views/ViewNotification/ViewNotification.js":"25","/home/pooja/MazarsRepo/src/views/Chatting/Chatting.js":"26","/home/pooja/MazarsRepo/src/views/Feedback/Feedback.js":"27","/home/pooja/MazarsRepo/src/views/EditQuery/EditQuery.js":"28","/home/pooja/MazarsRepo/src/views/FeedbackData/FeedbackData.js":"29","/home/pooja/MazarsRepo/src/views/Message/Message.js":"30","/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentStatus.js":"31","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayDetails.js":"32","/home/pooja/MazarsRepo/src/views/Contact/Contact.js":"33","/home/pooja/MazarsRepo/src/views/PaymentGateway.js/PaymentGateway.js":"34","/home/pooja/MazarsRepo/src/views/ThankYou/Thankyou.js":"35","/home/pooja/MazarsRepo/src/pages/Admin/Start/Start.js":"36","/home/pooja/MazarsRepo/src/pages/Admin/Login/Login.js":"37","/home/pooja/MazarsRepo/src/pages/Admin/Proposal/Proposal.js":"38","/home/pooja/MazarsRepo/src/pages/Admin/Dashboard/Dashboard.js":"39","/home/pooja/MazarsRepo/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js":"40","/home/pooja/MazarsRepo/src/pages/Admin/QueryAssingment/QueryAssingment.js":"41","/home/pooja/MazarsRepo/src/pages/Admin/QueriesRecevied/QueriesRecevied.js":"42","/home/pooja/MazarsRepo/src/pages/Admin/QueriesTab/QueriesTab.js":"43","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/EditTL.js":"44","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js":"45","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/index.js":"46","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paydetails.js":"47","/home/pooja/MazarsRepo/src/pages/Admin/EditTP/EditTP.js":"48","/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js":"49","/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js":"50","/home/pooja/MazarsRepo/src/pages/Admin/FeedbackTab/FeedbackTab.js":"51","/home/pooja/MazarsRepo/src/pages/Admin/PendingReceived/PendingRecevived.js":"52","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Schedule.js":"53","/home/pooja/MazarsRepo/src/pages/Admin/ForgetPassword/ForgetPassword.js":"54","/home/pooja/MazarsRepo/src/pages/Admin/MeetingComponent/MeetingComponent.js":"55","/home/pooja/MazarsRepo/src/pages/Admin/QueryRejection/QueryRejection.js":"56","/home/pooja/MazarsRepo/src/pages/Admin/ViewNotification/ViewNotification.js":"57","/home/pooja/MazarsRepo/src/pages/Admin/Message/Message.js":"58","/home/pooja/MazarsRepo/src/pages/Admin/Recording/Recording.js":"59","/home/pooja/MazarsRepo/src/pages/Admin/Chatting/Chatting.js":"60","/home/pooja/MazarsRepo/src/pages/Admin/customer/Customer.js":"61","/home/pooja/MazarsRepo/src/pages/Admin/Report/ReportList.js":"62","/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/NewPassword.js":"63","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Invoice.js":"64","/home/pooja/MazarsRepo/src/pages/TL/Start/Start.js":"65","/home/pooja/MazarsRepo/src/pages/Admin/Report/Consalation.js":"66","/home/pooja/MazarsRepo/src/pages/TL/Login/Login.js":"67","/home/pooja/MazarsRepo/src/pages/TL/Dashboard/Dashboard.js":"68","/home/pooja/MazarsRepo/src/pages/Admin/Report/Report.js":"69","/home/pooja/MazarsRepo/src/pages/TL/AddNew/AddNew.js":"70","/home/pooja/MazarsRepo/src/pages/TL/AddTeamProf/AddTeamProf.js":"71","/home/pooja/MazarsRepo/src/pages/TL/Proposal/ProposalTab.js":"72","/home/pooja/MazarsRepo/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js":"73","/home/pooja/MazarsRepo/src/pages/TL/QueriesRecevied/QueriesRecevied.js":"74","/home/pooja/MazarsRepo/src/pages/TL/EditTP/EditTP.js":"75","/home/pooja/MazarsRepo/src/pages/TL/FeedbackTab/FeedbackTab.js":"76","/home/pooja/MazarsRepo/src/pages/TL/QueryAssingment/QueryAssingment.js":"77","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/PaymentStatus.js":"78","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/SendProposal.js":"79","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AssignmentTab.js":"80","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/QueriesTab.js":"81","/home/pooja/MazarsRepo/src/pages/TL/EditProposal/EditProposal.js":"82","/home/pooja/MazarsRepo/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js":"83","/home/pooja/MazarsRepo/src/pages/TL/PendingReceived/PendingReceived.js":"84","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayModal.js":"85","/home/pooja/MazarsRepo/src/views/PaymentStatus/AllPayment.js":"86","/home/pooja/MazarsRepo/src/views/PaymentStatus/Unpaid.js":"87","/home/pooja/MazarsRepo/src/views/PaymentStatus/Paid.js":"88","/home/pooja/MazarsRepo/src/views/Message/PaymentModal.js":"89","/home/pooja/MazarsRepo/src/components/Layout/Layout.js":"90","/home/pooja/MazarsRepo/src/config/config.js":"91","/home/pooja/MazarsRepo/src/common/common.js":"92","/home/pooja/MazarsRepo/src/common/Alerts.js":"93","/home/pooja/MazarsRepo/src/pages/TL/EditProposal/Payment.js":"94","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/AllQuery.js":"95","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportTab.js":"96","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DeliveryFinalTab.js":"97","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/ProposalComponent.js":"98","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AllAssignment.js":"99","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Unpaid.js":"100","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/AllPayment.js":"101","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paid.js":"102","/home/pooja/MazarsRepo/src/components/Common/EmailValidation.js":"103","/home/pooja/MazarsRepo/src/components/Common/Mandatory.js":"104","/home/pooja/MazarsRepo/src/pages/TL/CompleteData/CompleteData.js":"105","/home/pooja/MazarsRepo/src/pages/TL/InCompleteData/InCompleteData.js":"106","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js":"107","/home/pooja/MazarsRepo/src/components/Loader/Loader.js":"108","/home/pooja/MazarsRepo/src/components/QueryDetails/QueryDetails.js":"109","/home/pooja/MazarsRepo/src/views/AssignmentTab/DiscardReport.js":"110","/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentComponent.js":"111","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DiscardReport.js":"112","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/RejectedModal.js":"113","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/ViewAllReport.js":"114","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/RejectedModal.js":"115","/home/pooja/MazarsRepo/src/components/Search-Filter/tlFilter.js":"116","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/FinalReportUpload.js":"117","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportUpload.js":"118","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/Payment.js":"119","/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerFilter.js":"120","/home/pooja/MazarsRepo/src/components/PendingForAllocation/History.js":"121","/home/pooja/MazarsRepo/src/components/Admin-Header/Admin-Header.js":"122","/home/pooja/MazarsRepo/src/components/Admin-Footer/Admin-Footer.js":"123","/home/pooja/MazarsRepo/src/components/Admin-Sidebar/Admin-Sidebar.js":"124","/home/pooja/MazarsRepo/src/components/Records/Records.js":"125","/home/pooja/MazarsRepo/src/pages/TL/Proposal/DeclinedProposal.js":"126","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AcceptedProposal.js":"127","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InprogressProposal.js":"128","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AllProposal.js":"129","/home/pooja/MazarsRepo/src/pages/TL/Login/VerifyOtpLogin.js":"130","/home/pooja/MazarsRepo/src/pages/Admin/Report/ConsaltSearch.js":"131","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/CreateInvoice.js":"132","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Generated.js":"133","/home/pooja/MazarsRepo/src/components/QueryDetails/Feedback.js":"134","/home/pooja/MazarsRepo/src/components/QueryDetails/QueryRecording.js":"135","/home/pooja/MazarsRepo/src/components/QueryDetails/DraftReports.js":"136","/home/pooja/MazarsRepo/src/components/QueryDetails/AddAdditionalQuery.js":"137","/home/pooja/MazarsRepo/src/components/QueryDetails/AdditionalQuery.js":"138","/home/pooja/MazarsRepo/src/components/QueryDetails/AssignmentDetails.js":"139","/home/pooja/MazarsRepo/src/components/Footer/Footer.js":"140","/home/pooja/MazarsRepo/src/components/Header/Header.js":"141","/home/pooja/MazarsRepo/src/components/QueryDetails/ProposalDetails.js":"142","/home/pooja/MazarsRepo/src/components/QueryDetails/BasicQuery.js":"143","/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/ResendOtp.js":"144","/home/pooja/MazarsRepo/src/pages/Admin/customer/CustHistory.js":"145","/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerListFilter.js":"146","/home/pooja/MazarsRepo/src/pages/Admin/Recording/RecordingEdit.js":"147","/home/pooja/MazarsRepo/src/components/LoadingTime/LoadingTime.js":"148","/home/pooja/MazarsRepo/src/config/services/TaxProffesional.js":"149","/home/pooja/MazarsRepo/src/components/Search-Filter/RecordingFilter.js":"150","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/RejectModal.js":"151","/home/pooja/MazarsRepo/src/components/Admin-Header/NavWrapper.js":"152","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Tds.js":"153","/home/pooja/MazarsRepo/src/pages/TL/Proposal/ChatHistory.js":"154","/home/pooja/MazarsRepo/src/components/Search-Filter/InvoiceFilter.js":"155","/home/pooja/MazarsRepo/src/components/commonShowProposal/CommonShowProposal.js":"156","/home/pooja/MazarsRepo/src/config/http/http-common.js":"157","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Tds.js":"158","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DiscardReport.js":"159","/home/pooja/MazarsRepo/src/components/Admin-Header/CustomerNotification.js":"160","/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/History.js":"161","/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/History.js":"162","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Demo.js":"163","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/FinalReport.js":"164","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DraftReport.js":"165","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/AllAssignment.js":"166","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paid.js":"167","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Unpaid.js":"168","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/AllPayment.js":"169","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/Reset.js":"170","/home/pooja/MazarsRepo/src/components/PendingForAllocation/PendingForAllocation.js":"171","/home/pooja/MazarsRepo/src/pages/Admin/Login/VerifyOtpLogin.js":"172","/home/pooja/MazarsRepo/src/pages/Admin/meeting/index.jsx":"173","/home/pooja/MazarsRepo/src/components/AllQueriesData/AllQueriesData.js":"174","/home/pooja/MazarsRepo/src/components/DeclinedQueries/DeclinedQueries.js":"175","/home/pooja/MazarsRepo/src/components/PendingForProposals/PendingForProposals.js":"176","/home/pooja/MazarsRepo/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js":"177","/home/pooja/MazarsRepo/src/pages/Admin/AcceptedProposal/AcceptedProposal.js":"178","/home/pooja/MazarsRepo/src/components/PendingForAcceptence/PendingForAcceptence.js":"179","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/AllProposalComponent.js":"180","/home/pooja/MazarsRepo/src/views/EditQuery/DeleteQuery.js":"181","/home/pooja/MazarsRepo/src/views/Schedule/demo.js":"182","/home/pooja/MazarsRepo/src/views/ChangePassword/ResendOtp.js":"183","/home/pooja/MazarsRepo/src/views/NewPassword/ResendOtp.js":"184","/home/pooja/MazarsRepo/src/components/InputRoom/index.js":"185","/home/pooja/MazarsRepo/src/views/ProposalView/RejectedModal22.js":"186","/home/pooja/MazarsRepo/src/components/meeting/index.jsx":"187","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/ViewAllReport.js":"188","/home/pooja/MazarsRepo/src/components/Search-Filter/AdminFilter.js":"189","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/ShowProposal.js":"190","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/RetviewModal.js":"191","/home/pooja/MazarsRepo/src/agora.config.js":"192","/home/pooja/MazarsRepo/src/components/AgoraVideoCall/index.jsx":"193","/home/pooja/MazarsRepo/src/pages/Admin/ViewProposal/ViewComponent.js":"194","/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/index.jsx":"195","/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/RecordingModal.js":"196","/home/pooja/MazarsRepo/src/views/ProposalView/TermsConditions.js":"197","/home/pooja/MazarsRepo/src/views/AddFressAssignment/data.js":"198","/home/pooja/MazarsRepo/src/views/AssignmentTab/CustomerDeclinedPayment.js":"199","/home/pooja/MazarsRepo/src/views/AssignmentTab/CompletedAssignment.js":"200","/home/pooja/MazarsRepo/src/views/AssignmentTab/InprogressAssignment.js":"201","/home/pooja/MazarsRepo/src/views/AssignmentTab/AllAssignment.js":"202","/home/pooja/MazarsRepo/src/views/ProposalTab/AcceptedProposal.js":"203","/home/pooja/MazarsRepo/src/views/ProposalTab/DeclinedProposal.js":"204","/home/pooja/MazarsRepo/src/views/ProposalTab/InprogressProposal.js":"205","/home/pooja/MazarsRepo/src/views/ProposalTab/AllProposal.js":"206","/home/pooja/MazarsRepo/src/views/QueriesTab/DeclinedQueries.js":"207","/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressProposal.js":"208","/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressAllocation.js":"209","/home/pooja/MazarsRepo/src/views/QueriesTab/AllQueriesData.js":"210","/home/pooja/MazarsRepo/src/components/CategorySelect/CategorySelect.js":"211","/home/pooja/MazarsRepo/src/views/SignUpForm/ResendOtp.js":"212","/home/pooja/MazarsRepo/src/views/SignUpForm/data.js":"213","/home/pooja/MazarsRepo/src/views/Login/VerifyOTP.js":"214","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Invoice.js":"215","/home/pooja/MazarsRepo/src/components/LoginForm/LoginForm.js":"216","/home/pooja/MazarsRepo/src/Service/PublicRouteUser.js":"217","/home/pooja/MazarsRepo/src/Service/PrivateRouteTP.js":"218","/home/pooja/MazarsRepo/src/Service/PrivateRouteTL.js":"219","/home/pooja/MazarsRepo/src/Service/PrivateRouteAdmin.js":"220","/home/pooja/MazarsRepo/src/Service/PrivateRouteUser.js":"221","/home/pooja/MazarsRepo/src/views/SignUpForm/city.js":"222","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paydetails.js":"223","/home/pooja/MazarsRepo/src/pages/TP/Report/Report.js":"224","/home/pooja/MazarsRepo/src/pages/TP/Recording/Recording.js":"225","/home/pooja/MazarsRepo/src/pages/TP/ViewNotification/ViewNotification.js":"226","/home/pooja/MazarsRepo/src/pages/TP/MeetingComponent/MeetingComponent.js":"227","/home/pooja/MazarsRepo/src/pages/TP/FeedbackTab/FeedbackTab.js":"228","/home/pooja/MazarsRepo/src/views/ProposalTab/ViewComponent.js":"229","/home/pooja/MazarsRepo/src/pages/TP/AddAssingmentStages/AddAssingmentStages.js":"230","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Schedule.js":"231","/home/pooja/MazarsRepo/src/pages/TP/Chatting/Chatting.js":"232","/home/pooja/MazarsRepo/src/pages/TP/Message/Message.js":"233","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AssignmentTab.js":"234","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Generated.js":"235","/home/pooja/MazarsRepo/src/pages/TP/Invoice/CreateInvoice.js":"236","/home/pooja/MazarsRepo/src/pages/TP/Recording/RecordingEdit.js":"237","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DeliveryFinalTab.js":"238","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AllAssignment.js":"239","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportTab.js":"240","/home/pooja/MazarsRepo/src/pages/TP/Message/PaymentModal.js":"241","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Demo.js":"242","/home/pooja/MazarsRepo/src/pages/TP/meeting/index.jsx":"243","/home/pooja/MazarsRepo/src/views/QueriesTab/RejectedModal.js":"244","/home/pooja/MazarsRepo/src/views/QueriesTab/AdditionalQueryModal.js":"245","/home/pooja/MazarsRepo/src/views/ModalManual/ModalManual.js":"246","/home/pooja/MazarsRepo/src/views/AssignmentTab/ViewAllReport.js":"247","/home/pooja/MazarsRepo/src/views/AssignmentTab/RejectModal.js":"248","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Tds.js":"249","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/PaymentStatus.js":"250","/home/pooja/MazarsRepo/src/pages/TP/ForgetPassword/ForgetPassword.js":"251","/home/pooja/MazarsRepo/src/pages/TP/NewPassword/NewPassword.js":"252","/home/pooja/MazarsRepo/src/pages/TP/Dashboard/Dashboard.js":"253","/home/pooja/MazarsRepo/src/pages/TP/ChangePassword/ChangePassword.js":"254","/home/pooja/MazarsRepo/src/pages/TP/EditProposal/EditProposal.js":"255","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/SendProposal.js":"256","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ProposalTab.js":"257","/home/pooja/MazarsRepo/src/pages/TP/QueriesRecevied/QueriesRecevied.js":"258","/home/pooja/MazarsRepo/src/pages/TP/Start/Start.js":"259","/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/QueriesTab.js":"260","/home/pooja/MazarsRepo/src/pages/TP/Login/Login.js":"261","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Invoice.js":"262","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InvoiceTab.js":"263","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paydetails.js":"264","/home/pooja/MazarsRepo/src/pages/TL/Recording/Recording.js":"265","/home/pooja/MazarsRepo/src/pages/TL/MeetingComponent/MeetingComponent.js":"266","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Schedule.js":"267","/home/pooja/MazarsRepo/src/pages/TL/Message/Message.js":"268","/home/pooja/MazarsRepo/src/pages/TL/Chatting/Chatting.js":"269","/home/pooja/MazarsRepo/src/pages/TL/ViewNotification/ViewNotification.js":"270","/home/pooja/MazarsRepo/src/pages/TL/Report/Report.js":"271","/home/pooja/MazarsRepo/src/pages/TL/NewPassword/NewPassword.js":"272","/home/pooja/MazarsRepo/src/pages/TL/ForgetPassword/ForgetPassword.js":"273","/home/pooja/MazarsRepo/src/pages/TL/ViewReport/ViewReport.js":"274","/home/pooja/MazarsRepo/src/pages/TL/AssignmentForm/AssignmentForm.js":"275","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/FinalReportUpload.js":"276","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportUpload.js":"277","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/ViewAllReport.js":"278","/home/pooja/MazarsRepo/src/components/Search-Filter/tpfilter.js":"279","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DiscardReport.js":"280","/home/pooja/MazarsRepo/src/views/ModalManual/RegistrationInfo.js":"281","/home/pooja/MazarsRepo/src/views/ModalManual/RegError.js":"282","/home/pooja/MazarsRepo/src/views/AssignmentTab/Assignmodal.js":"283","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/AllPayment.js":"284","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Unpaid.js":"285","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paid.js":"286","/home/pooja/MazarsRepo/src/pages/TP/NewPassword/ResendOtp.js":"287","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/index.jsx":"288","/home/pooja/MazarsRepo/src/pages/TP/EditProposal/Payment.js":"289","/home/pooja/MazarsRepo/src/pages/TP/Proposal/InprogressProposal.js":"290","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AllProposal.js":"291","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/ProposalComponent.js":"292","/home/pooja/MazarsRepo/src/pages/TP/Proposal/DeclinedProposal.js":"293","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AcceptedProposal.js":"294","/home/pooja/MazarsRepo/src/pages/TP/Login/VerifyOtpLogin.js":"295","/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/AllQuery.js":"296","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Generated.js":"297","/home/pooja/MazarsRepo/src/pages/TL/Recording/RecordingEdit.js":"298","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Demo.js":"299","/home/pooja/MazarsRepo/src/pages/TL/Message/PaymentModal.js":"300","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/PendingForAcceptence.js":"301","/home/pooja/MazarsRepo/src/pages/TP/InCompleteData/InCompleteData.js":"302","/home/pooja/MazarsRepo/src/pages/TP/CompleteData/CompleteData.js":"303","/home/pooja/MazarsRepo/src/pages/TP/DeclinedQuery/DeclinedQuery.js":"304","/home/pooja/MazarsRepo/src/pages/TL/NewPassword/ResendOtp.js":"305","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/RejectModal.js":"306","/home/pooja/MazarsRepo/src/pages/TL/meeting/index.jsx":"307","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/RejectedModal.js":"308","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/RecordingModal.js":"309","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ChatHistory.js":"310","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/Payment.js":"311","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/RejectedModal.js":"312","/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/index.jsx":"313","/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/RecordingModal.js":"314","/home/pooja/MazarsRepo/src/views/ModalManual/Query.js":"315","/home/pooja/MazarsRepo/src/views/ModalManual/QueryProcessing.js":"316","/home/pooja/MazarsRepo/src/views/ModalManual/Proposal.js":"317","/home/pooja/MazarsRepo/src/views/ModalManual/Assignment.js":"318","/home/pooja/MazarsRepo/src/views/ModalManual/Payment.js":"319","/home/pooja/MazarsRepo/src/views/ModalManual/Scheduler.js":"320","/home/pooja/MazarsRepo/src/views/ModalManual/Feedback.js":"321","/home/pooja/MazarsRepo/src/views/ModalManual/Content.js":"322","/home/pooja/MazarsRepo/src/views/ModalManual/Login.js":"323","/home/pooja/MazarsRepo/src/views/About/About.js":"324","/home/pooja/MazarsRepo/src/views/About/AboutOuter.js":"325","/home/pooja/MazarsRepo/src/views/Contact/ContactOuter.js":"326","/home/pooja/MazarsRepo/src/views/ModalManual/AllComponentManual.js":"327","/home/pooja/MazarsRepo/src/components/Common/MessageIcon.js":"328","/home/pooja/MazarsRepo/src/views/QueryContact/QueryContact.js":"329","/home/pooja/MazarsRepo/src/components/DataTablepopulated/DataTabel.js":"330","/home/pooja/MazarsRepo/src/pages/Admin/CMS/CMS.js":"331","/home/pooja/MazarsRepo/src/pages/Admin/CMS/CmsContent.js":"332","/home/pooja/MazarsRepo/src/pages/Admin/CMS/FlashMessage.js":"333","/home/pooja/MazarsRepo/src/pages/Admin/CMS/MessageModal.js":"334","/home/pooja/MazarsRepo/src/views/Login/Updates.js":"335","/home/pooja/MazarsRepo/src/pages/Admin/CMS/UpdatesContent.js":"336","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Updates.js":"337","/home/pooja/MazarsRepo/src/views/Tax/Indirect.js":"338","/home/pooja/MazarsRepo/src/views/Tax/Direct.js":"339","/home/pooja/MazarsRepo/src/views/Tax/directData.js":"340","/home/pooja/MazarsRepo/src/views/Tax/Details.js":"341","/home/pooja/MazarsRepo/src/views/Tax/LatestUpdats.js":"342","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Links.js":"343","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Linklist.js":"344","/home/pooja/MazarsRepo/src/pages/Admin/CMS/FaqList.js":"345","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Faq.js":"346","/home/pooja/MazarsRepo/src/pages/Admin/CMS/FlashContent.js":"347","/home/pooja/MazarsRepo/src/pages/Admin/CMS/MediaContent.js":"348","/home/pooja/MazarsRepo/src/pages/Admin/CMS/MediaGallery.js":"349","/home/pooja/MazarsRepo/src/views/Tax/Media.js":"350","/home/pooja/MazarsRepo/src/pages/Admin/CMS/MediaTab.js":"351","/home/pooja/MazarsRepo/src/pages/Admin/CMS/VideoMedia.js":"352","/home/pooja/MazarsRepo/src/pages/Admin/CMS/MediaText.js":"353","/home/pooja/MazarsRepo/src/pages/Admin/CMS/VideoContent.js":"354","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Mediatextshow.js":"355","/home/pooja/MazarsRepo/src/views/Tax/MediaContentCustomer.js":"356","/home/pooja/MazarsRepo/src/views/Tax/GalleryVideo.js":"357","/home/pooja/MazarsRepo/src/views/Tax/VideoList.js":"358","/home/pooja/MazarsRepo/src/pages/Admin/CMS/GroupImage.js":"359","/home/pooja/MazarsRepo/src/pages/Admin/CMS/EditImage.js":"360","/home/pooja/MazarsRepo/src/pages/Admin/CMS/EditVideo.js":"361","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Groupvideo.js":"362","/home/pooja/MazarsRepo/src/views/Tax/VideoGallary.js":"363","/home/pooja/MazarsRepo/src/views/Tax/GroupVideo.js":"364","/home/pooja/MazarsRepo/src/views/Tax/FaqQuestion.js":"365","/home/pooja/MazarsRepo/src/pages/Admin/CMS/EditFaq.js":"366","/home/pooja/MazarsRepo/src/pages/Admin/CMS/makeData.js":"367","/home/pooja/MazarsRepo/src/pages/Admin/CMS/GridExaxple.js":"368","/home/pooja/MazarsRepo/src/components/Common/OuterloginContainer.js":"369","/home/pooja/MazarsRepo/src/pages/Admin/CMS/GridExamplefaq.js":"370","/home/pooja/MazarsRepo/src/pages/Admin/cmslogin/Login.js":"371","/home/pooja/MazarsRepo/src/pages/Admin/cmslogin/VerifyOtpLogin.js":"372","/home/pooja/MazarsRepo/src/views/Login/Linklist.js":"373","/home/pooja/MazarsRepo/src/views/EditQuery/Editor.js":"374","/home/pooja/MazarsRepo/src/components/Common/MainContainer.js":"375","/home/pooja/MazarsRepo/src/components/Common/MyContainer.js":"376","/home/pooja/MazarsRepo/src/components/Common/FlashSection.js":"377","/home/pooja/MazarsRepo/src/components/Common/MainContent.js":"378","/home/pooja/MazarsRepo/src/pages/Admin/CMS/CustomQuillEditor.js":"379","/home/pooja/MazarsRepo/src/pages/Admin/CMS/AddCmsContent.js":"380","/home/pooja/MazarsRepo/src/pages/Admin/CMS/AddEditor.js":"381","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Editupdates.js":"382","/home/pooja/MazarsRepo/src/WebRoutes.js":"383","/home/pooja/MazarsRepo/src/components/IdleTimeOutHandler.js":"384","/home/pooja/MazarsRepo/src/components/IdleTimeOutModal.js":"385"},{"size":659,"mtime":1650610159906,"results":"386","hashOfConfig":"387"},{"size":242,"mtime":1652089041425,"results":"388","hashOfConfig":"387"},{"size":362,"mtime":1650610159938,"results":"389","hashOfConfig":"387"},{"size":1033,"mtime":1652409240645,"results":"390","hashOfConfig":"387"},{"size":1017,"mtime":1652340005132,"results":"391","hashOfConfig":"387"},{"size":1014,"mtime":1652340150986,"results":"392","hashOfConfig":"387"},{"size":209,"mtime":1643095558411,"results":"393","hashOfConfig":"387"},{"size":2226,"mtime":1643100561657,"results":"394","hashOfConfig":"395"},{"size":14743,"mtime":1652273654355,"results":"396","hashOfConfig":"387"},{"size":26738,"mtime":1652355147053,"results":"397","hashOfConfig":"387"},{"size":8766,"mtime":1651834236507,"results":"398","hashOfConfig":"387"},{"size":11909,"mtime":1652335160399,"results":"399","hashOfConfig":"387"},{"size":2064,"mtime":1644992122958,"results":"400","hashOfConfig":"387"},{"size":4112,"mtime":1651494719055,"results":"401","hashOfConfig":"387"},{"size":4185,"mtime":1651494701575,"results":"402","hashOfConfig":"387"},{"size":4289,"mtime":1651494656175,"results":"403","hashOfConfig":"387"},{"size":19045,"mtime":1651585860523,"results":"404","hashOfConfig":"387"},{"size":4207,"mtime":1652263785605,"results":"405","hashOfConfig":"387"},{"size":14025,"mtime":1651833846080,"results":"406","hashOfConfig":"387"},{"size":9910,"mtime":1650541408372,"results":"407","hashOfConfig":"387"},{"size":355,"mtime":1643100561753,"results":"408","hashOfConfig":"387"},{"size":332,"mtime":1643100561741,"results":"409","hashOfConfig":"387"},{"size":10843,"mtime":1652222493618,"results":"410","hashOfConfig":"387"},{"size":694,"mtime":1644938881107,"results":"411","hashOfConfig":"387"},{"size":2705,"mtime":1645711779033,"results":"412","hashOfConfig":"387"},{"size":6396,"mtime":1651496447223,"results":"413","hashOfConfig":"387"},{"size":4666,"mtime":1651496378055,"results":"414","hashOfConfig":"387"},{"size":20596,"mtime":1652179741162,"results":"415","hashOfConfig":"387"},{"size":3359,"mtime":1651491479907,"results":"416","hashOfConfig":"387"},{"size":7250,"mtime":1652436628315,"results":"417","hashOfConfig":"387"},{"size":3393,"mtime":1651891315450,"results":"418","hashOfConfig":"387"},{"size":10825,"mtime":1652255797220,"results":"419","hashOfConfig":"387"},{"size":948,"mtime":1650877190295,"results":"420","hashOfConfig":"387"},{"size":15049,"mtime":1643100561741,"results":"421","hashOfConfig":"387"},{"size":610,"mtime":1643100561753,"results":"422","hashOfConfig":"387"},{"size":430,"mtime":1651830546018,"results":"423","hashOfConfig":"387"},{"size":6875,"mtime":1652273609830,"results":"424","hashOfConfig":"387"},{"size":4565,"mtime":1651755101170,"results":"425","hashOfConfig":"387"},{"size":13147,"mtime":1652329131970,"results":"426","hashOfConfig":"387"},{"size":18868,"mtime":1651761177568,"results":"427","hashOfConfig":"387"},{"size":11771,"mtime":1651840724291,"results":"428","hashOfConfig":"387"},{"size":8918,"mtime":1652020252017,"results":"429","hashOfConfig":"387"},{"size":4194,"mtime":1651750375258,"results":"430","hashOfConfig":"387"},{"size":23981,"mtime":1651761024135,"results":"431","hashOfConfig":"387"},{"size":3134,"mtime":1651756710391,"results":"432","hashOfConfig":"387"},{"size":3864,"mtime":1651756553386,"results":"433","hashOfConfig":"387"},{"size":8957,"mtime":1652257157968,"results":"434","hashOfConfig":"387"},{"size":22957,"mtime":1651761936430,"results":"435","hashOfConfig":"387"},{"size":6707,"mtime":1652362012208,"results":"436","hashOfConfig":"387"},{"size":7455,"mtime":1651761371095,"results":"437","hashOfConfig":"387"},{"size":4428,"mtime":1652349127372,"results":"438","hashOfConfig":"387"},{"size":8116,"mtime":1651747345400,"results":"439","hashOfConfig":"387"},{"size":644,"mtime":1643100561681,"results":"440","hashOfConfig":"387"},{"size":3444,"mtime":1645418671318,"results":"441","hashOfConfig":"387"},{"size":446,"mtime":1643100561673,"results":"442","hashOfConfig":"387"},{"size":5897,"mtime":1651749410915,"results":"443","hashOfConfig":"387"},{"size":2599,"mtime":1645711833172,"results":"444","hashOfConfig":"387"},{"size":5638,"mtime":1652369059960,"results":"445","hashOfConfig":"387"},{"size":7922,"mtime":1652360062051,"results":"446","hashOfConfig":"387"},{"size":7476,"mtime":1651743684493,"results":"447","hashOfConfig":"387"},{"size":5183,"mtime":1652362226507,"results":"448","hashOfConfig":"387"},{"size":4586,"mtime":1652439614893,"results":"449","hashOfConfig":"387"},{"size":8913,"mtime":1645418716703,"results":"450","hashOfConfig":"387"},{"size":2087,"mtime":1651755646743,"results":"451","hashOfConfig":"387"},{"size":437,"mtime":1650269143590,"results":"452","hashOfConfig":"387"},{"size":5697,"mtime":1645401520739,"results":"453","hashOfConfig":"387"},{"size":6494,"mtime":1652345600780,"results":"454","hashOfConfig":"387"},{"size":11535,"mtime":1652335203787,"results":"455","hashOfConfig":"387"},{"size":37947,"mtime":1652366985955,"results":"456","hashOfConfig":"387"},{"size":3454,"mtime":1643100561685,"results":"457","hashOfConfig":"387"},{"size":4395,"mtime":1652361172217,"results":"458","hashOfConfig":"387"},{"size":4990,"mtime":1651558587410,"results":"459","hashOfConfig":"387"},{"size":22510,"mtime":1651564336651,"results":"460","hashOfConfig":"387"},{"size":9264,"mtime":1651829568629,"results":"461","hashOfConfig":"387"},{"size":3645,"mtime":1643100561701,"results":"462","hashOfConfig":"387"},{"size":4536,"mtime":1652349263604,"results":"463","hashOfConfig":"387"},{"size":11640,"mtime":1651629530453,"results":"464","hashOfConfig":"387"},{"size":3065,"mtime":1651635205191,"results":"465","hashOfConfig":"387"},{"size":498,"mtime":1643095558475,"results":"466","hashOfConfig":"387"},{"size":3529,"mtime":1651563537501,"results":"467","hashOfConfig":"387"},{"size":4900,"mtime":1652345327271,"results":"468","hashOfConfig":"387"},{"size":17717,"mtime":1651631499703,"results":"469","hashOfConfig":"387"},{"size":18439,"mtime":1646012859182,"results":"470","hashOfConfig":"387"},{"size":9722,"mtime":1645500020111,"results":"471","hashOfConfig":"387"},{"size":4314,"mtime":1651641389136,"results":"472","hashOfConfig":"387"},{"size":13163,"mtime":1651491209411,"results":"473","hashOfConfig":"387"},{"size":15735,"mtime":1651491290679,"results":"474","hashOfConfig":"387"},{"size":18675,"mtime":1651491237807,"results":"475","hashOfConfig":"387"},{"size":2127,"mtime":1643100561741,"results":"476","hashOfConfig":"387"},{"size":1961,"mtime":1652147879167,"results":"477","hashOfConfig":"387"},{"size":1099,"mtime":1652414953972,"results":"478","hashOfConfig":"387"},{"size":1144,"mtime":1651557063960,"results":"479","hashOfConfig":"387"},{"size":2483,"mtime":1643100561653,"results":"480","hashOfConfig":"387"},{"size":4242,"mtime":1643100561701,"results":"481","hashOfConfig":"387"},{"size":7834,"mtime":1651504147803,"results":"482","hashOfConfig":"387"},{"size":19580,"mtime":1651897595298,"results":"483","hashOfConfig":"387"},{"size":19894,"mtime":1651897691904,"results":"484","hashOfConfig":"387"},{"size":17098,"mtime":1651631191524,"results":"485","hashOfConfig":"387"},{"size":21254,"mtime":1652182916505,"results":"486","hashOfConfig":"387"},{"size":14062,"mtime":1651558792046,"results":"487","hashOfConfig":"387"},{"size":13997,"mtime":1651558699215,"results":"488","hashOfConfig":"387"},{"size":13478,"mtime":1651558769221,"results":"489","hashOfConfig":"387"},{"size":3071,"mtime":1643100561653,"results":"490","hashOfConfig":"387"},{"size":301,"mtime":1644850017757,"results":"491","hashOfConfig":"387"},{"size":7835,"mtime":1651630022933,"results":"492","hashOfConfig":"387"},{"size":6179,"mtime":1651504244440,"results":"493","hashOfConfig":"387"},{"size":5856,"mtime":1651629279730,"results":"494","hashOfConfig":"387"},{"size":415,"mtime":1643095558411,"results":"495","hashOfConfig":"387"},{"size":5099,"mtime":1652101998788,"results":"496","hashOfConfig":"387"},{"size":2855,"mtime":1651496671769,"results":"497","hashOfConfig":"387"},{"size":3073,"mtime":1643100561745,"results":"498","hashOfConfig":"387"},{"size":3088,"mtime":1651562276282,"results":"499","hashOfConfig":"387"},{"size":2732,"mtime":1651562601871,"results":"500","hashOfConfig":"387"},{"size":9905,"mtime":1652180450234,"results":"501","hashOfConfig":"387"},{"size":2821,"mtime":1651629329431,"results":"502","hashOfConfig":"387"},{"size":15889,"mtime":1651561227695,"results":"503","hashOfConfig":"387"},{"size":3396,"mtime":1651636036442,"results":"504","hashOfConfig":"387"},{"size":3248,"mtime":1651636014382,"results":"505","hashOfConfig":"387"},{"size":4754,"mtime":1643095558475,"results":"506","hashOfConfig":"387"},{"size":19443,"mtime":1651839639135,"results":"507","hashOfConfig":"387"},{"size":1712,"mtime":1648470496299,"results":"508","hashOfConfig":"387"},{"size":3965,"mtime":1652412290874,"results":"509","hashOfConfig":"387"},{"size":446,"mtime":1648708475284,"results":"510","hashOfConfig":"387"},{"size":30778,"mtime":1652148197418,"results":"511","hashOfConfig":"387"},{"size":425,"mtime":1650889778643,"results":"512","hashOfConfig":"387"},{"size":11719,"mtime":1651558274693,"results":"513","hashOfConfig":"387"},{"size":10410,"mtime":1651558388083,"results":"514","hashOfConfig":"387"},{"size":11665,"mtime":1651558358539,"results":"515","hashOfConfig":"387"},{"size":13462,"mtime":1651725788590,"results":"516","hashOfConfig":"387"},{"size":4934,"mtime":1652335223167,"results":"517","hashOfConfig":"387"},{"size":5819,"mtime":1646012991830,"results":"518","hashOfConfig":"387"},{"size":6112,"mtime":1651755696116,"results":"519","hashOfConfig":"387"},{"size":10540,"mtime":1652179296585,"results":"520","hashOfConfig":"387"},{"size":1435,"mtime":1643100561661,"results":"521","hashOfConfig":"387"},{"size":5957,"mtime":1643100561661,"results":"522","hashOfConfig":"387"},{"size":2608,"mtime":1643100561661,"results":"523","hashOfConfig":"387"},{"size":2318,"mtime":1643100561657,"results":"524","hashOfConfig":"387"},{"size":1500,"mtime":1643100561657,"results":"525","hashOfConfig":"387"},{"size":9400,"mtime":1652129608777,"results":"526","hashOfConfig":"387"},{"size":1750,"mtime":1652354722908,"results":"527","hashOfConfig":"387"},{"size":8236,"mtime":1650454822061,"results":"528","hashOfConfig":"387"},{"size":14442,"mtime":1652159318972,"results":"529","hashOfConfig":"387"},{"size":8430,"mtime":1652179563684,"results":"530","hashOfConfig":"387"},{"size":1546,"mtime":1645418732458,"results":"531","hashOfConfig":"387"},{"size":1936,"mtime":1645400351896,"results":"532","hashOfConfig":"387"},{"size":4832,"mtime":1645400443220,"results":"533","hashOfConfig":"387"},{"size":3825,"mtime":1652357710808,"results":"534","hashOfConfig":"387"},{"size":727,"mtime":1644929394717,"results":"535","hashOfConfig":"387"},{"size":490,"mtime":1643095558419,"results":"536","hashOfConfig":"387"},{"size":2639,"mtime":1645672874609,"results":"537","hashOfConfig":"387"},{"size":3007,"mtime":1648117629335,"results":"538","hashOfConfig":"387"},{"size":4919,"mtime":1651733819637,"results":"539","hashOfConfig":"387"},{"size":23665,"mtime":1651817273565,"results":"540","hashOfConfig":"387"},{"size":1648,"mtime":1643095558471,"results":"541","hashOfConfig":"387"},{"size":7254,"mtime":1652352190920,"results":"542","hashOfConfig":"387"},{"size":3459,"mtime":1651751093762,"results":"543","hashOfConfig":"387"},{"size":524,"mtime":1652414967305,"results":"544","hashOfConfig":"387"},{"size":17855,"mtime":1651475451701,"results":"545","hashOfConfig":"387"},{"size":2917,"mtime":1651743378600,"results":"546","hashOfConfig":"387"},{"size":5275,"mtime":1652408354631,"results":"547","hashOfConfig":"387"},{"size":2123,"mtime":1651198850133,"results":"548","hashOfConfig":"387"},{"size":2105,"mtime":1651198879394,"results":"549","hashOfConfig":"387"},{"size":14624,"mtime":1652367773507,"results":"550","hashOfConfig":"387"},{"size":14269,"mtime":1646035663297,"results":"551","hashOfConfig":"387"},{"size":14005,"mtime":1646035673257,"results":"552","hashOfConfig":"387"},{"size":17548,"mtime":1652019927875,"results":"553","hashOfConfig":"387"},{"size":11989,"mtime":1651756763042,"results":"554","hashOfConfig":"387"},{"size":12243,"mtime":1651756771454,"results":"555","hashOfConfig":"387"},{"size":12399,"mtime":1651755986502,"results":"556","hashOfConfig":"387"},{"size":2877,"mtime":1643100561669,"results":"557","hashOfConfig":"387"},{"size":5685,"mtime":1651750467195,"results":"558","hashOfConfig":"387"},{"size":5207,"mtime":1652335038862,"results":"559","hashOfConfig":"387"},{"size":2359,"mtime":1643100561685,"results":"560","hashOfConfig":"387"},{"size":5927,"mtime":1652442438270,"results":"561","hashOfConfig":"387"},{"size":4753,"mtime":1651750527004,"results":"562","hashOfConfig":"387"},{"size":6063,"mtime":1651750497931,"results":"563","hashOfConfig":"387"},{"size":8300,"mtime":1651754956157,"results":"564","hashOfConfig":"387"},{"size":7661,"mtime":1651754924760,"results":"565","hashOfConfig":"387"},{"size":8514,"mtime":1651754410282,"results":"566","hashOfConfig":"387"},{"size":9141,"mtime":1651754360887,"results":"567","hashOfConfig":"387"},{"size":1717,"mtime":1644831211842,"results":"568","hashOfConfig":"387"},{"size":7996,"mtime":1652433112651,"results":"569","hashOfConfig":"387"},{"size":1677,"mtime":1652222795499,"results":"570","hashOfConfig":"387"},{"size":1611,"mtime":1644895848006,"results":"571","hashOfConfig":"387"},{"size":1020,"mtime":1643100561657,"results":"572","hashOfConfig":"387"},{"size":2882,"mtime":1651586548498,"results":"573","hashOfConfig":"387"},{"size":2222,"mtime":1643100561665,"results":"574","hashOfConfig":"387"},{"size":8748,"mtime":1652180508578,"results":"575","hashOfConfig":"387"},{"size":14079,"mtime":1651475621182,"results":"576","hashOfConfig":"387"},{"size":870,"mtime":1643100561665,"results":"577","hashOfConfig":"387"},{"size":3076,"mtime":1652019259183,"results":"578","hashOfConfig":"387"},{"size":202,"mtime":1643100561653,"results":"579","hashOfConfig":"387"},{"size":22471,"mtime":1652427137091,"results":"580","hashOfConfig":"387"},{"size":2361,"mtime":1643978090742,"results":"581","hashOfConfig":"387"},{"size":32129,"mtime":1652369917234,"results":"582","hashOfConfig":"387"},{"size":6455,"mtime":1652370394359,"results":"583","hashOfConfig":"387"},{"size":1204,"mtime":1651587619378,"results":"584","hashOfConfig":"387"},{"size":473,"mtime":1643100561729,"results":"585","hashOfConfig":"387"},{"size":11883,"mtime":1651491402335,"results":"586","hashOfConfig":"387"},{"size":10755,"mtime":1651491372439,"results":"587","hashOfConfig":"387"},{"size":10432,"mtime":1651491436283,"results":"588","hashOfConfig":"387"},{"size":10502,"mtime":1651491347819,"results":"589","hashOfConfig":"387"},{"size":12268,"mtime":1651833573075,"results":"590","hashOfConfig":"387"},{"size":9550,"mtime":1651491068715,"results":"591","hashOfConfig":"387"},{"size":14561,"mtime":1651833613830,"results":"592","hashOfConfig":"387"},{"size":14928,"mtime":1651833458823,"results":"593","hashOfConfig":"387"},{"size":10750,"mtime":1651557702260,"results":"594","hashOfConfig":"387"},{"size":10152,"mtime":1651557680424,"results":"595","hashOfConfig":"387"},{"size":13690,"mtime":1652360416788,"results":"596","hashOfConfig":"387"},{"size":16528,"mtime":1652356318957,"results":"597","hashOfConfig":"387"},{"size":5679,"mtime":1644480386414,"results":"598","hashOfConfig":"387"},{"size":2561,"mtime":1644929650544,"results":"599","hashOfConfig":"387"},{"size":321499,"mtime":1643100561753,"results":"600","hashOfConfig":"387"},{"size":5263,"mtime":1652335177667,"results":"601","hashOfConfig":"387"},{"size":1994,"mtime":1651664078738,"results":"602","hashOfConfig":"387"},{"size":3367,"mtime":1643100561657,"results":"603","hashOfConfig":"395"},{"size":1101,"mtime":1652409251984,"results":"604","hashOfConfig":"387"},{"size":479,"mtime":1643095558383,"results":"605","hashOfConfig":"387"},{"size":653,"mtime":1652409182551,"results":"606","hashOfConfig":"387"},{"size":660,"mtime":1652409162304,"results":"607","hashOfConfig":"387"},{"size":737,"mtime":1652409200886,"results":"608","hashOfConfig":"387"},{"size":4599846,"mtime":1643095558651,"results":"609","hashOfConfig":"387"},{"size":9295,"mtime":1652257252393,"results":"610","hashOfConfig":"387"},{"size":35879,"mtime":1652441110288,"results":"611","hashOfConfig":"387"},{"size":9111,"mtime":1652370249143,"results":"612","hashOfConfig":"387"},{"size":2732,"mtime":1645711766212,"results":"613","hashOfConfig":"387"},{"size":346,"mtime":1643100561721,"results":"614","hashOfConfig":"387"},{"size":4270,"mtime":1652348239981,"results":"615","hashOfConfig":"387"},{"size":2360,"mtime":1643978111620,"results":"616","hashOfConfig":"387"},{"size":22445,"mtime":1651726940297,"results":"617","hashOfConfig":"387"},{"size":1045,"mtime":1643095558495,"results":"618","hashOfConfig":"387"},{"size":6333,"mtime":1651724742699,"results":"619","hashOfConfig":"387"},{"size":6116,"mtime":1652348775298,"results":"620","hashOfConfig":"387"},{"size":3531,"mtime":1651664487330,"results":"621","hashOfConfig":"387"},{"size":11491,"mtime":1652179269901,"results":"622","hashOfConfig":"387"},{"size":7271,"mtime":1651818709824,"results":"623","hashOfConfig":"387"},{"size":3297,"mtime":1643100561729,"results":"624","hashOfConfig":"387"},{"size":19744,"mtime":1651821221026,"results":"625","hashOfConfig":"387"},{"size":20916,"mtime":1651819210944,"results":"626","hashOfConfig":"387"},{"size":19703,"mtime":1651820042865,"results":"627","hashOfConfig":"387"},{"size":2125,"mtime":1643100561721,"results":"628","hashOfConfig":"387"},{"size":13615,"mtime":1652368170832,"results":"629","hashOfConfig":"387"},{"size":2246,"mtime":1643100561729,"results":"630","hashOfConfig":"387"},{"size":2887,"mtime":1651496837343,"results":"631","hashOfConfig":"387"},{"size":3523,"mtime":1651496599652,"results":"632","hashOfConfig":"387"},{"size":998,"mtime":1650885125538,"results":"633","hashOfConfig":"387"},{"size":10123,"mtime":1652180293272,"results":"634","hashOfConfig":"387"},{"size":3069,"mtime":1652015981133,"results":"635","hashOfConfig":"387"},{"size":23901,"mtime":1652172984841,"results":"636","hashOfConfig":"387"},{"size":3067,"mtime":1651664216025,"results":"637","hashOfConfig":"387"},{"size":2804,"mtime":1643100561721,"results":"638","hashOfConfig":"387"},{"size":9176,"mtime":1645444058487,"results":"639","hashOfConfig":"387"},{"size":11281,"mtime":1651724237221,"results":"640","hashOfConfig":"387"},{"size":5055,"mtime":1645444016836,"results":"641","hashOfConfig":"387"},{"size":18306,"mtime":1651726701417,"results":"642","hashOfConfig":"387"},{"size":527,"mtime":1643095558495,"results":"643","hashOfConfig":"387"},{"size":5013,"mtime":1651663923606,"results":"644","hashOfConfig":"387"},{"size":8131,"mtime":1652064813808,"results":"645","hashOfConfig":"387"},{"size":468,"mtime":1650283190762,"results":"646","hashOfConfig":"387"},{"size":4907,"mtime":1652345356483,"results":"647","hashOfConfig":"387"},{"size":6840,"mtime":1652345626625,"results":"648","hashOfConfig":"387"},{"size":6946,"mtime":1652177623883,"results":"649","hashOfConfig":"387"},{"size":2050,"mtime":1645412840180,"results":"650","hashOfConfig":"387"},{"size":7554,"mtime":1652257204038,"results":"651","hashOfConfig":"387"},{"size":9115,"mtime":1652370186914,"results":"652","hashOfConfig":"387"},{"size":424,"mtime":1643100561701,"results":"653","hashOfConfig":"387"},{"size":1047,"mtime":1643095558475,"results":"654","hashOfConfig":"387"},{"size":6131,"mtime":1652349359513,"results":"655","hashOfConfig":"387"},{"size":8216,"mtime":1651562138353,"results":"656","hashOfConfig":"387"},{"size":2893,"mtime":1652360924956,"results":"657","hashOfConfig":"387"},{"size":35843,"mtime":1652441767131,"results":"658","hashOfConfig":"387"},{"size":9033,"mtime":1650269170498,"results":"659","hashOfConfig":"387"},{"size":3395,"mtime":1645103796434,"results":"660","hashOfConfig":"387"},{"size":2953,"mtime":1651563267364,"results":"661","hashOfConfig":"387"},{"size":13712,"mtime":1651563131893,"results":"662","hashOfConfig":"387"},{"size":3444,"mtime":1651727031959,"results":"663","hashOfConfig":"387"},{"size":3326,"mtime":1651727008468,"results":"664","hashOfConfig":"387"},{"size":9994,"mtime":1652180481962,"results":"665","hashOfConfig":"387"},{"size":14966,"mtime":1651792067942,"results":"666","hashOfConfig":"387"},{"size":2945,"mtime":1651724469875,"results":"667","hashOfConfig":"387"},{"size":2326,"mtime":1651655067176,"results":"668","hashOfConfig":"387"},{"size":6985,"mtime":1651657607977,"results":"669","hashOfConfig":"387"},{"size":3541,"mtime":1652016253514,"results":"670","hashOfConfig":"387"},{"size":13200,"mtime":1651664243769,"results":"671","hashOfConfig":"387"},{"size":13197,"mtime":1651664292478,"results":"672","hashOfConfig":"387"},{"size":12538,"mtime":1651664266022,"results":"673","hashOfConfig":"387"},{"size":1576,"mtime":1643100561721,"results":"674","hashOfConfig":"387"},{"size":34145,"mtime":1652427032254,"results":"675","hashOfConfig":"387"},{"size":4242,"mtime":1643100561721,"results":"676","hashOfConfig":"387"},{"size":11951,"mtime":1651835536025,"results":"677","hashOfConfig":"387"},{"size":11863,"mtime":1651835024942,"results":"678","hashOfConfig":"387"},{"size":21731,"mtime":1651726260439,"results":"679","hashOfConfig":"387"},{"size":11377,"mtime":1651835568381,"results":"680","hashOfConfig":"387"},{"size":10027,"mtime":1651835506684,"results":"681","hashOfConfig":"387"},{"size":4941,"mtime":1652406128884,"results":"682","hashOfConfig":"387"},{"size":7519,"mtime":1651791678539,"results":"683","hashOfConfig":"387"},{"size":11455,"mtime":1652179281933,"results":"684","hashOfConfig":"387"},{"size":3619,"mtime":1643100561713,"results":"685","hashOfConfig":"387"},{"size":14439,"mtime":1652367880111,"results":"686","hashOfConfig":"387"},{"size":2122,"mtime":1643100561701,"results":"687","hashOfConfig":"387"},{"size":5945,"mtime":1652157952634,"results":"688","hashOfConfig":"387"},{"size":5761,"mtime":1651790668427,"results":"689","hashOfConfig":"387"},{"size":4293,"mtime":1643100561717,"results":"690","hashOfConfig":"387"},{"size":3991,"mtime":1643100561717,"results":"691","hashOfConfig":"387"},{"size":1489,"mtime":1645104335026,"results":"692","hashOfConfig":"387"},{"size":3041,"mtime":1643100561717,"results":"693","hashOfConfig":"387"},{"size":2355,"mtime":1643100561713,"results":"694","hashOfConfig":"387"},{"size":2631,"mtime":1643100561725,"results":"695","hashOfConfig":"387"},{"size":6213,"mtime":1643100561717,"results":"696","hashOfConfig":"387"},{"size":1644,"mtime":1643100561725,"results":"697","hashOfConfig":"387"},{"size":4755,"mtime":1643095558495,"results":"698","hashOfConfig":"387"},{"size":2728,"mtime":1643100561725,"results":"699","hashOfConfig":"387"},{"size":33637,"mtime":1652426918009,"results":"700","hashOfConfig":"387"},{"size":6117,"mtime":1643100561685,"results":"701","hashOfConfig":"387"},{"size":30973,"mtime":1651661172261,"results":"702","hashOfConfig":"387"},{"size":8829,"mtime":1650886378205,"results":"703","hashOfConfig":"387"},{"size":19798,"mtime":1652065705910,"results":"704","hashOfConfig":"387"},{"size":12035,"mtime":1650886674733,"results":"705","hashOfConfig":"387"},{"size":15283,"mtime":1650886862271,"results":"706","hashOfConfig":"387"},{"size":5242,"mtime":1650886890509,"results":"707","hashOfConfig":"387"},{"size":1945,"mtime":1650886915840,"results":"708","hashOfConfig":"387"},{"size":5480,"mtime":1651234588539,"results":"709","hashOfConfig":"387"},{"size":8710,"mtime":1651654878729,"results":"710","hashOfConfig":"387"},{"size":1872,"mtime":1650877149710,"results":"711","hashOfConfig":"387"},{"size":2244,"mtime":1650544155249,"results":"712","hashOfConfig":"387"},{"size":1683,"mtime":1650543534628,"results":"713","hashOfConfig":"387"},{"size":1033,"mtime":1651232184457,"results":"714","hashOfConfig":"387"},{"size":2786,"mtime":1645713254420,"results":"715","hashOfConfig":"387"},{"size":5966,"mtime":1649768520151,"results":"716","hashOfConfig":"387"},{"size":1109,"mtime":1652183088765,"results":"717","hashOfConfig":"387"},{"size":5815,"mtime":1652267701545,"results":"718","hashOfConfig":"387"},{"size":9200,"mtime":1652267965531,"results":"719","hashOfConfig":"387"},{"size":6282,"mtime":1652269170382,"results":"720","hashOfConfig":"387"},{"size":4431,"mtime":1650457066650,"results":"721","hashOfConfig":"387"},{"size":8259,"mtime":1649776316812,"results":"722","hashOfConfig":"387"},{"size":5863,"mtime":1652268570205,"results":"723","hashOfConfig":"387"},{"size":4998,"mtime":1652268440107,"results":"724","hashOfConfig":"387"},{"size":3327,"mtime":1649387561591,"results":"725","hashOfConfig":"387"},{"size":3509,"mtime":1650612441795,"results":"726","hashOfConfig":"387"},{"size":2099,"mtime":1646804959212,"results":"727","hashOfConfig":"387"},{"size":4469,"mtime":1651131058200,"results":"728","hashOfConfig":"387"},{"size":3034,"mtime":1650610159954,"results":"729","hashOfConfig":"387"},{"size":6020,"mtime":1652268225213,"results":"730","hashOfConfig":"387"},{"size":3598,"mtime":1652268155530,"results":"731","hashOfConfig":"387"},{"size":1779,"mtime":1651120414175,"results":"732","hashOfConfig":"387"},{"size":4306,"mtime":1651197554513,"results":"733","hashOfConfig":"387"},{"size":5114,"mtime":1652269253784,"results":"734","hashOfConfig":"387"},{"size":5127,"mtime":1652098894092,"results":"735","hashOfConfig":"387"},{"size":5089,"mtime":1652098369351,"results":"736","hashOfConfig":"387"},{"size":3374,"mtime":1649768738976,"results":"737","hashOfConfig":"387"},{"size":2360,"mtime":1648113493679,"results":"738","hashOfConfig":"387"},{"size":6086,"mtime":1652099482893,"results":"739","hashOfConfig":"387"},{"size":5468,"mtime":1652269878647,"results":"740","hashOfConfig":"387"},{"size":5010,"mtime":1652099446319,"results":"741","hashOfConfig":"387"},{"size":6054,"mtime":1652270088421,"results":"742","hashOfConfig":"387"},{"size":4762,"mtime":1650542773433,"results":"743","hashOfConfig":"387"},{"size":2984,"mtime":1652098532264,"results":"744","hashOfConfig":"387"},{"size":3357,"mtime":1649768796015,"results":"745","hashOfConfig":"387"},{"size":3466,"mtime":1649200990717,"results":"746","hashOfConfig":"387"},{"size":7768,"mtime":1652098752041,"results":"747","hashOfConfig":"387"},{"size":8136,"mtime":1652099051193,"results":"748","hashOfConfig":"387"},{"size":5650,"mtime":1649201867733,"results":"749","hashOfConfig":"387"},{"size":5161,"mtime":1651897057280,"results":"750","hashOfConfig":"387"},{"size":2457,"mtime":1649139579154,"results":"751","hashOfConfig":"387"},{"size":3375,"mtime":1649768514261,"results":"752","hashOfConfig":"387"},{"size":4660,"mtime":1652269057499,"results":"753","hashOfConfig":"387"},{"size":915,"mtime":1649316536293,"results":"754","hashOfConfig":"387"},{"size":4796,"mtime":1652270312112,"results":"755","hashOfConfig":"387"},{"size":192,"mtime":1650611236046,"results":"756","hashOfConfig":"387"},{"size":6121,"mtime":1652268932407,"results":"757","hashOfConfig":"387"},{"size":6761,"mtime":1649404405554,"results":"758","hashOfConfig":"387"},{"size":4983,"mtime":1649404175736,"results":"759","hashOfConfig":"387"},{"size":7992,"mtime":1649684258579,"results":"760","hashOfConfig":"387"},{"size":848,"mtime":1650314658765,"results":"761","hashOfConfig":"387"},{"size":458,"mtime":1650811726075,"results":"762","hashOfConfig":"387"},{"size":755,"mtime":1650811906559,"results":"763","hashOfConfig":"387"},{"size":491,"mtime":1650456833700,"results":"764","hashOfConfig":"387"},{"size":447,"mtime":1650459134063,"results":"765","hashOfConfig":"387"},{"size":2273,"mtime":1651197152550,"results":"766","hashOfConfig":"387"},{"size":9167,"mtime":1652267854156,"results":"767","hashOfConfig":"387"},{"size":1082,"mtime":1651197132805,"results":"768","hashOfConfig":"387"},{"size":5897,"mtime":1652268715535,"results":"769","hashOfConfig":"387"},{"size":27054,"mtime":1652086070497,"results":"770","hashOfConfig":"387"},{"size":7938,"mtime":1652437376763,"results":"771","hashOfConfig":"387"},{"size":1869,"mtime":1652324214818,"results":"772","hashOfConfig":"387"},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},"cbijxx",{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"775"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"792"},"6ojwz3",{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"795","messages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"797","messages":"798","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"799","usedDeprecatedRules":"775"},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"775"},{"filePath":"805","messages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807","usedDeprecatedRules":"775"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810","usedDeprecatedRules":"775"},{"filePath":"811","messages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813","usedDeprecatedRules":"775"},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"775"},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"819","messages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"775"},{"filePath":"822","messages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"775"},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"829","usedDeprecatedRules":"775"},{"filePath":"830","messages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832","usedDeprecatedRules":"775"},{"filePath":"833","messages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837","usedDeprecatedRules":"775"},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"775"},{"filePath":"841","messages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843","usedDeprecatedRules":"775"},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"775"},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"775"},{"filePath":"850","messages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"852","messages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"775"},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"857","messages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859","usedDeprecatedRules":"775"},{"filePath":"860","messages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"862","usedDeprecatedRules":"775"},{"filePath":"863","messages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"865","messages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867","usedDeprecatedRules":"775"},{"filePath":"868","messages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"775"},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"875","messages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"775"},{"filePath":"878","messages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"775"},{"filePath":"881","messages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883","usedDeprecatedRules":"775"},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"886","usedDeprecatedRules":"775"},{"filePath":"887","messages":"888","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"889","usedDeprecatedRules":"775"},{"filePath":"890","messages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"892","usedDeprecatedRules":"775"},{"filePath":"893","messages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"895","usedDeprecatedRules":"775"},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":59,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"775"},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905","usedDeprecatedRules":"775"},{"filePath":"906","messages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"908","messages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"910","usedDeprecatedRules":"775"},{"filePath":"911","messages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"913","usedDeprecatedRules":"775"},{"filePath":"914","messages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916","usedDeprecatedRules":"775"},{"filePath":"917","messages":"918","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"919","usedDeprecatedRules":"775"},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"922","usedDeprecatedRules":"775"},{"filePath":"923","messages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925","usedDeprecatedRules":"775"},{"filePath":"926","messages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"928","messages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"930","messages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"932","usedDeprecatedRules":"775"},{"filePath":"933","messages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"935","messages":"936","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"775"},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"942","usedDeprecatedRules":"775"},{"filePath":"943","messages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"775"},{"filePath":"946","messages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"948","usedDeprecatedRules":"775"},{"filePath":"949","messages":"950","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"951","messages":"952","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"953","messages":"954","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"955","messages":"956","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957","usedDeprecatedRules":"775"},{"filePath":"958","messages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"960","messages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"962","usedDeprecatedRules":"775"},{"filePath":"963","messages":"964","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965","usedDeprecatedRules":"775"},{"filePath":"966","messages":"967","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"775"},{"filePath":"969","messages":"970","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"971","usedDeprecatedRules":"775"},{"filePath":"972","messages":"973","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"974","messages":"975","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"976","usedDeprecatedRules":"775"},{"filePath":"977","messages":"978","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"979","usedDeprecatedRules":"775"},{"filePath":"980","messages":"981","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"982","usedDeprecatedRules":"775"},{"filePath":"983","messages":"984","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"985","usedDeprecatedRules":"775"},{"filePath":"986","messages":"987","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"988","messages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"990","usedDeprecatedRules":"775"},{"filePath":"991","messages":"992","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"993","usedDeprecatedRules":"775"},{"filePath":"994","messages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"996","usedDeprecatedRules":"775"},{"filePath":"997","messages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"999","usedDeprecatedRules":"775"},{"filePath":"1000","messages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002","usedDeprecatedRules":"775"},{"filePath":"1003","messages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1005","usedDeprecatedRules":"775"},{"filePath":"1006","messages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1008","usedDeprecatedRules":"775"},{"filePath":"1009","messages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1011","usedDeprecatedRules":"775"},{"filePath":"1012","messages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014","usedDeprecatedRules":"775"},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1017","messages":"1018","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1019","usedDeprecatedRules":"775"},{"filePath":"1020","messages":"1021","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1022","usedDeprecatedRules":"775"},{"filePath":"1023","messages":"1024","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1025","usedDeprecatedRules":"775"},{"filePath":"1026","messages":"1027","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1028","usedDeprecatedRules":"775"},{"filePath":"1029","messages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1031","usedDeprecatedRules":"775"},{"filePath":"1032","messages":"1033","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1034","usedDeprecatedRules":"775"},{"filePath":"1035","messages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1037","usedDeprecatedRules":"775"},{"filePath":"1038","messages":"1039","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1040","usedDeprecatedRules":"775"},{"filePath":"1041","messages":"1042","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1043","usedDeprecatedRules":"775"},{"filePath":"1044","messages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1046","usedDeprecatedRules":"775"},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1049","usedDeprecatedRules":"775"},{"filePath":"1050","messages":"1051","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1052","usedDeprecatedRules":"775"},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1055","messages":"1056","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1057","usedDeprecatedRules":"775"},{"filePath":"1058","messages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1060","usedDeprecatedRules":"775"},{"filePath":"1061","messages":"1062","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1063","usedDeprecatedRules":"775"},{"filePath":"1064","messages":"1065","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1066","messages":"1067","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1068","usedDeprecatedRules":"775"},{"filePath":"1069","messages":"1070","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1071","usedDeprecatedRules":"775"},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1074","usedDeprecatedRules":"775"},{"filePath":"1075","messages":"1076","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1077","usedDeprecatedRules":"775"},{"filePath":"1078","messages":"1079","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1080","usedDeprecatedRules":"775"},{"filePath":"1081","messages":"1082","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1083","usedDeprecatedRules":"775"},{"filePath":"1084","messages":"1085","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1086","usedDeprecatedRules":"775"},{"filePath":"1087","messages":"1088","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1089","usedDeprecatedRules":"775"},{"filePath":"1090","messages":"1091","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1092","usedDeprecatedRules":"775"},{"filePath":"1093","messages":"1094","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1095","usedDeprecatedRules":"775"},{"filePath":"1096","messages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1098","usedDeprecatedRules":"775"},{"filePath":"1099","messages":"1100","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1101","usedDeprecatedRules":"775"},{"filePath":"1102","messages":"1103","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1104","usedDeprecatedRules":"775"},{"filePath":"1105","messages":"1106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1107","messages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1109","messages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1111","usedDeprecatedRules":"775"},{"filePath":"1112","messages":"1113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1114","messages":"1115","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1116","usedDeprecatedRules":"775"},{"filePath":"1117","messages":"1118","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1119","usedDeprecatedRules":"775"},{"filePath":"1120","messages":"1121","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1122","usedDeprecatedRules":"775"},{"filePath":"1123","messages":"1124","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1125","usedDeprecatedRules":"775"},{"filePath":"1126","messages":"1127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1128","messages":"1129","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1130","usedDeprecatedRules":"775"},{"filePath":"1131","messages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1133","usedDeprecatedRules":"775"},{"filePath":"1134","messages":"1135","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136","usedDeprecatedRules":"775"},{"filePath":"1137","messages":"1138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1139","usedDeprecatedRules":"775"},{"filePath":"1140","messages":"1141","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1142","usedDeprecatedRules":"775"},{"filePath":"1143","messages":"1144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1145","usedDeprecatedRules":"775"},{"filePath":"1146","messages":"1147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1148","usedDeprecatedRules":"775"},{"filePath":"1149","messages":"1150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1151","usedDeprecatedRules":"775"},{"filePath":"1152","messages":"1153","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1154","usedDeprecatedRules":"775"},{"filePath":"1155","messages":"1156","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1157","messages":"1158","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1159","usedDeprecatedRules":"775"},{"filePath":"1160","messages":"1161","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1162","usedDeprecatedRules":"775"},{"filePath":"1163","messages":"1164","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1165","usedDeprecatedRules":"775"},{"filePath":"1166","messages":"1167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1168","usedDeprecatedRules":"775"},{"filePath":"1169","messages":"1170","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1171","usedDeprecatedRules":"775"},{"filePath":"1172","messages":"1173","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1174","usedDeprecatedRules":"775"},{"filePath":"1175","messages":"1176","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1177","messages":"1178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179","usedDeprecatedRules":"775"},{"filePath":"1180","messages":"1181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1182","usedDeprecatedRules":"775"},{"filePath":"1183","messages":"1184","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1185","usedDeprecatedRules":"775"},{"filePath":"1186","messages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1188","usedDeprecatedRules":"775"},{"filePath":"1189","messages":"1190","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1191","usedDeprecatedRules":"775"},{"filePath":"1192","messages":"1193","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1194","usedDeprecatedRules":"775"},{"filePath":"1195","messages":"1196","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1197","usedDeprecatedRules":"775"},{"filePath":"1198","messages":"1199","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1200","messages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1202","usedDeprecatedRules":"775"},{"filePath":"1203","messages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1205","messages":"1206","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1207","usedDeprecatedRules":"775"},{"filePath":"1208","messages":"1209","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1210","usedDeprecatedRules":"775"},{"filePath":"1211","messages":"1212","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1213","messages":"1214","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1215","usedDeprecatedRules":"775"},{"filePath":"1216","messages":"1217","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1218","usedDeprecatedRules":"775"},{"filePath":"1219","messages":"1220","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1221","messages":"1222","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1223","usedDeprecatedRules":"775"},{"filePath":"1224","messages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1226","usedDeprecatedRules":"775"},{"filePath":"1227","messages":"1228","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1229","usedDeprecatedRules":"775"},{"filePath":"1230","messages":"1231","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1232","usedDeprecatedRules":"775"},{"filePath":"1233","messages":"1234","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1235","usedDeprecatedRules":"775"},{"filePath":"1236","messages":"1237","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1238","usedDeprecatedRules":"775"},{"filePath":"1239","messages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1241","usedDeprecatedRules":"775"},{"filePath":"1242","messages":"1243","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1244","usedDeprecatedRules":"775"},{"filePath":"1245","messages":"1246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1247","messages":"1248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1249","messages":"1250","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1251","messages":"1252","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1253","usedDeprecatedRules":"775"},{"filePath":"1254","messages":"1255","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1256","usedDeprecatedRules":"775"},{"filePath":"1257","messages":"1258","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1259","usedDeprecatedRules":"775"},{"filePath":"1260","messages":"1261","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1262","usedDeprecatedRules":"775"},{"filePath":"1263","messages":"1264","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1265","usedDeprecatedRules":"775"},{"filePath":"1266","messages":"1267","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1268","usedDeprecatedRules":"775"},{"filePath":"1269","messages":"1270","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1271","usedDeprecatedRules":"775"},{"filePath":"1272","messages":"1273","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1274","messages":"1275","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1276","usedDeprecatedRules":"775"},{"filePath":"1277","messages":"1278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1279","usedDeprecatedRules":"775"},{"filePath":"1280","messages":"1281","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1282","usedDeprecatedRules":"775"},{"filePath":"1283","messages":"1284","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1285","usedDeprecatedRules":"775"},{"filePath":"1286","messages":"1287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1288","messages":"1289","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1290","usedDeprecatedRules":"775"},{"filePath":"1291","messages":"1292","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293","usedDeprecatedRules":"775"},{"filePath":"1294","messages":"1295","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296","usedDeprecatedRules":"775"},{"filePath":"1297","messages":"1298","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1299","usedDeprecatedRules":"775"},{"filePath":"1300","messages":"1301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1302","messages":"1303","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"1304","messages":"1305","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"775"},{"filePath":"1307","messages":"1308","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"1309","messages":"1310","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1311","messages":"1312","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1313","usedDeprecatedRules":"775"},{"filePath":"1314","messages":"1315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1316","messages":"1317","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1318","usedDeprecatedRules":"775"},{"filePath":"1319","messages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1321","usedDeprecatedRules":"775"},{"filePath":"1322","messages":"1323","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1324","usedDeprecatedRules":"775"},{"filePath":"1325","messages":"1326","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1327","usedDeprecatedRules":"775"},{"filePath":"1328","messages":"1329","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1330","usedDeprecatedRules":"775"},{"filePath":"1331","messages":"1332","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1333","usedDeprecatedRules":"775"},{"filePath":"1334","messages":"1335","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1336","usedDeprecatedRules":"775"},{"filePath":"1337","messages":"1338","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1339","usedDeprecatedRules":"775"},{"filePath":"1340","messages":"1341","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"775"},{"filePath":"1343","messages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1345","usedDeprecatedRules":"775"},{"filePath":"1346","messages":"1347","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1348","messages":"1349","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1350","messages":"1351","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1352","usedDeprecatedRules":"775"},{"filePath":"1353","messages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1355","usedDeprecatedRules":"775"},{"filePath":"1356","messages":"1357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1358","messages":"1359","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1360","messages":"1361","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1362","usedDeprecatedRules":"775"},{"filePath":"1363","messages":"1364","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1365","usedDeprecatedRules":"792"},{"filePath":"1366","messages":"1367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1368","messages":"1369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1370","messages":"1371","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1372","messages":"1373","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1374","messages":"1375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1376","messages":"1377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1378","messages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1380","messages":"1381","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1382","messages":"1383","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1384","messages":"1385","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1386","usedDeprecatedRules":"775"},{"filePath":"1387","messages":"1388","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1389","usedDeprecatedRules":"775"},{"filePath":"1390","messages":"1391","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1392","messages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1394","usedDeprecatedRules":"775"},{"filePath":"1395","messages":"1396","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1397","usedDeprecatedRules":"775"},{"filePath":"1398","messages":"1399","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1400","usedDeprecatedRules":"775"},{"filePath":"1401","messages":"1402","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1403","usedDeprecatedRules":"775"},{"filePath":"1404","messages":"1405","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1406","messages":"1407","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1408","usedDeprecatedRules":"775"},{"filePath":"1409","messages":"1410","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1411","usedDeprecatedRules":"775"},{"filePath":"1412","messages":"1413","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1414","usedDeprecatedRules":"775"},{"filePath":"1415","messages":"1416","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1417","usedDeprecatedRules":"775"},{"filePath":"1418","messages":"1419","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1420","usedDeprecatedRules":"775"},{"filePath":"1421","messages":"1422","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1423","usedDeprecatedRules":"775"},{"filePath":"1424","messages":"1425","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1426","usedDeprecatedRules":"775"},{"filePath":"1427","messages":"1428","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1429","usedDeprecatedRules":"775"},{"filePath":"1430","messages":"1431","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1432","messages":"1433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1434","messages":"1435","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1436","usedDeprecatedRules":"775"},{"filePath":"1437","messages":"1438","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1439","usedDeprecatedRules":"775"},{"filePath":"1440","messages":"1441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1442","messages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1444","usedDeprecatedRules":"775"},{"filePath":"1445","messages":"1446","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1447","usedDeprecatedRules":"775"},{"filePath":"1448","messages":"1449","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1450","usedDeprecatedRules":"775"},{"filePath":"1451","messages":"1452","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1453","usedDeprecatedRules":"775"},{"filePath":"1454","messages":"1455","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1456","usedDeprecatedRules":"775"},{"filePath":"1457","messages":"1458","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1459","usedDeprecatedRules":"775"},{"filePath":"1460","messages":"1461","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1462","usedDeprecatedRules":"775"},{"filePath":"1463","messages":"1464","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1465","usedDeprecatedRules":"775"},{"filePath":"1466","messages":"1467","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1468","usedDeprecatedRules":"775"},{"filePath":"1469","messages":"1470","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1471","usedDeprecatedRules":"775"},{"filePath":"1472","messages":"1473","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1474","usedDeprecatedRules":"775"},{"filePath":"1475","messages":"1476","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1477","usedDeprecatedRules":"775"},{"filePath":"1478","messages":"1479","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1480","usedDeprecatedRules":"775"},{"filePath":"1481","messages":"1482","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1483","messages":"1484","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1485","messages":"1486","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1487","usedDeprecatedRules":"775"},{"filePath":"1488","messages":"1489","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1490","usedDeprecatedRules":"775"},{"filePath":"1491","messages":"1492","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1493","messages":"1494","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1495","messages":"1496","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1497","usedDeprecatedRules":"775"},{"filePath":"1498","messages":"1499","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1500","usedDeprecatedRules":"775"},{"filePath":"1501","messages":"1502","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1503","messages":"1504","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1505","usedDeprecatedRules":"775"},{"filePath":"1506","messages":"1507","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1508","messages":"1509","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1510","messages":"1511","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1512","usedDeprecatedRules":"775"},{"filePath":"1513","messages":"1514","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1515","usedDeprecatedRules":"775"},{"filePath":"1516","messages":"1517","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1518","usedDeprecatedRules":"775"},{"filePath":"1519","messages":"1520","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1521","usedDeprecatedRules":"775"},{"filePath":"1522","messages":"1523","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1524","usedDeprecatedRules":"775"},{"filePath":"1525","messages":"1526","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1527","usedDeprecatedRules":"775"},{"filePath":"1528","messages":"1529","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1530","usedDeprecatedRules":"775"},{"filePath":"1531","messages":"1532","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1533","usedDeprecatedRules":"775"},{"filePath":"1534","messages":"1535","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1536","usedDeprecatedRules":"775"},{"filePath":"1537","messages":"1538","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1539","usedDeprecatedRules":"775"},{"filePath":"1540","messages":"1541","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1542","usedDeprecatedRules":"775"},{"filePath":"1543","messages":"1544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1545","messages":"1546","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1547","usedDeprecatedRules":"775"},{"filePath":"1548","messages":"1549","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1550","usedDeprecatedRules":"775"},{"filePath":"1551","messages":"1552","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1553","usedDeprecatedRules":"775"},{"filePath":"1554","messages":"1555","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1556","usedDeprecatedRules":"775"},{"filePath":"1557","messages":"1558","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"1559","messages":"1560","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1025","usedDeprecatedRules":"775"},{"filePath":"1561","messages":"1562","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1563","usedDeprecatedRules":"775"},{"filePath":"1564","messages":"1565","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1566","usedDeprecatedRules":"775"},{"filePath":"1567","messages":"1568","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1569","usedDeprecatedRules":"775"},{"filePath":"1570","messages":"1571","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1572","usedDeprecatedRules":"775"},{"filePath":"1573","messages":"1574","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1575","usedDeprecatedRules":"775"},{"filePath":"1576","messages":"1577","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1578","messages":"1579","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1580","usedDeprecatedRules":"775"},{"filePath":"1581","messages":"1582","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1583","usedDeprecatedRules":"775"},{"filePath":"1584","messages":"1585","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1586","usedDeprecatedRules":"775"},{"filePath":"1587","messages":"1588","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1589","messages":"1590","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1591","usedDeprecatedRules":"775"},{"filePath":"1592","messages":"1593","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1594","usedDeprecatedRules":"775"},{"filePath":"1595","messages":"1596","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1597","usedDeprecatedRules":"775"},{"filePath":"1598","messages":"1599","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1600","usedDeprecatedRules":"775"},{"filePath":"1601","messages":"1602","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1603","usedDeprecatedRules":"775"},{"filePath":"1604","messages":"1605","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1606","usedDeprecatedRules":"775"},{"filePath":"1607","messages":"1608","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1609","usedDeprecatedRules":"775"},{"filePath":"1610","messages":"1611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1612","messages":"1613","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1614","usedDeprecatedRules":"775"},{"filePath":"1615","messages":"1616","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1617","usedDeprecatedRules":"775"},{"filePath":"1618","messages":"1619","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1620","usedDeprecatedRules":"775"},{"filePath":"1621","messages":"1622","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1623","usedDeprecatedRules":"775"},{"filePath":"1624","messages":"1625","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1626","usedDeprecatedRules":"775"},{"filePath":"1627","messages":"1628","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"1629","messages":"1630","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1631","usedDeprecatedRules":"775"},{"filePath":"1632","messages":"1633","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1634","usedDeprecatedRules":"775"},{"filePath":"1635","messages":"1636","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1637","usedDeprecatedRules":"775"},{"filePath":"1638","messages":"1639","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1640","usedDeprecatedRules":"775"},{"filePath":"1641","messages":"1642","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1643","usedDeprecatedRules":"775"},{"filePath":"1644","messages":"1645","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1646","usedDeprecatedRules":"775"},{"filePath":"1647","messages":"1648","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1649","usedDeprecatedRules":"775"},{"filePath":"1650","messages":"1651","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1652","usedDeprecatedRules":"775"},{"filePath":"1653","messages":"1654","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1655","usedDeprecatedRules":"775"},{"filePath":"1656","messages":"1657","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1658","usedDeprecatedRules":"775"},{"filePath":"1659","messages":"1660","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1661","usedDeprecatedRules":"775"},{"filePath":"1662","messages":"1663","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1664","usedDeprecatedRules":"775"},{"filePath":"1665","messages":"1666","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1667","usedDeprecatedRules":"775"},{"filePath":"1668","messages":"1669","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1670","usedDeprecatedRules":"775"},{"filePath":"1671","messages":"1672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1673","messages":"1674","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1675","usedDeprecatedRules":"775"},{"filePath":"1676","messages":"1677","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1678","usedDeprecatedRules":"775"},{"filePath":"1679","messages":"1680","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1681","messages":"1682","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1683","messages":"1684","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1685","messages":"1686","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1687","usedDeprecatedRules":"775"},{"filePath":"1688","messages":"1689","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":3,"source":"1690","usedDeprecatedRules":"775"},{"filePath":"1691","messages":"1692","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1693","messages":"1694","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1695","messages":"1696","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1697","usedDeprecatedRules":"775"},{"filePath":"1698","messages":"1699","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1700","usedDeprecatedRules":"775"},{"filePath":"1701","messages":"1702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1703","messages":"1704","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":3,"source":"1705","usedDeprecatedRules":"775"},{"filePath":"1706","messages":"1707","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1708","usedDeprecatedRules":"775"},{"filePath":"1709","messages":"1710","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1711","messages":"1712","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1713","messages":"1714","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1715","usedDeprecatedRules":"775"},{"filePath":"1716","messages":"1717","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1718","usedDeprecatedRules":"775"},{"filePath":"1719","messages":"1720","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1721","messages":"1722","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1723","usedDeprecatedRules":"775"},{"filePath":"1724","messages":"1725","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1726","usedDeprecatedRules":"775"},{"filePath":"1727","messages":"1728","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1729","usedDeprecatedRules":"775"},{"filePath":"1730","messages":"1731","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1732","usedDeprecatedRules":"775"},{"filePath":"1733","messages":"1734","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1735","usedDeprecatedRules":"775"},{"filePath":"1736","messages":"1737","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1738","messages":"1739","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1740","usedDeprecatedRules":"775"},{"filePath":"1741","messages":"1742","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1743","messages":"1744","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1745","usedDeprecatedRules":"775"},{"filePath":"1746","messages":"1747","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1748","usedDeprecatedRules":"775"},{"filePath":"1749","messages":"1750","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1751","usedDeprecatedRules":"775"},{"filePath":"1752","messages":"1753","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1754","usedDeprecatedRules":"775"},{"filePath":"1755","messages":"1756","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1757","usedDeprecatedRules":"775"},{"filePath":"1758","messages":"1759","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1760","usedDeprecatedRules":"775"},{"filePath":"1761","messages":"1762","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1763","usedDeprecatedRules":"775"},{"filePath":"1764","messages":"1765","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1766","usedDeprecatedRules":"775"},{"filePath":"1767","messages":"1768","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1769","usedDeprecatedRules":"775"},{"filePath":"1770","messages":"1771","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1772","usedDeprecatedRules":"775"},{"filePath":"1773","messages":"1774","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1775","messages":"1776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1777"},{"filePath":"1778","messages":"1779","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1780","messages":"1781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1782","messages":"1783","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1784","messages":"1785","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1786","usedDeprecatedRules":"775"},{"filePath":"1787","messages":"1788","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1789","usedDeprecatedRules":"775"},{"filePath":"1790","messages":"1791","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":3,"source":"1792","usedDeprecatedRules":"775"},{"filePath":"1793","messages":"1794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1795","messages":"1796","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1797","messages":"1798","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1799","usedDeprecatedRules":"775"},{"filePath":"1800","messages":"1801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1802","messages":"1803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"775"},{"filePath":"1804","messages":"1805","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1806","usedDeprecatedRules":"775"},{"filePath":"1807","messages":"1808","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1809","messages":"1810","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1811","usedDeprecatedRules":"775"},{"filePath":"1812","messages":"1813","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1814","messages":"1815","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1816","usedDeprecatedRules":"775"},{"filePath":"1817","messages":"1818","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1819","messages":"1820","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pooja/MazarsRepo/src/index.js",[],["1821","1822"],"/home/pooja/MazarsRepo/src/App.js",["1823","1824"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react'\n\nimport WebRoutes from './WebRoutes'\nexport default function App () {\n \n\n  \n\n \n\n  return (\n   <>\n   <WebRoutes />\n  \n     \n     \n   </>\n  )\n}\n","/home/pooja/MazarsRepo/src/reportWebVitals.js",[],"/home/pooja/MazarsRepo/src/Service/PublicRouteTP.js",["1825"],"/home/pooja/MazarsRepo/src/Service/PublicRouteTL.js",[],"/home/pooja/MazarsRepo/src/Service/PublicRouteAdmin.js",[],"/home/pooja/MazarsRepo/src/components/PageNotFound/PageNotFound.js",[],"/home/pooja/MazarsRepo/src/components/LoginForm/LoginFun.js",["1826","1827"],"import React from 'react';\nimport { useState, createContext } from 'react';\nimport axios from 'axios';\nimport { baseUrl } from '../../config/config';\nimport { useHistory } from 'react-router';\nimport { useAlert } from \"react-alert\";\nimport Login from '../../pages/Admin/Login/Login';\nimport Alerts from '../../common/Alerts';\nimport LoginForm from './LoginForm';\nconst LoginData = createContext();\nconst LoginFun = () => {\n  const alert = useAlert();\n  let history = useHistory();\n    const [email, setEmail] = useState(null);\n    const [show, setShow] = useState(false);\n    const [uid, setUid] = useState('')\n    const [isPasswordShow, setPasswordShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n  \n    const togglePasssword = () => {\n      setPasswordShow(!isPasswordShow)\n    };\n  \n    const onSubmit = (value) => {\n    \n      setLoading(true)\n  \n      let formData = new FormData();\n      formData.append(\"userid\", value.p_email);\n      formData.append(\"password\", value.password);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/login`,\n        data: formData,\n      })\n        .then(function (response) {\n  \n          if (response.data.code === 1) {\n            setLoading(false)\n            setShow(true)\n            Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n            setUid(response.data[\"user id\"])\n            logout();\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            Alerts.ErrorNormal(\"Invalid email or password.\")\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n  const logout = () => {\n    setTimeout(() => {\n      localStorage.removeItem(\"adminkey\");\n      localStorage.removeItem(\"adminEmail\");\n      history.push(\"/admin/login\");\n    }, 600000)\n  }\n    const handleChange = (e) => {\n  \n      setEmail(e.target.value);\n    };\n   \n  const valData = { handleChange, onSubmit, togglePasssword, isPasswordShow, email, show, uid, loading, setLoading}\n  return(\n      <>\n      <LoginData.Provider value={valData}>\n          <Login />\n          \n      </LoginData.Provider>\n      </>\n  )\n}\nexport default LoginFun;\nexport {LoginData}",["1828","1829"],"/home/pooja/MazarsRepo/src/views/Login/Login.js",["1830","1831","1832","1833","1834","1835","1836","1837","1838","1839","1840","1841","1842","1843","1844","1845","1846"],"/home/pooja/MazarsRepo/src/views/SignUpForm/SignUp.js",["1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864"],"/home/pooja/MazarsRepo/src/views/MyAssingment/MyAssingment.js",["1865","1866","1867","1868","1869","1870","1871","1872"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport QueryDetails from \"../../components/QueryDetails/QueryDetails\";\nimport moment from 'moment';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Spinner\n} from \"reactstrap\";\nimport {Container} from '@material-ui/core';\nfunction MyAssingment(props) {\n  const { id } = useParams();\n  \n  const history = useHistory();\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [accept, setAccept] = useState();\n  const [finalDate, setFinalDate] = useState()\n  const [tlName2, setTlname] = useState();\n  const [qstatus, setqStatus] = useState();\n  const[tp22, setTp22] = useState();\n  const [tpStatus, setTpstatus] = useState();\n  const [declined2, setDeclined2] = useState();\n  const [declinedStatus, setDeclinedStatus] = useState(false)\n  const [overDue, setOverDue] = useState(\"\")\n  const [routesData, setRoutesData] = useState(\"\")\n    const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n    proposal_reactive_dates: \"\",\n    proposal_reactive_notes: \"\"\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`, myConfig).then((res) => {\n\n        if (res.data.code === 1) {\n          setqStatus(res.data.result[0].query_status)\n          setAccept(res.data.result[0].query_status)\n          setTlname(res.data.result[0].tlname);\n          setTp22(res.data.result[0].tpname);\n          setTpstatus(res.data.result[0].tp_status);\n          if(res.data.history_queries[0] === undefined){\n\n          }\n          else{\n            setDisplayHistory({\n              tlname: res.data.proposal_queries,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          \n          }\n          if(res.data.result[0].status ==\"Declined Query\"){\n        \n            let a = res.data.result[0].declined_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\n              setDeclined2(a)\n             setDeclinedStatus(true)\n            }\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setPaymentDetails(res.data.payment_detail);\n          setAssingmentNo(res.data.result[0].assign_no);\n          setFeedback(res.data.feedback_detail);\n          setReports(res.data.reports);\n    \n         \n       \n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n          \n          try {\n           \n            var myYear = JSON.parse(assementItem);\n           \n            setYear(myYear);\n          } catch (e) {\n           \n          }\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            \n            setPurpose(myPurpose);\n           \n          } catch (e) {\n           \n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setOverDue(res.data.result[0].overdueamount)\n            console.log(\"overDue\", res.data.result[0].overdueamount)\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.result[0].declined_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n            \n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n              accept : res.data.result[0].accept,\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\n            \n            });\n            let a = moment(res.data.result[0].final_date);\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\n            let c = a.diff(b)\n            let d = moment.duration(c)\n            let finalDate = d.days() + 1;\n           setFinalDate(finalDate)\n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n         \n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n   \n    getSubmittedAssingment();\n  }, []);\nuseState(() => {\n  if(props.location.routes){\n    setRoutesData(props.location.routes)\n  }\n}, [])\n\n\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n     \n         \n       <Container maxWidth=\"lg\">\n       <Card style={{display : \"flex\", height : \"100%\"}}>\n         <CardHeader>\n          <Row>\n            <Col md=\"4\">\n           {props.location.index ? \n            <Link\n            to={{\n              pathname: `/customer/${props.location.routes}`,\n              index: props.location.index,\n            }}\n          >\n            <button class=\"customBtn\">Go Back</button>\n          </Link> : \n           <button class=\"customBtn\" onClick = {() => history.goBack()}>Go Back</button>\n          }\n              \n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4>Query Details</h4>\n            </Col>\n            <Col md=\"4\">\n            \n            </Col>\n          </Row>\n        </CardHeader>\n           \n\n           <CardBody>\n           {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                overDue = {overDue}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n\n                assingNo={assingNo}\n                customerQuery=\"customerQuery\"\n                queryDocs={queryDocs}\n                purpose={purpose}\n                year={year}\n                paymentDetails={paymentDetails}\n                feedback={feedback}\n                reports={reports}\n                submitData = {submitData}\n                accept = {accept}\n                tlName2={tlName2}\n                tp22 = {tp22}\n                tpStatus={tpStatus}\n                qstatus={qstatus}\n                finalDate={finalDate}\n                declined2={declined2}\n                panel = \"client\"\n              />\n            ))}\n        \n           </CardBody>\n     \n         </Card>\n       </Container>\n    </Layout>\n  );\n}\n\nexport default MyAssingment;\n","/home/pooja/MazarsRepo/src/views/Dashboard/Dashboard.js",["1873","1874","1875","1876","1877","1878","1879","1880","1881","1882","1883","1884"],"/home/pooja/MazarsRepo/src/views/SelectCategoryPage/SelectCategoryPage.js",["1885","1886"],"import React from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\n// import {\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   CardTitle,\n//   Row,\n//   Col,\n//   Table,\n// } from \"reactstrap\";\nimport {Card, Grid, CardHeader, CardActionArea, CardContent, CardActions, Container, Paper} from \"@material-ui/core\"\nimport { useHistory } from \"react-router-dom\";\nimport CategorySelect from \"../../components/CategorySelect/CategorySelect\";\n\nfunction SelectCategoryPage() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      {/* <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <CategorySelect addfreshbtn=\"addfreshbtn\" />\n        </CardHeader>\n      </Card> */}\n      <Container maxWidth = \"lg\">\n        <Paper>\n        <Card>\n        <CardHeader  title={\n          <Grid container>\n            <Grid item sm ={4}>\n            <button class=\"autoWidthBtn\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n              </Grid>\n              <Grid item sm = {4} align=\"center\">\n              <h4 className=\"contentTitle\"> Add Fresh Query </h4>\n                </Grid>\n                <Grid item sm = {4}>\n           \n                </Grid>\n            </Grid>\n        }/>\n        \n       \n        <CardContent>\n        <CategorySelect addfreshbtn=\"addfreshbtn\" />\n        </CardContent>\n      </Card>\n        </Paper>\n      </Container>\n    </Layout>\n  );\n}\n\nexport default SelectCategoryPage;\n","/home/pooja/MazarsRepo/src/views/QueriesTab/QueriesTab.js",["1887","1888","1889","1890","1891","1892","1893"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\nimport AllQueriesData from \"./AllQueriesData\";\nimport InprogressAllocation from \"./InprogressAllocation\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport DeclinedQueries from \"./DeclinedQueries\";\n\n\n\n\nfunction QueriesTab(props) {\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n\n  \n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n  const [tabIndex, setTabIndex] = useState(0);\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\n  const [inprogressAllocation, setInprogressAllocation] = useState(\"\");\n  const [inprogressProposal, setInprogressProposal] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n  const [bgColor, setbgColor] = useState(\"#55425F\")\n\n  const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n  useEffect(() => {\n    CountAllQuery();\n    CountInprogressAllocation();\n    CountInprogressProposal();\n    CountDeclined();\n  }, []);\n\n\n  const CountAllQuery = (data) => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`, myConfig)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAllQueriesCount(res.data.result.length);\n        }\n      });\n  };\n\n  const CountInprogressAllocation = () => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`, myConfig).then((res) => {\n     \n      if (res.data.code === 1) {\n        setInprogressAllocation(res.data.result.length);\n      }\n    });\n  };\n\n  const CountInprogressProposal = () => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`, myConfig).then((res) => {\n     \n      if (res.data.code === 1) {\n        setInprogressProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const CountDeclined = () => {\n    axios.get(`${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`, myConfig).then((res) => {\n     \n      if (res.data.code === 1) {\n        setDeclined(res.data.result.length);\n      }\n    });\n  };\nconst tableIndex = (index) => {\n  setTabIndex(index)\n  console.log(index)\n  if(index === 0){\n    setbgColor(\"#55425F\")\n  }\n  else if(index === 1){\n    setbgColor(\"#6e557b\")\n  }\n  else if(index === 2){\n    setbgColor(\"#6e557b\")\n  }\n  else if(index === 3){\n    setbgColor(\"#6e557b\")\n  }\n}\n  \nconst myStyle1 = {\n  margin: \"10px auto\",\n  fontSize : \"1rem\"\n};\nconst myStyle2 = {\nmargin: \"10px auto\",\nfontSize : \"1rem\",\ncolor : \"#55425f\",\nfontWeight : 1000\n};\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      \n        <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n          <TabList className=\"fixedTab\">\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n              All Queries ({allQueriesCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Inprogress; Queries({inprogressAllocation})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Completed; Queries ({inprogressProposal})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Declined; Queries ({declined})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllQueriesData snWidth = {50}/>\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressAllocation />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedQueries />\n          </TabPanel>\n        </Tabs>\n     \n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/ProposalTab/ProposalTab.js",["1894","1895","1896","1897","1898","1899"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport AllProposal from \"./AllProposal\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport AcceptedProposal from \"./AcceptedProposal\";\nimport DeclinedProposal from \"./DeclinedProposal\";\n\n\n\n\nfunction Proposal(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n \n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n  const [tabIndex, setTabIndex] = useState(0);\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\n  const [inprogressProposalCount, setInprogressProposalCount] = useState(\"\");\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\n  const [bgColor, setbgColor] = useState(\"#42566a\")\n  const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n  useEffect(() => {\n    getAllProposal();\n    getInprogressProposal();\n    getAcceptedProposal();\n    getDeclinedProposal();\n  }, []);\n\n\n  const getAllProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`, myConfig)\n      .then((res) => {\n\n        setAllProposalCount(res.data.result.length);\n      });\n  };\n\n  const getInprogressProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`, myConfig)\n      .then((response) => {\n      \n        if (response.data.code === 1) {\n          setInprogressProposalCount(response.data.result.length);\n        }\n      })\n  };\n\n  const getAcceptedProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`, myConfig)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAcceptedProposalCount(res.data.result.length);\n        }\n      });\n  };\n\n  const getDeclinedProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=3`, myConfig)\n      .then((response) => {\n        \n        if (response.data.code === 1) {\n          setDeclinedProposalCount(response.data.result.length);\n        }\n      })\n  };\n\n  const tableIndex = (index) => {\n    setTabIndex(index)\n    console.log(index)\n    if(index === 0){\n      setbgColor(\"#42566a\")\n    }\n    else if(index === 1){\n      setbgColor(\"#5f7b97\")\n    }\n    else if(index === 2){\n      setbgColor(\"#5f7b97\")\n    }\n    else if(index === 3){\n      setbgColor(\"#5f7b97\")\n    }\n  }\n  const myStyle1 = {\n    margin: \"10px auto\",\n    fontSize : \"14px\"\n  };\n  const myStyle2 = {\n margin: \"10px auto\",\n \n color : \"#42566a\",\n fontWeight : 1000\n  };\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n    \n      <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n      <TabList\n           className=\"fixedTab\"\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n              All Proposals ({allProposalCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Inprogress; Proposals ({inprogressProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Accepted; Proposals ({acceptedProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Declined; Proposals ({declinedProposalCount})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <AcceptedProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedProposal />\n          </TabPanel>\n        </Tabs>\n     \n    </Layout>\n  );\n}\n\nexport default Proposal;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/AssignmentTab/AssignmentTab.js",["1900","1901"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport AllAssignment from \"./AllAssignment\";\nimport InprogressAssignment from \"./InprogressAssignment\";\nimport CompletedAssignment from \"./CompletedAssignment\";\nimport CustomerDeclinedPayment from \"./CustomerDeclinedPayment\";\n\n\n\nfunction AssignmentTab(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n \n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n  const [tabIndex, setTabIndex] = useState(0);\n  const [allassignment, setAllAssignment] = useState(\"\");\n  const [inprogressAssignmentCount, setInprogressAssignmentCount] = useState(\"\");\n  const [completeAssignment, setCompleteAssignment] = useState(\"\");\n  const [declinedAssignment, setDeclinedAssignment] = useState(\"\");\n  const [bgColor, setbgColor] = useState(\"#615339\")\n  const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n\n  useEffect(() => {\n    getAllAssignment();\n    getInprogressAssignment();\n    getCompletedAssignment();\n    getCustomerDeclinedPayment();\n  }, []);\n\n\n  const getAllAssignment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`, myConfig)\n      .then((res) => {\n        \n        setAllAssignment(res.data.result.length);\n      });\n  };\n\n  const getInprogressAssignment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=1`, myConfig)\n      .then((response) => {\n       \n        if (response.data.code === 1) {\n          setInprogressAssignmentCount(response.data.result.length);\n        }\n      })\n  };\n\n  const getCompletedAssignment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=2`, myConfig)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setCompleteAssignment(res.data.result.length);\n        }\n      });\n  };\n\n  const getCustomerDeclinedPayment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=3`, myConfig)\n      .then((response) => {\n     \n        if (response.data.code === 1) {\n          setDeclinedAssignment(response.data.result.length);\n        }\n      })\n  };\n\n\n  const tableIndex = (index) => {\n    setTabIndex(index)\n    console.log(index)\n    if(index === 0){\n      setbgColor(\"#615339\")\n    }\n    else if(index === 1){\n      setbgColor(\"#907b56\")\n    }\n    else if(index === 2){\n      setbgColor(\"#907b56\")\n    }\n    else if(index === 3){\n      setbgColor(\"#907b56\")\n    }\n  }\n    \n  const myStyle1 = {\n    margin: \"10px auto\"\n  };\n  const myStyle2 = {\n    margin: \"10px auto\",\n \n    color : \"#5a625a\",\n    fontWeight : 1000\n     };\n  \n  \n\n\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n\n      <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n      <TabList\n          className=\"fixedTab\"\n          >\n            <Tab style={tabIndex === 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n              All Assignment ({allassignment})\n            </Tab>\n            <Tab style={tabIndex === 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Inprogress; Assignments ({inprogressAssignmentCount})\n            </Tab>\n\n            <Tab style={tabIndex === 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Completed; Assignments ({completeAssignment})\n            </Tab>\n\n            <Tab style={tabIndex === 3 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Client Declined; Payment ({declinedAssignment})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <CompletedAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <CustomerDeclinedPayment />\n          </TabPanel>\n        </Tabs>\n     \n    </Layout>\n  );\n}\n\nexport default AssignmentTab;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/AddFressAssignment/AddFreshAssingment.js",["1902"],"import { useForm, useFieldArray } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Select from \"react-select\";\nimport './style.css'\nimport Swal from \"sweetalert2\";\nimport { purpose } from \"./data\";\nimport Layout from \"../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport classNames from \"classnames\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nfunction AddFreshAssingment(props) {\n  const history = useHistory();\n  const token = window.localStorage.getItem(\"clientToken\")\n  const { handleSubmit, register, errors, reset, control } = useForm({\n    defaultValues: {\n      users: [{ query: \"\" }],\n    },\n  });\n\n  const { append, remove, fields} = useFieldArray({\n    control,\n    name: \"users\",\n  });\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n  // const userNameId = window.localStorage.getItem(\"name\");\n  const [custcheckError, setCheckerror] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [purposeOption, setPurposeOption] = useState([]);\n  const [assessmentYear, setAssessmentYear] = useState([]);\n  const [det, addDet] = useState();\n\n  const [loading, setLoading] = useState(false);\n  const [selectError, setSelectError] = useState()\n  const [uploadOrDownloadCount, setUploadOrDownloadCount] = useState(10);\n\n  const remError = () => {\n    setCheckerror(\"\")\n  }\n \n  const purPoseQuery = (e) => {\n    setSelectError(\"\")\n    setPurposeOption(e)\n  }\n\n  useEffect(() => {\n    getAssementYear();\n  }, []);\n\n\n  const getAssementYear = () => {\n    axios\n      .get(`${baseUrl}/customers/getAssesmentYear`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setAssessmentYear(res.data.result);\n        }\n      });\n  };\n\n\n  const onSubmit = (value) => {\n   let timer;\n    const a = value.p_fact;\n  \n    if (a === '') {\n      \n     \n    }\n    else if (purposeOption < 1) {\n      setSelectError(\"At least one value should be enter\")\n    }\n    else if (value.p_format_word === false && value.p_format_digital === false && value.p_format_physically === false) {\n    \n      setCheckerror(\"Please select at least one.\")\n    }\n\n    else {\n      setLoading(true);\n      var uploadImg = value.uploadImg;\n      if(uploadImg === undefined){\n        \n       timer = setInterval(() => {\n    \n        setUploadOrDownloadCount(\n          (beforeValue) => (beforeValue >= 90 ? 90 \n                            : beforeValue + 10 ));\n      }, 1000);\n      }\n     else{\n      let t = 100 * uploadImg.length;\n       timer = setInterval(() => {\n    \n        setUploadOrDownloadCount(\n          (beforeValue) => (beforeValue >= 90 ? 90 \n                            : beforeValue + 10 ));\n      }, t);\n     }\n \n      let formData = new FormData();\n     \n      if (uploadImg) {\n        for (var i = 0; i < uploadImg.length; i++) {\n          let file = uploadImg[i];\n          formData.append(\"upload_1[]\", file);\n        }\n      }\n   \n      formData.append(\"fact\", det);\n    \n      formData.append(\"specific\", JSON.stringify(value.users));\n      formData.append(\"timelines\", value.p_timelines);\n      formData.append(\"user\", JSON.parse(userId));\n      formData.append(\"cid\", JSON.parse(category));\n      formData.append(\"softcopy_word\", Number(value.p_format_word));\n      formData.append(\n        \"softcopy_digitally_assigned\",\n        Number(value.p_format_digital)\n      );\n      formData.append(\n        \"printout_physically_assigned\",\n        Number(value.p_format_physically)\n      );\n      formData.append(\"case_name\", value.p_case_name);\n    {selectedOption ? \n      formData.append(\"assessment_year\", JSON.stringify(selectedOption)) :\n      formData.append(\"assessment_year\", selectedOption)}\n      formData.append(\"purpose\", JSON.stringify(purposeOption));\n      axios\n        .post(`${baseUrl}/customers/PostQuestion`, formData, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n            uit: token\n            // 'Authorization': 'JWT fefege...'\n          },\n        })\n        .then(function (response) {\n       \n          if (response.data.code === 1) {\n            setUploadOrDownloadCount(100)\n            clearInterval(timer)\n            reset();\n            var message = response.data.message\n            var query_no = response.data.query_no\n            console.log(\"message\", message.length)\n            if (message.length === 0) {\n              Swal.fire({\n                title: 'Success !',\n                html: `<p>Query no.- ${query_no} submitted successfully.\n                 Mazars team will contact you shortly.\n                </p>`,\n                icon: 'success',\n              })\n            } else if (message.invalid) {\n              Swal.fire({\n                title: 'Error !',\n                html: `<p class=\"text-danger\">${message.invalid}</p>`,\n              })\n            }\n            else if (message.faill) {\n              Swal.fire({\n                title: 'Success !',\n                html: `<p>Query no.- ${query_no} submitted successfully.\n                 Mazars team will contact you shortly.\n                </p> \n                <br/><p class=\"text-danger\">${message.faill}</p>`,\n                icon: 'success',\n              })\n            }\n            props.history.push(\"/customer/queries\");\n          } else {\n            ShowError.LoadingError(setLoading)\n            setLoading(false);\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         \n        });\n    }\n  };\n\n\n  return (\n    <>\n      <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"4\">\n                <button class=\"autoWidthBtn\" onClick={() => history.goBack()}>\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\n                  Go Back\n                </button>\n              </Col>\n              <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\n              </Col>\n            </Row>\n\n          </CardHeader>\n         \n            <div className=\"container\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 py-4\">\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Brief facts of the case <span className=\"declined\">*</span></label>\n\n                  <CKEditor\n                     editor={ ClassicEditor }\n                     config = {{\n\n                      highlight: {\n                        options: [\n                            {\n                                model: 'greenMarker',\n                                class: 'marker-green',\n                                title: 'Green marker',\n                                color: 'var(--ck-highlight-marker-green)',\n                                type: 'marker'\n                            },\n                            {\n                                model: 'redPen',\n                                class: 'pen-red',\n                                title: 'Red pen',\n                                color: 'var(--ck-highlight-pen-red)',\n                                type: 'pen'\n                            }\n                        ]\n                    },\n                      fontFamily: {\n                        options: [\n                            'default',\n                            'Ubuntu, Arial, sans-serif',\n                            'Ubuntu Mono, Courier New, Courier, monospace'\n                        ]\n                    },\n                    fontColor: {\n                      colors: [\n                          {\n                              color: 'hsl(0, 0%, 0%)',\n                              label: 'Black'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 30%)',\n                              label: 'Dim grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 60%)',\n                              label: 'Grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 90%)',\n                              label: 'Light grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 100%)',\n                              label: 'White',\n                              hasBorder: true\n                          },\n\n                          // ...\n                      ]\n                  },\n                    toolbar: [\n                   ' highlight', 'heading',  'bold', 'fontColor', 'italic',  'bulletedList', 'numberedList', 'undo', 'redo'\n                    ],\n                  \n                    }}\n                    \n                    \n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fact,\n                    })}\n                    id=\"textarea22\"\n                    rows=\"6\"\n                    name=\"p_fact\"\n                \n                    onChange={ ( event, editor ) => {\n                      addDet(editor.getData());\n                     \n\n                    \n                  } }\n\n                ></CKEditor>\n                      </div>\n                    </div>\n</div>\n<div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"question_query mb-2\">\n                        <label className=\"form-label\">\n                          Specific Questions for advisory <span className=\"declined\">*</span>\n                        </label>\n                        <div\n                          className=\"btn queryPlusIcon\"\n                          onClick={() => append({ query: \"\" })}\n                        >\n                          +\n                        </div>\n                      </div>\n\n                      {fields.length > 0 &&\n                        fields.map((item, index) => (\n                          <div\n                            className=\"question_query_field mb-2\"\n                            key={item.id}\n                          >\n                            <input\n                              type=\"text\"\n                              className={classNames(\"form-control\", {\n                                \"is-invalid\": errors.users,\n                              })}\n                              ref={register({ required: true })}\n                              name={`users[${index}].query`}\n                              placeholder=\"Specify your query\"\n                              defaultValue={`${item.query}`}\n                            />\n                            \n                            <div\n                              className=\"btn queryPlusIcon ml-2\"\n                              onClick={() => remove(index)}\n                            >\n                              -\n                            </div>\n                          </div>\n                        ))}\n                      \n                    </div>\n\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                        Purpose of the query <span className=\"declined\">*</span>\n                        </label>\n                        <Select\n                          closeMenuOnSelect={false}\n                          className={selectError ? \"customError\" : \"\"}\n                          onChange={purPoseQuery}\n                          isMulti\n                          options={purpose}\n                        />\n\n                      </div>\n                     \n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Assessment year</label>\n                        <Select\n                          closeMenuOnSelect={false}\n                          onChange={setSelectedOption}\n                          isMulti\n                          options={assessmentYear}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <ImageUploads register={register} control={control} />\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Format in which Opinion is required <span className=\"declined\">*</span>\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a1\"\n                            className={classNames(\"form-check-input\", {\n                              \"is-invalid\": errors.p_format_word,\n                            })}\n                            ref={register}\n                            type=\"checkbox\"\n                            name=\"p_format_word\"\n                            onChange={remError}\n                            defaultChecked\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a1\">\n                            Softcopy - Word/ Pdf\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a2\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            name=\"p_format_digital\"\n                            ref={register}\n                            onChange={remError}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a2\">\n                            SoftCopy- Digitally Signed\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a3\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            name=\"p_format_physically\"\n                            ref={register}\n                            onChange={remError}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a3\">\n                            Printout- Physically Signed\n                          </label>\n                        </div>\n                        <p className=\"declined\">{custcheckError}</p>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">Case name</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_case_name\"\n                          ref={register}\n\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Timelines within which Opinion is required\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Urgent\"\n\n                          />\n                          <label>Urgent</label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Regular\"\n                            defaultChecked\n                          />\n                          <label>Regular</label>\n                        </div>\n                      </div>\n                     \n                    </div>\n                  </div>\n\n                 \n                  {\n                      loading ?\n                   \n                        <Box position=\"relative\" display=\"inline-flex\">\n        <CircularProgress variant=\"determinate\" \n                          value={uploadOrDownloadCount} />\n        <Box\n          bottom={0}\n          right={0}\n          top={0}\n          justifyContent=\"center\"\n          left={0}\n          display=\"flex\"\n          alignItems=\"center\"\n          position=\"absolute\"\n        >\n          {`${Math.round(uploadOrDownloadCount)}%`}\n        </Box>\n      </Box>\n                        :\n                        <button className=\"customBtn\" type=\"submit\">\n                         Submit\n                        </button>\n                    }\n                </form>\n\n              </div>\n              <Mandatory />\n            </div>\n        \n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default AddFreshAssingment;\n\n\n\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn\" onClick={() => append({ pics: \"\" })}>\n        <PublishIcon color=\"secondary\" />\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n    <>\n    {index === 0 ? \n      <div className=\"question_query_field mb-2\" key={index}>\n      \n      \n     \n       <input\n            type=\"file\"\n            name= \"uploadImg\"\n            ref={register}\n            className=\"form-control-file manage_file\"\n            multiple\n            defaultValue={item.pics}\n          />\n      <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n        -\n      </div>\n    \n    </div> : \"\"}\n  \n    </>\n      ))}\n    </>\n  );\n};\n","/home/pooja/MazarsRepo/src/views/ForgetPassword/ForgetPassword.js",["1903","1904","1905","1906","1907","1908","1909"],"/home/pooja/MazarsRepo/src/views/ProposalView/ProposalView.js",["1910","1911","1912","1913","1914","1915","1916","1917","1918","1919","1920","1921","1922","1923","1924","1925"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport TermsConditions from \"./TermsConditions\";\nimport CommonServices from \"../../common/common\";\nimport Alerts from \"../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport Loader from \"../../components/Loader/Loader\";\nimport RejectedModal22 from \"./RejectedModal22\";\nimport {Markup} from \"interweave\";\n\nfunction ProposalView(props) {\n  const { handleSubmit, register } = useForm();\n  const [loading, setLoading] = useState(false);\n  const userId = window.localStorage.getItem(\"userid\");\n  const [queryStatus, setQueryStatus] = useState(null);\n  const [custcheckError, setCheckerror] = useState(null);\n  const [valueCheckBox, setValueCheckBox] = useState(false);\n  const [rejectedBox, showRejectedBox] = useState(false)\n  const [assignNo2, setAssignNo2] = useState()\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const { id } = useParams();\n  const history = useHistory();\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    proposal_date: \"\",\n    name: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const { amount, proposal_date,\n    name, description,\n    amount_type, amount_fixed, amount_hourly,\n    payment_terms,\n    no_of_installment,\n    installment_amount,\n    due_date,\n  } = diaplayProposal\n\n\n  useEffect(() => {\n    getProposalDetails();\n  }, []);\n\n  const getProposalDetails = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/getQueryDetails?id=${id}`, myConfig\n      )\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n        \n\n          if (res.data.result[0].query_status) {\n            setQueryStatus(res.data.result[0].query_status);\n          }\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              proposal_date: res.data.proposal_queries[0].created,\n              name: res.data.proposal_queries[0].tlname,\n              description: res.data.proposal_queries[0].description,\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount_fixed,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n            });\n          }\n\n        }\n      });\n  };\n\n  \n  var nfObject = new Intl.NumberFormat('hi-IN')\n  const readTerms = () => {\n \n    setPaymentModal(!addPaymentModal);\n  };\n\n\n  const updateCheckbox = ({ checked }) => {\n    setValueCheckBox(checked)\n    setPaymentModal(checked);\n    setCheckerror(\"\")\n  }\n\n\n  const onSubmit = (value) => {\n  \n\n    if (valueCheckBox === false) {\n     \n      setCheckerror(\"Please , You have to select\")\n    }\n    else {\n      setLoading(true)\n      let formData = new FormData();\n      formData.append(\"id\", id);\n      formData.append(\"status\", 5);\n      formData.append(\"terms_condition\", Number(value.p_terms_condition));\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/ProposalAccept`,\n        headers : {\n          uit : token\n        },\n        data: formData,\n      })\n        .then(function (response) {\n       \n          if (response.data.code === 1) {\n            setLoading(false)\n            var variable = \"\"\n            Alerts.SuccessNormal(variable)\n            history.push({\n              pathname: `/customer/proposal`,\n              index: 0,\n            });\n          } if (response.data.code === 0) {\n            setLoading(false)\n          }\n\n        })\n        .catch((error) => {\n       \n        });\n    }\n\n  };\n\nconst amountStyle  = {\n  display : \"block\",\n  textAlign : \"right\",\n \n}\n  const installAmount = (data) => {\n    var item = data.split(',')\n   \n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\n  const installAmount2 = (data) => {\n    var item = data.split(',')\n   \n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p style={amountStyle}>{nfObject.format(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\n  // curent date\n  var date = new Date();\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n\n\n  //rejected\n  const rejected = (id) => {\n   \n    if (valueCheckBox === false) {\n   \n      setCheckerror(\"Please , You have to select\")\n    } else {\n      Swal.fire({\n        title: \"Are you sure\",\n         text: \"to reject proposal ?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, reject it\",\n       \n      }).then((result) => {\n        if (result.value) {\n          deleteCliente(id);\n        }\n      });\n    }\n  };\n\n\n  // delete data\n  const deleteCliente = (key) => {\n    setAssignNo2(id)\n    showRejectedBox(!rejectedBox)\n    \n  };\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/customer/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"customBtn ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Proposal Details</p>\n            </Col>\n            <Col\n              md=\"4\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            ></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n         <div className=\"queryBox\">\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Name of Team Leader</th>\n                <td>{name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date of Allocation</th>\n                <td>{CommonServices.removeTime(proposal_date)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposed Amount</th>\n                <td>{nfObject.format(amount)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Scope of Work</th>\n                <td><Markup content={description} /></td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Amount</th>\n                <td>\n                  <tr style={{display : \"flex\", width : \"100%\"}}>\n                    <th style={{display : \"flex\", width : \"50%\"}}>Amount Type</th>\n                    <th style={{display : \"flex\", width : \"50%\"}}>Price</th>\n                  </tr>\n                  <tr style={{display : \"flex\", width : \"100%\"}}>\n                    <td style={{display : \"flex\", width : \"50%\"}}>{CommonServices.capitalizeFirstLetter(amount_type)}</td>\n                    <td style={{display : \"flex\", width : \"50%\"}}>\n                      {\n                        amount_type == \"fixed\" ?\n                          nfObject.format(amount)\n                          :\n                          amount_type == \"hourly\" ?\n                            nfObject.format(amount_hourly)\n                            :\n                            amount_type == \"mixed\" ?\n                              <div>\n                                <p>Fixed : {nfObject.format(amount)}</p>\n                                <p>Hourly : {nfObject.format(amount_hourly)}</p>\n                              </div>\n                              :\n                              \"\"\n                      }\n                    </td>\n                  </tr>\n                </td>\n              </tr>\n\n              <tr>\n                <th scope=\"row\">Payment Terms</th>\n                {\n                  payment_terms == \"lumpsum\" ?\n                    <td>\n                      <tr>\n                        <th>Payment Type</th>\n                        <th>Due Dates</th>\n                      </tr>\n                      <tr>\n                        <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\n                        <td>\n                          {CommonServices.removeTime(due_date)}\n                        </td>\n                      </tr>\n                    </td>\n                    :\n                    payment_terms == \"installment\" ?\n                      <td>\n                        <tr style={{display : \"flex\", width : \"100%\"}}>\n                          <th style={{display : \"flex\", width : \"25%\"}}>Payment Type</th>\n                          <th style={{display : \"flex\", width : \"25%\"}}>No of Installments</th>\n                          <th style={{display : \"flex\", width : \"25%\"}}>Installment Amount</th>\n                          <th style={{display : \"flex\", width : \"25%\"}}>Due Dates</th>\n                        </tr>\n                        <tr style={{display : \"flex\", width : \"100%\"}}>\n                          <td style={{display : \"flex\", width : \"25%\"}}>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\n                          <td style={{display : \"flex\", width : \"25%\", justifyContent : \"center\"}}>{no_of_installment}</td>\n                          <td style={{display : \"flex\", width : \"25%\", flexDirection : \"column\", textAlign : \"right\"}}>{installAmount2(installment_amount)}</td>\n                        <td style={{display : \"flex\", width : \"25%\", flexDirection : \"column\"}}>{installAmount(due_date)}</td>\n                        </tr>\n                      </td>\n                      :\n                      \"\"\n                }\n\n\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposal Status</th>\n                <td>\n                  {queryStatus == \"4\" && \"Inprogress\"}\n                  {queryStatus == \"6\" && \"Declined\"}\n                  {(queryStatus == \"5\" || queryStatus > 6) && \"Accepted\"}\n                </td>\n              </tr>\n            </tbody>\n\n          </table>\n\n         </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <div className=\"form-check\">\n                  <input\n                    id=\"terms_condition\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    name=\"p_terms_condition\"\n                    ref={register}\n                    onChange={(e) => updateCheckbox(e.target)}\n                  />\n                  <label\n                    htmlFor=\"terms_condition\"\n                    className=\"form-check-label\"\n                    title=\"Read\"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                   Please read engagement letter\n                  </label>\n                  <p className=\"declined\">{custcheckError}</p>\n                </div>\n                <br />\n\n                {\n                  loading ?\n                    <Loader />\n                    :\n                    <>\n                      <div className=\"form-check\">\n                        {\n                          valueCheckBox ?\n                            <div>\n                              <button type=\"submit\" className=\"customBtn\">\n                                Accept\n                              </button>\n                              <button type=\"button\" className=\"dangerBtn ml-2\" onClick={() => rejected(id)}>\n                                Reject\n                              </button>\n                            </div>\n                            :\n                            <div className=\"proposalBtn\">\n                              <button type=\"submit\" disabled  className=\"customBtnDisabled\">\n                                Accept\n                              </button>\n                              <button type=\"button\" disabled  className=\"dangerBtnDisabled ml-2\">\n                                Reject\n                              </button>\n                              \n                            </div>\n                        }\n                      </div>\n                    </>\n                }\n              </div>\n            </div>\n\n          </form>\n\n\n        </CardBody>\n\n      {addPaymentModal === true ?\n        <TermsConditions\n        readTerms={readTerms}\n        addPaymentModal={addPaymentModal}\n        id={id}\n      /> : \"\"}\n        {\n          rejectedBox === true ?\n          <RejectedModal22\n          showRejectedBox = {showRejectedBox} \n          rejectedBox = {rejectedBox}\n          // getQueriesData = {getQueriesData}\n          assignNo={assignNo2}\n          deleteCliente = {deleteCliente}/> : \"\"\n        }\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ProposalView;\n","/home/pooja/MazarsRepo/src/views/NewPassword/NewPassword.js",["1926","1927","1928","1929","1930","1931","1932","1933"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport { OuterloginContainer } from \"../../components/Common/OuterloginContainer\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport {  Box, Typography } from \"@material-ui/core\";\nconst MyContainer = styled(Box)({\n  display : \"flex\", \n  justifyContent : \"center\", \n  alignItems : \"center\", \n  width: \"100%\",\n  flexDirection : \"column\"\n})\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [load, setLoad] = useState(true);\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n  const getTime = () => {\n    if (load) {\n      var timerOn = true;\n      function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(remaining)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n      }\n      setLoad(false)\n      timer(180);\n    }\n\n  }\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n   \n    formData.append(\"email\", value.p_email);\n    formData.append(\"code\", value.p_code);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password reset successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          \n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n        }\n      })\n      .catch((error) => {\n        ShowError.LoadingError(setLoading)\n      });\n  };\n\n  return (\n    <>\n    <OuterloginContainer>\n    <Header cust_sign=\"cust_sign\" />\n     <MyContainer>\n     <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: \"This field is required\",\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                    })}\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                </div>\n              </div>\n            </div>\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"customBtn\" >\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id} setDisabled={setDisabled} getTime={getTime}\n                setLoad={setLoad} setLoading={setLoading} />\n              :\n              null\n          }\n\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n       </MyContainer>\n      <Footer />\n    </OuterloginContainer>\n    </>\n  )\n}\n\nexport default NewPassword;\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/customer/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"customBtn\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}\n\n","/home/pooja/MazarsRepo/src/views/VideoCall/VideoCall.js",[],"/home/pooja/MazarsRepo/src/views/MeetingComponent/MeetingComponent.js",["1934","1935"],"import React from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport Meeting from \"../../components/meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  return (\n    \n      <Meeting id={props.match.params.id}/>\n   \n  );\n}\n\nexport default MeetingComponent;\n","/home/pooja/MazarsRepo/src/views/ChangePassword/ChangePassword.js",["1936","1937","1938","1939"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\n\nfunction ChangePassword(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n  const [disabled, setDisabled] = useState(false)\n  const [show, setShow] = useState(false);\n  const [display, setDisplay] = useState(false);\n  const [time, setTime] = useState('')\n  const [load, setLoad] = useState(false);\n  const [email, setEmail] = useState('');\n\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n  const getTime = () => {\n\n\n    if (load) {\n      var timerOn = true;\n      function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(remaining)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n      }\n      timer(180);\n    }\n  }\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    setEmail(value.p_email)\n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userId));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_otp);\n\n\n    if (display) {\n      let formData = new FormData();\n      formData.append(\"email\", value.p_email);\n      formData.append(\"uid\", JSON.parse(userId));\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/regenrateotp`,\n        data: formData,\n      })\n        .then(function (response) {\n         \n          if (response.data.code === 1) {\n            setLoading(false)\n            setLoad(true)\n            setShow(true)\n            Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            Alerts.ErrorNormal(\"Please enter correct details\")\n          }\n        })\n        .catch((error) => {\n        ShowError.LoadingError(setLoading)\n        });\n      return false\n    }\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/passChange`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          props.history.push(\"/customer/dashboard\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        \n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n        }\n      })\n      .catch((error) => {\n       ShowError.LoadingError(setLoading)\n      });\n  };\n\n\n\n  //setotp\n  const setOtp = () => {\n    setDisplay(false)\n  }\n\n  //get OTP\n  const getOtp = () => {\n    setDisplay(true)\n  }\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div className=\"container\">\n        <div className=\"form\">\n          <h4  className=\"contentTitle\">Change Password</h4>\n\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter email id\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}{\" \"}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    name=\"p_password\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    autocomplete=\"off\"\n                  />\n\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    autocomplete=\"off\"\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              {\n                show ?\n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_otp,\n                        })}\n                        name=\"p_otp\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter your OTP\"\n                        autocomplete=\"off\"\n                      />\n                      {\n                        disabled ? null\n                          :\n                          <small class=\"text-center\">\n                            Note: OTP is valid for {time} seconds.\n                          </small>\n                      }\n                    </div>\n                  </div>\n                  : null\n              }\n\n              {\n                loading ?\n                  <div class=\"col-md-12\">\n                    <Spinner color=\"primary\" />\n                  </div>\n                  :\n                  <div class=\"col-md-12\">\n                    {\n                      show ?\n                        <>\n                          {\n                            disabled ? null\n                              :\n                              <>\n                                <button type=\"submit\" className=\"customBtn\" onClick={() => setOtp()}>Submit</button>\n                                <Cancel />\n                              </>\n                          }\n                        </>\n                        :\n                        <>\n                          <button type=\"submit\" class=\"customBtn\" onClick={() => getOtp(\"otp\")}>Get OTP</button>\n                          <Cancel />\n                        </>\n                    }\n                  </div>\n              }\n            </div>\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp setDisabled={setDisabled} getTime={getTime}\n                email={email} setLoad={setLoad} setLoading={setLoading} loading={loading} />\n              :\n              null\n          }\n\n          <Mandatory />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n\n\n\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/customer/dashboard\" style={{ \"margin\": \"10px\" }}>\n        <button className=\"customBtn\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}\n\n","/home/pooja/MazarsRepo/src/views/Schedule/schedule.js",[],"/home/pooja/MazarsRepo/src/views/ViewNotification/ViewNotification.js",["1940"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport CommonServices from \"../../common/common\";\n\nfunction ViewNotification() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userId));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  \n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"autoWidthBtn ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4 className=\"contentTitle\">Message Details</h4>\n            </Col>\n            <Col md=\"4\"></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th className=\"contentTitle\" scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th className=\"contentTitle\" scope=\"row\"> Sender</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th className=\"contentTitle\" scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th className=\"contentTitle\" scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th className=\"contentTitle\" scope=\"row\">Type</th>\n                <td>\n                  {data.type}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/home/pooja/MazarsRepo/src/views/Chatting/Chatting.js",["1941","1942","1943","1944","1945","1946"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory } from \"react-router-dom\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Spinner\n} from \"reactstrap\";\nimport Alerts from \"../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\n\nconst Schema = yup.object().shape({\n  message_type: yup.string().required(\"\"),\n  p_message: yup.string().required(\"\"),\n});\n\n\nfunction Chatting(props) {\n\n\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const [loading, setLoading] = useState(false);\n  const { message_type, query_id, query_No, routes } = data\n  const token = window.localStorage.getItem(\"clientToken\")\n  useEffect(() => {\n    \n    const dataItem = props.location.obj\n \n    if (dataItem) {\n      localStorage.setItem(\"myDataCust\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataCust\");\n    var data2 = JSON.parse(myData)\n   \n    setData(data2)\n    setItem(data2.message_type)\n  }, [item]);\n\nconsole.log(\"data\", data)\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.message_type);\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/messageSent`,\n      headers: {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setLoading(false)\n          reset();\n          var variable = \"Message sent successfully. \"\n          Alerts.SuccessNormal(variable)\n\n          props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n       ShowError.LoadingError(setLoading)\n      });\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/customer/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"customBtn\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n         \n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={query_No}\n                          disabled\n                        />\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message Type</label>\n                        {\n                          item &&\n                          <select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.message_type,\n                            })}\n                            name=\"message_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            defaultValue={item}\n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n                        }\n\n                        {errors.message_type && (\n                          <div className=\"invalid-feedback\">\n                            {errors.message_type.message}\n                          </div>\n                        )}\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message<span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          placeholder=\"Message text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_message\"\n                        ></textarea>\n                        {errors.p_message && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_message.message}\n                          </div>\n                        )}\n                      </div>\n\n                      \n                  {\n                      loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <button className=\"customBtn\" type=\"submit\">\n                         Send\n                        </button>\n                    }\n                    </div>\n                  </div>\n                </form>\n                <Mandatory />\n              </>\n         \n        </CardBody>\n      </Card>\n    </Layout >\n  );\n}\n\nexport default Chatting;\n","/home/pooja/MazarsRepo/src/views/Feedback/Feedback.js",["1947","1948","1949"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport { Link } from \"react-router-dom\";\n\nconst Schema = yup.object().shape({\n  p_feedback: yup.string().required(\"\"),\n});\n\n\n\nfunction Feedback(props) {\n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const token = window.localStorage.getItem(\"clientToken\")\n  const history = useHistory();\n  const { id } = useParams();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [loading, setLoading] = useState(false);\n \n\n  const onSubmit = (value) => {\n\n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"assign_no\", id);\n    formData.append(\"feedback\", value.p_feedback);\n    formData.append(\"user_id\", JSON.parse(userId));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostUserFeedback`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n    \n        if (response.data.code === 1) {\n          setLoading(false)\n          reset();\n          Alerts.SuccessNormal(\"Feedback sent successfully.\")\n          history.push({\n            pathname: `/customer/queries`,\n            index: 0,\n          });\n        } if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n      ShowError.LoadingError(setLoading)\n      });\n  };\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/customer/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"customBtn\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Feedback</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n         \n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={id}\n                          disabled\n                        />\n                      </div>\n\n\n                      <div class=\"form-group\">\n                        <label>Feedback</label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_feedback,\n                          })}\n                          placeholder=\"Feedback text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_feedback\"\n                        ></textarea>\n                        {errors.p_feedback && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_feedback.message}\n                          </div>\n                        )}\n                      </div>\n                       \n                  {\n                      loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <button className=\"customBtn\" type=\"submit\">\n                         Submit\n                        </button>\n                    }\n                    </div>\n                  </div>\n\n                </form>\n                <Mandatory />\n              </>\n          \n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Feedback;\n","/home/pooja/MazarsRepo/src/views/EditQuery/EditQuery.js",["1950","1951","1952","1953","1954","1955","1956","1957","1958"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl, ImageUrl } from \"../../config/config\";\nimport { Card, CardHeader, Row, Col } from \"reactstrap\";\nimport Select from \"react-select\";\nimport DeleteQuery from \"./DeleteQuery\";\nimport Swal from \"sweetalert2\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport classNames from \"classnames\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nfunction EditQuery(props) {\n\n  const history = useHistory();\n  const { id } = useParams();\n  \n  const { handleSubmit, register, errors, reset, control, setValue } = useForm({\n    defaultValues: {\n      users: [{ query: \"\" }],\n    },\n  });\n\n  const { append, remove, fields } = useFieldArray({\n    control,\n    name: \"users\",\n  });\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n  const [loading, setLoading] = useState(false);\n  const [custcheckError, setCheckerror] = useState(null);\n  const [queryDocs, setQueryDocs] = useState([]);\n const [qno, setQno] = useState()\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [purposeOption, setPurposeOption] = useState([]);\n  const [selectError, setSelectError] = useState()\n  const [assessmentYear, setAssessmentYear] = useState([]);\n    const [value2 , setValue2] = useState();\n    const [val3, setVal3] = useState()\n    const [uploadOrDownloadCount, setUploadOrDownloadCount] = useState(10);\n    const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const purPoseQuery = (e) => {\n    setSelectError(\"\")\n    setPurposeOption(e)\n\n  }\n  const remError = () => {\n    setCheckerror(\"\")\n  }\n \n  useEffect(() => {\n    getAssementYear();\n    getQuery();\n   \n  }, []);\n\n \n  const getAssementYear = () => {\n    axios\n      .get(`${baseUrl}/customers/getAssesmentYear`, myConfig)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setAssessmentYear(res.data.result);\n        }\n      });\n  };\n  const getQuery = () => {\n    axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`, myConfig).then((res) => {\n\n      if (res) {\n        var specific = res.data.result[0].specific_query;\n        if (specific == \"undefined\") {\n        } else var sepData = JSON.parse(specific);\n        reset({\n          users: sepData,\n        });\n         setQno(res.data.result[0].assign_no)\n        var value = res.data.result[0].assessment_year;\n        var purposeItem = res.data.result[0].purpose_opinion;\n\n\n        try {\n         \n          var myPurpose = JSON.parse(purposeItem);\n\n         \n          setPurposeOption(myPurpose);\n        } catch (e) {\n          \n        }\n        try {\n          var myObj = JSON.parse(value);\n         \n\n          setSelectedOption(myObj);\n        \n        } catch (e) {\n          \n        }\n       \n        setValue2(res.data.result[0].fact_case);\n     \n      //  setValue(\"fact_case\", res.data.result[0].fact_case);\n        setValue(\"case_name\", res.data.result[0].case_name);\n        setValue(\"p_Softcopy_word\", Boolean(+res.data.result[0].softcopy_word));\n        setValue(\n          \"p_Softcopy_digital\",\n          Boolean(+res.data.result[0].softcopy_digitally_assigned)\n        );\n        setValue(\n          \"p_Softcopy_physical\",\n          Boolean(+res.data.result[0].printout_physically_assigned)\n        );\n        setValue(\"p_timelines\", res.data.result[0].Timelines);\n        setQueryDocs(res.data.queries_document);\n      }\n    });\n  };\n\n  const onSubmit = (value) => {\n  \n    \n    if (purposeOption < 1) {\n      setSelectError(\"At least one value should be enter\")\n    }\n    else if (value.p_Softcopy_word === false && value.p_Softcopy_digital === false && value.p_Softcopy_physical === false) {\n    \n      setCheckerror(\"Please select at least one.\")\n    }\n    else {\n      const timer = setInterval(() => {\n        setUploadOrDownloadCount(\n          (beforeValue) => (beforeValue >= 90 ? 90 \n                            : beforeValue + 10));\n      }, 800);\n      setLoading(true)\n     \n\n      var uploadImg = value.uploadImg;\n      if(uploadImg === undefined){\n        uploadImg = 0;\n      }\n      let formData = new FormData();\n     \n      if (uploadImg) {\n        for (var i = 0; i < uploadImg.length; i++) {\n          let file = uploadImg[i];\n          formData.append(\"upload_1[]\", file);\n        }\n      }\n   \n      formData.append(\"fact\", value2);\n      formData.append(\"specific\", JSON.stringify(value.users));\n      formData.append(\"timelines\", value.p_timelines);\n      formData.append(\"user\", JSON.parse(userId));\n      formData.append(\"id\", id);\n      formData.append(\"cid\", JSON.parse(category));\n      formData.append(\"softcopy_word\", Number(value.p_Softcopy_word));\n      formData.append(\n        \"softcopy_digitally_assigned\",\n        Number(value.p_Softcopy_digital)\n      );\n      formData.append(\n        \"printout_physically_assigned\",\n        Number(value.p_Softcopy_physical)\n      );\n      formData.append(\"case_name\", value.case_name);\n      {selectedOption ? \n        formData.append(\"assessment_year\", JSON.stringify(selectedOption)) :\n        formData.append(\"assessment_year\", selectedOption)}\n      formData.append(\"purpose\", JSON.stringify(purposeOption));\n\n      axios\n        .post(`${baseUrl}/customers/PostEditQuestion`, formData, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n            uit : token\n          },\n        })\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            setUploadOrDownloadCount(100)\n            var message = response.data.message\n            if (message == \"\") {\n              Swal.fire(\n                \"Success\",\n                `Query updated successfully.`,\n                \"success\"\n              )\n            } else if (message.invalid) {\n              Swal.fire({\n                title: 'Error !',\n                html: `<p class=\"text-danger\">${message.invalid}</p>`,\n              })\n            }\n            else if (message.faill) {\n              Swal.fire({\n                title: 'Success !',\n                html: `<p>Query Updated Successfully.</p>\n                <br/><p class=\"text-danger\"> ${message.faill}</p>`,\n                icon: 'success',\n              })\n            }\n            props.history.push(\"/customer/queries\");\n          } else {\n            setLoading(true)\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n        });\n    }\n  };\n\n \n  \n  const downloadpdf = (qno, qid, name) => {\n   \n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/customers/viewdocument?assign_no=${qno}&id=${qid}` , myConfig2)\n    .then((res) => {\n     \n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           console.log(res.headers)\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    })\n   }\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"autoWidthBtn\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Update Query - {qno}</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <DeleteQuery id={id} setLoading={setLoading}/>\n            </Col>\n          </Row>\n         \n        </CardHeader>\n\n        <CardHeader>\n         \n            <div className=\"container-fluid\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 py-4\">\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Brief facts of the case<span className=\"declined\">*</span></label>\n                     \n                        <CKEditor\n                     editor={ ClassicEditor }\n                 \n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fact,\n                    })}\n                    id=\"textarea22\"\n                    rows=\"6\"\n                    name=\"p_fact\"\n                   data={value2}\n                    onChange={ ( event, editor ) => {\n                      setValue2(editor.getData());\n                      // setcustError(\"\")\n                    \n                  } }\n                    //ref={register({ required: true })}\n                >\n                  \n                  </CKEditor>\n                      </div>\n                    </div>\n</div>\n<div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"question_query mb-2\">\n                        <label className=\"form-label\">\n                          Specific Questions for advisory <span className=\"declined\">*</span>\n                        </label>\n                        <div\n                          className=\"btn queryPlusIcon\"\n                          onClick={() => append({ query: \"\" })}\n                        >\n                          +\n                        </div>\n                      </div>\n\n                      {fields.map((item, index) => (\n                        <div className=\"question_query_field mb-2\" key={item.id}>\n                          <input\n                            type=\"text\"\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.users,\n                            })}\n                            ref={register}\n                            name={`users[${index}].query`}\n                            defaultValue={`${item.query}`}\n                            placeholder=\"Specify your query\"\n                            ref={register({ required: true })}\n                          />\n                          <div\n                            className=\"btn queryPlusIcon ml-2\"\n                            onClick={() => remove(index)}\n                          >\n                            -\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Purpose for which Opinion is sought <span className=\"declined\">*</span>\n                        </label>\n                        <Select\n                          closeMenuOnSelect={false}\n                          className={selectError ? \"customError\" : \"\"}\n                          onChange={purPoseQuery}\n                          value={purposeOption}\n                          isMulti\n                          options={purpose}\n                        />\n                      </div>\n                     \n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Assessment year</label>\n\n                        <Select\n                          closeMenuOnSelect={false}\n                          onChange={setSelectedOption}\n                          value={selectedOption}\n                          isMulti\n                          options={assessmentYear}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <ImageUploads register={register} control={control} />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Format in which Opinion is required\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a1\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            onChange={remError}\n                            name=\"p_Softcopy_word\"\n                            ref={register}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a1\">\n                            Softcopy - Word/ Pdf\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a2\"\n                            className=\"form-check-input\"\n                            onChange={remError}\n                            type=\"checkbox\"\n                            name=\"p_Softcopy_digital\"\n                            ref={register}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a2\">\n                            SoftCopy- Digitally Signed\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a3\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            onChange={remError}\n                            name=\"p_Softcopy_physical\"\n                            ref={register}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a3\">\n                            Printout- Physically Signed\n                          </label>\n                        </div>\n                        <p className=\"declined\">{custcheckError}</p>  </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Timelines within which Opinion is required\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Urgent\"\n                          // disabled\n                          />\n                          <label>Urgent</label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Regular\"\n                          // disabled\n                          />\n                          <label>Regular </label>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Display Documents</label>\n                        <br />\n\n                        <>\n                          <div>\n                            {queryDocs.map((p, i) => (\n                              <ul style={{listStyle : \"none\"}}>\n                                <li>\n                                <span onClick={() => downloadpdf(p.assign_no, p.id, p.name)} style={{display : \"flex\", cursor : \"pointer\"}}>\n                     <i className=\"fa fa-photo\"></i>\n                     <span style={{ marginLeft: \"10px\" }}>{p.name}</span>\n                       </span>\n                                  {/* <a\n                                    href={`${ImageUrl}/${p.assign_no}/${p.name}`}\n                                    target=\"_blank\"\n                                  >\n                                  <em>\n                                    {++i}\n                                    </em>  <i\n                                      class=\"fa fa-photo\"\n                                      style={{ width: \"50\", height: \"20\" }}\n                                    ></i>\n                                    <span style={{ marginLeft: \"10px\" }}>{p.name}</span>\n                                  </a> */}\n                                </li>\n                              </ul>\n                            ))}\n\n                          </div>\n                        </>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">Case name</label>\n                        <input\n                          type=\"text\"\n                          name=\"case_name\"\n                          ref={register}\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  {\n                      loading ?\n                      <Box position=\"relative\" display=\"inline-flex\">\n                      <CircularProgress variant=\"determinate\" \n                                        value={uploadOrDownloadCount} />\n                      <Box\n                        bottom={0}\n                        right={0}\n                        top={0}\n                        justifyContent=\"center\"\n                        left={0}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        position=\"absolute\"\n                      >\n                        {`${Math.round(uploadOrDownloadCount)}%`}\n                      </Box>\n                    </Box>\n                            \n                        :\n                        <button className=\"customBtn\" type=\"submit\">\n                          Update\n                        </button>\n                    }\n                </form>\n\n              </div>\n\n              <Mandatory />\n            </div>\n       \n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditQuery;\n\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn\" onClick={() => append({ pics: \"\" })}>\n        <PublishIcon color=\"secondary\" />\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n        <>\n        {index === 0 ? \n        <div className=\"question_query_field mb-2\" key={index}>\n        <input\n          type=\"file\"\n          name= \"uploadImg\"\n          multiple={true}\n          ref={register()}\n          className=\"form-control-file manage_file\"\n          defaultValue={item.pics}\n        />\n        <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n          -\n        </div>\n      </div> : \"\"}\n        </>\n      ))}\n    </>\n  );\n};\n\n\nconst purpose = [\n  { value: \"Assessment\", label: \"Assessment\" },\n  { value: \"Appeal\", label: \"Appeal\" },\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\n  {\n    value: \"Filing before any Authority\",\n    label: \"Filing before any Authority\",\n  },\n  { value: \"Others\", label: \"Others\" },\n];\n\n","/home/pooja/MazarsRepo/src/views/FeedbackData/FeedbackData.js",["1959","1960","1961","1962","1963"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction FeedbackData(props) {\n\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [query, setQuery] = useState([]);\n\n    const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    useEffect(() => {\n        getMessage();\n    }, []);\n\n\n    const getMessage = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/getFeedback?uid=${JSON.parse(userId)}`, myConfig\n            )\n            .then((res) => {\n            \n                if (res.data.code === 1) {\n                    setQuery(res.data.result);\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"10px\", border: \"1px solid #081f8f\", color:\"#fff\", backgroundColor:\"#081f8f\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"60px\", border: \"1px solid #081f8f\", color:\"#fff\", backgroundColor:\"#081f8f\" };\n            },\n          \n        },\n\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\", border: \"1px solid #081f8f\", color:\"#fff\", backgroundColor:\"#081f8f\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        {row.assign_no}\n\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Feedback\",\n            dataField: \"feedback\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"150px\" , border: \"1px solid #081f8f\", color:\"#fff\", backgroundColor:\"#081f8f\"};\n            },\n        },\n    ];\n\n\n\n\n    return (\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"9\">\n                            <CardTitle tag=\"h4\" className=\"contentTitle\">Feedback</CardTitle>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={query}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                </CardBody>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default FeedbackData;\n       ","/home/pooja/MazarsRepo/src/views/Message/Message.js",["1964","1965","1966","1967","1968","1969","1970","1971"],"/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentStatus.js",["1972","1973","1974","1975","1976"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport Unpaid from \"./Unpaid\";\nimport Paid from \"./Paid\";\nimport AllPayment from \"./AllPayment\";\n\n\n\nfunction PaymentStatus(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n \n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n  const [bgColor, setbgColor] = useState(\"#2b5f55\")\n  const [tabIndex, setTabIndex] = useState(0);\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/customers/getUploadedProposals?cid=${JSON.parse(userId)}`, myConfig)\n      .then((res) => {\n      \n        if(res.data.code === 1){\n          setAllPayment(res.data.result.length);\n        }\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/customers/getUploadedProposals?cid=${JSON.parse(userId)}&status=1`, myConfig)\n      .then((res) => {\n      \n        if(res.data.code === 1){\n          setPaid(res.data.result.length);\n        }\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/customers/getUploadedProposals?cid=${JSON.parse(userId)}&status=2`, myConfig)\n      .then((res) => {\n      \n      if(res.data.code === 1){\n        setUnpaid(res.data.result.length);\n      }\n      });\n  };\n\n\n\n  const tableIndex = (index) => {\n    setTabIndex(index)\n    console.log(index)\n    if(index === 0){\n      setbgColor(\"#2b5f55\")\n    }\n    else if(index === 1){\n      setbgColor(\"#3e8678\")\n    }\n    else if(index === 2){\n      setbgColor(\"#3e8678\")\n    }\n    else if(index === 3){\n      setbgColor(\"#3e8678\")\n    }\n  }\n    \n  const myStyle1 = {\n    margin: \"10px auto\",\n    fontSize : \"14px\"\n  };\n  const myStyle2 = {\n margin: \"10px auto\",\n\n color : \"#2b5f55\",\n fontWeight : 1000\n  };\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n    \n      <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n      <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n             margin: \"0px\",\n             padding: \"10px\"\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Paid ({unpaid})\n            </Tab>\n\n          </TabList>\n\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n        </Tabs>\n     \n    </Layout>\n  );\n}\n\nexport default PaymentStatus;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayDetails.js",["1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997"],"/home/pooja/MazarsRepo/src/views/Contact/Contact.js",["1998"],"import React from 'react';\nimport Layout from \"../../components/Layout/Layout\";\nimport { Card , CardBody, CardTitle, CardHeader, Row, Col} from 'reactstrap';\nconst Contact = () => {\n    const userId = window.localStorage.getItem(\"userid\")\nreturn (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n\n<Card style={{margin: \"10px\"}}>\n\n<CardHeader>\n<h4 style={{textAlign: \"center\"}} className=\"contentTitle\">Contact Us</h4>    \n        </CardHeader>\n<CardBody style={{textAlign: \"center\"}}>\n<Row>\n          <Col md=\"12\">\n            \n          <h4>106-107, Mercantile House</h4>\n    <h4>Kasturba Gandhi Marg, Connaught Place</h4>\n\n    <h4>New Delhi-110001, India</h4>\n\n<div>\n    Email : <a href=\"mailto: support@masindia.live\">support@masindia.live</a>\n    </div>\n<div>\nTel:<a href=\"tel:+496170961709\"> +91 111-43684444</a>\n</div>\n            </Col>\n           \n          </Row>\n</CardBody>\n</Card>\n   </Layout>\n)\n}\nexport default Contact;","/home/pooja/MazarsRepo/src/views/PaymentGateway.js/PaymentGateway.js",["1999","2000","2001"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { baseUrl } from \"../../config/config\";\nfunction PaymentGateway(){\n    const { handleSubmit, register, errors, getValues } = useForm();\n    const info = {\n      \"state\" : \"Haryana\",\n      \"email\" : \"singhnishantrana@gmail.com\", \n      \"gender\" : \"\", \n      \"dob\" : \"01-11-1990\",\n      \"city\" : \"Gurugoan\",\n      \"pincode\" : \"122017\", \n      \"status\" : \"1\",\n      \"first_name\" : \"Nishant Rana\",\n      \"last_name\" : \"\",\n      \"address_line_1\" : \"A-22, A Block\",\n      \"address_line_2\" : \"Sector 109\",\n      \"plan_name\" : \"TPIN_100Mbps_Combo\"\n    }\n    const billdes = {\n      // \"HSN_SAC_code\": \"11040\",\n        \"Desc\": \"Bill for Mazars\",\n        \"Qty\": \"1\",\n        \"UoM\": \"NA\",\n        \"Rate\": \"11620.0\",\n        \"Total\": \"1.0\",\n        \"Discount\": \"0\",\n        \"Delivery_Charges\": \"0\",\n        \"Net_Tax_Val\": \"0\",\n        \"CGST_Rate\": \"0\",\n        \"CGST_Amount\": \"0\",\n        \"SGST_Rate\": \"0\",\n        \"SGST_Amount\": \"0\",\n        \"IGST_Rate\": \"0\",\n        \"IGST_Amount\": \"0\",\n        \"Total_Amount\": \"1.0\"\n    }\n    const onSubmit = (value) => {\n\n \n    let formData = new FormData()\n    formData.append(\"token\", \"09f3b52d937b320e929ad45153ef745d\");\n    formData.append(\"timestamp\", \"09-09-2021 13:52:02\");\n    formData.append(\"mobile\", \"9818685050\");\n    formData.append(\"type\", \"F\");\n    formData.append(\"userInfo\" , JSON.stringify(info));\n    formData.append(\"billDescription\", JSON.stringify(billdes));\n    formData.append(\"ekycStatus\", 0);\n    formData.append(\"public_key\", \"791E14FF-6243-4A73-A6E1\");\n    formData.append(\"Bill_no\", \"11189974221\");\n    formData.append(\"Balance\", \"100\");\n    formData.append(\"Bill_due_date\",  \"24-09-2021\");\n    formData.append(\"user_id\", \"9818685050\");\n    formData.append(\"merchant_id\", \"T10012\");\n    formData.append(\"agent_id\", \"8595923172\");\n    formData.append(\"caf_number\", \"\");\n\n  \n    var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\n  \"token\": \"09f3b52d937b320e929ad45153ef745d\",\n  \"timestamp\": \"09-09-2021 13:52:02\",\n  \"mobile\": \"7703954008\",\n  \"type\": \"F\",\n  \"userInfo\": {\n    \"state\": \"Haryana\",\n    \"email\": \"na@gmail.com\",\n    \"gender\": \"\",\n    \"dob\": \"\",\n    \"city\": \"Gurgaon\",\n    \"pincode\": \"122002\",\n    \"status\": \"1\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"Test\",\n    \"address_line_1\": \"Test, Tower - A, Ground Floor\",\n    \"address_line_2\": \"DLF Phase I\",\n    \"plan_name\": \"20 Mbps free\"\n  },\n  \"billDescription\": {\n    \"HSN_SAC_code\": \"15684\",\n    \"Desc\": \"20 Mbps free\",\n    \"Qty\": \"1\",\n    \"UoM\": \"NA\",\n    \"Rate\": \"10.0\",\n    \"Total\": \"10.0\",\n    \"Discount\": \"0\",\n    \"Delivery_Charges\": \"0\",\n    \"Net_Tax_Val\": \"0\",\n    \"CGST_Rate\": \"0\",\n    \"CGST_Amount\": \"0\",\n    \"SGST_Rate\": \"0\",\n    \"SGST_Amount\": \"0\",\n    \"IGST_Rate\": \"0\",\n    \"IGST_Amount\": \"0\",\n    \"Total_Amount\": \"10.0\"\n  },\n  \"ekycStatus\": \"1\",\n  \"public_key\": \"791E14FF-6243-4A73-A6E1\",\n  \"Bill_no\": \"15293997\",\n  \"Balance\": \"10.0\",\n  \"Bill_due_date\": \"20-09-2021\",\n  \"user_id\": \"7703954008\",\n  \"merchant_id\": \"T10001\",\n  \"agent_id\": \"8689003344\",\n  \"caf_number\": \"TP-EC-44882\"\n});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://pay.mobilpay.in/index.php/getUserBillData\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n    }\n      return(\n        <div className=\"container\">\n\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Client Register</h2>\n          </div>\n          <>\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n    \n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Mobile<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_mobile\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Mobile Number\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_mobile,\n                        })}\n                      />\n                    </div>\n                  </div>\n    \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_type\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_type,\n                        })}\n                        \n                        placeholder=\"Enter type\"\n                        ref={register({ required: true })}\n                      />\n                      \n                    </div>\n                  </div>\n               </div>\n\n               <div className=\"row\">\n                  <div className=\"col-md-6\">\n    \n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">User Information<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_userInfo\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter User Information\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_userInfo,\n                        })}\n                      />\n                    </div>\n                  </div>\n    \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Bill Description<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_billDescription\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_billDescription,\n                        })}\n                        \n                        placeholder=\"Enter Your Description\"\n                        ref={register({ required: true })}\n                      />\n                      \n                    </div>\n                  </div>\n               </div>\n\n             <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Ekyc Status<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_ekycStatus ,\n                        })}\n                        name=\"p_zipCode\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Ekyc Status\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Public Key<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_publicKey ,\n                        })}\n                        name=\"p_publicKey\"\n                        placeholder=\"Enter Public Key\"\n                        ref={register}\n    \n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">\n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Bill Number<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.bill_no,\n                        })}\n                        \n                        placeholder=\"Bill Number\"\n                        name=\"bill_no\"\n                        ref={register}\n                        autocomplete=\"off\"\n                      />\n                    </div>\n                  </div>\n    \n                      <div class=\"col-md-6\">\n                        <div className=\"mb-3\">\n                          <label className=\"form-label\">Balance<span className=\"declined\">*</span></label>\n                          <input\n                            type=\"text\"\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.balance,\n                            })}\n                            name=\"balance\"\n                            ref={register({ required: true })}\n                           \n                            placeholder=\"Enter Amount\"\n                            autocomplete=\"off\"\n                          />\n                         \n                        </div>\n                      </div>\n              </div>\n              <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Bill Due Date<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.bill_dueDate ,\n                        })}\n                        name=\"bill_dueDate\"\n                        ref={register({ required: true })}\n                        placeholder=\"Due Date\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">User Id<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.user_id ,\n                        })}\n                        name=\"user_id\"\n                        placeholder=\"Enter your user id\"\n                        ref={register}\n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Agent Id<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.agent_id ,\n                        })}\n                        name=\"agent_id\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Ekyc Status\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Merchant Id<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.merchant_id ,\n                        })}\n                        name=\"merchant_id\"\n                        placeholder=\"Enter Public Key\"\n                        ref={register}\n    \n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">CAF Number<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.caf_number ,\n                        })}\n                        name=\"caf_number\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Ekyc Status\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.email ,\n                        })}\n                        name=\"email\"\n                        placeholder=\"Enter Email\"\n                        ref = {register}\n    \n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">\n             <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">DOB<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.dob ,\n                        })}\n                        name=\"dob\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Date of Birth\"/>\n                    </div> \n                  </div>\n                  <div className=\"col-md-6\">\n                    <button type=\"submit\" className=\"btn btn-lg btn-primary justify\">Submit</button>\n                  </div>\n             </div>\n              </form>\n    \n              </div>\n          </>\n    \n        </div>\n    \n      </div>\n      )\n   \n}\nexport default PaymentGateway;","/home/pooja/MazarsRepo/src/views/ThankYou/Thankyou.js",[],"/home/pooja/MazarsRepo/src/pages/Admin/Start/Start.js",["2002"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\n\n\nfunction Start() {\n  return (\n    <>\n      <Header admin=\"admin\"/>\n      <div class=\"content_register\">\n        <Link to=\"/admin/login\"><h1 style={{color: \"#2b345f\"}}>ADMIN LOGIN</h1></Link>\n      </div>\n     \n    </>\n  );\n}\n\nexport default Start;\n","/home/pooja/MazarsRepo/src/pages/Admin/Login/Login.js",["2003","2004","2005","2006"],"/home/pooja/MazarsRepo/src/pages/Admin/Proposal/Proposal.js",["2007","2008","2009","2010","2011","2012"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\nimport AllProposalComponent from \"../AllProposalComponent/AllProposalComponent\";\nimport PendingForAcceptence from \"../../../components/PendingForAcceptence/PendingForAcceptence\";\nimport AcceptedProposal from \"../AcceptedProposal/AcceptedProposal\";\nimport DeclinedPropoal from \"../DeclinedProposal/DeclinedPropoal\";\n\nfunction Proposal(props) {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\n  const [bgColor, setbgColor] = useState(\"#42566a\")\n\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    const getAllProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals`, myConfig)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setAllProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    const getAcceptedProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?status1=2`, myConfig)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setAcceptedProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    const getDeclinedProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?&status=6`, myConfig)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setDeclinedProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    const getPendingForAcceptence = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?status1=1`, myConfig)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setPendingProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    getAllProposal();\n    getAcceptedProposal();\n    getDeclinedProposal();\n    getPendingForAcceptence();\n  }, []);\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n  const tableIndex = (index) => {\n    setTabIndex(index)\n    console.log(index)\n    if(index === 0){\n      setbgColor(\"#42566a\")\n    }\n    else if(index === 1){\n      setbgColor(\"#5f7b97\")\n    }\n    else if(index === 2){\n      setbgColor(\"#5f7b97\")\n    }\n    else if(index === 3){\n      setbgColor(\"#5f7b97\")\n    }\n  }\n  const myStyle1 = {\n    margin: \"10px auto\",\n    fontSize : \"14px\"\n  };\n  const myStyle2 = {\n margin: \"10px auto\",\n \n color : \"#42566a\",\n fontWeight : 1000\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n          <TabList\nclassName=\"fixedTab\"\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n              All Proposals ({allProposalCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Inprogress; Proposals ({pendingProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Accepted; Proposals ({acceptedProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Client Declined; Proposals ({declinedProposalCount})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllProposalComponent />\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForAcceptence />\n          </TabPanel>\n\n          <TabPanel>\n            <AcceptedProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedPropoal />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/Dashboard/Dashboard.js",["2013","2014","2015","2016","2017","2018"],"/home/pooja/MazarsRepo/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js",["2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040","2041","2042","2043","2044","2045","2046","2047"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Select from \"react-select\";\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport EmailValidation from \"../../../components/Common/EmailValidation\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n\n});\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [nn, setNn] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [mcategory, setmcategory] = useState([]);\n  const [store, setStore] = useState([]);\n  const [subData, subCategeryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [custCate2, setCustcate2] = useState([])\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [categoryData, setCategoryData] = useState([])\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState([]);\n  const [emailPost, setEmailPost] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [valiEmailPost, setValiemailPost] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [invalidPost, setInvalidPost] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [wEmailPost, setWemailPost] = useState();\n  const [loading, setLoading] = useState(false);\n  const [emailError, setEmailError] = useState(null);\n  const [display, setDisplay] = useState(false);\n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  const [dd, setDd] = useState({\n    direct: [],\n    indirect: [],\n  });\n\n  var kk = []\n  var vv = []\n\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n  const options = tax.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.details\n    }))\n\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n\n\n\n  useEffect(() => {\n    const getCategory = async () => {\n      await axios.get(`${baseUrl}/admin/getCategory?pid=0`, myConfig).then((res) => {\n        if (res.data.code === 1) {\n          \n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n\n\n  useEffect(() => {\n    const getSubCategory = async () => {\n\n      await axios.get(`${baseUrl}/admin/getCategory?pid=${store}`, myConfig).then((res) => {\n\n        if (res.data.code === 1) {\n          setTax2(res.data.result)\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  // OnSubmit Function\n\n  const onSubmit = (value) => {\n   \n   \n    var categeryList = []\n    var categeryName = []\n    var categeryName = []\n    var kk = []\n    var parentCategoryName = []\n  \n    subData.map((i) => {\n   \n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n    categoryData.map((i) => {\n      kk.push(i.value)\n      parentCategoryName.push(i.label)\n    })\n   \n    if (custCate.length < 1) {\n      setError(\"Please select at least one value\")\n    }\n    else if (subData.length < 1) {\n\n      setError2(\"Please select at least one value\")\n    }\n    else if (invalid || wEmail || indNumError || posError.exits) {\n      setDisplay(false)\n    }\n    else if(parentCategoryName.includes(\"Direct tax\") && dd.direct.length === 0){\n    \n    }\n    else if(parentCategoryName.includes(\"Indirect tax\") && dd.indirect.length === 0){\n     \n    }\n    else {\n      setDisplay(true)\n      setLoading(true)\n    \n      let formData = new FormData();\n\n      formData.append(\"personal_email\", value.p_email);\n      formData.append(\"name\", value.p_name);\n      formData.append(\"phone\", value.p_phone);\n      formData.append(\"type\", \"tl\");\n      formData.append(\"cat_id\", categeryList)\n      formData.append(\"post_name\", value.post_name)\n      formData.append(\"email\", email)\n      formData.append(\"pcat_id\", kk)\n      formData.append(\"allpcat_id\", parentCategoryName)\n      formData.append(\"allcat_id\", JSON.stringify(dd))\n\n\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/AddTeamLead`,\n        headers : {\n          uit : myConfig\n        },\n        data: formData,\n      })\n\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            setLoading(false)\n            Swal.fire({\n              \"title\": \"Success\",\n              \"html\": \"Team Leader created successfully.\",\n              \"icon\": \"success\"\n            })\n\n            history.goBack();\n          }\n          if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n\n        })\n        .catch((error) => {\n\n        });\n    }\n\n  };\n  var allData1 = {}\n  var dir = []\n  var indir = []\n  // Sub Category Function\n  const subCategory = (e) => {\n  \n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n  \n    e.map((i) => {\n\n      i.value < 8 ? dir.push(i.label) : indir.push(i.label)\n    })\n   \n    setDd({\n      direct: dir,\n      indirect: indir\n    })\n    let pk = []\n    if(indir.length === 0 && dir.length === 0){\n      setCategoryData(\"\")\n    }\n   else if(dir.length === 0){\n      let bb = {\n        value : \"2\",\n        label : \"Indirect tax\"\n      }\n      pk.push(bb)\n      setCategoryData(pk)\n    }\n    else if(indir.length === 0){\n      let bb = {\n        value : \"1\",\n        label : \"Direct tax\"\n      }\n      pk.push(bb)\n      setCategoryData(pk)\n    }\n  \n  }\n\n\n  // Category Function\n  const category = (v) => {\n\n    setCategoryData(v)\n    setNn((oldData) => {\n      return [...oldData, mcategory]\n    })\n    setError(\"\")\n    setCustcate(v)\n    v.map((val) => {\n      vv.push(val.value)\n      setmcategory(val.value);\n      setmcatname((oldData) => {\n        return [...oldData, val.label]\n      })\n      setStore(val.value)\n    })\n\n\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n        let dkkk = []\n        let pkk = []\n                for (let i = 0; i < subData.length; i++) {\n                                     kk.push(subData[i])\n                    dkkk.push(subData[i].label)\n                  \n                }\n                console.log(subData)\n                setDd({\n                  \"direct\" : dkkk,\n                  \"indirect\" : pkk\n                })\n                subCategeryData(kk)\n      }\n      else if (vv.includes(\"1\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n    }\n\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n\n  }\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digit should be enter\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n\n    }\n  }\n\n  //eamil onchange\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n  \n    if (e.target.value.length < 1) {\n      setWemail(\"\")\n    }\n  };\n\n\n  //email validaation with api\n  const emailValidation = (key) => {\n\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (email.match(validRegex)) {\n      setWemail(\"\");\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/validateregistration`,\n        headers : {\n          uit : token\n        },\n        data: formData,\n      })\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            setValiemail(response.data.result)\n            setInvalid('')\n          } else if (response.data.code === 0) {\n            setInvalid(response.data.result)\n            setValiemail('')\n          }\n        })\n        .catch((error) => {\n\n        });\n    }\n    else {\n      setWemail(\"invalid email\")\n    }\n\n  }\n \n  const checktlPost = (e) => {\n  setPostName(e.target.value)\n  let a = e.target.value;\n  let formData = new FormData();\n  formData.append(\"tlpost\", a)\n\n  axios({\n    method: \"POST\",\n    url : `${baseUrl}/admin/validateTLPost`,\n    headers : {\n      uit : token\n    },\n    data: formData,\n  })\n  .then(function (res) {\n    if(res.data.code === 1){\n      setposError({\n        available : \"Post Available\"\n      })\n    }\n    else{\n      setposError({\n        exits : \"Post already exits\"\n      })\n    }\n  })\n  }\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div className=\"col-md-12 d-flex\">\n            <div>\n              <button\n                className=\"autoWidthBtn\"\n                onClick={() => history.goBack()}\n              >\n                <i className=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div className=\"text-center ml-5\">\n              <h4>Add New Team Leader</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div className=\"row mt-3\">\n            <div className=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div className=\"col-lg-8 col-xl-8 col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                    <label>Team Leader Post Name <span className=\"declined\">*</span></label>\n                      \n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name || posError.exits,\n                        })}\n                        onBlur={(e) => checktlPost(e)}\n                        name=\"post_name\"\n                        ref={register}\n                      />\n                    {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                    <label>Team Leader Post Email <span className=\"declined\">*</span></label>\n                    \n                   \n                    <EmailValidation\n                     setWemail = {setWemail}\n                      wEmail = {wEmail} \n                      invalid = {invalid}\n                       setEmailError = {setEmailError}\n                        setValiemail = {setValiemail} \n                        emailError = {emailError} \n                        setInvalid = {setInvalid}  \n                        setEmail2 = {setEmail} \n                        name=\"teamleader\"/>\n                        \n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } \n                     \n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Name <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        name=\"p_name\"\n                        ref={register}\n                      />\n\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Phone Number <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone ,\n                        })}\n                        name=\"p_phone\"\n                        ref={register}\n                        onChange={(e) => phoneHandler(e)}\n                         onBlur={phoneValidation}\n                      />\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n                    </div>\n                  </div>\n                </div>\n              \n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Category <span className=\"declined\">*</span></label>\n                      <Select isMulti options={options}\n                        value = {categoryData}\n                        className={error ? \"customError\" : \"\"}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        onChange={category}>\n                      </Select>\n\n\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Sub Category <span className=\"declined\">*</span></label>\n                      <Select isMulti options={options2}\n                        className={error2 ? \"customError\" : \"\"}\n                        onChange={subCategory}\n                        value = {subData}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value > 8\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        value={subData}>\n                      </Select>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"form-group\">\n                      <label>Email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                       \n                      />\n                     \n                    </div>\n                  </div>\n                </div>\n                {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                <button type=\"submit\" className=\"customBtn\">\n                  Submit\n                </button> }\n              </form>\n            </div>\n            <div className=\"col-lg-2 col-xl-2 col-md-12\">\n\n            </div>\n\n            <Mandatory />\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n\n\n\n\n","/home/pooja/MazarsRepo/src/pages/Admin/QueryAssingment/QueryAssingment.js",["2048","2049","2050","2051","2052","2053","2054","2055","2056","2057","2058","2059","2060","2061","2062","2063"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, Redirect } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Schema = yup.object().shape({\n  p_taxprof: yup.string().required(\"\"),\n  p_expdeldate: yup.string().required(\"\"),\n});\n\n\nfunction QueryAssingment(props) {\n  let history22 = useHistory()\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [taxLeaderDisplay, setTaxLeaderDisplay] = useState([]);\n  const [teamID, setTeamID] = useState(null);\n  const [teamName, setTeamName] = useState(\"\");\n  const [query, setQuery] = useState(true);\n\n  const [expectedDate, setExpectedDate] = useState(\"\");\n\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const tlkey = window.localStorage.getItem(\"tlkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n  });\n\n  const { queryNo, timelines, custId } = queryData;\n\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    getTaxLeader();\n    getQueryData();\n  }, []);\n\n  const getTaxLeader = () => {\n    axios.get(`${baseUrl}/admin/getTeamLeader`, myConfig).then((res) => {\n      \n      if (res.data.code === 1) {\n        setTaxLeaderDisplay(res.data.result);\n      }\n    });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/admin/GetQueryDetails?id=${id}`, myConfig).then((res) => {\n      \n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n        });\n        // expectedDeliveryDate(res.data.result[0].Timelines);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n   if(queryNo.length > 0){\n    axios\n    .get(`${baseUrl}/admin/CheckIfAssigned?assignno=${queryNo}`, myConfig)\n    .then((res) => {\n      \n      if (res.data.code === 1) {\n        setQuery(false);\n        setHideQuery({\n          name: res.data.meta[0].name,\n          timeline: res.data.meta[0].timeline,\n          date_allocation: res.data.meta[0].date_allocation,\n          expdeliverydate: res.data.meta[0].expdeliverydate,\n        });\n      }\n    });\n   }\n  };\n\n  const handleChange = (e) => {\n   \n    setTeamID(e.target.value);\n    var value = taxLeaderDisplay.filter(function (item) {\n      return item.id == e.target.value;\n    });\n    \n    setTeamName(value[0].name);\n  };\n\n  const onSubmit = (value) => {\n    setLoading(true)\n  \n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", teamID);\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"admin\");\n    formData.append(\"types\", \"tl\");\n    formData.append(\"name\", teamName);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", value.p_expdeldate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/AddQueryAssignment`,\n      headers: {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Query assigned successfully.\"\n          Alerts.SuccessNormal(variable)\n        //  getQuery();\n          // props.history.push({\n          //   pathname: `/admin/queriestab`,\n          //   index: 2,\n          // });\n          history22.push(\"/admin/queriestab\")\n        } if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  const expectedDeliveryDate = (key) => {\n  \n\n    const d = new Date();\n\n    if (key == \"Urgent, (4-5 Working Days)\") {\n      const d2 = new Date(d.getTime() + 432000000);\n      const new_date =\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\n      // d2.getDate() + \"/\" + (d2.getMonth() + 1) + \"/\" + d2.getFullYear();\n\n     \n      setExpectedDate(new_date);\n    } else if (key == \"Regular (10-12 Working Days)\") {\n      const d2 = new Date(d.getTime() + 1296000000);\n      const new_date =\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\n     \n      setExpectedDate(new_date);\n    }\n  };\n\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <Link\n                to={{\n                  pathname: `/admin/queriestab`,\n                  index: 1,\n                }}\n              >\n                <button class=\"autoWidthBtn ml-3\">\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\n                  Go Back\n                </button>\n              </Link>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h4>Query Allocation</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <div class=\"row mt-3\">\n                  <div class=\"col-md-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <table class=\"table\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">Query No.</th>\n                            <th scope=\"col\">Team Leaders<span className=\"declined\">*</span></th>\n                            <th scope=\"col\">Expected Timeline</th>\n                            <th scope=\"col\">Exp. Delivery Date<span className=\"declined\">*</span></th>\n                            <th scope=\"col\">Action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {query ? (\n                            <tr>\n                              <th scope=\"row\">{queryNo}</th>\n                              <td>\n                                <select\n                                  className={classNames(\"form-control\", {\n                                    \"is-invalid\": errors.p_taxprof,\n                                  })}\n                                  name=\"p_taxprof\"\n                                  ref={register}\n                                  onChange={(e) => handleChange(e)}\n                                >\n                                  <option value=\"\">-select-</option>\n                                  {taxLeaderDisplay.map((p, index) => (\n                                    <option key={index} value={p.id}>\n                                      {p.postname}\n                                    </option>\n                                  ))}\n                                </select>\n                                {errors.p_taxprof && (\n                                  <div className=\"invalid-feedback\">\n                                    {errors.p_taxprof.message}\n                                  </div>\n                                )}\n                              </td>\n\n                              <td>\n                                <input\n                                  type=\"text\"\n                                  ref={register}\n                                  name=\"p_timelines\"\n                                  value={timelines}\n                                  class=\"form-control\"\n                                />\n                              </td>\n                              <td>\n                                <input\n                                  type=\"date\"\n                                  ref={register}\n                                  name=\"p_expdeldate\"\n                                  className={classNames(\"form-control\", {\n                                    \"is-invalid\": errors.p_expdeldate,\n                                  })}\n                                  min={item}\n                                />\n                                {errors.p_expdeldate && (\n                                  <div className=\"invalid-feedback\">\n                                    {errors.p_expdeldate.message}\n                                  </div>\n                                )}\n                              </td>\n\n                              <td>\n                                <button type=\"submit\" class=\"customBtn\">\n                                  Assign\n                                </button>\n                              </td>\n                            </tr>\n                          ) : (\n                            <tr>\n                              <th scope=\"row\">{queryNo}</th>\n                              <td>\n                                <select class=\"form-control w-75 p-0\" disabled>\n                                  <option>{hideQuery.name}</option>\n                                </select>\n                              </td>\n\n                              <td>\n                                <input\n                                  type=\"text\"\n                                  ref={register}\n                                  name=\"p_timelines\"\n                                  class=\"form-control\"\n                                  value={hideQuery.timeline}\n                                  disabled\n                                />\n                              </td>\n                              <td>\n                                <input\n                                  type=\"text\"\n                                  ref={register}\n                                  name=\"p_expdeldate\"\n                                  class=\"form-control\"\n                                  value={hideQuery.expdeliverydate}\n                                  disabled\n                                />\n                              </td>\n                              <td>\n                                <button class=\"autoWidthBtn\" disabled>\n                                  Assigned\n                                </button>\n                              </td>\n                            </tr>\n                          )}\n                        </tbody>\n                      </table>\n                    </form>\n                    <Mandatory />\n\n                  </div>\n                </div>\n              </>\n          }\n\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n","/home/pooja/MazarsRepo/src/pages/Admin/QueriesRecevied/QueriesRecevied.js",["2064","2065","2066","2067","2068","2069","2070","2071","2072"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\nimport moment from 'moment';\nfunction QueriesRecevied(props) {\n \n\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [accept, setAccept] = useState();\n  const [tlName2, setTlname] = useState();\n  const[tp22, setTp22] = useState();\n  const [tpStatus, setTpstatus] = useState();\n  const [declined2, setDeclined2] = useState();\n  const [declinedStatus, setDeclinedStatus] = useState(false)\n  const [finalDate, setFinalDate] = useState()\n  const [qstatus, setqStatus] = useState();\n  const [overDue, setOverDue] = useState(\"\")\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n    proposal_reactive_dates: \"\",\n    proposal_reactive_notes: \"\"\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/admin/getQueryDetails?id=${id}`, myConfig).then((res) => {\n       \n        if (res.data.code === 1) {\n          \n         setqStatus(res.data.result[0].query_status)\n          setTpstatus(res.data.result[0].tp_status);\n          setAccept(res.data.result[0].query_status)\n          setTlname(res.data.result[0].tlname);\n          setTp22(res.data.result[0].tpname);\n          if(res.data.history_queries[0] === undefined){\n\n          }\n          else{\n            setDisplayHistory({\n              tlname: res.data.proposal_queries,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          \n          }\n         \n         if(res.data.result[0].status ==\"Declined Query\"){\n        \n         let a = res.data.result[0].declined_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\n           setDeclined2(a)\n          setDeclinedStatus(true)\n         }\n        \n          if (res.data.result) {\n            if (res.data.result[0].name == null) {\n             \n            }\n            else {\n              setSubmitData(res.data.result);\n            }\n          }\n          \n          if (res.data.additional_queries) {\n            setDisplaySpecific(res.data.additional_queries);\n          }\n          if (res.data.payment_detail) {\n            console.log(\"payDetails\", res.data.payment_detail)\n            setPaymentDetails(res.data.payment_detail);\n          }\n          if (res.data.feedback_detail) {\n            setFeedback(res.data.feedback_detail);\n          }\n          if (res.data.result[0].assign_no) {\n            setAssingmentNo(res.data.result[0].assign_no);\n          }\n\n          if (res.data.reports) {\n            setReports(res.data.reports);\n          }\n         \n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n         \n          \n          \n          try {\n           \n            var myYear = JSON.parse(assementItem);\n           \n            setYear(myYear);\n          } catch (e) {\n           \n          }\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            \n            setPurpose(myPurpose);\n           \n          } catch (e) {\n           \n          }\n         \n          if (res.data.proposal_queries.length > 0) {\n            setOverDue(res.data.result[0].overdueamount)\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\n            });\n            let a = moment(res.data.result[0].final_date);\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\n            let c = a.diff(b)\n            let d = moment.duration(c)\n            let finalDate = d.days() + 1;\n           setFinalDate(finalDate)\n           \n          }\n\n          if (res.data.assignment.length > 0) {\n          \n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n       \n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n\n\n        }\n      });\n    };\n  //  getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n <div class=\"row mt-3\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n          <CardHeader>\n          <Row>\n            <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/admin/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"autoWidthBtn ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"4\" align = \"center\">\n              <h4>Query Details</h4>\n            </Col>\n            <Col md=\"4\" align = \"center\">\n             \n            </Col>\n          </Row>\n        </CardHeader>\n            {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                qstatus={qstatus}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n                accept = {accept}\n                tlName2={tlName2}\n                tp22 = {tp22}\n                tpStatus={tpStatus}\n                declined2={declined2}\n                declinedStatus={declinedStatus}\n                finalDate={finalDate}\n                overDue = {overDue}\n                panel = \"admin\"\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n","/home/pooja/MazarsRepo/src/pages/Admin/QueriesTab/QueriesTab.js",["2073","2074","2075","2076","2077","2078","2079","2080"],"import React, { useState, useEffect, useLayoutEffect , createContext} from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport PendingForAllocation from \"../../../components/PendingForAllocation/PendingForAllocation\";\nimport PendingForProposals from \"../../../components/PendingForProposals/PendingForProposals\";\nimport DeclinedQueries from \"../../../components/DeclinedQueries/DeclinedQueries\";\nimport AllQueriesData from \"../../../components/AllQueriesData/AllQueriesData\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\nfunction QueriesTab(props) {\n  \n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [allData, setAllData] = useState()\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n  const [inprogressAllocation, setInprogressAllocation] = useState();\n  const [bgColor, setbgColor] = useState(\"#55425F\")\n  const [tabIndex, setTabIndex] = useState(0);\n  useEffect(() => {\n    CountAllQuery();\n    CountInprogressAllocation();\n    CountInprogressProposal();\n    CountDeclined();\n  }, []);\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n  const CountAllQuery = (data) => {\n    axios.get(`${baseUrl}/admin/getAllQueries`, myConfig).then((res) => {\n     \n      if (res.data.code === 1) {\n        setAllQueriesCount(res.data.result.length);\n        setAllData(res.data.result);\n      }\n    });\n  };\n\n  const CountInprogressAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`, myConfig).then((res) => {\n     \n      if (res.data.code === 1) {\n        setInprogressAllocation(res.data.result.length);\n      }\n    });\n  };\n\n  const CountInprogressProposal = () => {\n    axios.get(`${baseUrl}/admin/pendingProposal`, myConfig).then((res) => {\n     \n      if (res.data.code === 1) {\n        setPendingProposalCount(res.data.result.length);\n      }\n    });\n  };\n\n  const CountDeclined = () => {\n    axios.get(`${baseUrl}/admin/declinedQueries`, myConfig).then((res) => {\n     \n      if (res.data.code === 1) {\n        setDeclined(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const tableIndex = (index) => {\n    setTabIndex(index)\n    console.log(index)\n    if(index === 0){\n      setbgColor(\"#55425F\")\n    }\n    else if(index === 1){\n      setbgColor(\"#6e557b\")\n    }\n    else if(index === 2){\n      setbgColor(\"#6e557b\")\n    }\n    else if(index === 3){\n      setbgColor(\"#6e557b\")\n    }\n  }\n    \n  const myStyle1 = {\n    margin: \"10px auto\",\n    fontSize : \"14px\"\n  };\n  const myStyle2 = {\n  margin: \"10px auto\",\n  \n  color : \"#55425f\",\n  fontWeight : 1000\n  };\n  \n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n    \n      \n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList className=\"fixedTab\">\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n              All Queries ({allQueriesCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Inprogress; Allocation ({inprogressAllocation})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Inprogress; Proposals ({pendingProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Declined Queries ({declined})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllQueriesData allData={allData}/>\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForAllocation />\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForProposals />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedQueries />\n          </TabPanel>\n        </Tabs>\n     \n     \n    </Layout>\n  );\n}\n\nexport default QueriesTab;","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/EditTL.js",["2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from 'sweetalert2'\nimport { useParams, useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport {\n  Card,\n  CardHeader\n} from \"reactstrap\";\nimport Reset from \"./Reset\";\nimport { Form, Input, Button } from \"antd\";\nimport Select from \"react-select\";\nimport { Spinner } from \"reactstrap\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\n\nfunction EditTL() {\n  const { Option } = Select;\n  const { id } = useParams();\n  \n  const alert = useAlert();\n  let history = useHistory();\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(null);\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n  const [mcategory, setmcategory] = useState([]);\n  const [mdata, setmdata] = useState([]);\n  const [mdataName, setMdataname] = useState([]);\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [display, setDisplay] = useState(false);\n  const [subData, subCategeryData] = useState([])\n  const [categoryData, setCategoryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [custCate2, setCustcate2] = useState([])\n  const [loading, setLoading] = useState(false);\n const [showDel, setShowDel] = useState(null)\n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  const [dd, setDd] = useState({\n    direct: [],\n    indirect: [],\n  });\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  \n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  var kk = []\n  var vv = []\n  var a;\n  var subdefval;\n  var dirvalue = []\n  var indirvalue = []\n  var allsubcatvalue = []\n  \n  const options = tax.map(d => ({\n    \"value\": d.id,\n    \"label\": d.details\n  }))\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n\n  useEffect(() => {\n    getTeamLeader();\n  }, [id]);\n\n \n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/admin/getTeamLeader?id=${id}`, myConfig).then((res) => {\n \n      if (res.data.code === 1) {\n       if(JSON.parse(res.data.result[0].allcat_id)){\n        setValue(res.data.result[0]);\n        setStore(res.data.result[0].pcat_id);\n        setShowDel(res.data.result[0].is_delete)\n       }\n       \n      }\n    });\n  };\n \n  const data1 = value.name;\n  const data2 = value.personal_email;\n  const data3 = value.phone;\n  const data4 = value.allpcat_id;\n  const data5 = value.allcat_id;\n  var data6 = value.post_name;\n  var data7 = value.email;\n  const data8 = value.cat_id;\n  const data9 = value.pcat_id;\n   const data10= value.cat_value;\n   const data11 = value.pcat_value;\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n   defValue()\n   \n    getCategory();\n    if(data5) {\n      defSubValue();\n    }\n  }, [showDel]);\n\n  useEffect(() => {\n\n    getSubCategory();\n   \n  }, [store]);\n\n  const getSubCategory = () => {\n  if(store !== null){\n   \n    axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n     \n      if (res.data.code === 1) {\n       setTax2(res.data.result);\n      }\n    });\n  }\n  };\n  \n  const onFinish = (value) => {\n   \n    var categeryList = []\n    var categeryName = []\n    var kk = []\n    var parentCategoryName = []\n    subData.map((i) => {\n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n    categoryData.map((i) => {\n      kk.push(i.value)\n      parentCategoryName.push(i.label)\n    })\n   \n\n    if (custCate.length < 1 && data4.length < 1) {\n      setError(\"Please select at least one value\")\n     \n     \n    }\n    else if (subData.length < 1 && data5.length < 1) {\n      setError2(\"Please select at least one value\")\n    \n    }\n    else if (invalid || wEmail || indNumError || posError.exits) {\n      setDisplay(false)\n      \n    }\n    else if(parentCategoryName.includes(\"Direct tax\") && dd.direct.length === 0){\n     \n    }\n    else if(parentCategoryName.includes(\"Indirect tax\") && dd.indirect.length === 0){\n     \n    }\n    \n    else {\n   \n      setLoading(true)\n      setDisplay(true)\n      let formData = new FormData();\n      formData.append(\"personal_email\", value.email);\n      formData.append(\"name\", value.name);\n      formData.append(\"phone\", value.phone);\n     {email.length > 1 ? \n      formData.append(\"email\", email) :\n      formData.append(\"email\", data7)}\n      {postValue.length > 1 ?  \n        formData.append(\"post_name\", postValue) :\n        formData.append(\"post_name\", data6)}\n     {categeryList.length > 1 ?  formData.append(\"cat_id\", categeryList) : \n     formData.append(\"cat_id\", categeryList) }\n     {kk.length === 0 ?  formData.append(\"pcat_id\", data9) : \n     formData.append(\"pcat_id\", kk) }\n      { parentCategoryName.length > 0 ?\n      formData.append(\"allpcat_id\", parentCategoryName) : \n      formData.append(\"allpcat_id\", data4) } \n      \n    \n      formData.append(\"allcat_id\", JSON.stringify(dd)) \n      formData.append(\"id\", id);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/updateTeamLeader`,\n        headers : {\n          uit : token\n        },\n        data: formData,\n      })\n        .then(function (response) {\n       \n          if (response.data.code === 1) {\n            setLoading(false)\n            Swal.fire({\n              \"title\": \"Success\",\n              \"html\": \"Team Leader Updated Successfully\",\n              \"icon\": \"success\"\n            })\n            history.goBack();\n         \n           \n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n       \n        })\n        .catch((error) => {\n         \n        });\n    }\n  };\n\n\n\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digit should be enter\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n      \n    }\n  }\n\n  var dir = []\n  var indir = []\n\n  // Sub Category Function\n  const subCategory = (e) => {\n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n\n    e.map((i) => {\n      i.value < 9 ? dir.push(i.label) : indir.push(i.label)\n    })\n    setDd({\n      direct: dir,\n      indirect: indir\n    })\n    let pk = []\n    if(indir.length === 0 && dir.length === 0){\n      setCategoryData(\"\")\n    }\n   else if(dir.length === 0){\n      let bb = {\n        value : \"2\",\n        label : \"Indirect tax\"\n      }\n      pk.push(bb)\n      setCategoryData(pk)\n    }\n    else if(indir.length === 0){\n      let bb = {\n        value : \"1\",\n        label : \"Direct tax\"\n      }\n      pk.push(bb)\n      setCategoryData(pk)\n    }\n  }\n\n\n  // Category Function\n  const category = (v) => {\n\n     setCategoryData(v)\n\n    setError(\"\")\n    setCustcate(v)\n\n    v.map((val) => {\n      vv.push(val.value)\n\n      setmcategory((oldData) => {\n        return [...oldData, val.value]\n      })\n      setmcatname((oldData) => {\n        return [...oldData, val.label]\n      })\n      setStore(val.value)\n    })\n\n\n    if (vv.length > 0) {\n     \n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n      \n        let dkkk = []\n        let pkk = []\n                for (let i = 0; i < subData.length; i++) {\n                                     kk.push(subData[i])\n                    dkkk.push(subData[i].label)\n                  \n                }\n          \n                setDd({\n                  \"direct\" : dkkk,\n                  \"indirect\" : pkk\n                })\n                subCategeryData(kk)\n      }\n      else if (vv.includes(\"1\")) {\n      \nlet dkkk = []\nlet pkk = []\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n            dkkk.push(subData[i].label)\n          }\n        }\n      \n        setDd({\n          \"direct\" : dkkk,\n          \"indirect\" : pkk\n        })\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n       \n        let pkk = []\n        let dkkk = []\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n            dkkk.push(subData[i].label)\n          }\n        }\n        setDd({\n          \"direct\" : pkk,\n          \"indirect\" : dkkk\n        })\n        subCategeryData(kk)\n      }\n    }\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n  }\n\n //eamil onchange\n const emailHandler = (e) => {\n   data7 = e.target.value;\n  setEmail(e.target.value);\n \n  if (e.target.value.length < 1) {\n    setWemail(\"\")\n  }\n};\n\n\n//email validaation with api\nconst emailValidation = (key) => {\n\n  var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (email.match(validRegex)) {\n    setWemail(\"\");\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"type\", 1);\n    formData.append(\"id\", id)\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/validateEditRegistration`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setValiemail(response.data.result)\n          setInvalid('')\n        } else if (response.data.code === 0) {\n          setInvalid(response.data.result)\n          setValiemail('')\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n  else {\n    setWemail(\"invalid email\")\n  }\n}\n\n\n\nconst defValue = () => {\n  let e = 0;\n if(data4){\n  const data55 = data4.split(\",\")\n\nlet b;\nif(value.pcat_value){\n  b = value.pcat_value.split(\",\");\n\n \n    a = data55.map((i => ({\n      \"value\" : String(b[e++]),\n      \"label\" : i\n    }) ))\n  \n}}\n\n  setCategoryData(a)\n}\nconst defSubValue = () => {\n \n   var dir1;\n   var dir2;\n   var kk = []\n   var d = 0;\n   var ind = 9;\n   let ppp;\n   let c =0;\n if(value.cat_value !== null){\n  ppp = value.cat_value.split((\",\"))\n \n let ooo = ppp.filter((i) => {\n   return i > 8\n })\n let nnn = ppp.filter((i) => {\n   return i < 9\n })\n \n   var subcatgerydefvalue = JSON.parse(value.allcat_id);\n   indirvalue = subcatgerydefvalue.indirect;\n   dirvalue = subcatgerydefvalue.direct;\n   if(Array.isArray(dirvalue)){\n    dirvalue.map((i) => {\n     \n      allsubcatvalue.push(i)\n      kk.push(i)\n    })\n    dir1 = subcatgerydefvalue.direct.map((i => ({\n      \"value\" : String(nnn[d++]),\n      \"label\" : i\n    }) ))\n   }\n   else{\n     return false\n   }\n  if(Array.isArray(indirvalue)){\n    indirvalue.map((o) => {\n      allsubcatvalue.push(o)\n      kk.push(o)\n    })\n    dir2 = subcatgerydefvalue.indirect.map((i => ({\n      \"value\" : String(ooo[c++]),\n      \"label\" : i\n    }) ))\n  }\n  else{\n    return false\n  }\n \n   subdefval = [...dir1, ...dir2]\n  // let dircat = [dir1.label]\n  // let indircat = [dir2.label]\n  let oo = []\n  let pp = []\n  dir1.map((i) => {\n    oo.push(i.label)\n  })\n  dir2.map((i) => {\n    pp.push(i.label)\n  })\n  \n  subCategeryData(subdefval)\n  setDd({\n    \"direct\" : oo,\n    \"indirect\" : pp\n  })\n  \n  }\n}\n\n\nconst checktlPost = (e) => {\n  setPostName(e.target.value)\n  data6 = e.target.value;\n  let a = e.target.value;\n  let formData = new FormData();\n  formData.append(\"tlpost\", a)\n  formData.append(\"id\", id )\n  axios({\n    method: \"POST\",\n    url : `${baseUrl}/admin/validateTLEditPost`,\n    headers : {\n      uit : token\n    },\n    data: formData,\n  })\n  .then(function (res) {\n    if(res.data.code === 1){\n      setposError({\n        available : \"Post Available\"\n      })\n    }\n    else{\n      setposError({\n        exits : \"Post already exits\"\n      })\n    }\n  })\n  }\n const tlName22 = (e) => {\n   \n   data6 = e.target.value\n }\n const del = (e) => {\n   Swal.fire({\n    title: \"Are you sure?\",\n    text: \"It will permanently deleted !\",\n    type: \"warning\",\n    showCancelButton : true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, delete it!\",\n   }).then((result) => {\n    if (result.value) {\n      deleteCliente(id);\n    }\n  });\n }\n const deleteCliente = (id) => {\n  axios\n    .get(`${baseUrl}/admin/deleteTeamLeader?id=${id}`, myConfig)\n    .then(function (response) {\n      \n      if (response.data.code === 1) {\n        Swal.fire(\"Team Leader has been deleted successfully\");\n        history.goBack();\n        getTeamLeader();\n      } else {\n        Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        history.goBack();\n      }\n\n    })\n    .catch((error) => {\n      \n    });\n};\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex justify-content-between\">\n            <div>\n              <button\n                class=\"autoWidthBtn ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Team Leader</h4>\n            </div>\n            <div>\n             {showDel == \"0\" ?  <button className=\"btn btn-danger\" onClick={(e) => del(e)}>Delete</button> : \"\"}\n              </div>\n          </div>\n        </CardHeader>\n\n        {!data1 ? (\n          <CardHeader>loading ...</CardHeader>\n        ) : (\n          <CardHeader>\n            <div class=\"row mt-3\">\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                <Form\n                autoComplete=\"off\"\n                  name=\"basic\"\n                  initialValues={{\n                    name: `${data1}`,\n                    email: `${data2}`,\n                    phone: `${data3}`,\n                    category: `${data4}`,\n                    sub_category: `${data5}`,\n                  }}\n                  onFinish={onFinish}\n                >\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      <label>Team Leader Post Name <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_name\"\n                          onBlur={(e) => checktlPost(e)}\n                          defaultValue={data6}\n                         disabled = {showDel == \"1\" ? true : \"\"}\n                          onChange = {(e) => tlName22(e)}\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_name || posError.exits,\n                          })}\n                        />\n                          {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      <label>Team Leader Post Email <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_email\"\n                          onBlur={(e) => emailValidation(e)}\n                          disabled = {showDel == \"1\" ? true : \"\"}\n                          defaultValue={data7}\n                          onChange={(e) => emailHandler(e)}\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_email,\n                          })}\n                        />\n                                              {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } \n                      </div>\n                    </div>\n                  </div>\n\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"name\">\n                          <Input\n                       required\n                           className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_name,\n                          })} />\n                        </Form.Item>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone  <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"phone\">\n                          <Input\n                           className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_phone || indNumError || numExist,\n                          })}\n                            onChange={(e) => phoneHandler(e)}\n                            onBlur={phoneValidation}\n                             />\n                        </Form.Item>\n                      </div>\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n\n                    </div>\n                  </div>\n\n                \n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category <span className=\"declined\">*</span></label>\n                        <div class=\"form-group\">\n\n                        <Select isMulti options={options}\n                        value = {categoryData}\n                        className={error ? \"customError\" : \"\"}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n                        \n                        onChange={category}>\n                      </Select>\n\n                         \n\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category <span className=\"declined\">*</span></label>\n                        <Select isMulti options={options2}\n                      onChange={subCategory}\n                            value = {subData}\n                            styles={{\n                              option: (styles, { data }) => {\n                                return {\n                                  ...styles,\n                                  color: data.value > 8\n                                    ? \"green\"\n                                    : \"blue\"\n                                };\n                              },\n                              multiValueLabel: (styles, { data }) => ({\n                                ...styles,\n                                color: data.value < 9\n                                    ? \"blue\"\n                                    : \"green\"\n                              }),\n                            }}\n                          >\n                          </Select>\n                       \n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Email <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"email\">\n                          <Input\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.email,\n                          })}\n                      \n                          />\n                        </Form.Item>\n                       \n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                        <Form.Item>\n                          <button type=\"submit\" className=\"customBtn\">\n                            Update\n                          </button>\n                        </Form.Item>  }\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </CardHeader>\n        )}\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTL;","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js",["2125","2126","2127","2128","2129"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport AllPayment from \"./AllPayment\";\nimport Paid from \"./Paid\";\nimport Unpaid from \"./Unpaid\";\n\n\n\n\nfunction PaymentStatus(props) {\n  const userId = window.localStorage.getItem(\"adminkey\");\n\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n  const [bgColor, setbgColor] = useState(\"#2b5f55\")\n\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/admin/getUploadedProposals`, myConfig)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setAllPayment(res.data.result.length);\n        }\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/admin/getUploadedProposals?status=1`, myConfig)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setPaid(res.data.result.length);\n        }\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/admin/getUploadedProposals?status=2`, myConfig)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setUnpaid(res.data.result.length);\n        }\n      });\n  };\n\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n  const tableIndex = (index) => {\n    setTabIndex(index)\n    console.log(index)\n    if(index === 0){\n      setbgColor(\"#2b5f55\")\n    }\n    else if(index === 1){\n      setbgColor(\"#3e8678\")\n    }\n    else if(index === 2){\n      setbgColor(\"#3e8678\")\n    }\n    else if(index === 3){\n      setbgColor(\"#3e8678\")\n    }\n  }\n    \n  const myStyle1 = {\n    margin: \"10px auto\",\n    fontSize : \"14px\"\n  };\n  const myStyle2 = {\n margin: \"10px auto\",\n\n color : \"#2b5f55\",\n fontWeight : 1000\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n      <TabList\n           className=\"fixedTab\"\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Paid ({unpaid})\n            </Tab>\n          </TabList>\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n        </Tabs>\n     \n    </Layout>\n  );\n}\n\nexport default PaymentStatus;\n","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/index.js",["2130","2131","2132","2133","2134"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\nimport AssignmentComponent from \"./AllAssignment\";\nimport DraftReport from \"./DraftReport\";\nimport FinalReport from \"./FinalReport\";\n\nfunction AssignmentTab(props) {\n \n\n    const userid = window.localStorage.getItem(\"adminkey\");\n\n    const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\n    const [draft, setDraft] = useState(\"\");\n    const [final, setFinal] = useState();\n    const [bgColor, setbgColor] = useState(\"#615339\")\n    const [tabIndex, setTabIndex] = useState(0);\n    const token = window.localStorage.getItem(\"adminToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    useEffect(() => {\n        CountAllAssignment();\n        CountDraftReport();\n        CountFinalReport();\n    }, []);\n\n\n    const CountAllAssignment = (data) => {\n        axios.get(`${baseUrl}/admin/getAssignments`, myConfig).then((res) => {\n         \n            if (res.data.code === 1) {\n                setAllAssignmentCount(res.data.result.length);\n            }\n        });\n    };\n\n    const CountDraftReport = () => {\n        axios.get(`${baseUrl}/admin/getAssignments?assignment_status=Draft_Report&stages_status=1`, myConfig).then((res) => {\n          ;\n            if (res.data.code === 1) {\n                setDraft(res.data.result.length);\n            }\n        });\n    };\n\n    const CountFinalReport = () => {\n        axios.get(`${baseUrl}/admin/getAssignments?assignment_status=Delivery_of_report&stages_status=1`, myConfig).then((res) => {\n          ;\n            if (res.data.code === 1) {\n                setFinal(res.data.result.length);\n            }\n        });\n    };\n\n  \n    useLayoutEffect(() => {\n        setTabIndex(props.location.index || 0);\n    }, [props.location.index]);\n\n\n    const tableIndex = (index) => {\n        setTabIndex(index)\n        console.log(index)\n        if(index === 0){\n          setbgColor(\"#615339\")\n        }\n        else if(index === 1){\n          setbgColor(\"#907b56\")\n        }\n        else if(index === 2){\n          setbgColor(\"#907b56\")\n        }\n        else if(index === 3){\n          setbgColor(\"#907b56\")\n        }\n      }\n        \n      const myStyle1 = {\n        margin: \"10px auto\"\n      };\n      const myStyle2 = {\n        margin: \"10px auto\",\n     \n        color : \"#5a625a\",\n        fontWeight : 1000\n         };\n      \n      \n    \n    \n\n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n        \n            <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n      <TabList\n          className=\"fixedTab\"\n          >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n                            All Assignments ({allAssignmentCount})\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n                            Inprogress; Draft Reports  ({draft})\n                        </Tab>\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n                        Inprogress; Delivery of Final Reports ({final})\n                        </Tab>\n\n                    </TabList>\n\n                    <TabPanel>\n                        <AssignmentComponent />\n                    </TabPanel>\n\n                    <TabPanel>\n                        <DraftReport />\n                    </TabPanel>\n\n                    <TabPanel>\n                        <FinalReport />\n                    </TabPanel>\n                </Tabs>\n           \n        </Layout>\n    );\n}\n\nexport default AssignmentTab;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paydetails.js",["2135","2136","2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147","2148","2149","2150","2151","2152","2153","2154","2155","2156","2157","2158","2159"],"/home/pooja/MazarsRepo/src/pages/Admin/EditTP/EditTP.js",["2160","2161","2162","2163","2164","2165","2166","2167","2168","2169","2170","2171","2172","2173","2174","2175","2176","2177","2178","2179","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2193","2194","2195","2196","2197","2198","2199","2200","2201","2202","2203","2204","2205","2206","2207","2208","2209","2210","2211","2212","2213","2214","2215","2216","2217","2218"],"import React, { useState, useEffect , useRef} from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nimport { Form, Input, Button } from \"antd\";\nimport Select from \"react-select\";\n\nimport { Spinner } from \"reactstrap\";\nimport Swal from \"sweetalert2\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\n\nfunction EditTP() {\n  const { Option } = Select;\n  const { id } = useParams();\n  const history = useHistory();\n  const alert = useAlert();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n  const [mcategory, setmcategory] = useState([]);\n  const [mdata, setmdata] = useState([]);\n  const [mdataName, setMdataname] = useState([]);\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [display, setDisplay] = useState(false);\n  const [subData, subCategeryData] = useState([])\n  const [categoryData, setCategoryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [custCate2, setCustcate2] = useState([])\n  const [teamleader, setTeamLeader] = useState([]);\n  const [tl, setTl] = useState([])\n  const [post1, setPost1] = useState([])\n  const [show, setShow] = useState([])\n  const [post_na, setPost_na] = useState()\n  const [loading, setLoading] = useState(false);\n  const [showDel, setShowDel] = useState(null)\n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  const selectInputRef = useRef();\n  const selectInputRef2 = useRef();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  var kk = []\n  var vv = []\n  var a;\n  var subdefval;\n  var dirvalue = []\n  var indirvalue = []\n  var allsubcatvalue = []\n  var vv = []\n  const options = tax.map(d => ({\n    \"value\": d.id,\n    \"label\": d.details\n  }))\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))  \n  var data1 = value.name;\n  var data2 = value.personal_email;\n  var data3 = value.phone;\n  var data4 = {\n    \"value\" : value.allpcat_id,\n    \"label\" : value.allpcat_id\n  }\n  var data5 = value.allcat_id;\n  var data6 = value.post_name;\n  var data7 = value.email;\n  var data8 = value.cat_id;\n  var data9 = value.pcat_id\n  var data10 = value.tl_id\n  var data11 = value.tl_name\n  var postEmmail = value.tl_post_email;\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/admin/getCategory?pid=0`, myConfig).then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n  useEffect(() => {\n    getTutorial(id);\n  }, [id]);\n\n  const getTutorial = (id) => {\n   axios.get(`${baseUrl}/admin/getTaxProfessional?id=${id}`, myConfig)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setValue(res.data.result[0]);\n          setStore(res.data.result[0].pcat_id);\n          setShowDel(res.data.result[0].is_delete)\n          categoryData(res.data.result[0].allcat_id)\n        }\n      })\n      .catch((e) => {\n     \n      });\n  };\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/admin/getCategory?pid=${store}`, myConfig).then((res) => {\n        \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n          console.log(\"tax2\", res.data.result)\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n  const onFinish = (value) => {\n\n\n    var categeryList = []\n    var categeryName = []\n    var kk = []\n    var parentCategoryName = []\n    subData.map((i) => {\n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n   \n    if (custCate.length < 1 && data4.length < 1) {\n      setError(\"Please select at least one value\")\n    }\n    else if (subData.length < 1 && data5.length < 1) {\n\n      setError2(\"Please select at least one value\")\n    }\n    else if (invalid || wEmail || indNumError) {\n      setDisplay(false)\n    }\n\n    else {\n      setDisplay(true)\n     setLoading(true)\n      let formData = new FormData();\n      formData.append(\"personal_email\", value.email);\n      formData.append(\"name\", value.name);\n      formData.append(\"phone\", value.phone);\n    \n      formData.append(\"tp_id\", data10);\n      {email.length > 1 ? \n        formData.append(\"email\", email) :\n        formData.append(\"email\", data7)}\n        {postValue.length > 1 ?  \n          formData.append(\"post_name\", postValue) :\n          formData.append(\"post_name\", data6)}\n      // {\n      //   categeryList.length > 1 ? formData.append(\"pcat_id\", store) :\n      //   formData.append(\"pcat_id\", data8)\n      // }\n      {\n        categeryList.length === 0 ? formData.append(\"pcat_id\", data9)\n        : formData.append(\"pcat_id\", store)\n      }\n     \n\n\n      {\n        categoryData.length === 0 ? formData.append(\"cat_id\", data8) :\n        formData.append(\"cat_id\", categeryList)\n      }\n\n\n      {\n        categoryData.length === 0 ?\n        formData.append(\"allpcat_id\", data4.label) :\n        formData.append(\"allpcat_id\", categoryData.label)\n      }\n\n      {\n        categeryName.length > 0 ? formData.append(\"allcat_id\",categeryName) :\n        formData.append(\"allcat_id\", data5)\n      }\n      formData.append(\"id\", id);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/updateTP`,\n        headers : {\n          uit : token\n        },\n        data: formData,\n      })\n        .then(function (response) {\n        \n          if (response.data.code === 1) {\n           setLoading(false)\n          \n            Swal.fire({\n              \"title\": \"Success\",\n              \"html\": \"Tax Professional details updated successfully\",\n              \"icon\": \"success\"\n            })\n            history.goBack();\n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n       \n        })\n        .catch((error) => {\n         \n        });\n    }\n  };\n\n\n\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digit should be enter\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n     \n    }\n  }\n\n  // Sub Category Function\n  const subCategory = (e) => {\n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n  }\n\n\n  // Category Function\n  const category = (v) => {\n    console.log(\"vvv\", v)\n    selectInputRef.current.select.clearValue();\n   \n    setCategoryData(v)\n    setError(\"\")\n    setCustcate(v)\n    setStore(v.value)\n    vv.push(v.value);\n    setmcategory(v.value)\n    setmcatname((oldData) => {\n      return [...oldData, v.label]\n    })\n    subdefval = {}\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n        \n      }\n      else if (vv.includes(\"1\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n    }\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n  }\n\n  //eamil onchange\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n    data7 = e.target.value\n    if (e.target.value.length < 1) {\n      setWemail(\"\")\n    }\n  };\n\n\n  //email validaation with api\n  const emailValidation = (key) => {\n\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (email.match(validRegex)) {\n      setWemail(\"\");\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n      formData.append(\"id\", id)\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/validateEditRegistration`,\n        headers : {\n          uit : token\n        },\n        data: formData,\n      })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          setValiemail(response.data.result)\n          setInvalid('')\n        } else if (response.data.code === 0) {\n          setInvalid(response.data.result)\n          setValiemail('')\n        }\n      })\n      .catch((error) => {\n\n      });\n    }\n    else {\n      setWemail(\"Invalid email\")\n    }\n  }\n\n  \n const defSubValue = () => {\n var k;\n \n   var subcatgerydefvalue = value.allcat_id.split(\",\");\n   value.allpcat_id.includes(\"Indirect\") === true  ? k = 8 : k = 2\n \n  subdefval = subcatgerydefvalue.map((i => ({\n   \"value\" : String(++k),\n   \"label\" : i\n }) ))\n \n  }\n \n if(data5 != undefined){\n   defSubValue();\n }\n\n const checktlPost = (e) => {\n  setPostName(e.target.value)\n  data6 = e.target.value;\n  let a = e.target.value;\n  let formData = new FormData();\n  formData.append(\"tlpost\", a)\n  formData.append(\"id\", id )\n  axios({\n    method: \"POST\",\n    url : `${baseUrl}/tl/validateTLEditPost`,\n    data: formData,\n  })\n  .then(function (res) {\n    if(res.data.code === 1){\n      setposError({\n        available : \"Post Available\"\n      })\n    }\n    else{\n      setposError({\n        exits : \"Post already exits\"\n      })\n    }\n  })\n  }\n  const del = (e) => {\n    Swal.fire({\n     title: \"Are you sure?\",\n     text: \"It will permanently deleted !\",\n     type: \"warning\",\n     showCancelButton : true,\n     confirmButtonColor: \"#3085d6\",\n     cancelButtonColor: \"#d33\",\n     confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n     if (result.value) {\n       deleteCliente(id);\n     }\n   });\n  }\n  const deleteCliente = (id) => {\n   axios\n     .get(`${baseUrl}/admin/deleteTP?id=${id}`, myConfig)\n     .then(function (response) {\n       \n       if (response.data.code === 1) {\n         Swal.fire(\"Tax Professional has been deleted successfully\");\n         history.goBack();\n       } else {\n         Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n         history.goBack();\n       }\n \n     })\n     .catch((error) => {\n       \n     });\n };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex justify-content-between\">\n            <div>\n              <button\n                class=\"autoWidthBtn ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Tax Professional</h4>\n            </div>\n            <div>\n             {showDel == \"0\" ?  <button className=\"btn btn-danger\" onClick={(e) => del(e)}>Delete</button> : \"\"}\n              </div>\n          </div>\n        </CardHeader>\n\n        {!data1 ? (\n          <CardHeader>loading ...</CardHeader>\n        ) : (\n          <CardHeader>\n            <div class=\"row mt-3\">\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                <Form\n                  name=\"basic\"\n                  autoComplete=\"off\"\n                  initialValues={{\n                    name: `${data1}`,\n                    email: `${data2}`,\n                    phone: `${data3}`,\n                    category: `${data4}`,\n                    sub_category: `${data5}`,\n                  }}\n                  onFinish={onFinish}\n                >\n                   <div class=\"row\">\n                  <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                  <label>Team Leader post name <span className=\"declined\">*</span></label>\n                  <input type=\"text\" className = \"form-control\" \n                  defaultValue = {data11} \n              disabled />   \n                    </div>\n                  </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      <label> Team Leader post email <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_email\"\n                          defaultValue = {postEmmail}\n                         disabled\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_email,\n                          })}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n\n                  <div class=\"row\">\n                  <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      \n                      <label>TP post name <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_name\"\n                          onBlur={(e) => checktlPost(e)}\n                          disabled = {showDel == \"1\" ? true : \"\"}\n                          defaultValue={data6}\n                          onChange={(e) => data6= e.target.value}\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_name,\n                          })}\n                        />\n                         {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                    \n                  \n                    <label> TP post email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"email\"\n                        name=\"p_email\"\n                        ref={register}\n                        disabled = {showDel == \"1\" ? true : \"\"}\n                      defaultValue={data7}\n                     \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_email,\n                        })}\n                        onChange={(e) => emailHandler(e)}\n                        onBlur={emailValidation}\n                      />\n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } \n                    </div>\n                  </div>\n                   \n                    \n                  </div>\n\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"name\">\n                          <input\n                            required\n                           \n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.p_name,\n                            })} />\n                        </Form.Item>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone  <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"phone\">\n                          <Input\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.p_phone || indNumError || numExist,\n                            })}\n                            onChange={(e) => phoneHandler(e)}\n                            onBlur={phoneValidation} />\n                        </Form.Item>\n                      </div>\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> :\"\"}\n\n                    </div>\n                  </div>\n\n               \n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category <span className=\"declined\">*</span></label>\n                        <div class=\"form-group\">\n\n                          <Select  options={options}\n                            defaultValue={data4} onChange={category}\n                            styles={{\n                              option: (styles, { data }) => {\n                                return {\n                                  ...styles,\n                                  color: data.value == 2\n                                    ? \"green\"\n                                    : \"blue\"\n                                };\n                              },\n                              singleValue: (styles, { data }) => ({\n                                ...styles,\n                                color: data.label  == \"Indirect tax\"\n                                    ? \"green\"\n                                    : \"blue\"\n                              }),\n                            }}\n                            ref={selectInputRef2}\n                            // onFocus = {(e) => {\n                            //   selectInputRef2.current.select.clearValue();\n                            // }}\n                          >\n                          </Select>                  \n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category <span className=\"declined\">*</span></label>\n\n                        <Select isMulti options={options2}\n                          onChange={subCategory}\n                          defaultValue = { subdefval}\n                          ref={selectInputRef}\n\n                          // value = {subData}\n                          styles={{\n                            option: (styles, { data }) => {\n                              return {\n                                ...styles,\n                                color: data.value > 8\n                                  ? \"green\"\n                                  : \"blue\"\n                              };\n                            },\n                            multiValueLabel: (styles, { data }) => ({\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            }),\n                          }}\n                         >\n                        </Select>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Email <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"email\">\n                          <Input\n                          type=\"email\"\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.email || wEmail ,\n                            })}/>\n                        </Form.Item>\n                        {\n                          wEmail ? <p className=\"declined\">{wEmail}</p> : \"\"\n                           \n                        }\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                        <Form.Item>\n                          <button type=\"submit\" className=\"customBtn\">\n                            Update\n                          </button>\n                        </Form.Item>  }\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </CardHeader>\n        )}\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTP;","/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js",["2219","2220","2221","2222","2223","2224"],"/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js",["2225","2226","2227","2228","2229","2230","2231","2232","2233","2234","2235","2236"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Swal from \"sweetalert2\";\nimport History from './History.js';\nimport {EditQuery} from \"../../../components/Common/MessageIcon\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nfunction TeamLeaderTab() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [tlCount, setTlCount] = useState(\"\");\n  const [subCat, setsubCat] = useState([])\n  const [history, setHistory] = useState([]);\n  const userid = window.localStorage.getItem(\"adminkey\");\n  var kk = []\n  var pp = []\n  \n\n  const [modal, setModal] = useState(false);\n \n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const toggle = (key) => {\n   \n    setModal(!modal);\n\n   if(typeof(key) == \"object\") {\n    \n   }\n   else{\n    {\n      fetch(`${baseUrl}/admin/userhistory?id=${key}`, {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/vnd.github.cloak-preview\",\n          uit : token\n        }),\n      })\n        .then((res) => res.json())\n        .then((response) => {\n         \n          setHistory(response.result);\n        })\n        .catch((error) => console.log(error));\n    };\n   }\n   \n   \n  }\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { width : \"50px\" };\n      },\n    },\n    {\n      dataField: \"post_name\",\n      text: \"TL post name\",\n      sort: true,\n     \n    },\n\n    {\n      dataField: \"email\",\n      text: \"TL post email\",\n      sort: true,\n    \n    },\n    {\n      dataField: \"name\",\n      text: \"Name of TL\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\"};\n      },\n    },\n    {\n      dataField: \"personal_email\",\n      text: \"Email\",\n      sort: true,\n     \n    },\n    {\n      dataField: \"phone\",\n      text: \"Mobile No\",\n      sort: true,\n     \n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n    \n    \n     \n      formatter: function nameFormatter(cell, row) {\n        var digit2 = [];\n        var digit3 = []\n        digit2 = row.allpcat_id.split(\",\")\n        if(row.allpcat_id.split(\",\")[0] === \"Indirect tax\"){\n        \n          digit3 = row.allpcat_id.split(\",\")\n        }\n        else{\n          digit3 =  row.allpcat_id.split(\",\").reverse()\n        }\n      \n        return (\n          <>\n            {\n              digit3.map((e) => {\n                return (\n                  <>\n                 \n                 <div style={{display : \"flex\", height : \"80px\"}}>\n                 <p className={e.includes(\"Indirect\") === true ? \"completed\" : \"inprogress\"}> {e}</p>\n                 </div>\n                  </>\n                )\n              })\n            }\n          </>\n        )\n      }\n    },\n    {\n      dataField: \"allcat_id\",\n      text: \"Sub Category\",\n      sort: true,\n     \n      formatter: function nameFormatter(cell, row) {\n        var digit = [];\n\n         digit = JSON.parse(row.allcat_id);\n         console.log(\"digit\",digit)\nlet k, pp;\n\nif(digit.direct && digit.direct.length -1 == \"1\"){\n  k = \", \";\n}\nelse{\n  k = \"\";\n}\nif(digit.indirect && digit.indirect.length -1 == \"1\"){\n  pp = \", \";\n}\nelse{\n  pp = \"\";\n}\n        return (\n          <>\n           {digit.direct.length > 0 && digit.indirect.length > 0 ?\n           <>\n            <div style={{display : \"block\", height : \"80px\"}}>\n            <p className=\"completed\">{digit.indirect + pp}</p>\n            </div>\n            <div style={{display : \"block\", height : \"70px\"}}>\n            <p className = \"inprogress\">{digit.direct + k} </p> \n            </div>\n           </> : <>\n           {digit.direct.length > 0 ?\n            <p className = \"inprogress\">{digit.direct + k} </p> :\n            <p className=\"completed\">{digit.indirect + pp}</p>\n           }\n           </>\n           }\n          \n           {/* {digit.direct === null ? null :\n            <p style={{ \"color\": \"green\", \"display\": \"block\" }}>{digit.indirect + pp}</p>}\n         {digit.indirect === null ? null : \n            <p style={{ \"color\": \"blue\", \"diplay\": \"block\" }}>{digit.direct + k} </p> } */}\n          </>\n\n        )\n      }\n    },\n\n    {\n      dataField: \"\",\n      text: \"Action\",\n      \n      formatter: function (cell, row) {\n        return (\n          <>\n            <Link to={`/admin/edittl/${row.id}`}>\n            <EditQuery />\n            </Link>\n          \n          </>\n        );\n\n      },\n\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"autoWidthBtn\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n  useEffect(() => {\n    getTeamLeader();\n\n  }, []);\n\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/admin/getTeamLeader`, myConfig).then((res) => {\n    \n      var dd = []\n      if (res.data.code === 1) {\n        pp.push(res.data.result)\n        setData((res.data.result));\n        setTlCount(res.data.result.length);\n      }\n    });\n  };\n\n\n  //check\n  const del = (id) => {\n   \n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"It will permanently deleted !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  // delete data\n  const deleteCliente = (id) => {\n    axios\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getTeamLeader();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n\n\n  return (\n\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n     \n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Team Leaders ({tlCount})</CardTitle>\n            </Col>\n            <Col md=\"2\">\n              <Link to={\"/admin/addnewtl\"} className=\"customBtn\">\n                Add New\n              </Link>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n        <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   data={data}\n                   columns={columns}>\n                    </DataTablepopulated>\n        </CardBody>\n      </Card>\n      <History history={history} bgColor=\"#42566\" toggle={toggle} modal={modal} />\n    </Layout>\n  );\n}\n\nexport default TeamLeaderTab","/home/pooja/MazarsRepo/src/pages/Admin/FeedbackTab/FeedbackTab.js",["2237","2238","2239","2240","2241","2242"],"/home/pooja/MazarsRepo/src/pages/Admin/PendingReceived/PendingRecevived.js",["2243","2244","2245","2246","2247","2248","2249"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { baseUrl2 } from '../../../config/config';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`, myConfig).then((res) => {\n        \n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setAssingmentNo(res.data.result[0].assign_no);\n        }\n      });\n    };\n\n    getSubmittedAssingment();\n    // getQuery();\n  }, [assingNo]);\n\n \n\n  // const getQuery = () => {\n  //  if(assingNo === undefined){\n  //    return false\n  //  }\n  //  else{\n  //   axios\n  //   .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n  //   .then((res) => {\n      \n  //     if (res.data.code === 1) {\n  //       setDisplayQuery(res.data.result);\n  //     }\n  //   });\n  //  }\n  // };\n\n     //change date format\n     function ChangeFormateDate(oldDate) {\n     \n      if (oldDate == null) {\n        return null;\n      }\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    }\n    \n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              {/* <p>{assingNo}</p> */}\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarsapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Action</th>\n                    <td>\n                    {p.allocation_status == \"0\" || p.allocation_status == \"3\"  ? (\n                        <Link to={`/admin/queryassing/${p.id}`}>\n                        <i class=\"fa fa-share\"></i>\n                      </Link>\n                      ) : (                  \n                       null\n                      )}\n                    </td>\n                  </tr>\n                 \n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Schedule.js",["2250","2251","2252","2253","2254","2255","2256","2257","2258","2259","2260","2261","2262"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Recording from \"../Recording/Recording\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\nimport \"../../Admin/AdminStyle/style.css\";\nfunction Schedule() {\n    const userid = window.localStorage.getItem(\"adminkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n\n  \n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n     <Demo />\n    </Layout>\n    );\n}\n\nexport default Schedule;","/home/pooja/MazarsRepo/src/pages/Admin/ForgetPassword/ForgetPassword.js",["2263","2264","2265","2266","2267"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\n\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\n\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n          props.history.push(`/admin/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n          Alerts.ErrorNormal(\"Please enter correct email address.\")\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n\n    \n    if (item == \"null\") {\n     \n    } else {\n      return item\n    }\n  }\n\n  return (\n    <>\n      <Header admin=\"admin\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n\n          {\n            loading ?\n              <div class=\"col-md-12\">\n                <Spinner color=\"primary\" />\n              </div>\n              :\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    defaultValue={valueHandler()}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"autoWidthBtn\">\n                  Get OTP\n                </button>\n                <Link to=\"/admin/login\" style={{ \"margin\": \"10px\" }}>\n                  <button type=\"submit\" className=\"customBtn\">\n                    Cancel\n                  </button>\n                </Link>\n                <Mandatory />\n              </form>\n          }\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/home/pooja/MazarsRepo/src/pages/Admin/MeetingComponent/MeetingComponent.js",["2268","2269","2270","2271"],"\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const adminEmail = window.localStorage.getItem(\"adminkey\");\n\n  return (\n   \n      <Meeting id={props.match.params.id}\n      adminEmail = {adminEmail} />\n   \n   \n  );\n}\n\nexport default MeetingComponent;","/home/pooja/MazarsRepo/src/pages/Admin/QueryRejection/QueryRejection.js",["2272","2273","2274","2275","2276","2277","2278","2279","2280"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, Redirect } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n    Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\n\nconst Schema = yup.object().shape({\n    p_notes: yup.string().required(\"\"),\n});\n\n\nfunction QueryRejection(props) {\n    const { id } = useParams();\n\n    const { handleSubmit, register, errors, reset } = useForm({\n        resolver: yupResolver(Schema),\n    });\n\n    const userId = window.localStorage.getItem(\"adminkey\");\n    const [loading, setLoading] = useState(false);\n    const token = window.localStorage.getItem(\"adminToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n\n    const onSubmit = (value) => {\n      \n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"id\", id);\n        formData.append(\"notes\", value.p_notes);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/admin/setAdminreject`,\n            headers : {\n                uit : token\n            },\n            data: formData,\n        })\n            .then(function (response) {\n               \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"Query declined successfully.\")\n                    props.history.push({\n                        pathname: `/admin/queriestab`,\n                        index: 1,\n                    });\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                }\n            })\n            .catch((error) => {\n                \n            });\n    };\n\n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"4\">\n                            <Link\n                                to={{\n                                    pathname: `/admin/queriestab`,\n                                    index: 1,\n                                }}\n                            >\n                                <button class=\"autoWidthBtn ml-3\">\n                                    <i class=\"fas fa-arrow-left mr-2\"></i>\n                                    Go Back\n                                </button>\n                            </Link>\n                        </Col>\n                        <Col md=\"4\">\n                            <div style={{ textAlign: \"center\" }}>\n                                <h2>Decline Query</h2>\n                            </div>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                {\n                    loading ?\n                        <Loader />\n                        :\n                        <>\n                            <CardHeader>\n                                <div class=\"row mt-3\">\n                                    <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n                                    <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                                        <form onSubmit={handleSubmit(onSubmit)}>\n                                            <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label>Notes<span className=\"declined\">*</span></label>\n                                                        <textarea\n                                                            className={classNames(\"form-control\", {\n                                                                \"is-invalid\": errors.p_notes,\n                                                            })}\n                                                            id=\"textarea\"\n                                                            rows=\"6\"\n                                                            name=\"p_notes\"\n                                                            ref={register}\n                                                        ></textarea>\n                                                        {errors.p_notes && (\n                                                            <div className=\"invalid-feedback\">\n                                                                {errors.p_notes.message}\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <button type=\"submit\" className=\"customBtn\">\n                                                Submit\n                                            </button>\n                                        </form>\n                                    </div>\n                                    <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n                                </div>\n                                <Mandatory />\n                            </CardHeader>\n                        </>\n                }\n            </Card>\n        </Layout>\n    );\n}\n\nexport default QueryRejection;","/home/pooja/MazarsRepo/src/pages/Admin/ViewNotification/ViewNotification.js",["2281","2282","2283","2284","2285"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\nfunction ViewNotification() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                className=\"autoWidthBtn ml-3\"\n                onClick={() => history.goBack()}\n              >\n              \n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4>Message Details</h4>\n            </Col>\n            <Col md=\"4\"></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> Sender</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                 {data.type}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/home/pooja/MazarsRepo/src/pages/Admin/Message/Message.js",["2286","2287","2288","2289","2290","2291","2292","2293","2294"],"/home/pooja/MazarsRepo/src/pages/Admin/Recording/Recording.js",["2295","2296","2297"],"/home/pooja/MazarsRepo/src/pages/Admin/Chatting/Chatting.js",["2298","2299","2300","2301","2302","2303","2304"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\n\n\n\nconst Schema = yup.object().shape({\n  message_type: yup.string().required(\"\"),\n  p_message: yup.string().required(\"\"),\n  p_to: yup.string().required(\"\"),\n});\n\n\n\nfunction Chatting(props) {\n\n \n\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const { query_id, query_No, routes } = data\n  const token = window.localStorage.getItem(\"adminToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n\n\n\n  useEffect(() => {\n\n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataAdmin\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataAdmin\");\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, [item]);\n\n\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.message_type);\n    formData.append(\"message\", value.p_message);\n    formData.append(\"to\", value.p_to);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/messageSent`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          setLoading(false)\n          var variable = \"Message sent successfully. \"\n          Alerts.SuccessNormal(variable)\n          props.history.push(routes);\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n       <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/admin/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button className = \"autoWidthBtn ml-2\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={query_No}\n                          disabled\n                        />\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message Type</label>\n                        {\n                          item &&\n                          <select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.message_type,\n                            })}\n                            name=\"message_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            defaultValue={item}\n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n                        }\n                        {errors.message_type && (\n                          <div className=\"invalid-feedback\">\n                            {errors.message_type.message}\n                          </div>\n                        )}\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>To<span className=\"declined\">*</span></label>\n                        <select\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_to,\n                          })}\n                          name=\"p_to\"\n                          ref={register}\n                          style={{ height: \"33px\" }}\n                        >\n                          <option value=\"\">--select--</option>\n                          <option value=\"customer\">Client</option>\n                          <option value=\"tl\">Team Leader</option>\n                          <option value=\"both\">Both</option>\n                        </select>\n                        {errors.p_to && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_to.message}\n                          </div>\n                        )}\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message<span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          placeholder=\"Message text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_message\"\n                        ></textarea>\n                        {errors.p_message && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_message.message}\n                          </div>\n                        )}\n                      </div>\n                      <button type=\"submit\" className=\"customBtn\">\n                        Send\n                      </button>\n                    </div>\n                  </div>\n\n                </form>\n                <Mandatory />\n              </>\n          }\n        </CardBody>\n\n      </Card>\n    </Layout >\n  );\n}\n\nexport default Chatting;\n","/home/pooja/MazarsRepo/src/pages/Admin/customer/Customer.js",["2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315","2316"],"/home/pooja/MazarsRepo/src/pages/Admin/Report/ReportList.js",["2317","2318","2319","2320"],"/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/NewPassword.js",["2321","2322","2323","2324"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport LoadingTime from \"../../../components/LoadingTime/LoadingTime\";\n\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    LoadingTime.timer2(setTime, setDisabled)\n  }, []);\n\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_code);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/admin/login\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Please enter correct details\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <>\n      <Header admin=\"admin\" />\n      <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address.\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    ref={register({ required: true })}\n                    autocomplete=\"off\"\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  {disabled === false ? \n                  <small class=\"text-center\">\n                  Note: OTP is valid for {time} seconds.\n                </small> : \"\"}\n                </div>\n              </div>\n            </div>\n\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"customBtn\" >\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id} setDisabled={setDisabled}\n              setTime={setTime}  loading = {loading} getTime={LoadingTime.timer2} setLoading={setLoading} />\n              :\n              null\n          }\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default NewPassword;\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/admin/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"customBtn\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}\n\n\n\n","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Invoice.js",["2325","2326","2327","2328","2329","2330","2331"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Generated from \"./Generated\";\nconst InvoiceTab = () => {\n    const userid = window.localStorage.getItem(\"adminkey\")\n    const [tabIndex, setTabIndex] = useState(0);\n    const [bgColor, setbgColor] = useState(\"#42566a\")\n    \n    const tableIndex = (index) => {\n        setTabIndex(index)\n        console.log(index)\n        if(index === 0){\n          setbgColor(\"#42566a\")\n        }\n        else if(index === 1){\n          setbgColor(\"#5f7b97\")\n        }\n        else if(index === 2){\n          setbgColor(\"#5f7b97\")\n        }\n        else if(index === 3){\n          setbgColor(\"#5f7b97\")\n        }\n      }\n      const myStyle1 = {\n        margin: \"10px auto\",\n        fontSize : \"14px\"\n      };\n      const myStyle2 = {\n     margin: \"10px auto\",\n     \n     color : \"#42566a\",\n     fontWeight : 1000\n      };\n    \n     \nreturn(\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n                    <TabList\n                      className=\"fixedTab\"\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n                           View Invoice\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n                          Create Invoice\n                        </Tab>\n                        \n                    </TabList>\n\n                    <TabPanel>\n                    <Generated />\n                    </TabPanel>\n                    <TabPanel>\n                    <CreateInvoice />\n                      \n                    </TabPanel>\n                    \n                </Tabs>\n                </Layout>\n)\n}\nexport default InvoiceTab;","/home/pooja/MazarsRepo/src/pages/TL/Start/Start.js",["2332"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\n\n\nfunction Start() {\n  return (\n    <>\n       <Header mtl=\"mtl\"/>\n      <div class=\"content_register\">\n        <Link to=\"/teamleader/login\"><h1 style={{color: \"#2b345f\"}}>Teamleader Login</h1></Link>\n      </div>\n     \n    </>\n  );\n}\n\nexport default Start;\n","/home/pooja/MazarsRepo/src/pages/Admin/Report/Consalation.js",["2333","2334","2335","2336","2337"],"import React, {useState, useEffect} from 'react';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { baseUrl } from '../../../config/config';\nimport axios from 'axios';\nimport ConsaltSearch from './ConsaltSearch';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n  } from \"reactstrap\";\n  import { Link , useHistory} from 'react-router-dom';\n  import BootstrapTable from 'react-bootstrap-table-next';\n  import { Typography, Button } from '@material-ui/core';\n  import DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\n\nconst Consalation = () => {\n    const userid = window.localStorage.getItem(\"adminkey\")\n    const [data, setData] = useState();\nlet history  = useHistory()\n  const proc = {\n      color : \"green\"\n  }\n  const unproc = {\n    color : \"red\"\n}\n    const getData = () => {\n        axios.get(`${baseUrl}/report/paymentReport`)\n        .then((res) => {\n          \n            if(res.data.code === 1) {\n                setData(res.data.result);\n            }\n        })\n    }\n    useEffect(() =>{\n        getData()\n    }, [])\n    const columns = [\n        \n            {\n            dataFeild : \"\",\n            text : \"S.No\",\n            formatter : (cellContent, row, rowIndex) =>{\n              return rowIndex + 1\n            },\n            headerStyle: () => {\n                return { width: \"50px\" };\n              },\n        },\n        {\n          text: \"Query No\",\n          dataField: \"assign_no\",\n        \n          formatter: function nameFormatter(cell, row) {\n            return (\n              <>\n                <Link\n                  to={{\n                    pathname: `/admin/queries/${row.id}`,\n                  \n                    routes: \"consalation\",\n                  }}\n                >\n                  {row.assign_no}\n                </Link>\n              </>\n            );\n          },\n        },\n        {\n            dataField: \"first_name\",\n            text: \"Client Name\",\n            sort: true,\n           \n          },\n          {\n            dataField: \"customer_id\",\n            text: \"Client Id\",\n            sort: true,\n           \n          },\n          {\n            dataField : \"mobile\",\n            text : \"Mobile Number\",\n            sort : true,\n           \n        },\n          {\n           dataField : \"Invoice_Number\",\n           text : \"Invoice No\",\n           sort : true,\n          \n          },\n         \n          {\n              dataField : \"txn_date\",\n              text : \"Payment Date\",\n              sort : true,\n             \n              formatter : function formatterD (cell ,row) {\n                  let a = row.txn_date.split(\"-\").reverse().join(\"-\")\n                return(\n                  <p>{a}</p>\n                )\n              }\n          },\n          {\n            dataField : \"payment_type\",\n            text : \"Payment Type\",\n            sort : true,\n           \n        },\n        \n        // {\n        //    dataField : \"bill_due_date\",\n        //     text : \"Due Date\",\n        //     sort : true,\n        //     style : {\n        //         fontSize : \"11px\"\n        //     },\n        //     headerStyle : () => {\n        //         return { fontSize : \"11px\"}\n        //     }\n        // },\n     \n        {\n            dataField : \"TL_Post_Id\",\n            text : \"Tl Post\",\n            sort : true,\n            \n        },\n        {\n            dataField : \"Invoice_Amount\",\n            text : \"Invoice Amount\",\n            sort : true,\n           \n        },\n        {\n            dataField : \"Tds_Deducted\",\n            text : \"TDS Deducted\",\n            sort : true,\n            \n        },\n        {\n            dataField: \"Amt_Collected\",\n            text: \"Amount Paid\",\n            sort: true,\n           \n          },\n        {\n            dataField : \"delay\",\n            text : \"Delay Days\",\n            sort : true,\n           \n        },\n        {\n            dataField : \"\",\n            text : \"Status\",\n            sort : true,\n            \n            formatter : function formatterD (cell ,row) {\n              let a ;\n              if(row.status === \"1\"){\n                  a = \"Matched\"\n              }\n              else if(row.status === \"2\"){\n                a = \"Unmatched\"\n            }\n              return(\n                <p className= {row.status === \"1\" ? \"completed\" : \"declined\"}>{a}</p>\n              )\n            }\n        },\n        {\n            dataField : \"receipt_url\",\n            text : \"Receipt\",\n            sort : true,\n          \n            formatter : function formatterName (cell , row) {\n               return(\n                <a target=\"_blank\"\n                href= {row.receipt_url}\n              >\n               Payment Receipt\n              </a>\n               )\n            }\n        },\n    ]\n    return(\n  \n        <>\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n <Card>\n     <CardHeader>\n       <>\n       <div className=\"row\">\n           <div className=\"col-md-6\">\n           <Typography variant=\"h4\">Report Consolidate</Typography>\n         \n             </div>\n             <div className=\"col-md-6\" style={{display : \"flex\", justifyContent : \"flex-end\"}}>\n             <button  className=\"autoWidthBtn\" onClick = {() => history.goBack()}>Go Back </button>\n               </div>\n           </div>\n<ConsaltSearch  setData = {setData} />\n</>\n     </CardHeader>\n     <CardBody>\n \n    \n     {data === undefined ? \"\" : \n       <DataTablepopulated \n       bgColor=\"#42566a\"\n       keyField= {\"assign_no\"}\n       data={data}\n       columns={columns}>\n        </DataTablepopulated>}\n    \n     </CardBody>\n </Card>\n        </Layout>\n      \n        </>\n    )\n}\nexport default Consalation;","/home/pooja/MazarsRepo/src/pages/TL/Login/Login.js",["2338","2339","2340","2341","2342"],"/home/pooja/MazarsRepo/src/pages/TL/Dashboard/Dashboard.js",["2343","2344","2345"],"/home/pooja/MazarsRepo/src/pages/Admin/Report/Report.js",["2346","2347","2348","2349","2350","2351","2352","2353","2354","2355","2356","2357","2358","2359","2360","2361","2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372","2373","2374","2375","2376","2377","2378","2379"],"/home/pooja/MazarsRepo/src/pages/TL/AddNew/AddNew.js",["2380","2381","2382"],"import React from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import './index.css'\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\"; \nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const onSubmit = (value) => {\n    \n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AddTaxProfessional`,\n      data: formData,\n    })\n      .then(function (response) {\n           \n        if (response.data.code === 1) {\n          alert.success(\"TP created  !\");\n          reset();\n        }\n      })\n      .catch((error) => {\n      \n      });\n\n  };\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Add New Tax Professionals</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n          <form onSubmit={handleSubmit(onSubmit)}>   \n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      ref={register}\n                    />\n                   \n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                    ref={register}\n                    />\n                    \n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      ref={register}\n                    />\n                    \n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n","/home/pooja/MazarsRepo/src/pages/TL/AddTeamProf/AddTeamProf.js",["2383","2384","2385","2386","2387"],"/home/pooja/MazarsRepo/src/pages/TL/Proposal/ProposalTab.js",["2388","2389","2390","2391","2392","2393"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllProposal from \"./AllProposal\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport AcceptedProposal from \"./AcceptedProposal\";\nimport DeclinedProposal from \"./DeclinedProposal\";\n\n\n\n\nfunction ProposalTab(props) {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n\n\n    const [allProposal, setAllProposal] = useState(\"\");\n    const [inprogressProposal, setInprogressProposal] = useState(\"\");\n    const [acceptedProposal, setAcceptedProposal] = useState(\"\");\n    const [declinedProposal, setDeclinedProposal] = useState(\"\");\n    const [bgColor, setbgColor] = useState(\"#42566a\")\n\n\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n\n    const tableIndex = (index) => {\n        setTabIndex(index)\n        console.log(index)\n        if(index === 0){\n          setbgColor(\"#42566a\")\n        }\n        else if(index === 1){\n          setbgColor(\"#5f7b97\")\n        }\n        else if(index === 2){\n          setbgColor(\"#5f7b97\")\n        }\n        else if(index === 3){\n          setbgColor(\"#5f7b97\")\n        }\n      }\n      const myStyle1 = {\n        margin: \"10px auto\",\n        fontSize : \"14px\"\n      };\n      const myStyle2 = {\n     margin: \"10px auto\",\n     \n     color : \"#42566a\",\n     fontWeight : 1000\n      };\n    \n\n    useLayoutEffect(() => {\n        setTabIndex(props.location.index || 0);\n    }, [props.location.index]);\n\n\n\n    useEffect(() => {\n\n        const AllProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`, myConfig)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAllProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const InprogressProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`, myConfig)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setInprogressProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const AcceptedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`, myConfig)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAcceptedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const DeclinedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`, myConfig)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setDeclinedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        AllProposal();\n        InprogressProposal();\n        AcceptedProposal();\n        DeclinedProposal();\n    }, []);\n\n\n\n    return (\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n           <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n          <TabList\nclassName=\"fixedTab\">\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n                            All Proposals ({allProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n                            Inprogress; Proposals ({inprogressProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n                            Accepted; Proposals ({acceptedProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 3 ? myStyle2 : myStyle1} className=\"tabHover\">\n                            Client Declined; Proposals ({declinedProposal})\n                        </Tab>\n                    </TabList>\n\n                    <TabPanel>\n                        <AllProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <InprogressProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <AcceptedProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <DeclinedProposal />\n                    </TabPanel>\n                </Tabs>\n          \n        </Layout>\n    );\n}\n\nexport default ProposalTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js",["2394","2395","2396","2397","2398","2399","2400","2401","2402","2403","2404","2405","2406","2407","2408","2409","2410","2411","2412"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport { result } from \"lodash\";\n\nfunction AddAssingmentStages() {\n\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [assignmentStages, setAssignmentstages] = useState([]);\n  const [clientDiscussion, setClientDiscussion] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}&uid=${JSON.parse(userid)}`, myConfig)\n      .then((res) => {\n       \n\n        if (res.data.code === 1) {\n            setAssignmentstages(res.data.result);\n          reset(res.data.result[0]);\n          setClientDiscussion(res.data.result[0].client_discussion)\n        }\n      });\n  };\n\n  const onSubmit = (value) => {\n  \n   \n    if(assignmentStages[0].paid_status=='0' && value.other_stage=='completed')\n    {    \n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Query no- \"+assignmentStages[0].assign_no+\" payment is outstanding , Do you still want to proceed to complete this query?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.value === true) {\n        setLoading(true)\n        let formData = new FormData();\n    \n        formData.append(\"q_id\", id);\n        formData.append(\"user_id\", JSON.parse(userid));\n        formData.append(\"stage_1_status\", value.client_discussion);\n        formData.append(\"stage_2_status\", value.draft_report);\n        formData.append(\"stage_3_status\", value.final_discussion);\n        formData.append(\"stage_4_status\", value.delivery_report);\n        formData.append(\"stage_5_status\", value.other_stage);\n    \n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tl/postAssignmentStages`,\n          headers : {\n            uit : token\n          },\n          data: formData,\n        })\n          .then(function (response) {\n           \n            if (response.data.code === 1) {\n              setLoading(false)\n              Alerts.SuccessNormal(\"Assignment status updated successfully.\")\n              getAssignmentList();\n              history.push(\"/teamleader/assignment\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n            \n          });\n      }\n      else{\n\n        history.push(\"/teamleader/assignment\");\n       return false;\n      }\n    });\n\treturn false;\n    }\n    else{\n      setLoading(true)\n      let formData = new FormData();\n \n      formData.append(\"q_id\", id);\n      formData.append(\"user_id\", JSON.parse(userid));\n      formData.append(\"stage_1_status\", value.client_discussion);\n      \n       formData.append(\"stage_2_status\", value.draft_report);\n   \n      formData.append(\"stage_3_status\", value.final_discussion);\n    \n     formData.append(\"stage_4_status\", value.delivery_report);\n      \n      formData.append(\"stage_5_status\", value.other_stage);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/postAssignmentStages`,\n        headers : {\n          uit : token\n        },\n        data: formData,\n      })\n        .then(function (response) {\n        \n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\n            getAssignmentList();\n            history.push(\"/teamleader/assignment\");\n          } else if (response.data.code === 0) {\n            setLoading(false)\n          }\n        })\n        .catch((error) => {\n       \n        });\n    }\n  \n  };\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"autoWidthBtn ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Assignment Stages</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            {assignmentStages.map((p, i) => (\n              <>\n                {p.client_discussion == \"completed\" &&\n                  p.delivery_report == \"completed\" &&\n                  p.draft_report == \"completed\" &&\n                  p.final_discussion == \"completed\" &&\n                  p.other_stage == \"completed\" ? (\n                  <div class=\"col-md-12\">\n                    <div class=\"col-md-8\">\n                      <br />\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                 \n                                }}\n                              >\n                                Client Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.client_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                 \n                                }}\n                              >\n                                Draft Report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.draft_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                 \n                                }}\n                              >\n                                Final Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.final_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                 \n                                }}\n                              >\n                                Delivery of final report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.delivery_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                 \n                                }}\n                              >\n                                Awaiting Completion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.other_stage}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <br />\n                        <div class=\"form-group\">\n                          <button\n                            type=\"submit\"\n                            class=\"customBtn\"\n                            disabled\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                ) : (\n                  <div class=\"col-md-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                               \n                              }}\n                            >\n                              Client Discussion\n                            </label>\n                          </div>\n                        </div>\n                       {p.client_discussion === \"completed\" ? \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"client_discussion\"\n                            disabled\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                            \n                          </select>\n                        </div>\n                      </div> : \n                       <div class=\"col-md-4\">\n                       <div class=\"form-group\">\n                         <select\n                           class=\"form-control\"\n                           ref={register}\n                           name=\"client_discussion\"\n                         >\n                           <option value=\"inprogress\">Inprogress</option>\n                           <option value=\"completed\">Completed</option>\n                           \n                         </select>\n                       </div>\n                     </div>}\n\n                       \n\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                               \n                              }}\n                            >\n                              Draft Report\n                            </label>\n                          </div>\n                        </div>\n                        {\n                          p.client_discussion == \"completed\" && p.draft_report === \"inprogress\" ?\n                          <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"draft_report\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              \n                            </select>\n                          </div>\n                        </div> :\n                         <div class=\"col-md-4\">\n                         <div class=\"form-group\">\n                           <select\n                             class=\"form-control\"\n                             ref={register}\n                             disabled\n                             defaultValue = \"inprogress\"\n                             name=\"draft_report\"\n                           >\n                             <option value=\"inprogress\">Inprogress</option>\n                             <option value=\"completed\">Completed</option>\n                             \n                           </select>\n                         </div>\n                       </div>\n                        }\n                       \n                      \n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                               \n                              }}\n                            >\n                              Final Discussion\n                            </label>\n                          </div>\n                        </div>\n                      {p.client_discussion == \"completed\" && p.final_discussion === \"inprogress\" && p.draft_report === \"completed\" ? \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"final_discussion\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                           \n                          </select>\n                        </div>\n                      </div> : \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"final_discussion\"\n                            disabled\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                           \n                          </select>\n                        </div>\n                      </div> }\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                               \n                              }}\n                            >\n                              Delivery of final report\n                            </label>\n                          </div>\n                        </div>\n                        {p.client_discussion == \"completed\" && p.delivery_report === \"inprogress\" &&    p.draft_report === \"completed\" && p.final_discussion === \"completed\" ?\n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"delivery_report\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                            \n                          </select>\n                        </div>\n                      </div> :\n                      <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <select\n                          class=\"form-control\"\n                          ref={register}\n                          name=\"delivery_report\"\n                          disabled\n                        >\n                          <option value=\"inprogress\">Inprogress</option>\n                          <option value=\"completed\">Completed</option>\n                          \n                        </select>\n                      </div>\n                    </div>}\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                               \n                              }}\n                            >\n                              Awaiting Completion\n                            </label>\n                          </div>\n                        </div>\n                        {p.client_discussion == \"completed\"  && p.draft_report === \"completed\" && p.final_discussion === \"completed\" && p.delivery_report === \"completed\" \n                        ? <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"other_stage\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                          </select>\n                        </div>\n                      </div>\n                      : <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <select\n                          class=\"form-control\"\n                          ref={register}\n                          name=\"other_stage\"\n                          disabled\n                        >\n                          <option value=\"inprogress\">Inprogress</option>\n                          <option value=\"completed\">Completed</option>\n                        </select>\n                      </div>\n                    </div>}\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <br />\n                      <div class=\"form-group\">\n                        {\n                          loading ?\n                            <Spinner color=\"primary\" />\n                            :\n                            <button type=\"submit\" class=\"customBtn\">\n                              Submit\n                            </button>\n                        }\n                      </div>\n                    </form>\n                  </div>\n                )}\n              </>\n            ))}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddAssingmentStages;\n","/home/pooja/MazarsRepo/src/pages/TL/QueriesRecevied/QueriesRecevied.js",["2413","2414","2415","2416","2417","2418","2419","2420","2421","2422"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\nimport moment from 'moment';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Spinner\n} from \"reactstrap\";\nfunction QueriesRecevied(props) {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [accept, setAccept] = useState();\n  const [tlName2, setTlname] = useState();\n  const[tp22, setTp22] = useState();\n  const [tpStatus, setTpstatus] = useState();\n  const [declined2, setDeclined2] = useState();\n  const [declinedStatus, setDeclinedStatus] = useState(false)\n  const [finalDate, setFinalDate] = useState()\n  const [overDue, setOverDue] = useState(\"\")\n  const [qstatus, setqStatus] = useState();\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n    proposal_reactive_dates: \"\",\n    proposal_reactive_notes: \"\"\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`, myConfig).then((res) => {\n      \n        if (res.data.code === 1) {\n          setqStatus(res.data.result[0].query_status)\n          setTpstatus(res.data.result[0].tp_status);\n          setAccept(res.data.result[0].query_status)\n          setTlname(res.data.result[0].tlname);\n          setTp22(res.data.result[0].tpname);\n          if(res.data.history_queries[0] === undefined){\n\n          }\n          else{\n            setDisplayHistory({\n              tlname: res.data.proposal_queries,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n           \n          }\n          if(res.data.result[0].status ==\"Declined Query\"){\n          let a = res.data.result[0].declined_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\n            setDeclined2(a)\n           setDeclinedStatus(true)\n          }\n          if (res.data.result) {\n            if (res.data.result[0].name == null) {\n            \n            }\n            else {\n              setSubmitData(res.data.result);\n            }\n          }\n\n          if (res.data.additional_queries) {\n            setDisplaySpecific(res.data.additional_queries);\n          }\n          if (res.data.payment_detail) {\n            setPaymentDetails(res.data.payment_detail);\n          }\n          if (res.data.feedback_detail) {\n            setFeedback(res.data.feedback_detail);\n          }\n          if (res.data.result[0].assign_no) {\n            setAssingmentNo(res.data.result[0].assign_no);\n          }\n\n          if (res.data.reports) {\n            setReports(res.data.reports);\n          }\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n\n          \n          try {\n           \n            var myYear = JSON.parse(assementItem);\n           \n            setYear(myYear);\n          } catch (e) {\n           \n          }\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            \n            setPurpose(myPurpose);\n           \n          } catch (e) {\n           \n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setOverDue(res.data.result[0].overdueamount)\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\n            });\n            let a = moment(res.data.result[0].final_date);\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\n            let c = a.diff(b)\n            let d = moment.duration(c)\n            let finalDate = d.days() + 1;\n           setFinalDate(finalDate)\n          \n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          // if (res.data.history_queries.length > 0) {\n          //   setDisplayHistory({\n          //     tlname: res.data.history_queries[0].tname,\n          //     date_of_allocation:\n          //       res.data.history_queries[0].date_of_allocation,\n          //   });\n          // }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n   if(assingNo === undefined){\n     return false\n   }\n   else{\n    axios\n    .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`, myConfig)\n    .then((res) => {\n\n      if (res.data.code === 1) {\n        setDisplayQuery(res.data.result);\n      }\n    });\n   }\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n          <CardHeader>\n          <Row>\n            <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/teamleader/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"autoWidthBtn ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4>Query Details</h4>\n            </Col>\n            <Col md=\"4\" align = \"center\">\n            \n            </Col>\n          </Row>\n        </CardHeader>\n           \n            {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                getQuery={getQuery}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n                accept = {accept}\n                tpStatus={tpStatus}\n                tlName2={tlName2}\n                tp22 = {tp22}\n                finalDate={finalDate}\n                qstatus={qstatus}\n                overDue = {overDue}\n                panel = \"teamleader\"\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n\n","/home/pooja/MazarsRepo/src/pages/TL/EditTP/EditTP.js",["2423","2424"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction EditTP() {\n  const { id } = useParams();\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const { name, email, phone } = user;\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n\n      axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\n      \n        if (res.data.code === 1) {\n          setUser({\n            name: res.data.result[0].name,\n            email: res.data.result[0].email,\n            phone: res.data.result[0].phone,\n          });\n        }\n      });\n    };\n    getTeamLeader();\n  }, [id]);\n\n\n  const onSubmit = (value) => {\n \n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"id\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/updateTP`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          alert.success(\"TL updated  !\");\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Edit Tax Professional</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      defaultValue={name}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                      defaultValue={email}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      defaultValue={phone}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default EditTP;\n","/home/pooja/MazarsRepo/src/pages/TL/FeedbackTab/FeedbackTab.js",["2425","2426","2427","2428","2429","2430"],"/home/pooja/MazarsRepo/src/pages/TL/QueryAssingment/QueryAssingment.js",["2431","2432","2433","2434","2435","2436","2437","2438","2439"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport CommonServices from \"../../../common/common\"\n\n\nconst Schema = yup.object().shape({\n  p_taxprof: yup.string().required(\"\"),\n  p_expdeldate: yup.string().required(\"\"),\n});\n\n\nfunction QueryAssingment() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [taxProfessionDisplay, setTaxProfessionDisplay] = useState([]);\n  const [taxID, setTaxID] = useState(null);\n  const [teamName, setTeamName] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const [query, setQuery] = useState(true);\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const tpkey = window.localStorage.getItem(\"tpkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n    expect_dd: \"\",\n  });\n\n  const { queryNo, timelines, custId, expect_dd } = queryData;\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n  useEffect(() => {\n    getTaxProfession();\n    getQueryData();\n  }, []);\n\n  const getTaxProfession = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userId)}&&q_id=${id}`, myConfig)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setTaxProfessionDisplay(res.data.result);\n        }\n      });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`, myConfig).then((res) => {\n      \n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n          expect_dd: CommonServices.changeFormateDate(res.data.result[0].Exp_Delivery_Date),\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${queryNo}`, myConfig)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setQuery(false);\n          // setHideQuery(res.data.meta);\n          setHideQuery({\n            name: res.data.meta[0].name,\n            timeline: res.data.meta[0].timeline,\n            date_allocation: res.data.meta[0].date_allocation,\n            expdeliverydate: res.data.meta[0].expdeliverydate,\n          });\n        }\n      });\n  };\n\n  const handleChange = (e) => {\n   \n    setTaxID(e.target.value)\n    var value = taxProfessionDisplay.filter(function (item) {\n      return item.id == e.target.value\n    })\n  \n    setTeamName(value[0].name)\n  }\n\n\n  const onSubmit = (value) => {\n \n    setLoading(true)\n\n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", taxID);\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"tp\");\n    formData.append(\"types\", \"tp\");\n    formData.append(\"name\", teamName);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", expdeliverydate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddQueryAssignment`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Query assigned successfully.\"\n          Alerts.SuccessNormal(variable)\n         \n          getQuery();\n          reset();\n          history.push('/teamleader/queriestab')\n        } if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <Link\n                to={{\n                  pathname: `/teamleader/queriestab`,\n                  index: 3,\n                }}\n              >\n                <button\n                  class=\"autoWidthBtn ml-3\"\n                >\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\n                  Go Back\n                </button>\n              </Link>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h4>Query Allocation</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        {\n          loading ?\n            <Loader />\n            :\n            <>\n              <CardHeader>\n                <div class=\"row mt-3\">\n                  <div class=\"col-xl-12 col-lg-12 col-md-12\">\n                    <div class=\"col-md-12\">\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <table class=\"table\">\n                          <thead>\n                            <tr>\n                              <th scope=\"col\">Query No.</th>\n                              <th scope=\"col\">Tax Professional<span className=\"declined\">*</span></th>\n                              <th scope=\"col\">Expected Timeline</th>\n                              <th scope=\"col\">Exp. Delivery Date<span className=\"declined\">*</span></th>\n                              <th scope=\"col\">Action</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {query ? (\n                              <tr>\n                                <th scope=\"row\">{queryNo}</th>\n                                <td>\n                                  <select\n                                    className={classNames(\"form-control\", {\n                                      \"is-invalid\": errors.p_taxprof,\n                                    })}\n                                    name=\"p_taxprof\"\n                                    ref={register}\n                                    onChange={(e) => handleChange(e)}\n                                  >\n                                    <option value=\"\">--select--</option>\n                                    {taxProfessionDisplay.map((p, index) => (\n                                      <option key={index} value={p.id}>\n                                        { p.post_name + \"-\"   + p.name}\n                                      </option>\n                                    ))}\n                                  </select>\n                                  {errors.p_taxprof && (\n                                    <div className=\"invalid-feedback\">\n                                      {errors.p_taxprof.message}\n                                    </div>\n                                  )}\n                                </td>\n\n                                <td>\n                                  <input\n                                    type=\"text\"\n                                    ref={register}\n                                    name=\"p_timelines\"\n                                    value={timelines}\n                                    class=\"form-control\"\n                                  />\n                                </td>\n                                <td>\n                                  <input\n                                    type=\"text\"\n                                    ref={register}\n                                    name=\"p_expdeldate\"\n                                    className={classNames(\"form-control\", {\n                                      \"is-invalid\": errors.p_expdeldate,\n                                    })}\n                                    value={expect_dd}\n                                    min={item}\n                                  />\n                                  {errors.p_expdeldate && (\n                                    <div className=\"invalid-feedback\">\n                                      {errors.p_expdeldate.message}\n                                    </div>\n                                  )}\n                                </td>\n\n                                <td>\n                                  <button type=\"submit\" class=\"customBtn\">\n                                    Assign\n                                  </button>\n                                </td>\n                              </tr>\n                            ) : (\n                              <tr>\n                                <th scope=\"row\">{queryNo}</th>\n                                <td>\n                                  <select class=\"form-control w-75 p-0\" disabled>\n                                    <option>{hideQuery.name}</option>\n                                  </select>\n                                </td>\n\n                                <td>\n                                  <input\n                                    type=\"text\"\n                                    ref={register}\n                                    name=\"p_timelines\"\n                                    value={hideQuery.timeline}\n                                    disabled\n                                    class=\"form-control\"\n                                  />\n                                </td>\n                                <td>\n                                  <input\n                                    type=\"date\"\n                                    ref={register}\n                                    name=\"p_expdeldate\"\n                                    value={hideQuery.expdeliverydate}\n                                    disabled\n                                    class=\"form-control\"\n                                  />\n                                </td>\n\n                                <td>\n                                  <button disabled  className=\"customBtnDisabled\">\n                                    Assigned\n                                  </button>\n                                </td>\n                              </tr>\n                            )}\n                          </tbody>\n                        </table>\n                      </form>\n                      <Mandatory />\n                    </div>\n                  </div>\n                </div>\n              </CardHeader>\n            </>\n        }\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n\n// var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/PaymentStatus.js",["2440","2441","2442","2443","2444"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport AllPayment from \"./AllPayment\";\nimport Unpaid from \"./Unpaid\";\nimport Paid from \"./Paid\";\n\n\n\nfunction QueriesTab(props) {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n  const [bgColor, setbgColor] = useState(\"#2b5f55\")\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n\n  \n\n\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}`, myConfig)\n      .then((res) => {\n       \n        setAllPayment(res.data.result.length);\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}&status=1`, myConfig)\n      .then((res) => {\n       \n        setPaid(res.data.result.length);\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}&status=2`, myConfig)\n      .then((res) => {\n       \n        setUnpaid(res.data.result.length);\n      });\n  };\n\n\n  \n  const tableIndex = (index) => {\n    setTabIndex(index)\n    console.log(index)\n    if(index === 0){\n      setbgColor(\"#2b5f55\")\n    }\n    else if(index === 1){\n      setbgColor(\"#3e8678\")\n    }\n    else if(index === 2){\n      setbgColor(\"#3e8678\")\n    }\n    else if(index === 3){\n      setbgColor(\"#3e8678\")\n    }\n  }\n    \n  const myStyle1 = {\n    margin: \"10px auto\",\n    fontSize : \"14px\"\n  };\n  const myStyle2 = {\n margin: \"10px auto\",\n\n color : \"#2b5f55\",\n fontWeight : 1000\n  };\n\n\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n\n      <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n        <TabList\n           className=\"fixedTab\"\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Paid ({unpaid})\n            </Tab>\n\n          </TabList>\n\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n        </Tabs>\n      \n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/SendProposal.js",["2445","2446"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {  useParams } from \"react-router-dom\";\nimport ProposalComponent from \"./ProposalComponent\";\n\n\nfunction SendProposal() {\n    const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <ProposalComponent id={id}/>\n      </Layout>\n    </>\n  );\n}\n\nexport default SendProposal;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AssignmentTab.js",["2447","2448","2449","2450","2451"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\n\nimport AllAssignment from \"./AllAssignment\";\nimport DraftReportTab from \"./DraftReportTab\";\nimport DeliveryFinalTab from \"./DeliveryFinalTab\";\n\n\n\nfunction QueriesTab(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n\n  const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\n  const [draft, setDraft] = useState(\"\");\n  const [final, setFinal] = useState();\n  const [bgColor, setbgColor] = useState(\"#615339\")\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const tableIndex = (index) => {\n    setTabIndex(index)\n    console.log(index)\n    if(index === 0){\n      setbgColor(\"#615339\")\n    }\n    else if(index === 1){\n      setbgColor(\"#907b56\")\n    }\n    else if(index === 2){\n      setbgColor(\"#907b56\")\n    }\n    else if(index === 3){\n      setbgColor(\"#907b56\")\n    }\n  }\n    \n  const myStyle1 = {\n    margin: \"10px auto\"\n  };\n  const myStyle2 = {\n    margin: \"10px auto\",\n \n    color : \"#5a625a\",\n    fontWeight : 1000\n     };\n  \n  \n\n\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n\n  useEffect(() => {\n\n    const AllAssignment = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`, myConfig)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setAllAssignmentCount(res.data.result.length);\n          }\n        });\n    };\n\n    const getDraftReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`, myConfig)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setDraft(res.data.result.length);\n          }\n        });\n    };\n\n    const getFinalReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1` , myConfig)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setFinal(res.data.result.length);\n          }\n        });\n    };\n\n    AllAssignment();\n    getDraftReports();\n    getFinalReports();\n  }, []);\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n         <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n      <TabList\n          className=\"fixedTab\"\n          >\n             \n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n              All Assignments ({allAssignmentCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Inprogress; Draft Reports ({draft})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Inprogress; Delivery of Final Report({final})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <DraftReportTab />\n          </TabPanel>\n\n          <TabPanel>\n            <DeliveryFinalTab />\n          </TabPanel>\n        </Tabs>\n     \n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/QueriesTab.js",["2452","2453","2454","2455","2456","2457","2458"],"/home/pooja/MazarsRepo/src/pages/TL/EditProposal/EditProposal.js",["2459","2460","2461","2462","2463","2464","2465","2466","2467","2468","2469","2470","2471","2472","2473","2474","2475","2476","2477","2478","2479","2480","2481","2482","2483","2484","2485","2486","2487","2488"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Payment from \"./Payment\";\nimport Select from \"react-select\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from 'reactstrap';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Markup } from 'interweave';\nimport {Link} from \"react-router-dom\";\n\nfunction EditComponent(props) {\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset, errors } = useForm();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [custId, setCustId] = useState(\"\");\n  const [store, setStore] = useState(null);\n  const [amount, setAmount] = useState();\n  const [date, setDate] = useState();\n  const [load, setLoad] = useState(true);\n  const [companyName, setCompanyName] = useState([])\n  const[clearValue, setClearValue] = useState(true)\n  const [payment, setPayment] = useState([]);\n  const [installment, setInstallment] = useState([]);\n  const [value2, setValue2] = useState('');\n  const [diserror, setdiserror] = useState(\"\")\n  const history = useHistory();\n  const { id } = useParams();\nconst [scopeError, setScopeError] = useState(false)\n  const [dateError, setDateError] = useState(false)\n  const [company2, setCompany2] = useState(\"\")\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n  const [proposal, setProposal] = useState({\n    query: \"\",\n    name: \"\",\n    fixed_amount: \"\",\n    payable: \"\",\n    description: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n    payment : \"\"\n  });\nconst wrong = {\n  background: \"blue\",\n  border: \"3px solid red\"\n}\nconst token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n  const { query, name, description, fixed_amount,\n    due_date, installment_amount } = proposal;\n const getCompany = () => {\n    axios.get(\n      `${baseUrl}/tl/getcompany`, myConfig\n    )\n    .then((res) => {\n      console.log(\"response\", res)\n      setCompanyName(res.data.result)\n    })\n  }\n  useEffect(() => {\n    getCompany()\n    getQuery();\n  }, []);\n\n\n  const getQuery = () => {\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`, myConfig).then((res) => {\n\n      if (res.data.code === 1) {\n        setCompany2(res.data.result.company)\n        setProposal({\n          name: res.data.result.name,\n          query: res.data.result.assign_no,\n          fixed_amount: res.data.result.amount,\n          description: res.data.result.description,\n          installment_amount: res.data.result.installment_amount,\n          due_date: res.data.result.due_date,\n          payment : res.data.result.installment_amount\n        });\nsetValue2(res.data.result.description)\n        var payment_terms = res.data.result.payment_terms\n        var no_of_installment = res.data.result.no_of_installment\n\n        const data1 = {\n          label: payment_terms,\n          value: payment_terms,\n        }\n\n        const data2 = {\n          label: no_of_installment,\n          value: no_of_installment,\n        }\n\n        setPayment(data1);\n        setInstallment(data2);\n      }\n    });\n  };\n\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`, myConfig);\n      setCustId(res.data.id);\n    };\n    getUser();\n  }, [id]);\n\n\n\n\n  const onSubmit = (value) => {\n \nif(diserror.length > 0){\n  return false\n}\nelse if(dateError === true){\n  Alerts.ErrorNormal(\"Date must be unique\")\n }\nelse if(value2.length == 0){\n  setScopeError(true)\n}\nelse{\n  var lumsum = value.p_inst_date\n    if (payment.label == \"lumpsum\") {\n      setDate(lumsum)\n    }\nconsole.log(\"value2\", value2.length)\n    let formData = new FormData();\n    formData.append(\"assign_no\", query);\n    formData.append(\"name\", name);\n    formData.append(\"type\", \"tl\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"assign_id\", id);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"description\", value2);\n    formData.append(\"amount_type\", \"fixed\");\n    formData.append(\"amount\", value.p_fixed);\n    formData.append(\"installment_amount\", amount);\n    formData.append(\"company\", value.p_company)\n    formData.append(\"payment_terms\", payment.value);\n    formData.append(\"no_of_installment\", installment.value);\n\n    payment.label == \"lumpsum\" ?\n      formData.append(\"due_date\", lumsum) :\n      payment.label == \"installment\" ?\n        formData.append(\"due_date\", date) :\n        formData.append(\"due_date\", \"\")\n\n\n    if (payment.length < 1) {\n     \n    } else\n      if (payment.value == \"installment\") {\n        if (installment == \"\") {\n          Alerts.ErrorNormal(`Please select no of installment .`)\n        } else\n          if (!amount || !date) {\n            Alerts.ErrorNormal(`Please enter all fields.`)\n          } else if (amount && date) {\n\n            if (installment.value > 0) {\n              var a = Number(installment.value)\n             \n              for (let i = 0; i < a; i++) {\n\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\n                  Alerts.ErrorNormal(`Please enter amount`)\n                  return false\n                }\n                if (date[i] == \"\" || date[i] == undefined) {\n                  Alerts.ErrorNormal(`Please enter date`)\n                  return false\n                }\n              }\n              var sum = amount.reduce(myFunction)\n              function myFunction(total, value) {\n                return Number(total) + Number(value);\n              }\n              if (value.p_fixed != sum) {\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n\n              } else {\n               \n                setLoading(true)\n                axios({\n                  method: \"POST\",\n                  url: `${baseUrl}/tl/updateProposal`,\n                  headers: {\n                    uit : token\n                  },\n                  data: formData,\n                })\n                  .then(function (response) {\n\n                    if (response.data.code === 1) {\n                      setLoading(false)\n                      var variable = \"Proposal updated successfully\"\n                      Alerts.SuccessNormal(variable)\n                      history.push(\"/teamleader/proposal\");\n                    } else if (response.data.code === 0) {\n                      setLoading(false)\n                    }\n                  })\n                  .catch((error) => {\n                  \n                  });\n              }\n            }\n          }\n      } else if (payment.label == \"lumpsum\") {\n\n        setLoading(true)\n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tl/updateProposal`,\n          headers: {\n            uit : token\n          },\n          data: formData,\n        })\n          .then(function (response) {\n         \n            if (response.data.code === 1) {\n              setLoading(false)\n              var variable = \"Proposal Updated Successfully \"\n              Alerts.SuccessNormal(variable)\n              history.push(\"/teamleader/proposal\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n          \n          });\n      }\n}\n    \n  };\n\n\n  const handleChange = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setdiserror(\"Please enter number only\");\n    }\n    else if(e.target.value == \"0\"){\n      setdiserror(\"Amount should be greater than zero\")\n    }\n    else {\n      setdiserror(\"\");\n    }\n  };\n\n\n  const paymentAmount = (data) => {\n   \n\n    var array1 = []\n    Object.entries(data).map(([key, value]) => {\n      array1.push(value)\n    });\n    setAmount(array1.slice(0, installment.value));\n  };\n\n  const paymentDate = (data) => {\n   \n\n    var array2 = []\n    Object.entries(data).map(([key, value]) => {\n      array2.push(value)\n    });\n\n    setDate(array2.slice(0, installment.value));\n    if(new Set(array2).size !== array2.length){\n      setDateError(true)\n     Alerts.ErrorNormal(\"Date must be unique\")\n    }\n    else{\n      setDateError(false)\n    }\n  };\n\n  const installmentHandler = (key) => {\n\n    setInstallment(key)\n    setClearValue(false)\n  }\nlet a = <Markup content= {description} />\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n            <Link\n                  to={{\n                    pathname: `/teamleader/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"autoWidthBtn ml-3\">Go Back</button>\n                </Link>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Edit Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div style={{ display: \"flex\" }}>\n              <div class=\"col-md-6\">\n\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={query}\n                    ref={register}\n                    disabled\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <label>Company</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_company\"\n                  value={company2}\n                   onChange= {(e) => setCompany2(e.target.value)}\n                  >\n{\n  companyName.map((i) => (\n    <option value={i.company_prefix}>{i.name}</option>\n  ))\n}\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fee</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_type\"\n                    onChange={(e) => setStore(e.target.value)}\n                  >\n                    <option value=\"fixed\">Fixed Price</option>\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"p_fixed\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fixed || diserror,\n                    })}\n                    ref={register({ required: true })}\n                    placeholder=\"Enter Fixed Price\"\n                    defaultValue={fixed_amount}\n                    onChange={handleChange}\n                  />\n                </div>\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\n\n                <div class=\"form-group\">\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\n                  <CKEditor\n                     editor={ ClassicEditor }\n                     height = \"400px\"\n                     config = {{\n\n                    \n                      fontFamily: {\n                        options: [\n                            'default',\n                            'Ubuntu, Arial, sans-serif',\n                            'Ubuntu Mono, Courier New, Courier, monospace'\n                        ]\n                    },\n                    fontColor: {\n                      colors: [\n                          {\n                              color: 'hsl(0, 0%, 0%)',\n                              label: 'Black'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 30%)',\n                              label: 'Dim grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 60%)',\n                              label: 'Grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 90%)',\n                              label: 'Light grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 100%)',\n                              label: 'White',\n                              hasBorder: true\n                          },\n\n                          // ...\n                      ]\n                  },\n                    toolbar: [\n                   ' highlight', 'heading',  'bold', 'fontColor', 'italic',  'bulletedList', 'numberedList', 'undo', 'redo'\n                    ],\n                  \n                    }}\n                    \n                    ref={register}\n          \n                  \n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    data={description}\n                    onChange={ ( event, editor ) => {\n                      setValue2(editor.getData())\n                      // setcustError(\"\")\n                    \n                  } }\n                    //ref={register({ required: true })}\n                >\n                  \n                  </CKEditor>\n                  {/* <textarea\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    defaultValue={description}\n                    ref={register({ required: true })}\n                  ></textarea> */}\n                </div>\n              </div>\n\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Client Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={name}\n                    ref={register}\n                    disabled\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\n                  <Select\n                    closeMenuOnSelect={true}\n                    onChange={setPayment}\n                    value={payment}\n                    options={paymentsTerms}\n                  />\n                </div>\n\n                {payment.label == \"lumpsum\" ? (\n                  <div class=\"form-group\">\n                    <label>Due Dates</label>\n                    <input\n                      type=\"date\"\n                      name=\"p_inst_date\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_inst_date,\n                      })}\n                      ref={register({ required: true })}\n                      placeholder=\"Enter Hourly basis\"\n                      defaultValue={due_date}\n                    />\n                  </div>\n                ) :\n                  payment.label == \"installment\" ? (\n                    <div class=\"form-group\">\n                      <label>No of Installments</label>\n                      <Select\n                        closeMenuOnSelect={true}\n                        onChange={(e => installmentHandler(e))}\n                        value={installment}\n                        options={noInstallments}\n                      />\n                    </div>\n                  )\n                    : \"\"\n                }\n                {\n                  payment.label == \"lumpsum\"\n                    ?\n                    \"\"\n                    :\n                    installment_amount && due_date &&\n                    <Payment\n                      installment={installment.label}\n                      paymentAmount={paymentAmount}\n                      paymentDate={paymentDate}\n                      installment_amount={installment_amount}\n                      due_date={due_date}\n                      getQuery={getQuery}\n                      item={item}\n                      clearValue={clearValue}\n                    />\n                }\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-6\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" class=\"customBtn\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n\n          <Mandatory />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditComponent;\n\nconst paymentsTerms = [\n  {\n    value: \"lumpsum\",\n    label: \"lumpsum\",\n  },\n  {\n    value: \"installment\",\n    label: \"installment\",\n  },\n];\n\nconst noInstallments = [\n  {\n    value: \"2\",\n    label: \"2\",\n  },\n  {\n    value: \"3\",\n    label: \"3\",\n  },\n  {\n    value: \"4\",\n    label: \"4\",\n  },\n];\n\n","/home/pooja/MazarsRepo/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js",["2489","2490","2491","2492","2493","2494","2495","2496","2497","2498","2499","2500","2501","2502","2503","2504","2505","2506","2507","2508","2509","2510","2511"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Select from \"react-select\";\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport EmailValidation from \"../../../components/Common/EmailValidation\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  // p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n\n});\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [nn, setNn] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [mcategory, setmcategory] = useState([]);\n  const [store, setStore] = useState([]);\n  const [subData, subCategeryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [custCate2, setCustcate2] = useState([])\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [categoryData, setCategoryData] = useState([])\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [display, setDisplay] = useState(false);\n  const [teamleader, setTeamLeader] = useState([]);\n  const [tl, setTl] = useState([])\n  const [post1, setPost1] = useState([])\n  const [post_na, setPost_na] = useState()\n  const [tpEmail, setTpEmail] = useState('')\n  const [loading, setLoading] = useState(false);\n  const [emailError, setEmailError] = useState(null);\n  const [email2, setEmail2] = useState([]);\n  \n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  var kk = []\n  var vv = []\n  var post_name;\n  const options = tax.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.details\n    }))\n\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n  const teamleader1 = teamleader.map(v => (\n  {\n      \"value\": v.id,\n      \"label\": v.name\n    }))\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      \n        if (res.data.code === 1) {\n          setTeamLeader(res.data.result);\n        }\n      });\n    };\n    getTeamLeader();\n  }, []);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n     \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  // OnSubmit Function\n  const onSubmit = (value) => {\n\n    var categeryList = []\n    var categeryName = []\n    var categeryName = []\n    var kk = []\n\n    var parentCategoryName = []\n    subData.map((i) => {\n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n   \n    if (custCate.length < 1) {\n      setError(\"Please select at least one value\")\n    }\n    else if (subData.length < 1) {\n\n      setError2(\"Please select at least one value\")\n    }\n    else if (invalid || wEmail || indNumError) {\n      setDisplay(false)\n    }\n\n    else {\n\n      setLoading(true)\n    \n      let formData = new FormData();\n      formData.append(\"personal_email\", value.personal_email)\n      formData.append(\"name\", value.p_name);\n      formData.append(\"phone\", value.p_phone);\n      formData.append(\"tp_id\", tl);\n      formData.append(\"email\", email2);\n      formData.append(\"post_name\", value.post_name)\n      formData.append(\"pcat_id\", mcategory);\n      formData.append(\"cat_id\", categeryList);\n      formData.append(\"allpcat_id\", categoryData.label)\n      formData.append(\"allcat_id\", categeryName)\n      formData.append(\"type\", \"tp\");\n      formData.append(\"tlpost\", post_na)\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tp/AddTaxProfessional`,\n        data: formData,\n      })\n        .then(function (response) {\n        \n          if (response.data.code === 1) {\n            setLoading(false)\n    \n           \n\n            Swal.fire({\n              \"title\": \"success\",\n              \"html\": \"Tax Professional created successfully\",\n              \"icon\": \"success\"\n            })\n \n            history.goBack();\n            \n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n        })\n        .catch((error) => {\n       \n        });\n    };\n  }\n\n\n  // Sub Category Function\n  const subCategory = (e) => {\n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n  }\n\n\n  // Category Function\n  const category = (v) => {\n\n    setCategoryData(v)\n    setNn((oldData) => {\n      return [...oldData, mcategory]\n    })\n    setError(\"\")\n    setCustcate(v)\n    setStore(v.value)\n    vv.push(v.value);\n    setmcategory(v.value)\n    setmcatname((oldData) => {\n      return [...oldData, v.label]\n    })\n\n\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n\n      }\n      else if (vv.includes(\"1\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n    }\n\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n\n  }\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n    \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digits can be entered\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n\n    }\n  }\n\n \n  // Tl Function \n  const tlFun = (e) => {\n    var a;\n \n    teamleader.filter((p) => {\n\n      if (p.id == e) {\n      \n        setTpEmail(p.email)\n        setTl(p.id)\n        setPost_na(p.post_name)\n        a = p.post_name\n       \n      }\n    })\n\n    \n  }\n\n  const checktlPost = (e) => {\n    setPostName(e.target.value)\n    let a = e.target.value;\n    let formData = new FormData();\n    formData.append(\"tlpost\", a)\n  \n    axios({\n      method: \"POST\",\n      url : `${baseUrl}/tl/validateTLPost`,\n      data: formData,\n    })\n    .then(function (res) {\n      if(res.data.code === 1){\n        setposError({\n          available : \"Post available\"\n        })\n      }\n      else{\n        setposError({\n          exits : \"Post already exits\"\n        })\n      }\n    })\n    }\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div className=\"col-md-12 d-flex\">\n            <div>\n              <button\n                className=\"autoWidthBtn ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i className=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div className=\"text-center ml-5\">\n              <h4>Add New Tax Professionals</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div className=\"row mt-3\">\n            <div className=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div className=\"col-lg-8 col-xl-8 col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Team Leader post name <span className=\"declined\">*</span></label>\n\n                      <select\n                        name=\"p_teamleader\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_teamleader,\n                        })}\n                        onChange={(e) => tlFun(e.target.value)}\n                        ref={register}\n                      >\n                        <option value=\"\">--select--</option>\n                        {teamleader.map((p) =>\n                        (\n\n                          <option key={p.Id} value={p.id}>\n                            {p.post_name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_teamleader && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_teamleader.message}\n                        </div>\n                      )}\n\n                    </div>\n\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label> Team Leader post email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"email\"\n                        name=\"post_email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_email,\n                        })}\n                        disabled\n                        defaultValue={tpEmail}\n                       \n                        ref={register}\n\n                      />\n\n\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>TP post name <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"post_name\"\n                        onBlur={(e) => checktlPost(e)}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_name,\n                        })}\n                        ref={register}\n                      />\n {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n\n\n                      <label> TP post email <span className=\"declined\">*</span></label>\n                      \n                       <EmailValidation\n                     setWemail = {setWemail}\n                      wEmail = {wEmail} \n                      invalid = {invalid}\n                       setEmailError = {setEmailError}\n                        setValiemail = {setValiemail} \n                        emailError = {emailError} \n                        setInvalid = {setInvalid}  \n                        setEmail2 = {setEmail2}\n                        name = \"taxprofessional\" />\n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      }\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Category <span className=\"declined\">*</span></label>\n                      <Select options={options}\n                        className={error ? \"customError\" : \"\"}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n                        onChange={category}>\n                      </Select>\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Sub Category <span className=\"declined\">*</span></label>\n                      <Select isMulti options={options2}\n                        className={error2 ? \"customError\" : \"\"}\n                        onChange={subCategory}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value > 8\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        value={subData}>\n\n                      </Select>\n\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Phone Number <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone,\n                        })}\n                        name=\"p_phone\"\n                        ref={register}\n                        onChange={(e) => phoneHandler(e)}\n                        onBlur={phoneValidation}\n                      />\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n                    </div>\n                  </div>\n                 \n                  <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Name <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        name=\"p_name\"\n                        ref={register}\n                      />\n\n                    </div>\n                  </div>\n\n\n                </div>\n\n                <div className=\"row\">\n\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n\n\n                      <label> Email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"personal_email\"\n                        ref={register}\n\n\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_email,\n                        })}\n                      />\n\n                    </div>\n                  </div>\n\n\n                                 </div>\n                {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                <button type=\"submit\" className=\"customBtn\">\n                  Submit\n                </button> }\n              </form>\n            </div>\n            <div className=\"col-lg-2 col-xl-2 col-md-12\">\n            </div>\n\n            <Mandatory />\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\nexport default AddNew;","/home/pooja/MazarsRepo/src/pages/TL/PendingReceived/PendingReceived.js",["2512","2513","2514","2515","2516"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl , baseUrl2} from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const alert = useAlert();\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getQueryDetails();\n    getAdditionalQuery();\n  }, [assingNo]);\n\n  const getQueryDetails = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setSubmitData(res.data.result);\n        setDisplaySpecific(res.data.additional_queries);\n        setAssingmentNo(res.data.result[0].assign_no);\n      }\n    });\n  };\n\n  const getAdditionalQuery = () => {\n  if(assingNo === undefined){\n    return false\n  }\n  else{\n    axios\n    .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n    .then((res) => {\n     \n      if (res.data.code === 1) {\n        setDisplayQuery(res.data.result);\n      }\n    });\n  }\n  };\n\n\n\n\n  const acceptHandler = (key) => {\n    \n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          alert.success(\"Query accepted\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n    \n      });\n  };\n\n  const rejectHandler = (key) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          alert.success(\"Query rejected\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n    \n      });\n  };\n\n \n\n     //change date format\n     function ChangeFormateDate(oldDate) {\n      \n      if (oldDate == null) {\n        return null;\n      }\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    }\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"autoWidthBtn\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              {/* <p>{assingNo}</p> */}\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <th scope=\"row\">Accept / Reject</th>\n                    <td>\n                    <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-evenly\",\n                          color: \"#6967ce\",\n                          cursor: \"pointer\",\n                        }}\n                        id=\"div1\"\n                      >\n                        <div\n                          id=\"accept\"\n                          title=\"Accept Assignment\"\n                          onClick={() => acceptHandler(p)}\n                        >\n                          <i class=\"fa fa-check\" style={{ color: \"green\" }}></i>\n                        </div>\n                        <div\n                          id=\"reject\"\n                          title=\"Reject Assignment\"\n                          onClick={() => rejectHandler(p)}\n                        >\n                          <i class=\"fa fa-times\" style={{ color: \"red\" }}></i>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayModal.js",["2517","2518","2519"],"\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { baseUrl } from \"../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nconst PayModal = (props) => {\n    const userid = window.localStorage.getItem(\"userid\")\n    const [payValue, setpayValue] = useState()\n    const [tdsRate, setTdsRate] = useState();\n    const [tdsAmount, setTdsAmount] = useState()\n    const token = window.localStorage.getItem(\"clientToken\")\n \n    useEffect(() => {\n       if(props.modalData !== undefined){\n          \n\n            setTdsRate(parseFloat(props.modalData.tds_rate))\n          \n           \n           setTdsAmount(props.modalData.tds_amount)\n           setpayValue(parseInt(props.modalData.invoice_amount) - parseInt(props.modalData.tds_amount))\n\n   \n    }\n    }, [props.modalData])\n   \n    const payFun = (e) => {\n  \n         \n        let formData = new FormData();\n        formData.append(\"id\", props.modalData.id);\n        formData.append(\"cid\", JSON.parse(userid));\n        formData.append(\"tds_rate\", tdsRate);\n        formData.append(\"tds_amount\", tdsAmount)\n       \n        axios({\n            method :\"POST\", \n            url : `${baseUrl}/customers/payCall`,\n            headers: {\n                uit : token\n            },\n            data : formData\n        })\n        .then((res) => {\n            if(res.data.code === 1){\n             \n                if(res.data.result.length > 1){\n                    window.open(res.data.result, \"_blank\")\n                }\n                else{\n                    Swal.fire({\n                        title : \"error\", \n                        html : \"Something went wrong\",\n                        icon : \"error\"\n                    })\n                }\n            }\n        })\n       \n    window.location.hash=\"customer/paymentstatus\"\n    }\n    const inVal = (e) => {\n       if(e.target.value.length > 5){\n           return false\n       }\n       else{\n        if(e.target.value > 100){\n            setTdsRate(100)\n            let tdAmount = parseInt((parseInt(props.modalData.paid_amount) + parseInt(props.modalData.opt_expenses)))\n                  \n                  \n            let a = parseInt(props.modalData.cgst_amount) + parseInt(props.modalData.sgst_amount) + parseInt(props.modalData.igst_amount)\n            setTdsAmount(Number((100 * tdAmount) / 100).toFixed(0))\n            let b = Number((100 * tdAmount) / 100).toFixed(0)\n            \n            setpayValue(parseInt(props.modalData.invoice_amount) - parseInt(b))\n                   }\n                   else{\n                    setTdsRate(e.target.value)\n                    let tdAmount = parseInt((parseInt(props.modalData.paid_amount) + parseInt(props.modalData.opt_expenses)))\n                  \n                  \n                    let a = parseInt(props.modalData.cgst_amount) + parseInt(props.modalData.sgst_amount) + parseInt(props.modalData.igst_amount)\n            setTdsAmount(Number((e.target.value * tdAmount) / 100).toFixed(0))\n            let b = Number((e.target.value * tdAmount) / 100).toFixed(0)\n            \n            setpayValue(parseInt(props.modalData.invoice_amount) - parseInt(b))\n                   }\n       }\n       \n    }\nreturn(\n    <Modal isOpen={props.showModal} toggle={props.modalToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\n    <ModalHeader toggle={props.modalToggle}> Payment</ModalHeader>\n    <ModalBody style={{display :\"flex\", flexDirection :\"column\", overflow : \"wrap\"}}>\n\n{props.modalData === undefined ? \"\" :\n<table className=\"table\">\n    \n    <tbody className=\"tbody\">\n\n<tr>\n    <td>Invoice Amount</td>\n    <td></td>\n    <td>{parseInt(props.modalData.invoice_amount)}</td>\n</tr>\n<tr>\n    <td>TDS</td>\n    <td style={{display :\"flex\"}}><input type=\"number\"  step=\"0.00001\" style={{display : \"flex\", width: \"50px\"}} value={tdsRate} onChange= {(val) => inVal(val)}/> % </td>\n    <td>{tdsAmount}</td>\n</tr>\n<tr>\n    <td>Payable Amount</td>\n   <td></td>\n   <td>{payValue}</td>\n</tr>\n    </tbody>\n    </table> }\n\n<ModalFooter>\n    <button onClick={() => payFun()} className=\"customBtn\">Pay Now</button>\n</ModalFooter>\n    </ModalBody>\n  </Modal>\n)\n}\nexport default PayModal;","/home/pooja/MazarsRepo/src/views/PaymentStatus/AllPayment.js",["2520","2521","2522","2523","2524","2525","2526"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport Records from \"../../components/Records/Records\";\nimport PaymentComponent from './PaymentComponent';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport './index.css';\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport MessageIcon, { ViewDiscussionIcon, HelpIcon, \n  Payment} from \"../../components/Common/MessageIcon\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\nfunction Paid() {\n  const { id } = useParams();\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [records, setRecords] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const [payment, setPayment] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const [pay, setPay] = useState({\n    pay: \"\",\n    amount: \"\",\n    accepted_amount: \"\",\n    paid_amount: \"\",\n    assign_id: '',\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const paymentHandler = (key) => {\n    setPaymentModal(!addPaymentModal);\n    setPay({\n      amount: key.accepted_amount,\n      assign_id: key.assign_id,\n      accepted_amount: key.accepted_amount,\n      paid_amount: key.paid_amount,\n\n      amount_type: key.amount_type,\n      amount_fixed: key.amount_fixed,\n      amount_hourly: key.amount_hourly,\n\n\n      payment_terms: key.payment_terms,\n      no_of_installment: key.no_of_installment,\n      installment_amount: key.installment_amount,\n      due_date: key.due_date,\n\n    });\n  };\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [openManual, setManual] = useState(false)\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const needHelp = () => {\n      \n      setManual(!openManual)\n  }\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getPaymentStatus();\n  }, []);\n\n  const toggle = (key) => {\n\n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getPaymentDetail?id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n       \n        setPay(response.payment_detail);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const getPaymentStatus = () => {\n    axios.get(`${baseUrl}/customers/getUploadedProposals?cid=${JSON.parse(userId)}`, myConfig).then((res) => {\n      \n      if (res.data.code === 1) {\n        setPayment(res.data.result);\n        setCount(res.data.result.length);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n\n\n  const columns = [\n    {\n        dataField: \"\",\n        text: \"S.No\",\n        formatter: (cellContent, row, rowIndex) => {\n            return rowIndex + 1;\n        },\n      \n        headerStyle : () => {\n          return( {\n              width: \"50px\"\n          })\n      }\n    },\n    {\n        dataField: \"query_created_date\",\n        text: \"Date\",\n        sort: true,\n       \n        formatter: function dateFormat(cell, row) {\n         \n            var oldDate = row.query_created_date;\n            if (oldDate == null) {\n                return null;\n            }\n            return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n        },\n    },\n    {\n        dataField: \"assign_no\",\n        text: \"Query No\",\n       \n        formatter: function nameFormatter(cell, row) {\n         \n            return (\n                <>\n                       <Link\n                            to={{\n                                pathname: `/customer/my-assingment/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                </>\n            );\n        },\n    },\n    {\n        dataField: \"parent_id\",\n        text: \"Category\",\n        sort: true,\n       \n    },\n    {\n        dataField: \"cat_name\",\n        text: \"Sub Category\",\n        sort: true,\n       \n    },\n    {\n        text: \"Date of acceptance of Proposal\",\n        dataField: \"cust_accept_date\",\n        sort: true,\n      \n        formatter: function dateFormat(cell, row) {\n        \n            var oldDate = row.cust_accept_date;\n            if (oldDate == null) {\n                return null;\n            }\n            return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n        },\n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n     \n      formatter : function (cell, row) {\n          return(\n              <>\n              {row.paid_status == \"2\"  ?\n              <p className=\"declined\">{row.status} </p> : \n              <p>{row.status}</p>}\n              </>\n          )\n      }\n  },\n  {\n    dataField: \"accepted_amount\",\n    text: \"Accepted Amount \",\n    sort: true,\n   \n    sortFunc: (a, b, order, dataField) => {\n      if (order === 'asc') {\n        return b - a;\n      }\n      return a - b; // desc\n    },\n   \n    formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n         console.log(nfObject.format(x))\n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n},\n{\n    text: \"Amount Paid\",\n    dataField: \"paid_amount\",\n    sort: true,\n   \n    sortFunc: (a, b, order, dataField) => {\n      if (order === 'asc') {\n        return b - a;\n      }\n      return a - b; // desc\n    },\n   \n    formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.paid_amount;\n         console.log(nfObject.format(x))\n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n},\n\n{\n    text : \"Amount Outstanding\",\n    dataField: \"amount_outstanding\",\n    sort: true,\n  //  headerStyle: () => {\n  //    return({padding: \"5px\"})\n  //  },\n    sortFunc: (a, b, order, dataField) => {\n      if (order === 'asc') {\n        return b - a;\n      }\n      return a - b; // desc\n    },\n    \n    formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.amount_outstanding;\n         \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n},\n    {\n        text: \"Date of Payment\",\n        dataField: \"cust_paid_date\",\n        sort: true,\n       \n        formatter: function dateFormat(cell, row) {\n          \n            var oldDate = row.cust_paid_date;\n            if (oldDate == null) {\n                return null;\n            }\n            return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n        },\n    },\n    // {\n    //     dataField: \"tl_name\",\n    //     text: \"TL name\",\n    //     sort: true,\n       \n    // },\n  {\n      text: \"Action\",\n      dataField: \"\",\n     \n      formatter: function (cell, row) {\n        return (\n          <>\n          {row.paid_status === \"2\" ?\n          <>\n     \n     \n                     <Link\n                            to={{\n                                pathname: `/customer/paydetails/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                                      <Payment />\n                  </Link>\n                \n                  <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-1\">\n                                  <ViewDiscussionIcon />\n                                </span>\n                                </>\n          :\n            <>\n        \n            {\n              row.paid_status == \"0\" ?\n                \n                    <Link\n                            to={{\n                                pathname: `/customer/paydetails/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                                      <Payment />\n                  </Link>   \n                :\n                null\n            }\n\n\n         \n            {\n              row.paid_amount > 0 && row.paid_status > 0 ?\n                  <Link\n                            to={{\n                                pathname: `/customer/paydetails/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                                      <Payment />\n                  </Link>   \n              \n                :\n                null\n            }\n        \n\n\n         \n            <Link className=\"ml-2\"\n            to={{\n              pathname: `/customer/chatting/${row.assign_id}`,\n              index : 0,\n              routes: \"paymentstatus\",\n             \n              \n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.assign_id,\n                  routes: `/customer/paymentstatus`\n                }\n              }}\n            >\n             <MessageIcon />\n            </Link>\n       \n          <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-1\">\n                                  <ViewDiscussionIcon />\n                                </span>\n                              \n          </>\n      }\n          </>\n        );\n      },\n    },\n  ];\n\n  const defaultSorted = [{\n    dataField: 'accepted_amount',\n    order: 'desc'\n  }];\n\n\n  return (\n  \n<>\n        <Card>\n\n          <CardHeader>\n          <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n             <CustomerFilter\n              setData={setPayment}\n              getData={getPaymentStatus}\n              allPayment=\"allPayment\"\n              setRecords={setRecords}\n              records={records}\n              id={userId}\n            />\n          </CardHeader>\n\n\n          <CardBody>\n          \n            <Records records={records} />\n\n<DataTablepopulated \n                   bgColor=\"#2b5f55\"\n                   keyField={\"assign_no\"}\n                   data={payment}\n                   columns={columns}>\n                    </DataTablepopulated>\n            <PaymentComponent\n              paymentHandler={paymentHandler}\n              addPaymentModal={addPaymentModal}\n              pay={pay}\n              getPaymentStatus={getPaymentStatus}\n            />\n\n            <DiscardReport\n              ViewDiscussionToggel={ViewDiscussionToggel}\n              ViewDiscussion={ViewDiscussion}\n              report={assignNo}\n              getData={getPaymentStatus}\n              headColor=\"#2b5f55\"\n            />\n\n\n            \n          </CardBody>\n        </Card>\n        <Modal isOpen={modal} fade={false} toggle={toggle}>\n              <ModalHeader toggle={toggle}>History</ModalHeader>\n              <ModalBody>\n                <table class=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th scope=\"row\">S.No</th>\n                      <th scope=\"row\">Date</th>\n                      <th scope=\"row\">Amount</th>\n                    </tr>\n                  </thead>\n                  {pay.length > 0\n                    ? pay.map((p, i) => (\n                      <tbody>\n                        <tr>\n                          <td>{i + 1}</td>\n                          <td>{CommonServices.removeTime(p.payment_date)}</td>\n                          <td>{p.paid_amount}</td>\n                        </tr>\n                      </tbody>\n                    ))\n                    : null}\n                </table>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={toggle}>\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n            <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"paymentProcess\"} />\n                        </ModalBody>\n                    </Modal>\n    </>\n  );\n}\n\nexport default Paid;\n","/home/pooja/MazarsRepo/src/views/PaymentStatus/Unpaid.js",["2527","2528","2529","2530","2531","2532","2533"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n \n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../common/common\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport PaymentComponent from './PaymentComponent';\nimport './index.css';\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport MessageIcon, { ViewDiscussionIcon, HelpIcon, \n  Payment} from \"../../components/Common/MessageIcon\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\nfunction Paid() {\n  const alert = useAlert();\n  const { id } = useParams();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [records, setRecords] = useState([]);\n\n\n  const [count, setCount] = useState(\"\");\n  const [payment, setPayment] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const [pay, setPay] = useState({\n    pay: \"\",\n    amount: \"\",\n    accepted_amount: \"\",\n    paid_amount: \"\",\n    assign_id: '',\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const paymentHandler = (key) => {\n    setPaymentModal(!addPaymentModal);\n    setPay({\n      amount: key.accepted_amount,\n      assign_id: key.assign_id,\n      accepted_amount: key.accepted_amount,\n      paid_amount: key.paid_amount,\n\n      amount_type: key.amount_type,\n      amount_fixed: key.amount_fixed,\n      amount_hourly: key.amount_hourly,\n\n\n      payment_terms: key.payment_terms,\n      no_of_installment: key.no_of_installment,\n      installment_amount: key.installment_amount,\n      due_date: key.due_date,\n\n    });\n  };\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [openManual, setManual] = useState(false)\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const needHelp = () => {\n      \n      setManual(!openManual)\n  }\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getPaymentStatus();\n  }, []);\n\n\n  const getPaymentStatus = () => {\n    axios.get(`${baseUrl}/customers/getUploadedProposals?cid=${JSON.parse(userId)}&status=1`, myConfig).then((res) => {\n   \n      if (res.data.code === 1) {\n        setPayment(res.data.result);\n        setCount(res.data.result.length);\n        setRecords(res.data.result.length);\n\n      }\n    });\n  };\n\n  const toggle = (key) => {\n  \n    setModal(!modal);\n\n    fetch(`${baseUrl}/admin/getPaymentDetail?id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n    \n        setPay(response.payment_detail);\n      })\n      .catch((error) => console.log(error));\n  };\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n          return rowIndex + 1;\n      },\n      headerStyle : () => {\n        return( {\n            width: \"50px\"\n        })\n    }\n  },\n  {\n    dataField: \"query_created_date\",\n    text: \"Date\",\n    sort: true,\n   \n    formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.query_created_date;\n        if (oldDate == null) {\n            return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n    },\n},\n{\n    dataField: \"assign_no\",\n    text: \"Query No\",\n   \n    formatter: function nameFormatter(cell, row) {\n     \n        return (\n            <>\n                   <Link\n                        to={{\n                            pathname: `/customer/my-assingment/${row.assign_id}`,\n                            index : 1,\n                            routes: \"paymentstatus\",\n                        }}\n                    >\n                        {row.assign_no}\n                    </Link>\n            </>\n        );\n    },\n},\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      \n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      \n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n        \n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n      \n      formatter : function (cell, row) {\n          return(\n              <>\n              {row.paid_status == \"2\"  ?\n              <p className=\"declined\">{row.status} </p> : \n              <p>{row.status}</p>}\n              </>\n          )\n      }\n  },\n  {\n    dataField: \"accepted_amount\",\n    text: \"Accepted Amount \",\n    sort: true,\n   \n    sortFunc: (a, b, order, dataField) => {\n      if (order === 'asc') {\n        return b - a;\n      }\n      return a - b; // desc\n    },\n   \n    formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n        \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n},\n{\n    text: \"Amount Paid\",\n    dataField: \"paid_amount\",\n    sort: true,\n    \n    sortFunc: (a, b, order, dataField) => {\n      if (order === 'asc') {\n        return b - a;\n      }\n      return a - b; // desc\n    },\n   \n    formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.paid_amount;\n       \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n},\n\n{\n    text : \"Amount Outstanding\",\n    dataField: \"amount_outstanding\",\n    sort: true,\n   \n    sortFunc: (a, b, order, dataField) => {\n      if (order === 'asc') {\n        return b - a;\n      }\n      return a - b; // desc\n    },\n    \n    formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.amount_outstanding;\n     \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n},\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n     \n     \n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n  //   {\n  //     text: \"Action\",\n  //     dataField: \"\",\n      \n  //     formatter: function (cell, row) {\n  //       return (\n  //         <>\n  //         {row.paid_status === \"2\" ?\n  //         <>\n  //      <div style={{display : \"flex\"}}>\n     \n  //                    <Link\n  //                           to={{\n  //                               pathname: `/customer/paydetails/${row.assign_id}`,\n  //                               index : 1,\n  //                               routes: \"paymentstatus\",\n  //                           }}\n  //                       >\n  //                                     <Payment />\n  //                 </Link>\n                \n  //                 <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n  //                                 <ViewDiscussionIcon />\n  //                               </span>\n                              \n       \n  //        </div>   </>\n  //         :  <div style={{display : \"flex\"}}>\n        \n  //           {\n  //             row.paid_status == \"0\" ?\n                \n  //                   <Link\n  //                           to={{\n  //                               pathname: `/customer/paydetails/${row.assign_id}`,\n  //                               index : 1,\n  //                               routes: \"paymentstatus\",\n  //                           }}\n  //                       >\n  //                                     <Payment />\n  //                 </Link>   \n  //               :\n  //               null\n  //           }\n\n\n         \n  //           {\n  //             row.paid_amount > 0 && row.paid_status > 0 ?\n  //                 <Link\n  //                           to={{\n  //                               pathname: `/customer/paydetails/${row.assign_id}`,\n  //                               index : 1,\n  //                               routes: \"paymentstatus\",\n  //                           }}\n  //                       >\n  //                                     <Payment />\n  //                 </Link>   \n              \n  //               :\n  //               null\n  //           }\n        \n\n\n         \n  //           <Link className=\"ml-2\"\n  //           to={{\n  //             pathname: `/customer/chatting/${row.assign_id}`,\n  //             index : 1,\n  //             routes: \"paymentstatus\",\n             \n              \n  //               obj: {\n  //                 message_type: \"5\",\n  //                 query_No: row.assign_no,\n  //                 query_id: row.assign_id,\n  //                 routes: `/customer/paymentstatus`\n  //               }\n  //             }}\n  //           >\n  //            <MessageIcon />\n  //           </Link>\n       \n  //         <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n  //                                 <ViewDiscussionIcon />\n  //                               </span>\n                              \n  //         </div>\n  //     }\n  //         </>\n  //       );\n  //     },\n  //   },\n  // ];\n  {\n    text: \"Action\",\n    dataField: \"\",\n   \n    formatter: function (cell, row) {\n      return (\n        <>\n        {row.paid_status === \"2\" ?\n        <>\n   \n   \n   <Link\n                          to={{\n                              pathname: `/customer/paydetails/${row.assign_id}`,\n                              index : 1,\n                              routes: \"paymentstatus\",\n                          }}\n                      >\n                                    <Payment />\n                </Link>\n              \n              \n                <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-1\">\n                                <ViewDiscussionIcon />\n                              </span>\n                              </>\n        :\n          <>\n      \n          {\n            row.paid_status == \"0\" ?\n              \n                \n            <Link\n                                     to={{\n                                         pathname: `/customer/paydetails/${row.assign_id}`,\n                                         index : 1,\n                                         routes: \"paymentstatus\",\n                                     }}\n                                 >\n                                               <Payment />\n                           </Link>\n              :\n              null\n          }\n\n\n       \n          {\n            row.paid_amount > 0 && row.paid_status > 0 ?\n                 \n            <Link\n                                       to={{\n                                           pathname: `/customer/paydetails/${row.assign_id}`,\n                                           index : 1,\n                                           routes: \"paymentstatus\",\n                                       }}\n                                   >\n                                                 <Payment />\n                             </Link>\n\n            \n              :\n              null\n          }\n      \n\n\n       \n         \n      <Link className=\"ml-2\"\n            to={{\n              pathname: `/customer/chatting/${row.assign_id}`,\n              index : 1,\n              routes: \"paymentstatus\",\n             \n              \n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.assign_id,\n                  routes: `/customer/paymentstatus`\n                }\n              }}\n            >\n             <MessageIcon />\n            </Link>\n     \n        <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-1\">\n                                <ViewDiscussionIcon />\n                              </span>\n                            \n        </>\n    }\n        </>\n      );\n    },\n  },\n];\n\n\n\n\n  return (\n    <>\n      <>\n        <Card>\n\n          <CardHeader>\n          <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n              <CustomerFilter\n              setData={setPayment}\n              getData={getPaymentStatus}\n              paid=\"paid\"\n              setRecords={setRecords}\n              records={records}\n              id={userId}\n            />\n          </CardHeader>\n\n          <CardBody>\n          \n            <Records records={records} />\n            <DataTablepopulated \n                   bgColor=\"#3e8678\"\n                   keyField={\"assign_no\"}\n                   data={payment}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n            <Modal isOpen={modal} fade={false} toggle={toggle}>\n              <ModalHeader toggle={toggle}>History</ModalHeader>\n              <ModalBody>\n                <table class=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th scope=\"row\">S.No</th>\n                      <th scope=\"row\">Date</th>\n                      <th scope=\"row\">Amount</th>\n                    </tr>\n                  </thead>\n                  {pay.length > 0\n                    ? pay.map((p, i) => (\n                      <tbody>\n                        <tr>\n                          <td>{i + 1}</td>\n                          <td>{CommonServices.removeTime(p.payment_date)}</td>\n                          <td>{p.paid_amount}</td>\n                        </tr>\n                      </tbody>\n                    ))\n                    : null}\n                </table>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={toggle}>\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n\n\n            <PaymentComponent\n              paymentHandler={paymentHandler}\n              addPaymentModal={addPaymentModal}\n              pay={pay}\n              getPaymentStatus={getPaymentStatus}\n            />\n\n            <DiscardReport\n              ViewDiscussionToggel={ViewDiscussionToggel}\n              ViewDiscussion={ViewDiscussion}\n              report={assignNo}\n              getData={getPaymentStatus}\n              headColor=\"#3e8678\"\n            />\n   <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"paymentProcess\"} />\n                        </ModalBody>\n                    </Modal>\n          </CardBody>\n        </Card>\n      </>\n    </>\n  );\n}\n\nexport default Paid;\n","/home/pooja/MazarsRepo/src/views/PaymentStatus/Paid.js",["2534","2535","2536","2537"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n  \n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CommonServices from \"../../common/common\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport PaymentComponent from './PaymentComponent';\nimport './index.css';\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport MessageIcon, { ViewDiscussionIcon, HelpIcon, \n    Payment} from \"../../components/Common/MessageIcon\";\n    import DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\nfunction Unpaid() {\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n\n    const [pay, setPay] = useState({\n        pay: \"\",\n        amount: \"\",\n        accepted_amount: \"\",\n        paid_amount: \"\",\n        assign_id: '',\n\n        amount_type: \"\",\n        amount_fixed: \"\",\n        amount_hourly: \"\",\n\n        payment_terms: \"\",\n        no_of_installment: \"\",\n        installment_amount: \"\",\n        due_date: \"\",\n    });\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const paymentHandler = (key) => {\n        setPaymentModal(!addPaymentModal);\n        setPay({\n            amount: key.accepted_amount,\n            assign_id: key.assign_id,\n            accepted_amount: key.accepted_amount,\n            paid_amount: key.paid_amount,\n\n            amount_type: key.amount_type,\n            amount_fixed: key.amount_fixed,\n            amount_hourly: key.amount_hourly,\n\n\n            payment_terms: key.payment_terms,\n            no_of_installment: key.no_of_installment,\n            installment_amount: key.installment_amount,\n            due_date: key.due_date,\n\n        });\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [openManual, setManual] = useState(false)\n    const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const needHelp = () => {\n        \n        setManual(!openManual)\n    }\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/customers/getUploadedProposals?cid=${JSON.parse(userId)}&status=2`, myConfig).then((res) => {\n\n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n    const toggle = (key) => {\n    \n        setModal(!modal);\n\n        fetch(`${baseUrl}/admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n             \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n    };\n\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle : () => {\n                return( {\n                    width: \"50px\"\n                })\n            }\n        },\n        {\n          dataField: \"query_created_date\",\n          text: \"Date\",\n          sort: true,\n          \n          formatter: function dateFormat(cell, row) {\n           \n              var oldDate = row.query_created_date;\n              if (oldDate == null) {\n                  return null;\n              }\n              return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n          },\n      },\n      {\n          dataField: \"assign_no\",\n          text: \"Query No\",\n          \n          formatter: function nameFormatter(cell, row) {\n           \n              return (\n                  <>\n                         <Link\n                              to={{\n                                  pathname: `/customer/my-assingment/${row.assign_id}`,\n                                  index : 2,\n                                  routes: \"paymentstatus\",\n                              }}\n                          >\n                              {row.assign_no}\n                          </Link>\n                  </>\n              );\n          },\n      },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            \n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            \n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n          text: \"Status\",\n          dataField: \"\",\n          style: {\n              fontSize: \"11px\",\n          },\n          headerStyle: () => {\n              return { fontSize: \"11px\" };\n          },\n          formatter : function (cell, row) {\n              return(\n                  <>\n                  {row.paid_status == \"2\"  ?\n                  <p className=\"declined\">{row.status} </p> : \n                  <p>{row.status}</p>}\n                  </>\n              )\n          }\n      },\n      {\n        dataField: \"accepted_amount\",\n        text: \"Accepted Amount \",\n        sort: true,\n        \n        sortFunc: (a, b, order, dataField) => {\n          if (order === 'asc') {\n            return b - a;\n          }\n          return a - b; // desc\n        },\n       \n        formatter: function nameFormatter(cell, row){\n            var nfObject = new Intl.NumberFormat('hi-IN')\n             var x = row.accepted_amount;\n             console.log(nfObject.format(x))\n             return(\n               <p className=\"rightAli\">{nfObject.format(x)}</p>\n             )\n           }\n    },\n    {\n        text: \"Amount Paid\",\n        dataField: \"paid_amount\",\n        sort: true,\n       \n        sortFunc: (a, b, order, dataField) => {\n          if (order === 'asc') {\n            return b - a;\n          }\n          return a - b; // desc\n        },\n      \n        formatter: function nameFormatter(cell, row){\n            var nfObject = new Intl.NumberFormat('hi-IN')\n             var x = row.paid_amount;\n            \n             return(\n               <p className=\"rightAli\">{nfObject.format(x)}</p>\n             )\n           }\n    },\n\n    {\n        text : \"Amount Outstanding\",\n        dataField: \"amount_outstanding\",\n        sort: true,\n       \n        sortFunc: (a, b, order, dataField) => {\n          if (order === 'asc') {\n            return b - a;\n          }\n          return a - b; // desc\n        },\n      \n        formatter: function nameFormatter(cell, row){\n            var nfObject = new Intl.NumberFormat('hi-IN')\n             var x = row.amount_outstanding;\n         \n             return(\n               <p className=\"rightAli\">{nfObject.format(x)}</p>\n             )\n           }\n    },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        // {\n        //     text: \"Action\",\n        //     dataField: \"\",\n            \n        //     formatter: function (cell, row) {\n        //       return (\n        //         <>\n        //         {row.paid_status === \"2\" ?\n        //         <>\n        //      <div style={{display : \"flex\"}}>\n           \n        //                    <Link\n        //                           to={{\n        //                               pathname: `/customer/paydetails/${row.assign_id}`,\n        //                               index : 2,\n        //                               routes: \"paymentstatus\",\n        //                           }}\n        //                       >\n        //                                     <Payment />\n        //                 </Link>\n                      \n        //                 <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n        //                                 <ViewDiscussionIcon />\n        //                               </span>\n                                    \n             \n        //        </div>   </>\n        //         :  <div style={{display : \"flex\"}}>\n              \n        //           {\n        //             row.paid_status == \"0\" ?\n                      \n        //                   <Link\n        //                           to={{\n        //                               pathname: `/customer/paydetails/${row.assign_id}`,\n        //                               index : 2,\n        //                               routes: \"paymentstatus\",\n        //                           }}\n        //                       >\n        //                                     <Payment />\n        //                 </Link>   \n        //               :\n        //               null\n        //           }\n      \n      \n               \n        //           {\n        //             row.paid_amount > 0 && row.paid_status > 0 ?\n        //                 <Link\n        //                           to={{\n        //                               pathname: `/customer/paydetails/${row.assign_id}`,\n        //                               index : 2,\n        //                               routes: \"paymentstatus\",\n        //                           }}\n        //                       >\n        //                                     <Payment />\n        //                 </Link>   \n                    \n        //               :\n        //               null\n        //           }\n              \n      \n      \n               \n        //           <Link className=\"ml-2\"\n        //           to={{\n        //             pathname: `/customer/chatting/${row.assign_id}`,\n        //             index : 2,\n        //             routes: \"paymentstatus\",\n                   \n                    \n        //               obj: {\n        //                 message_type: \"5\",\n        //                 query_No: row.assign_no,\n        //                 query_id: row.assign_id,\n        //                 routes: `/customer/paymentstatus`\n        //               }\n        //             }}\n        //           >\n        //            <MessageIcon />\n        //           </Link>\n             \n        //         <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n        //                                 <ViewDiscussionIcon />\n        //                               </span>\n                                    \n        //         </div>\n        //     }\n        //         </>\n        //       );\n        //     },\n        //   },\n        // ];\n      \n        {\n            text: \"Action\",\n            dataField: \"\",\n           \n            formatter: function (cell, row) {\n              return (\n                <>\n                {row.paid_status === \"2\" ?\n                <>\n           \n           \n           <Link\n                                   to={{\n                                       pathname: `/customer/paydetails/${row.assign_id}`,\n                                       index : 2,\n                                       routes: \"paymentstatus\",\n                                   }}\n                               >\n                                             <Payment />\n                         </Link>\n                      \n                      \n                        <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-1\">\n                                        <ViewDiscussionIcon />\n                                      </span>\n                                      </>\n                :\n                  <>\n              \n                  {\n                    row.paid_status == \"0\" ?\n                      \n                        \n           <Link\n           to={{\n               pathname: `/customer/paydetails/${row.assign_id}`,\n               index : 2,\n               routes: \"paymentstatus\",\n           }}\n       >\n                     <Payment />\n </Link>\n\n                      :\n                      null\n                  }\n      \n      \n               \n                  {\n                    row.paid_amount > 0 && row.paid_status > 0 ?\n                         \n           <Link\n           to={{\n               pathname: `/customer/paydetails/${row.assign_id}`,\n               index : 2,\n               routes: \"paymentstatus\",\n           }}\n       >\n                     <Payment />\n </Link>\n \n                    \n                      :\n                      null\n                  }\n              \n      \n      \n               \n                 \n                  <Link className=\"ml-2\"\n                  to={{\n                    pathname: `/customer/chatting/${row.assign_id}`,\n                    index : 2,\n                    routes: \"paymentstatus\",\n                   \n                    \n                      obj: {\n                        message_type: \"5\",\n                        query_No: row.assign_no,\n                        query_id: row.assign_id,\n                        routes: `/customer/paymentstatus`\n                      }\n                    }}\n                  >\n                   <MessageIcon />\n                  </Link>\n             \n                <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-1\">\n                                        <ViewDiscussionIcon />\n                                      </span>\n                                    \n                </>\n            }\n                </>\n              );\n            },\n          },\n        ];\n\n    return (\n        <>\n            <>\n                <Card>\n                    <CardHeader>\n                    <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n                         <CustomerFilter\n                            setData={setPayment}\n                            getData={getPaymentStatus}\n                            unpaid=\"unpaid\"\n                            setRecords={setRecords}\n                            records={records}\n                            id={userId}\n                        />\n                    </CardHeader>\n                    <CardBody>\n               \n                    <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"paymentProcess\"} />\n                        </ModalBody>\n                    </Modal>\n                        <Records records={records} />\n                        <DataTablepopulated \n                   bgColor=\"#3e8678\"\n                   keyField={\"assign_no\"}\n                   data={payment}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n                        <PaymentComponent\n                            paymentHandler={paymentHandler}\n                            addPaymentModal={addPaymentModal}\n                            pay={pay}\n                            getPaymentStatus={getPaymentStatus}\n                        />\n\n                        <DiscardReport\n                            ViewDiscussionToggel={ViewDiscussionToggel}\n                            ViewDiscussion={ViewDiscussion}\n                            report={assignNo}\n                            getData={getPaymentStatus}\n                            headColor=\"#3e8678\"\n                        />\n\n                        <Modal isOpen={modal} fade={false} toggle={toggle}>\n                            <ModalHeader toggle={toggle}>History</ModalHeader>\n                            <ModalBody>\n                                <table class=\"table table-bordered\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"row\">S.No</th>\n                                            <th scope=\"row\">Date</th>\n                                            <th scope=\"row\">Amount</th>\n                                        </tr>\n                                    </thead>\n                                    {pay.length > 0\n                                        ? pay.map((p, i) => (\n                                            <tbody>\n                                                <tr>\n                                                    <td>{i + 1}</td>\n                                                    <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                    <td>{p.paid_amount}</td>\n                                                </tr>\n                                            </tbody>\n                                        ))\n                                        : null}\n                                </table>\n                            </ModalBody>\n                            <ModalFooter>\n                                <Button color=\"secondary\" onClick={toggle}>\n                                    Cancel\n                                </Button>\n                            </ModalFooter>\n                        </Modal>\n\n\n                    </CardBody>\n                </Card>\n            </>\n        </>\n    );\n}\n\nexport default Unpaid;\n","/home/pooja/MazarsRepo/src/views/Message/PaymentModal.js",["2538","2539","2540","2541"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  data,\n  // getProposalData,\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n\n  const onSubmit = (value) => {\n\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", id);\n    formData.append(\"message_type\",\"information\");\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          reset();\n          alert.success(\" message successfully send!\");\n          paymentHandler()\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/components/Layout/Layout.js",["2542","2543","2544"],"import React , {useState} from 'react';\nimport Sidebar from \"../Admin-Sidebar/Admin-Sidebar\";\nimport Header from \"../Admin-Header/Admin-Header\";\nimport Footer from \"../Admin-Footer/Admin-Footer\";\nimport $ from 'jquery';\nimport IdleTimeOutHandler from \"../IdleTimeOutHandler\";\n\nfunction Layout(props) {\n  const[isActive,setIsActive]=useState(true)\n  const[isLogout,setLogout]=useState(false)\n  const {\n    custDashboard, adminDashboard, TLDashboard,\n    TPDashboard,\n    custUserId, adminUserId, TLuserId, TPuserId, feedbackNumber } = props\n    var $sortable = $('.sortable');\n\n$sortable.on('click', function(){\n  \n  var $this = $(this);\n  var asc = $this.hasClass('asc');\n  var desc = $this.hasClass('desc');\n  $sortable.removeClass('asc').removeClass('desc');\n  if (desc || (!asc && !desc)) {\n    $this.addClass('asc');\n  } else {\n    $this.addClass('desc');\n  }\n  \n});\n  return (\n   \n    <>\n  \n  <IdleTimeOutHandler \n    onActive={()=>{setIsActive(true)}} \n    onIdle={()=>{setIsActive(false)}}\n    onLogout={()=>{setLogout(true)}}\n    custDashboard = {custDashboard}\n    adminUserId = {adminDashboard}\n    TLuserId = {TLDashboard}\n    TPuserId = {TPDashboard}\n    />\n\n   \n      <Header\n        custUserId={custUserId}\n        adminUserId={adminUserId}\n        TLuserId={TLuserId}\n        TPuserId={TPuserId}\n        feedbackNumber = {feedbackNumber}\n      />\n\n<div style={{display : \"flex\", flexDirection : \"row\"}}>\n<Sidebar\n        custDashboard={custDashboard}\n        adminDashboard={adminDashboard}\n        TLDashboard={TLDashboard}\n        TPDashboard={TPDashboard}\n        feedbackNumber = {feedbackNumber}\n      />\n\n      <div className=\"app-content content\" style={{display : 'flex', width : \"100%\"}}>\n        \n          <div className=\"content-body\" style={{display : 'flex', width : \"100%\", flexDirection : \"column\"}}>\n            {props.children}\n        \n        </div>\n      </div>\n\n</div>\n  \n     \n      \n    </>\n  );\n}\n\nexport default Layout;\n","/home/pooja/MazarsRepo/src/config/config.js",[],"/home/pooja/MazarsRepo/src/common/common.js",["2545","2546"],"//change date format\n\nconst changeFormateDate = (oldDate) => {\n  if (oldDate == null) {\n    return null;\n  }\n  return oldDate.toString().split(\"-\").reverse().join(\"-\");\n};\n\n\n\n\n//remove time with date\nconst removeTime = (oldDate) => {\n  if (oldDate == null) {\n    return null;\n  }\n  return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n};\n\n\n\n\n//removeDATE with TIME\nconst removeDate = (oldDate) => {\n  if (oldDate == null) {\n    return null;\n  } else {\n    var split = oldDate.split(\" \");\n    var a = split[0];\n    var b = split[1];\n    return b;\n  }\n};\n\n\n//capitalizeFirstLetter\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction clientLogout (history)  {\n  \n  localStorage.removeItem(\"userid\");\n  localStorage.removeItem(\"custEmail\");\n  localStorage.removeItem(\"category\");\n  localStorage.removeItem(\"clientToken\")\n  history.push(\"/\");\n  alert(\"unauthorized access\")\n}\nexport default {\n  changeFormateDate,\n  removeTime,\n  removeDate,\n  capitalizeFirstLetter,\n  clientLogout\n};\n\n// var updatedate = oldDate.split(\" \")[0];\n// var updatedate = oldDate.slice(0, 10);\n","/home/pooja/MazarsRepo/src/common/Alerts.js",["2547"],"import Swal from \"sweetalert2\";\n\n// SuccessLogin\nconst SuccessLogin = () => {\n    return (\n        Swal.fire(\n            'Success',\n            'Login successfully',\n            'success'\n        )\n    )\n}\n\n\n// ErrorLogin\nconst ErrorLogin = () => {\n    return (\n        Swal.fire(\n            \"Oops...\",\n            \"Error : Incorrect Email OR Password\",\n            \"error\"\n        )\n    )\n}\n\n\n// ErrorLogin\nconst ErrorOTP = (variable) => {\n    return (\n        Swal.fire(\n            \"Oops...\",\n            ` ${variable} </br> `,\n            \"error\"\n        )\n    )\n}\n\n\n// Success\nconst SuccessMsg = (variable, key) => {\n    return (\n        Swal.fire(\n            'Success',\n            ` ${variable ? variable : \"\"} </br> </br>\n             ${key.faill ? key.faill : \"\"} </br></br> \n              ${key.success ? key.success : \"\"}`,\n            'success'\n        )\n    )\n}\n\n\n// Success\nconst SuccessReport = (message) => {\n    if (message.invalid) {\n        Swal.fire(\n            \"Error\",\n            `${message.invalid}`,\n            \"error\"\n        )\n    } else if (message.faill && message.success) {\n        Swal.fire(\n            'Success',\n            ` ${message.faill} <br/><br/> \n            ${message.success}`,\n            'success'\n        )\n    } else if (message.success) {\n        Swal.fire(\n            'Success',\n            ` ${message.success}`,\n            'success'\n        )\n    }\n    else if (message.faill) {\n        Swal.fire(\n            'Error',\n            ` ${message.faill} <br/>`,\n            'error'\n        )\n    }\n}\n\n\n\n\n// ErrorLogin\nconst ErrorDelete = () => {\n    return (\n        Swal.fire(\n            \"Error\",\n            \"Permission denied.\",\n            \"error\"\n        )\n    )\n}\n\n// ErrorLogin\nconst ErrorEdit = () => {\n    return (\n        Swal.fire(\n            \"Error\",\n            \"Permission denied.\",\n            \"error\"\n        )\n    )\n}\n\n\n// SuccessNormal\nconst SuccessNormal = (variable) => {\n    return (\n        Swal.fire(\n            'Success',\n            ` ${variable} </br> `,\n            'success'\n        )\n    )\n}\n\n\n// ErrorNormal\nconst ErrorNormal = (variable) => {\n    return (\n        Swal.fire(\n            'Error',\n            ` ${variable} </br> `,\n            'error'\n        )\n    )\n}\n\n\n\nexport default {\n    SuccessLogin,\n    ErrorLogin,\n    SuccessMsg,\n    SuccessNormal,\n    SuccessReport,\n    ErrorDelete,\n    ErrorEdit,\n    ErrorNormal,\n    ErrorOTP,\n};\n\n\n\n\n// Swal.fire(`oops : ${response.data.result}`)","/home/pooja/MazarsRepo/src/pages/TL/EditProposal/Payment.js",["2548","2549","2550","2551"],"import React from \"react\";\n\n\nexport default class YourComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n            isLoading: true\n        };\n    }\n\n\n    amount = this.props.installment_amount\n    installment_amount = this.amount.split(',');\n    temp = this.installment_amount\n    tamp2;\n    handleChange1(i, e) {\n        const { value } = e.target\n        this.temp[i] = value\n\n    \n        this.setState({\n            values: {\n              ...this.temp.slice(0, this.props.installment)\n            }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n    }\n\n\n    due_date = this.props.due_date;\n     installment_due_dates = this.due_date.split(',')\n    installmentDueDate = this.installment_due_dates;\n\n    handleChange2(i, e) {\n        const { value } = e.target\n        this.installmentDueDate[i] = value\n\n        this.setState({\n            dates: {\n              ...this.installmentDueDate.slice(0, this.props.installment)\n            }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n    componentDidMount() {\n        this.setState({ isLoading: false });\n        \n        var amount = this.props.installment_amount\n        var date = this.props.due_date\n\n        const installment_amount = amount.split(',');\n        const due_date = date.split(',');\n\n\n        this.props.paymentAmount(installment_amount);\n       this.props.paymentDate(due_date)\n    }\n\n\n\n    render() {\n\n        var amount = this.props.installment_amount\n        var date = this.props.due_date\n\n        const installment_amount = amount.split(',');\n        const due_date = date.split(',');\n\n        var fieldsArray = [];\n\n\n        for (var i = 0; i < this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    {this.props.clearValue == true ? \n                   <div class=\"col-md-6 my-2\">\n                       \n                   <input\n                       type=\"text\"\n                       className=\"form-control\"\n                       name={this.state.values[i]}\n                       onChange={this.handleChange1.bind(this, i)}\n                      defaultValue={installment_amount[i]}\n                   />\n               </div> :   \"\"\n}\n{this.props.clearValue == false ? \n    <div class=\"col-md-6 my-2\">\n                       \n                       <input\n                           type=\"text\"\n                           className=\"form-control\"\n                           name={this.state.values[i]}\n                           onChange={this.handleChange1.bind(this, i)}\n                           defaultValue=\"\"\n                       />\n                   </div> : \"\"}\n          {this.props.clearValue == true ? \n           <div class=\"col-md-6 my-2\">\n                       \n           <input\n               type=\"date\"\n               className=\"form-control\"\n               required\n               name={this.state.dates[i]}\n               onChange={this.handleChange2.bind(this, i)}\n               defaultValue={due_date[i]}\n               min={this.props.item}\n           />\n       </div> : \"\"}  \n       {this.props.clearValue == false ? \n           <div class=\"col-md-6 my-2\">\n                       \n           <input\n               type=\"date\"\n               className=\"form-control\"\n               required\n               name={this.state.dates[i]}\n               onChange={this.handleChange2.bind(this, i)}\n               defaultValue= \"\"\n               min={this.props.item}\n           />\n       </div> : \"\"}         \n                   \n                </div>\n            );\n        }\n\n        if (this.state.isLoading) {\n            return <div>Loading...</div>\n        }\n        return (\n            <>\n           \n            <div className=\"inputs\">\n                {this.props.installment > 0 ?\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\n              <td>Payment</td>\n              <td>Due Dates</td>\n          </tr> : \"\"}\n          {fieldsArray}\n      </div>\n      </>\n        );\n    }\n}\n\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/AllQuery.js",["2552","2553","2554","2555","2556","2557","2558","2559","2560","2561","2562","2563"],"import React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DataTablepopulated from '../../../components/DataTablepopulated/DataTabel';\nimport MessageIcon, { ViewDiscussionIcon } from \"../../../components/Common/MessageIcon\";\n\nfunction AllQuery() {\n\n    const userid = window.localStorage.getItem(\"tlkey\");\n\n    const [incompleteData, setInCompleteData] = useState([]);\n    const [records, setRecords] = useState([]);\n\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getInCompleteAssingment();\n    }, []);\n\n    const getInCompleteAssingment = () => {\n        axios\n            .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`, myConfig)\n            .then((res) => {\n\n                if (res.data.code === 1) {\n                    setInCompleteData(res.data.result);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            \n            headerStyle: () => {\n                return { width: \"50px\" };\n            },\n        },\n        {\n            text: \"Query Date\",\n            dataField: \"created\",\n            sort: true,\n            \n            formatter : function(cell, row){\n                let dueDate=row.created.split(\"-\").reverse().join(\"-\")\n              \n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n                        {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index: 0,\n                                routes: \"queriestab\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n          \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Client Name\",\n            dataField: \"name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Delivery Due Date   / Acutal Delivery Date\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.Exp_Delivery_Date;\n                console.log(\"ol\", oldDate)\n                if (oldDate == \"0000-00-00\") {\n                    return null;\n                }\n               else{\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n               }\n            },\n        },\n        {\n            text: \"Status\",\n          \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress Query\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Declined Query\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Completed Query\" ?\n                                            <p className=\"completed\">\n\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            \n            formatter: function (cell, row) {\n              \n                return (\n                    <>\n                      {row.status_code == \"1\" ? null :\n                      \n                      <div\n                      style={{\n                          display: \"flex\",\n                          \n                      }}\n                  >\n                     \n\n                      {row.status == \"Declined Query\" ? null :\n                   \n                      <Link\n                             to={{\n                                pathname: `/teamleader/chatting/${row.id}`,\n                                index: 0,\n                                routes: \"queriestab\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/teamleader/queriestab`\n                              }\n                          }}\n                      >\n                          <MessageIcon />\n                      </Link>\n                 }\n\n<span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                                  <ViewDiscussionIcon />\n                                </span>\n                  </div>\n}                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setInCompleteData}\n                        getData={getInCompleteAssingment}\n                        AllQuery=\"AllQuery\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <DataTablepopulated \n          bgColor=\"#55425f\"\n          keyField= {\"assign_no\"}\n          data={incompleteData}\n          \n          columns={columns}>\n           </DataTablepopulated> \n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getInCompleteAssingment}\n                        headColor=\"#55425f\"\n                    />\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllQuery;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportTab.js",["2564","2565","2566","2567","2568","2569","2570","2571","2572","2573","2574","2575","2576","2577","2578","2579","2580","2581","2582","2583","2584","2585","2586"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\n\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport moment from \"moment\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, { ViewDiscussionIcon, DraftReportUploadIcon} from \"../../../components/Common/MessageIcon\";\n\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tlkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [loading, setLoading] = useState(false)\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n   \n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n   \n    const [item] = useState(current_date);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [draftModal, setDraftModal] = useState(false);\n    const [dataItem, setDataItem] = useState({});\n    const [report, setReport] = useState();\n    const [reportModal, setReportModal] = useState(false);\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    var rowStyle2 = {}\n    var clcomp= {\n      color: \"green\"\n    }\n    var clinpro = {\n      color : \"blue\"\n    }\n    let des = false;\n    const uploadDraftReport = (id) => {\n    \n        if(typeof(id) == \"object\"){\n      \n            let des = true;\n            setLoading(false)\n            setDraftModal(!draftModal);\n          }\n          else{\n            setDraftModal(!draftModal);\n            setId(id);\n          }\n    };\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`, myConfig)\n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n            if(selectedData != undefined){\n                axios\n                .get(`${baseUrl}/tl/getCategory?pid=${selectedData}`, myConfig)\n                .then((res) => {\n                    \n                    if (res.data.code === 1) {\n                        setTax2(res.data.result);\n                    }\n                });\n            }\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n        \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n        \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n       \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n  \n// view report \nconst ViewReport = (key) => {\n   \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n// row Style \nrowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n    else if(row.paid_status != \"2\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n        \n            headerStyle: () => {\n                return {  width: \"50px\" };\n            },\n        },\n        {\n            text: \"Query Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.q_id}`,\n                                index : 1,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n           \n        },\n        {\n          dataField: \"status\",\n          text: \"Status\",\n         \n          headerStyle: () => {\n            return { fontSize: \"11px\", width: \"200px\" };\n          },\n    \n          formatter: function (cell, row) {\n            return (\n              <>\n                <div>\n                {row.paid_status == \"2\" &&\n                    <p>\n                      <span className=\"declined\">Payment Declined</span>\n                    </p>\n                  }\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                   <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                    {row.client_discussion}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                    <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                          {row.draft_report}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                    <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                         {row.final_discussion}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                    <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                 {row.delivery_report}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                    <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                {row.other_stage}\n                     </span>\n                  </p>\n                </div>\n              </>\n            );\n          },\n        },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n             formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\",  textAlign : \"center\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n        {\n            text: \"Assignment Stage\",\n           \n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                   {row.paid_status == \"2\" ? null : \n                    <Link to={`/teamleader/addassingment/${row.q_id}`}>\n                    <i class=\"fa fa-tasks\"></i>\n                  </Link> }\n                  </div>\n                </>\n              );\n            },\n          },\n          {\n            text: \"Action\",\n            \n            formatter: function (cell, row) {\n              return (\n                <>\n              <div style={{display: \"flex\"}}>\n              <Link\n                  to={{\n                    pathname: `/teamleader/chatting/${row.q_id}`,\n                    index : 1,\n                    routes: \"assignment\",\n                       obj: {\n                         message_type: \"3\",\n                         query_No: row.assign_no,\n                         query_id: row.q_id,\n                         routes: `/teamleader/assignment`\n                       }\n                     }}\n                   >\n                    <MessageIcon />\n                   </Link>\n                   <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                        \n                                        <ViewDiscussionIcon />\n                                </div>\n               {\n                 row.paid_status == \"2\" ? \n                null : \n                 <>\n                 \n                  {\n                    row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.final_discussion == \"inprogress\" &&  row.paid_status !=2  ?\n                   \n                    <p\n                      style={{ display: \"flex\", flexDirection: \"column\" , cursor: \"pointer\", color: \"green\" }}\n                      onClick={() => uploadDraftReport(row.id)}\n                    >\n                     <DraftReportUploadIcon />\n                      draft\n                    </p>\n                   : null\n                 }\n    \n                \n      \n                \n                \n               </>\n               }\n       \n              </div>\n                \n                         </>\n              );\n            },\n          },\n        ];\n    const onSubmit = (data) => {\n      \n        axios\n            .get(\n                `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n                    userid\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n                }&assignment_status=\"Draft_Report\"&stages_status=1\n               &pcat_id=${selectedData}`, myConfig\n            )\n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"customBtn mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n{\n  tax2.length > 0 ?\n  <>\n                                      {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n  </> : \"\"\n}\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btnSearch mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"customBtn mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n  bgColor =\"#7c887c\"\n                   keyField= {\"assign_no\"}\n                   data={assignment}\n                   rowStyle2 = {rowStyle2}\n                   columns={columns}>\n                    </DataTablepopulated>\n  <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n            headColor =\"#7c887c\"\n          />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentList}\n                        headColor =\"#7c887c\"\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DeliveryFinalTab.js",["2587","2588","2589","2590","2591","2592","2593","2594","2595","2596","2597","2598","2599","2600","2601","2602","2603","2604","2605","2606","2607","2608","2609","2610","2611","2612","2613","2614"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport moment from \"moment\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, { ViewDiscussionIcon, FinalReportUploadIcon} from \"../../../components/Common/MessageIcon\";\n\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tlkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [finalId, setFinalId] = useState(\"\");\n    const [loading, setLoading] = useState(false)\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n    const [hide, setHide] = useState();\n\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n\n    const [item] = useState(current_date);\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [fianlModal, setFianlModal] = useState(false);\n    const [dataItem, setDataItem] = useState({});\n\n    const [report, setReport] = useState();\n    const [reportModal, setReportModal] = useState(false);\n    var rowStyle2 = {}\n    var clcomp= {\n        color: \"green\"\n      }\n      var clinpro = {\n        color : \"blue\"\n      }\n    let des = false;\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`, myConfig)\n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n            if(selectedData != undefined){\n                axios\n                .get(`${baseUrl}/tl/getCategory?pid=${selectedData}`, myConfig)\n                .then((res) => {\n                    \n                    if (res.data.code === 1) {\n                        setTax2(res.data.result);\n                    }\n                });\n            }\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n       \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n       \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n       \n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n       \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n   \n    const uploadFinalReport = (id) => {\n        if(id && id.id === undefined){\n            \n          let des = true;\n          setLoading(false)\n          setFianlModal(!fianlModal);\n        }\n        else{\n          setFianlModal(!fianlModal);\n              setFinalId(id);\n        }\n            \n            };\n// view report \nconst ViewReport = (key) => {\n   \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            \n            headerStyle: () => {\n                return {  width: \"50px\" };\n            },\n        },\n        {\n            text: \"Query Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.q_id}`,\n                                index : 2,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            \n        },\n        {\n          dataField: \"status\",\n          text: \"Status\",\n         \n          headerStyle: () => {\n            return { fontSize: \"11px\", width: \"200px\" };\n          },\n    \n          formatter: function (cell, row) {\n            return (\n              <>\n                <div>\n                {row.paid_status == \"2\" &&\n                    <p>\n                      <span className=\"declined\">Payment Declined</span>\n                    </p>\n                  }\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                   <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                    {row.client_discussion}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                    <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                          {row.draft_report}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                    <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                         {row.final_discussion}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                    <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                 {row.delivery_report}\n                     </span>\n                  </p>\n                  <p>\n                    <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                    <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                {row.other_stage}\n                     </span>\n                  </p>\n                </div>\n              </>\n            );\n          },\n        },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n          \n            formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\",  textAlign : \"center\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n          {\n            text: \"Assignment Stage\",\n           \n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                   {row.paid_status == \"2\" ? null : \n                    <Link to={`/teamleader/addassingment/${row.q_id}`}>\n                    <i class=\"fa fa-tasks\"></i>\n                  </Link> }\n                  </div>\n                </>\n              );\n            },\n          },\n          {\n            text: \"Action\",\n            \n            formatter: function (cell, row) {\n              return (\n                <>\n              <div style={{display: \"flex\"}}>\n              <Link\n                  to={{\n                    pathname: `/teamleader/chatting/${row.q_id}`,\n                    index : 2,\n                    routes: \"assignment\",\n                       obj: {\n                         message_type: \"3\",\n                         query_No: row.assign_no,\n                         query_id: row.q_id,\n                         routes: `/teamleader/assignment`\n                       }\n                     }}\n                   >\n                    <MessageIcon />\n                   </Link>\n                   <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                        \n                                        <ViewDiscussionIcon />\n                                </div>\n               {\n                 row.paid_status == \"2\" ? \n                null : \n                 <>\n                 \n                 \n      {\n       row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n      \n      \n       <p\n         style={{  display: \"flex\", flexDirection: \"column\" , cursor: \"pointer\", color: \"red\" }}\n         onClick={() => uploadFinalReport(row)}\n       >\n       \n            \n              <FinalReportUploadIcon />\n               final\n             \n          \n       </p>\n       : null\n      }\n                \n      \n                \n                \n               </>\n               }\n       \n              </div>\n                \n                         </>\n              );\n            },\n          },\n        ];\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n       \n    \n        if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n        else if(row.paid_status != \"2\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n    \n    const onSubmit = (data) => {\n      \n        axios\n        .get(\n            `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=Delivery_of_report&stages_status=1&pcat_id=${selectedData}`, myConfig)\n      \n          \n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"customBtn mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n                                   {\n                                     tax2.length > 0 ?\n                                     <>\n                                      {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n                                     </> : \"\"\n                                   }\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btnSearch mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"customBtn mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n  bgColor =\"#7c887c\"\n                   keyField= {\"assign_no\"}\n                   data={assignment}\n                   rowStyle2 = {rowStyle2}\n                   columns={columns}>\n                    </DataTablepopulated>\n <ViewAllReportModal\n\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentList}\n                        headColor =\"#7c887c\"\n                    />\n                     <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;\n","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/ProposalComponent.js",["2615","2616","2617","2618","2619","2620","2621","2622","2623","2624","2625","2626","2627","2628","2629","2630","2631","2632","2633","2634","2635","2636","2637","2638","2639","2640","2641","2642"],"import React, { useState, useEffect } from \"react\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Alert,\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport Payment from \"./Payment\";\nimport Select from \"react-select\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from 'reactstrap';\nimport Swal from \"sweetalert2\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nfunction ProposalComponent(props) {\n  const { id } = props;\n  const history = useHistory();\n  const { handleSubmit, register, errors } = useForm();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState(\"\");\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n  const [store, setStore] = useState(null);\n  const [diserror, setdiserror] = useState(\"\")\n  const [payment, setPayment] = useState([]);\n  const [installment, setInstallment] = useState([]);\n  const [error, setError] = useState('');\n  const [totalAmount, setTotalAmount] = useState(null);\n  const [paymentError, setpaymentError] = useState();\n  const [det, addDet] = useState()\n  const [date, setDate] = useState();\n  const [amount, setAmount] = useState();\n  const [companyName, setCompanyName] = useState([])\n  const [dateError, setDateError] = useState(false)\n  const [company2, setCompany2] = useState(\"\")\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const getQuery = () => {\n    axios\n      .get(\n        `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\n          userid\n        )}&assign_id=${id}`, myConfig\n      )\n      .then((res) => {\n        if (res.data.code === 1) {\n          if (res.data.result.length > 0) {\n            setAssingNo(res.data.result[0].assign_no);\n            setAssignID(res.data.result[0].id);\n          }\n        }\n      });\n  };\n  const getCompany = () => {\n    axios.get(\n      `${baseUrl}/tl/getcompany`, myConfig\n    )\n    .then((res) => {\n      console.log(\"response\", res)\n      setCompanyName(res.data.result)\n    })\n  }\n\n  useEffect(() => {\n   getCompany()\n    getQuery();\n  }, []);\n\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`, myConfig);\n      setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n\n    getUser();\n  }, [id]);\n\n\n  const onSubmit = (value) => {\n  \n\n   if(diserror.length > 0 ){\n     return false\n   }\n   else if(dateError === true){\n    Alerts.ErrorNormal(\"Date must be unique\")\n   }\n   else if(det.length == 0){\n   return false\n  }\n   else{\n    var lumsum = value.p_inst_date\n    if (payment.label == \"lumpsum\") {\n      setDate(lumsum)\n    }\n    \n    // var arrAmount = []\n    // var arrDate = []\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"name\", custname);\n    formData.append(\"type\", \"tl\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"assign_id\", assignId);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"description\", det);\n    formData.append(\"amount_type\", \"fixed\");\n    formData.append(\"amount\", value.p_fixed);\n    formData.append(\"installment_amount\", amount);\n\n    formData.append(\"payment_terms\", payment.value);\n    formData.append(\"no_of_installment\", installment.value);\n    formData.append(\"company\", value.p_company)\n    payment.label == \"lumpsum\" ?\n      formData.append(\"due_date\", lumsum) :\n      payment.label == \"installment\" ?\n        formData.append(\"due_date\", date) :\n        formData.append(\"due_date\", \"\")\n\n    if (payment.length < 1) {\n     \n      setpaymentError(\"Please select at lease one\")\n    } else\n      if (payment.value == \"installment\") {\n        if (installment == \"\") {\n          Alerts.ErrorNormal(`Please select no of installment .`)\n        \n        } \n        else if (!amount || !date) {\n            Alerts.ErrorNormal(`Please enter all fields.`)\n            \n          } else if (amount && date) {\n            \n            if (installment.value > 0) {\n              var a = Number(installment.value)\n              for (let i = 0; i < a; i++) {\n                // arrAmount.push(amount[i])\n                // arrDate.push(date[i])\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\n                  Alerts.ErrorNormal(`Please enter amount`)\n               \n                  return false\n                }\n                if (date[i] == \"\" || date[i] == undefined) {\n                  Alerts.ErrorNormal(`Please enter date`)\n                \n                  return false\n                }\n              }\n              var sum = amount.reduce(myFunction)\n              function myFunction(total, value) {\n                return Number(total) + Number(value);\n              }\n              if (value.p_fixed != sum) {\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n              \n              } else {\n               \n                setLoading(true)\n                axios({\n                  method: \"POST\",\n                  url: `${baseUrl}/tl/uploadProposal`,\n                  headers : {\n                    uit : token\n                  },\n                  data: formData,\n                })\n                  .then(function (response) {\n               \n                    if (response.data.code === 1) {\n                      setLoading(false)\n                      Alerts.SuccessNormal(\"Proposal created successfully\")\n                      history.push(\"/teamleader/proposal\");\n                    } else if (response.data.code === 0) {\n                      setLoading(false)\n                      Alerts.ErrorNormal(`${response.data.result}`)\n                    }\n                  })\n                  .catch((error) => {\n                   \n                  });\n              }\n            }\n          }\n      } else if (payment.label == \"lumpsum\") {\n     \n        setLoading(true)\n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tl/uploadProposal`,\n          headers : {\n            uit : token\n          },\n          data: formData,\n        })\n          .then(function (response) {\n          \n            if (response.data.code === 1) {\n              setLoading(false)\n              var variable = \"Proposal sent successfully. \"\n              Alerts.SuccessNormal(variable)\n              history.push(\"/teamleader/proposal\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n          \n          });\n      }\n\n\n\n   }\n  };\n\n\n\n  const paymentAmount = (data) => {\n   \n\n    var array1 = []\n    Object.entries(data).map(([key, value]) => {\n      array1.push(value)\n    });\n    setAmount(array1);\n  };\n\n  const paymentDate = (data) => {\n  \n   \n    var array2 = []\n    Object.entries(data).map(([key, value]) => {\n      array2.push(value)\n    });\n    setDate(array2);\n   \n    if(new Set(array2).size !== array2.length){\n      setDateError(true)\n     Alerts.ErrorNormal(\"Date must be unique\")\n    }\n    else{\n      setDateError(false)\n    }\n   \n  };\n\n\n  const handleChange = (e) => {\n   \n    if (isNaN(e.target.value)) {\n      setdiserror(\"Please enter number only\");\n    }\n    else if(e.target.value == \"0\"){\n      setdiserror(\"Amount should be greater than zero\")\n    }\n    else {\n      setdiserror(\"\");\n    }\n    setTotalAmount(e.target.value);\n  };\n\n  const installmentHandler = (key) => {\n   \n    setInstallment(key)\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"autoWidthBtn ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div>\n                <h4>Prepare Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <p style={{ color: \"red\" }}>{error}</p>\n            <div style={{ display: \"flex\" }}>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    className=\"form-control\"\n                    value={assingNo}\n                    ref={register}\n                    disabled\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <label>Company</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_company\"\n                   \n                   onChange= {(e) => setCompany2(e.target.value)}\n                  >\n{\n  companyName.map((i) => (\n    <option value={i.company_prefix}>{i.name}</option>\n  ))\n}\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fee</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_type\"\n                    onChange={(e) => setStore(e.target.value)}\n                  >\n                    <option value=\"fixed\">Fixed Price</option>\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"p_fixed\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fixed || diserror,\n                    })}\n                    ref={register({ required: true })}\n                    placeholder=\"Enter Fixed Price\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </div>\n                \n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\n                <div class=\"form-group\">\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\n\n                  <CKEditor\n                     editor={ ClassicEditor }\n                     height  = \"600px\"\n                     config = {{\n                    \n                      highlight: {\n                        options: [\n                            {\n                                model: 'greenMarker',\n                                class: 'marker-green',\n                                title: 'Green marker',\n                                color: 'var(--ck-highlight-marker-green)',\n                                type: 'marker'\n                            },\n                            {\n                                model: 'redPen',\n                                class: 'pen-red',\n                                title: 'Red pen',\n                                color: 'var(--ck-highlight-pen-red)',\n                                type: 'pen'\n                            }\n                        ]\n                    },\n                      fontFamily: {\n                        options: [\n                            'default',\n                            'Ubuntu, Arial, sans-serif',\n                            'Ubuntu Mono, Courier New, Courier, monospace'\n                        ]\n                    },\n                    fontColor: {\n                      colors: [\n                          {\n                              color: 'hsl(0, 0%, 0%)',\n                              label: 'Black'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 30%)',\n                              label: 'Dim grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 60%)',\n                              label: 'Grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 90%)',\n                              label: 'Light grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 100%)',\n                              label: 'White',\n                              hasBorder: true\n                          },\n\n                          // ...\n                      ]\n                  },\n                    toolbar: [\n                   ' highlight', 'heading',  'bold', 'fontColor', 'italic',  'bulletedList', 'numberedList', 'undo', 'redo'\n                    ],\n                  \n                    }}\n                    \n                    \n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fact,\n                    })}\n                    id=\"textarea22\"\n                    rows=\"6\"\n                   \n                \n                    onChange={ ( event, editor ) => {\n                      addDet(editor.getData());\n                     \n\n                    \n                  } }\n\n                ></CKEditor>\n                   \n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Client Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    className=\"form-control\"\n                    value={custname}\n                    ref={register}\n                    disabled\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\n                  <Select\n                    className={paymentError ? \"customError\" : \"\"}\n                    onChange={(e) => {\n                      setPayment(e)\n                      setpaymentError(\"\")\n                    }}\n                    options={payment_terms}\n                  />\n\n                </div>\n\n                {payment.label == \"lumpsum\" ? (\n                  <div class=\"form-group\">\n                    <label>Due Dates</label>\n                    <input\n                      type=\"date\"\n                      name=\"p_inst_date\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_inst_date\n                      })}\n                      ref={register({ required: true })}\n                      placeholder=\"Enter Hourly basis\"\n                      min={item}\n                    />\n                  </div>\n                ) :\n                  payment.label == \"installment\" ? (\n                    <div class=\"form-group\">\n                      <label>No of Installments</label>\n                      <Select\n                        onChange={(e => installmentHandler(e))}\n                        options={no_installments}\n                      />\n                    </div>\n                  )\n                    : \"\"\n                }\n\n                {\n                  payment.label == \"lumpsum\"\n                    ?\n                    \"\"\n                    :\n                    <Payment\n                      installment={installment.label}\n                      paymentAmount={paymentAmount}\n                      paymentDate={paymentDate}\n                      totalAmount={totalAmount}\n                      min={item}\n                      item={item}\n                      dateError = {dateError}\n                    />\n                }\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group col-md-6\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" class=\"customBtn\">\n                    Submit\n                  </button>\n              }\n            </div>\n\n          </form>\n          <Mandatory />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default ProposalComponent;\n\n\nconst payment_terms = [\n  {\n    value: \"lumpsum\",\n    label: \"lumpsum\",\n  },\n  {\n    value: \"installment\",\n    label: \"installment\",\n  },\n];\n\nconst no_installments = [\n  {\n    value: \"2\",\n    label: \"2\",\n  },\n  {\n    value: \"3\",\n    label: \"3\",\n  },\n  {\n    value: \"4\",\n    label: \"4\",\n  },\n];\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AllAssignment.js",["2643","2644","2645","2646","2647","2648","2649","2650","2651","2652","2653","2654","2655","2656","2657","2658","2659","2660","2661","2662","2663","2664","2665","2666","2667","2668","2669","2670","2671","2672"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, { ViewDiscussionIcon, DraftReportUploadIcon, FinalReportUploadIcon} from \"../../../components/Common/MessageIcon\";\n\n\nfunction AssignmentTab() {\n\n  const history = useHistory();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [count, setCount] = useState(\"\");\n  const [assignment, setAssignment] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [finalId, setFinalId] = useState(\"\");\n  const [records, setRecords] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [hide, setHide] = useState();\n  const [fianlModal, setFianlModal] = useState(false);\n  const [draftModal, setDraftModal] = useState(false);\n  const [dataItem, setDataItem] = useState({});\n  const [report, setReport] = useState();\n  const [reportModal, setReportModal] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false);\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n\n  const [item] = useState(current_date);\n  let des = false;\n  var rowStyle2 = {}\n  const ViewReport = (key) => {\n   \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n  \n  \n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n  const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`, myConfig)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAssignment(res.data.result);\n          setCount(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n     if(selectedData != undefined){\n      axios\n      .get(`${baseUrl}/tl/getCategory?pid=${selectedData}`, myConfig)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n     }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    setError(false)\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    setError(false)\n    setStore2(value);\n  };\n\n  //reset category\n   const resetCategory = () => {\n  setSelectedData([]);\n  setStore2([]);\n  getAssignmentList()\n  setError(false)\n  setTax2([])\n   };\n\n\n//reset date\nconst resetData = () => {\n\n  reset();\n   setTax2([])\n  setError(false)\n  setHide(\"\")\n  setStatus([]);\n  setSelectedData([]);\n  setStore2([]);\n  getAssignmentList();\n};\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n    setError(false)\n    setStatus(value);\n  };\n\n\n  //columns\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n    \n      headerStyle: () => {\n        return { width: \"50px\" };\n      },\n    },\n    {\n      text: \"Query Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n    \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n     \n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.q_id}`,\n                index : 0,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n    \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n     \n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n     \n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"200px\" };\n      },\n\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span className=\"declined\">Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                {row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                      {row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                     {row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                             {row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                            {row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected date of delivery\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate1 = row.final_date;\n\n        let finalDate , expectedDate;\n        if(oldDate1 && oldDate1 !== \"0000-00-00 00:00:00\"){\n       finalDate = oldDate1.split(\" \")[0].split(\"-\").reverse().join(\"-\")\n        }\n        var oldDate2 = row.Exp_Delivery_Date;\n     \n       expectedDate = oldDate2\n        if(expectedDate){\n         expectedDate= oldDate2.toString().split(\"-\").reverse().join(\"-\")\n        }\n        // console.log(\"finalDate\", finalDate)\n        // console.log(\"expectedDate\", expectedDate)\n        return(\n          <>\n          {finalDate ? \n          <p>{finalDate}</p> : <p>{expectedDate}</p>}\n          </>\n        )\n      },\n    \n    },\n    {\n      text: \"TP Name\",\n      dataField: \"tp_name\",\n    \n    },\n    // {\n    //   text: \"Actual date of delivery\",\n    //   dataField: \"final_date\",\n    //   sort: true,\n    \n    //   formatter: function dateFormat(cell, row) {\n       \n    //     var oldDate = row.final_date;\n    //     if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n    //       return null;\n    //     }\n    //     return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n    //   },\n    // },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n     \n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\", textAlign : \"center\" }}\n                      onClick={() => ViewReport(row)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"Assignment Stage\",\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      }, style : {\n        fontSize : \"11px\"\n      },\n\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              title=\"Add Assignment stages\"\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\n            >\n             {row.paid_status == \"2\" ? null : \n              <Link to={`/teamleader/addassingment/${row.q_id}`}>\n              <i class=\"fa fa-tasks\"></i>\n            </Link> }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      \n      formatter: function (cell, row) {\n        return (\n          <>\n        <div style={{display: \"flex\"}}>\n        <Link\n            to={{\n              pathname: `/teamleader/chatting/${row.q_id}`,\n              index : 0,\n              routes: \"assignment\",\n                 obj: {\n                   message_type: \"3\",\n                   query_No: row.assign_no,\n                   query_id: row.q_id,\n                   routes: `/teamleader/assignment`\n                 }\n               }}\n             >\n              <MessageIcon />\n             </Link>\n             <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n         {\n           row.paid_status == \"2\" ? \n          null : \n           <>\n           \n            {\n              row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.final_discussion == \"inprogress\" &&  row.paid_status !=2  ?\n             \n              <p\n                style={{ display: \"flex\", flexDirection: \"column\" , cursor: \"pointer\", color: \"green\" }}\n                onClick={() => uploadDraftReport(row.id)}\n              >\n               <DraftReportUploadIcon />\n                draft\n              </p>\n             : null\n           }\n{\n row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n\n\n <p\n   style={{  display: \"flex\", flexDirection: \"column\" , cursor: \"pointer\", color: \"red\" }}\n   onClick={() => uploadFinalReport(row)}\n >\n \n      \n        <FinalReportUploadIcon />\n         final\n       \n    \n </p>\n : null\n}\n          \n\n          \n          \n         </>\n         }\n \n        </div>\n          \n                   </>\n        );\n      },\n    },\n  ];\n\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n    else if(row.paid_status != \"2\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n\n  // draft modal\n \n  const uploadDraftReport = (id) => {\n    if(typeof(id) == \"object\"){\n      \n      let des = true;\n      setLoading(false)\n      setDraftModal(!draftModal);\n    }\n    else{\n      setDraftModal(!draftModal);\n      setId(id);\n    }\n  \n  };\n\n\n  // final modal\n  \n    const uploadFinalReport = (id) => {\nif(id && id.id === undefined){\n    \n  let des = true;\n  setLoading(false)\n  setFianlModal(!fianlModal);\n}\nelse{\n  setFianlModal(!fianlModal);\n      setFinalId(id);\n}\n    \n    };\n  \n    \n\n  const onSubmit = (data) => {\n  if(hide == 1 || hide == 2){\n    if(status.length > 0){\n      axios\n      .get(\n        `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&assignment_status=${status}&stages_status=${data.p_status\n        }&pcat_id=${selectedData}`, myConfig\n      )\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignment(res.data.result);\n            setRecords(res.data.result.length);\n\n          }\n        }\n      });\n\n    }\n    else{\n      setError(true)\n      return false;\n    }\n  }\n  else{\n    axios\n    .get(\n      `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n        userid\n      )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n      }&assignment_status=${status}&stages_status=${data.p_status\n      }&pcat_id=${selectedData}`, myConfig\n    )\n    .then((res) => {\n    \n      if (res.data.code === 1) {\n        if (res.data.result) {\n          setAssignment(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      }\n    });\n\n  }\n     };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"customBtn mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n  const disabledHandler = (e) => {\n    setStatus([])\n    setError(false)\n    setHide(e.target.value);\n  };\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n             {tax2.length > 0 ? \n              <div class=\"form-group mx-sm-1  mb-2\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: 250 }}\n                placeholder=\"Select Sub Category\"\n                defaultValue={[]}\n                onChange={handleSubCategory}\n                value={store2}\n                allowClear\n              >\n                {tax2.map((p, index) => (\n                  <Option value={p.id} key={index}>\n                    {p.details}\n                  </Option>\n                ))}\n              </Select>\n            </div> : \"\"}\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btnSearch mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <select\n                  className=\"form-select form-control\"\n                  name=\"p_status\"\n                  ref={register}\n                  style={{ height: \"33px\" }}\n                  onChange={(e) => disabledHandler(e)}\n                >\n                  <option value=\"\">--select--</option>\n                  <option value=\"1\">Inprogress</option>\n                  <option value=\"2\">Completed</option>\n                  <option value=\"3\">Payment Declined</option>\n                </select>\n              </div>\n\n              {\n                hide == \"1\" || hide == \"2\" ?\n                 \n                  <div className=\"form-group mx-sm-1  mb-2\">\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: 210 }}\n                      placeholder=\"Select stages\"\n                      defaultValue={[]}\n                      onChange={assingmentStatus}\n                      value={status}\n                      allowClear\n                      className={error ? \"customError\" : \"\"}\n                    >\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Client Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Draft reports\n                        </div>\n                      </Option>\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Final Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Delivery of Final Reports\n                        </div>\n                      </Option>\n                      <Option value=\"Completed\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">Awaiting Completion</div>\n                      </Option>\n                    </Select>\n                  </div> : \"\"\n\n              }\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">Total Records : {records}</label>\n              </div>\n              <button type=\"submit\" class=\"customBtn mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n        <DataTablepopulated \n                    bgColor = \"#5a625a\"\n                   keyField= {\"assign_no\"}\n                   rowStyle2 = {rowStyle2}\n                   data={assignment}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n         \n        </CardBody>\n      </Card>\n      <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n\n          <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n\n\n        \n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentList}\n            headColor = \"#5a625a\"\n          />\n      <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}k\n            headColor = \"#5a625a\"\n          />\n\n    </>\n  );\n}\n\nexport default AssignmentTab;","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Unpaid.js",["2673","2674","2675","2676","2677","2678","2679","2680","2681","2682","2683","2684","2685","2686","2687","2688","2689","2690","2691","2692","2693","2694","2695","2696"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport moment from 'moment';\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {PaymentDecline, Payment, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n    const [addPaymentModal, setPaymentModal] = useState(false);\n\n    // UseState end \n    // Global veriable \n    var rowStyle2 = {}\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n    \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}&status=1`, myConfig).then((res) => {\n            \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n       \n        setModal(!modal);\n\n        if(typeof(key) == \"object\"){\n\n        }\n        else{\n            fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n                \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n        }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n     var cc = moment(row.due_date).toDate();\n     if(row.is_paid === \"2\"){\n        style.backgroundColor = \"#fff\";\n        style.color = \"#000\"\n    }\n    else if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n        style.backgroundColor = \"#bfdfd2\";\n      style.color = \"#000111\"\n    }\n   else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n   \n    else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n\n            headerStyle: () => {\n                return { width: \"35px\"};\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Query Date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n          \n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n                        {/* <Link to={`/teamleader/queries/${row.assign_id}`}>\n              {row.assign_no}\n            </Link> */}\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n           \n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n           \n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            \n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p className=\"declined\">{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n        \n            formatter: function (cell, row) {\n                return (\n                    <>\n                    <div style={{display: \"flex\"}}>\n\n<Link\n                             to={{\n                                pathname: `/teamleader/chatting/${row.id}`,\n                                index: 1,\n                                routes: \"paymentstatus\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/teamleader/paymentstatus`\n                              }\n                          }}\n                      >\n                          <MessageIcon />\n                      </Link>\n<div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                          <Link\n              to={{\n                  pathname: `/teamleader/paydetails/${row.assign_id}`,\n                  index : 1,\n                  routes: \"paymentstatus\",\n              }}\n            >\n                          <Payment />\n                            </Link>\n\n                          {\n                               row.paid_status == \"0\" ?\n                                   <div title=\"Payment decline\" onClick={() => rejectHandler(row)}>\n                                       <PaymentDecline />\n                                   </div>\n                                   : null\n                           }\n                       \n                   </div>\n                    </>\n                );\n            },\n        },\n    ]\n\n    return (\n        <>\n            <Card>\n\n                <CardHeader>\n                    <TeamFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Unpaid=\"Unpaid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n bgColor=\"#3e8678\"\n rowStyle2={rowStyle2}\n                   keyField= {\"assign_no\"}\n                   data={payment}\n                   columns={columns}>\n                    </DataTablepopulated>\n <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                        headColor=\"#3e8678\"\n                    />\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/AllPayment.js",["2697","2698","2699","2700","2701","2702","2703","2704","2705","2706","2707","2708","2709","2710","2711","2712","2713","2714","2715","2716","2717","2718","2719","2720"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {PaymentDecline, Payment, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n    const [addPaymentModal, setPaymentModal] = useState(false); \n\n\n    // Use State end\n    //Global veriable\n    var rowStyle2 = {}\n\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}`, myConfig).then((res) => {\n        \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n   \n        setModal(!modal);\n\n       if(typeof(key) == \"object\"){\n\n       }\n       else{\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n              \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n       }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n     var cc = moment(row.due_date).toDate();\n     if(row.is_paid === \"2\"){\n        style.backgroundColor = \"#fff\";\n        style.color = \"#000\"\n    }\n    else if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n        style.backgroundColor = \"#bfdfd2\";\n      style.color = \"#000111\"\n    }\n   else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n   \n    else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n           \n            headerStyle: () => {\n                return {width : \"35px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Query Date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            \n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n           \n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n           \n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n           \n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p className=\"declined\">{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n         \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n           \n            \n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n        \n            formatter: function (cell, row) {\n                return (\n                    <>\n                    <div style={{display: \"flex\"}}>\n\n<Link\n                             to={{\n                                pathname: `/teamleader/chatting/${row.id}`,\n                                index: 0,\n                                routes: \"paymentstatus\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/teamleader/paymentstatus`\n                              }\n                          }}\n                      >\n                          <MessageIcon />\n                      </Link>\n<div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                          <Link\n              to={{\n                  pathname: `/teamleader/paydetails/${row.assign_id}`,\n                  index : 0,\n                  routes: \"paymentstatus\",\n              }}\n            >\n                          <Payment />\n                            </Link>\n\n                          {\n                               row.paid_status == \"0\" ?\n                                   <div title=\"Payment decline\" onClick={() => rejectHandler(row)}>\n                                       <PaymentDecline />\n                                   </div>\n                                   : null\n                           }\n                       \n                   </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        AllPayment=\"AllPayment\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n                   bgColor=\"#2b5f55\"\n                   keyField= {\"assign_no\"}\n                   data={payment}\n                   rowStyle2 = {rowStyle2}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                        headColor=\"#2b5f55\"\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paid.js",["2721","2722","2723","2724","2725","2726","2727","2728","2729","2730","2731","2732","2733","2734","2735","2736","2737","2738","2739","2740","2741","2742","2743"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {PaymentDecline, Payment, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\nimport moment from \"moment\";\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n\n    const [assignNo, setAssignNo] = useState(\"\");\n\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const rejectHandler = (key) => {\n      \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}&status=2`, myConfig).then((res) => {\n           \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n  \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    const toggle = (key) => {\n      \n        setModal(!modal);\n\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n            \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n    };\n\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n\n            headerStyle: () => {\n                return { width : \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Query Date\",\n            sort: true,\n        \n            formatter: function dateFormat(cell, row) {\n          \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n           \n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 2, \n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n           \n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n          \n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n          \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"status\",\n          \n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text: \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n        \n            formatter: function (cell, row) {\n                return (\n                    <>\n                    <div style={{display: \"flex\"}}>\n\n<Link\n                             to={{\n                                pathname: `/teamleader/chatting/${row.id}`,\n                                index: 2,\n                                routes: \"paymentstatus\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/teamleader/paymentstatus`\n                              }\n                          }}\n                      >\n                          <MessageIcon />\n                      </Link>\n<div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                          <Link\n              to={{\n                  pathname: `/teamleader/paydetails/${row.assign_id}`,\n                  index : 2,\n                  routes: \"paymentstatus\",\n              }}\n            >\n                          <Payment />\n                            </Link>\n\n                          {\n                               row.paid_status == \"0\" ?\n                                   <div title=\"Payment decline\" onClick={() => rejectHandler(row)}>\n                                       <PaymentDecline />\n                                   </div>\n                                   : null\n                           }\n                       \n                   </div>\n                    </>\n                );\n            },\n        },\n    ]\nconst rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n         var cc = moment(row.due_date).toDate();\n         if(row.is_paid === \"2\"){\n            style.backgroundColor = \"#fff\";\n            style.color = \"#000\"\n        }\n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n            style.backgroundColor = \"#bfdfd2\";\n          style.color = \"#000111\"\n        }\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n       \n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n  \n    \n    \n\n    return (\n        <>\n            <Card>             \n                <CardHeader>\n                    <TeamFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Paid=\"Paid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n                 bgColor=\"#3e8678\"\n                   keyField= {\"assign_no\"}\n                   rowStyle2={rowStyle2}\n                   data={payment}\n                   columns={columns}>\n                    </DataTablepopulated>\n<DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                        headColor=\"#3e8678\"\n                    />\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date</th>\n                                        <th scope=\"row\">Amount</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;\n","/home/pooja/MazarsRepo/src/components/Common/EmailValidation.js",["2744","2745","2746","2747"],"import React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\n\nimport classNames from \"classnames\";\nimport { Spinner } from \"reactstrap\"\nconst EmailValidation = (props) => {\n    const { handleSubmit, register, errors, getValues } = useForm();\nconst [email, setEmail] = useState([])\n   \n    const emailHandler = (e) => {\n      setEmail(e.target.value);\n      props.setEmail2(e.target.value)\n        if (e.target.value.length < 1) {\n          props.setWemail(\"\")\n        }\n      };\n\n      const emailValidation = (key) => {\n\n        var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (email.length > 0 && email.match(validRegex)) {\n          props.setWemail(\"\");\n          props.setEmailError(false)\n          let formData = new FormData();\n          formData.append(\"email\", email);\n          formData.append(\"type\", 1);\n    if(props.name === \"teamleader\" || props.name ==\"taxprofessional\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/validateregistration`,\n        data: formData,\n      })\n      .then(function (response) {\n             \n        if (response.data.code === 1) {\n          props.setValiemail(response.data.result)\n          props.setInvalid('')\n          props.setEmailError(false)\n         \n        } else if (response.data.code === 0) {\n          props.setInvalid(response.data.result)\n          props.setValiemail('')\n          props.setEmailError(true)\n        }\n      })\n      .catch((error) => {\n      \n      });\n    }\n    else{\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData,\n      })\n      .then(function (response) {\n             \n        if (response.data.code === 1) {\n          props.setValiemail(response.data.result)\n          props.setInvalid('')\n          props.setEmailError(false)\n         \n        } else if (response.data.code === 0) {\n          props.setInvalid(response.data.result)\n          props.setValiemail('')\n          props.setEmailError(true)\n        }\n      })\n      .catch((error) => {\n      \n      });\n    }\n        \n          \n        }\n        else {\n          props.setEmailError(true)\n          props.setWemail(\"invalid email\")\n        }\n    \n      }\n    \nreturn(\n    \n    <>\n    <input\n                        type=\"text\"\n                        name=\"p_email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email || props.emailError === true || props.wEmail || props.invalid,\n                        })}\n                        onChange={(e) => emailHandler(e)}\n                        onBlur={(e) => emailValidation(e)}\n                        placeholder=\"Enter Your Password\"\n                        ref={register({ required: true })}\n                      />\n                      \n    </>\n)\n}\nexport default EmailValidation;","/home/pooja/MazarsRepo/src/components/Common/Mandatory.js",[],"/home/pooja/MazarsRepo/src/pages/TL/CompleteData/CompleteData.js",["2748","2749","2750","2751","2752","2753","2754","2755","2756","2757","2758","2759","2760"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport History from \"../../../components/PendingForAllocation/History\";\nimport Swal from \"sweetalert2\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport { ActionIcon} from \"../../../components/Common/MessageIcon\";\n\nfunction CompletedQuery({updateTab }) {\n  const userid = window.localStorage.getItem(\"tlkey\");\nconst hist = useHistory();\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n \n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const ViewDiscussionToggel = (key) => {\n      setViewDiscussion(!ViewDiscussion);\n      setAssignNo(key)\n  }\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n  const toggle = (key) => {\n  \n    setModal(!modal);\naxios.get(`${baseUrl}/tl/getQueryHistory?q_id=${key}&uid=${JSON.parse(userid)}`, myConfig)\n.then((res) => {\n  console.log(\"response\", res)\n  if(res.data.code === 1){\n    setHistory(res.data.result)\n  }\n})\n    // fetch(`${baseUrl}/tl/getQueryHistory?q_id=${key}&uid=${JSON.parse(userid)}`, {\n    //   method: \"GET\",\n    //   headers: new Headers({\n    //     Accept: \"application/vnd.github.cloak-preview\",\n    //   }),\n    // })\n    //   .then((res) => res.json())\n    //   .then((response) => {\n     \n    //     setHistory(response.result);\n    //   })\n    //   .catch((error) => console.log(error));\n  };\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingAllocation?uid=${JSON.parse(userid)}`, myConfig)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { width: \"50px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n    },\n    {\n      text: \"Query Date\",\n      dataField: \"created\",\n      sort: true,\n     \n      formatter : function(cell, row){\n        let dueDate=row.created.split(\"-\").reverse().join(\"-\")\n     \n        return(\n           \n            <>\n      {dueDate}\n            </>\n        )\n    }\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n     \n      formatter: function nameFormatter(cell, row) {\n\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 3,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n     \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n     \n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n    \n    },\n    {\n      text: \"Delivery Due Date \",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n    \n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n     \n      formatter: function nameFormatter(cell, row) {\n          return (\n              <>\n                  <div>\n                      {row.status}/\n                      {\n                          row.status == \"Inprogress Query\" ?\n                              <p className=\"inprogress\">\n\n                                  {row.statusdescription}\n                              </p>\n                              :\n                              row.status == \"Declined Query\" ?\n                                  <p className=\"declined\">\n\n                                      {row.statusdescription}\n                                  </p> :\n                                  row.status == \"Completed Query\" ?\n                                      <p className=\"completed\">\n\n                                          {row.statusdescription}\n                                      </p> : \n                                      null\n                                  \n                                    \n                      }\n                  </div>\n              </>\n          );\n      },\n  },\n  \n  {\n    text: \"Action\",\n    dataField: \"\",\n    \n    formatter: function (cell, row) {\n      return (\n        <>\n          {row.statuscode === \"0\" || row.statuscode === \"3\"? (\n           \n           <div onClick ={() => assignConfirm(row.id, row.assign_no)}>\n<ActionIcon  titleName=\"Assign to tp\" />\n           </div>\n         \n           ) : (\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n            \n  <p className=\"completed\">\n\n Allocated to {row.tname} on\n<p>{row.allocation_time}</p>\n</p>\n          \n\n            </div>\n\n\n\n          )}\n        </>\n      );\n    },\n  },\n  {\n    text: \"History\",\n    dataField: \"\",\n    headerStyle: () => {\n      return { fontSize: \"12px\" };\n    },\n    formatter: function (cell, row) {\n      return (\n        <>\n          <button\n            type=\"button\"\n            class=\"autoWidthBtn\"\n            onClick={() => toggle(row.id)}\n          >\n            History\n          </button>\n        </>\n      );\n    },\n  },\n  ];\n\n\n\n  const  assignConfirm = (id, assign_number) => {\n \n   \nSwal.fire({\n  title: \"Are you sure?\",\n   text: `do you want to assign ${assign_number} to taxprofessional`,\n        type: 'warning',\n        showCloseButton:true,\n        showCancelButton: true,\n        confirmButtonColor: '\"#3085d6\"',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, assign it!',\n        cancelButtonText: 'No'\n    }).then(function(result){\n      console.log(\"resutl\", result)\n        if(result.value){\n          hist.push(`/teamleader/queryassing/${id}`)\n        }else if(result.dismiss == 'cancel'){\n          \n           axios.get(`${baseUrl}/tl/workby?uid=${JSON.parse(userid)}&qid=${id}`, myConfig).then((res) => {\n                   if(res.data.code === 1){\n                    //  hist.push(`/teamleader/proposal`)\n                    updateTab(3);\n                    getInCompleteAssingment()\n                   }\n                 })\n        }\n\n    });\n\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            inCompleteQuery=\"inCompleteQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n        <DataTablepopulated \n                                 bgColor=\"#6e557b\"\n          keyField= {\"assign_no\"}\n          data={incompleteData}\n          \n          columns={columns}>\n           </DataTablepopulated> \n            <History history={history} toggle={toggle} modal={modal} />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default CompletedQuery;\n","/home/pooja/MazarsRepo/src/pages/TL/InCompleteData/InCompleteData.js",["2761","2762","2763","2764","2765","2766","2767","2768","2769","2770","2771","2772","2773","2774","2775"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {DeleteIcon, EditQuery, ViewDiscussionIcon, HelpIcon, \n  UploadDocument, FeedBackICon} from \"../../../components/Common/MessageIcon\";\n\nfunction InCompleteData({ CountIncomplete }) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`, myConfig)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return {width: \"50px\" };\n      },\n    \n    },\n    {\n      text: \"Query Date\",\n      dataField: \"created\",\n      sort: true,\n    \n      formatter : function(cell, row){\n        let dueDate=row.created.split(\"-\").reverse().join(\"-\")\n      \n        return(\n           \n            <>\n      {dueDate}\n            </>\n        )\n    }\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n     \n      formatter: function nameFormatter(cell, row) {\n       \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n    \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n    \n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n  \n    },\n    {\n      text: \"Delivery Due Date   / Acutal Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n    \n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}{row.statusdescription && \"/\"}\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n          return { fontSize: \"12px\" , width : \"100px\"};\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function (cell, row) {\n        \n         \n        return (\n          <>\n            {row.status_code == \"1\" ? null :\n            \n            <div\n            style={{\n                display: \"flex\",\n                \n            }}\n        >\n           \n\n            {row.status == \"Declined Query\" ? null :\n         \n            <Link\n                   to={{\n                      pathname: `/teamleader/chatting/${row.id}`,\n                      index: 1,\n                      routes: \"queriestab\",\n              \n                    obj: {\n                        message_type: \"4\",\n                        query_No: row.assign_no,\n                        query_id: row.id,\n                        routes: `/teamleader/queriestab`\n                    }\n                }}\n            >\n                <MessageIcon />\n            </Link>\n       }\n\n<span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                        <ViewDiscussionIcon />\n                      </span>\n        </div>\n}                    </>\n      );\n  },\n},\n];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            InprogressQuery=\"InprogressQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n        <DataTablepopulated \n                                bgColor=\"#6e557b\"\n          keyField= {\"assign_no\"}\n          data={incompleteData}\n          \n          columns={columns}>\n           </DataTablepopulated> \n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getInCompleteAssingment}\n            headColor=\"#6e557b\"\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InCompleteData;\n","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js",["2776"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport RejectedModal from \"./RejectedModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport { Accept, Reject} from \"../../../components/Common/MessageIcon\";\n\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [pendingData, setPendingData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [pay, setPay] = useState({\n    id: \"\",\n    allocation_id: \"\",\n  });\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const rejectHandler = (key) => {\n\n    setPaymentModal(!addPaymentModal);\n    setPay({\n      id: key.id,\n      allocation_id: key.allocation_id,\n    });\n  };\n\n  useEffect(() => {\n    getPendingforAcceptance();\n  }, []);\n\n  const getPendingforAcceptance = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`, myConfig)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setPendingData(res.data.result);\n          setRecords(res.data.result.length);\n         \n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n     \n      headerStyle: () => {\n        return {  width: \"50px\" };\n      },\n    },\n    {\n      text: \"Query Date\",\n      dataField: \"query_created\",\n      sort: true,\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.query_created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      formatter: function nameFormatter(cell, row) {\n       \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 2,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n     \n    },\n    {\n      text: \"Delivery Due Date \",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Accept / Reject\",\n      dataField: \"\",\n    \n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                color: \"#6967ce\",\n                cursor: \"pointer\",\n              }}\n              id=\"div1\"\n            >\n              <div\n                \n                onClick={() => acceptHandler(row)}\n              >\n              <Accept titleName= \"Accept Assignment\"/>\n              </div>\n              <div\n            \n                onClick={() => rejectHandler(row)}\n              >\n               <Reject titleName=\"Reject Assignment\" />\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  const acceptHandler = (key) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query accepted successfully.\")\n          getPendingforAcceptance();\n          updateTab(2);\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n\n      });\n  };\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setPendingData}\n            getData={getPendingforAcceptance}\n            pendingForAcceptence=\"pendingForAcceptence\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Spinner color=\"primary\" />\n              :\n              <DataTablepopulated \n              bgColor=\"#6e557b\"\n              keyField= {\"assign_no\"}\n              data={pendingData}\n              \n              columns={columns}>\n               </DataTablepopulated> \n          }\n          <RejectedModal\n            rejectHandler={rejectHandler}\n            addPaymentModal={addPaymentModal}\n            pay={pay}\n            getPendingforAcceptance={getPendingforAcceptance}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForAcceptence;\n\n","/home/pooja/MazarsRepo/src/components/Loader/Loader.js",[],"/home/pooja/MazarsRepo/src/components/QueryDetails/QueryDetails.js",["2777","2778","2779","2780","2781","2782","2783"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport BasicQuery from \"./BasicQuery\";\nimport ProposalDetails from \"./ProposalDetails\";\nimport AssignmentDetails from \"./AssignmentDetails\";\nimport AdditionalQuery from \"./AdditionalQuery\";\nimport AddAdditionalQuery from \"./AddAdditionalQuery\";\nimport DraftReports from \"./DraftReports\";\nimport CommonServices from \"../../common/common\";\nimport QueryRecording from \"./QueryRecording\";\nimport {\n  TabContent, TabPane, Nav, NavItem, NavLink, Card, Row, Col\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport Feedback from './Feedback'\n\n\nfunction QueryDetails({\n  overDue,\n  p,\n  diaplaySpecific,\n  diaplayProposal,\n  diaplayHistory,\n  diaplayAssignment,\n  displayQuery,\n  assingNo,\n  getQuery,\n  customerQuery,\n  queryDocs,\n  purpose,\n  paymentDetails,\n  year,\n  feedback,\n  reports, \n  submitData,\n  accept,\n  tlName2,\n  tp22,\n  tpStatus,\n  declined2,\n  declinedStatus, \n  finalDate, \n  qstatus,\n  panel\n}) {\n \n\n\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  }\n\n  return (\n    <>\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '1' })}\n              onClick={() => { toggle('1'); }}\n            >\n              Basic Query Information\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '2' })}\n              onClick={() => { toggle('2'); }}\n            >\n              Proposal\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '3' })}\n              onClick={() => { toggle('3'); }}\n            >\n              Assignment\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '4' })}\n              onClick={() => { toggle('4'); }}\n            >\n              Feedback\n            </NavLink>\n          </NavItem>\n          {customerQuery === \"customerQuery\" ? null :\n          <NavItem>\n            <NavLink\n            className = {classnames({ active : activeTab === '5'})}\n            onClick = {() => { toggle('5');}} >\n              Recording\n            </NavLink>\n          </NavItem> }\n         \n\n        </Nav>\n\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <BasicQuery\n                    p={p}\n                    diaplaySpecific={diaplaySpecific}\n                    purpose={purpose}\n                    queryDocs={queryDocs}\n                    year={year}\n                    declined2={declined2}\n                    declinedStatus={declinedStatus}\n                    qstatus={qstatus}\n                    panel = {panel}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <ProposalDetails\n                    diaplayProposal={diaplayProposal}\n                    diaplayHistory={diaplayHistory}\n                    paymentDetails={paymentDetails}\n                    p={p}\n                    accept={accept}\n                    tlName2={tlName2}\n                    tp22 = {tp22}\n                    tpStatus={tpStatus}\n                    panel = {panel}\n                    overDue = {overDue}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tabId=\"3\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <AssignmentDetails\n                    diaplayAssignment={diaplayAssignment}\n                    p={p}\n                    diaplayProposal={diaplayProposal}\n                    reports={reports}\n                    assingNo={assingNo}\n                    submitData = {submitData}\n                    customerQuery = {customerQuery}\n                    finalDate={finalDate}\n                    panel = {panel}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n\n          <TabPane tabId=\"4\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <Feedback\n                    feedback={feedback}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n          {\n            customerQuery === \"customerQuery\" ? null :\n<TabPane tabId=\"5\">\n         <Row>\n           <Col sm=\"12\">\n             <Card body>\n               <QueryRecording\n  assingNo={p.assign_no}/>\n             </Card>\n           </Col>\n           </Row>\n       </TabPane>\n          }\n       \n          \n\n        </TabContent>\n      </div>\n\n    </>\n  );\n}\n\nexport default QueryDetails;\n\n","/home/pooja/MazarsRepo/src/views/AssignmentTab/DiscardReport.js",["2784","2785"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport CommonServices from \"../../common/common\";\n\n\n\nfunction DiscardReport({\n  ViewDiscussion,\n  ViewDiscussionToggel,\n  report,\n  headColor\n}) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const [data, setData] = useState([]);\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    getHistory();\n  }, [report]);\n\n  const getHistory = () => {\n   if(report !== undefined && report.length > 0){\n    axios.get(`${baseUrl}/customers/getMessage?id=${JSON.parse(userId)}&q_no=${report}`, myConfig).then((res) => {\n    \n      if (res.data.code === 1) {\n        setData(res.data.result);\n      }\n    });\n   }\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr style={{backgroundColor: `${headColor}`,  color: \"#fff\"}}>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`}}>S.No</th>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`}}>Date</th>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`}}>Name</th>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`}}>Message</th>\n              </tr>\n            </thead>\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr className={p.type === \"sent\" ? \"send\" : \"received\"}>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\n                    <td>{p.sender}</td>\n                    <td style={{ width : \"460px\", overflow : \"wrap\"}}>\n                      {\n                        p.type === \"sent\" ?\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                          :\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                      }\n                      {p.message}\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n\n        </ModalBody>\n\n        <ModalFooter>\n          <div>\n            <button className=\"customBtn\" onClick={ViewDiscussionToggel}>Cancel</button>\n          </div>\n        </ModalFooter>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default DiscardReport;\n\n","/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentComponent.js",["2786","2787","2788","2789","2790","2791","2792","2793","2794","2795","2796","2797","2798","2799","2800","2801"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport CommonServices from \"../../common/common\";\nimport Loader from \"../../components/Loader/Loader\";\n\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  pay,\n  getPaymentStatus,\n  pay3\n}) {\n  const { handleSubmit, register } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n\n  const { assign_id, amount, accepted_amount, paid_amount,\n    payment_terms, no_of_installment, installment_amount,\n    due_date, amount_type, amount_fixed, amount_hourly\n  } = pay;\n\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"id\", assign_id);\n    formData.append(\"status\", 8);\n    formData.append(\"amount\", value.p_amount);\n\n  \n    axios.get(`${baseUrl}/admin/getPaymentDetail?id=${assign_id}`)\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n         \n          window.location.href= (`${response.data.payment_detail[0].paymenturl}`)\n         \n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  const installAmount = (data) => {\n    var item = data.split(',')\n\n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\nif(addPaymentModal === true){\n  var kk = pay.installment_amount.split(\",\")\n}\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal}  toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\n        {\n          loading ?\n            <Loader />\n            :\n            <>\n              <ModalBody>\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Paid Amount</th>\n                    <th>Due Date</th>\n                    <th>Pay</th>\n                  </tr>\n                  {kk?.map((i, e) => (\n                    <tr>\n                    <td>{i == \"0\" ? pay.amount : i }</td>\n                    <td> {CommonServices.removeTime(due_date)}</td>\n                    <td><form onSubmit={handleSubmit(onSubmit)}>\n                  {+accepted_amount == +paid_amount ? <p>paid</p> : (\n                   <button type=\"submit\" className=\"btn btn-primary\">\n                      Pay\n                   </button>\n                    \n                \n                  )}\n                </form></td>\n                  </tr>\n                 ))}\n                 \n                \n                </table>\n                \n              </ModalBody>\n            </>\n        }\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DiscardReport.js",["2802","2803","2804","2805","2806","2807","2808"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CommonServices from \"../../../common/common\";\nimport Alerts from \"../../../common/Alerts\";\n\n\nfunction DiscardReport({\n  ViewDiscussion,\n  ViewDiscussionToggel,\n  report,\n  getData,\n  headColor\n}) {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getHistory();\n  }, [report]);\n  const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n  const getHistory = () => {\n   \n  if(report != undefined && report.length > 0){\n   \n    axios.get(`${baseUrl}/tl/getMessage?id=${JSON.parse(userId)}&q_no=${report}`, myConfig).then((res) => {\n    \n      if (res.data.code === 1) {\n        setData(res.data.result);\n      }\n    });\n  }\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`, backgroundColor: `${headColor}`, color:\"#fff\"}}>S.No</th>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`, backgroundColor: `${headColor}`, color:\"#fff\"}}>Date</th>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`, backgroundColor: `${headColor}`, color:\"#fff\"}}>Name</th>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`, backgroundColor: `${headColor}`, color:\"#fff\"}}>Message</th>\n              </tr>\n            </thead>\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\n                    <td>{p.sender}</td>\n                    <td style={{ width : \"460px\", overflow : \"wrap\"}}>\n                      {\n                        p.type == \"sent\" ?\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                          :\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                      }\n                      {p.message}\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <div>\n            <button className=\"customBtn\" onClick={ViewDiscussionToggel}>Cancel</button>\n          </div>\n        </ModalFooter>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default DiscardReport;\n\n","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/RejectedModal.js",["2809","2810","2811","2812"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  assignNo,\n  getPaymentStatus,\n}) {\n  const token = window.localStorage.getItem(\"tlToken\")\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"notes\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/declinePayment`,\n      headers: {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Marked as client declined payment.\")\n          getPaymentStatus();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Please provide the reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"customBtn\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/ViewAllReport.js",["2813","2814","2815","2816","2817","2818","2819","2820","2821","2822","2823","2824","2825","2826"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport * as yup from \"yup\";\nimport CommonServices from \"../../../common/common\";\nimport RejectedModal from \"./RejectModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport Swal from \"sweetalert2\";\nimport DiscardReport from \"./DiscardReport\";\nimport {Typography} from \"@material-ui/core\";\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  headColor,\n  dataItem\n}) {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const [data, setData] = useState([]);\n  const [docData, setDocData] = useState({});\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [nestedModal, setNestedModal] = useState(false);\n  const token = window.localStorage.getItem(\"tlToken\")\n\n  const toggleNested = (key) => {\n    setNestedModal(!nestedModal);\n    setDocData(key)\n  }\n\n \n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    // setDocData(report)\n  }\n  \n\n  //check\n  const toggleDiscard = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to discard ?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, discard it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n  const downloadpdf = (qid, name) => {\n    let userId, token;\n  \n    userId = window.localStorage.getItem(\"tlkey\");\n    token = window.localStorage.getItem(\"tlToken\")\n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/tl/viewreportdocument?assign_no=${report}&id=${qid}` , myConfig2)\n    .then((res) => {\n     \n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           console.log(res.headers)\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    \n    })\n   }\n   const downloadpdfclient = (qid, name) => {\n    let userId, token;\n  \n    userId = window.localStorage.getItem(\"tlkey\");\n    token = window.localStorage.getItem(\"tlToken\")\n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/tl/viewreportdocument?assign_no=${report}&id=${qid}&document=2` , myConfig2)\n    .then((res) => {\n     \n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           console.log(res.headers)\n           a.style = \"display: none\";\n           a.href = url;\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    })\n   }\n  const deleteCliente = (id) => {\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"type\", 2);\n    formData.append(\"docid\", id.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          getData()\n         \n          Alerts.SuccessNormal(\"Discarded Successfully\")\n          ViewReport()\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  useEffect(() => {\n    getData();\n  }, [report]);\n\n  const getData = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      headers : {\n        uit : token \n      },\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  }\n\n\n  return (\n    <div>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewReport}>\n           <Typography variant=\"h6\">\n           View All Report \n           </Typography>\n           <button class=\"autoWidthBtn\" onClick={() => ViewDiscussionToggel()}>\n                View Discussion\n              </button>\n        </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th style={{border: `1px solid ${headColor}`, color: \"#fff\", backgroundColor: `${headColor}` }}>S.No</th>\n                <th style={{border: `1px solid ${headColor}`, color: \"#fff\", backgroundColor: `${headColor}` , width: \"120px\"}}>Date</th>\n                <th style={{border: `1px solid ${headColor}`, color: \"#fff\", backgroundColor: `${headColor}`}}>Document</th>\n                <th style={{border: `1px solid ${headColor}`, color: \"#fff\", backgroundColor: `${headColor}` , width: \"150px\"}}>Report Type</th>\n                <th style={{border: `1px solid ${headColor}`, color: \"#fff\", backgroundColor: `${headColor}` , width: \"100px\"}}>Action</th>\n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                    <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                           <span onClick={() => downloadpdf(p.docid, p.document)} style={{display: \"flex\", cursor : \"pointer\"}}>\n                     <i className=\"fa fa-photo\"></i>\n                     \n                       \n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </span>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                     \n                     <span onClick={() => downloadpdfclient(p.docid, p.customer_files)} style={{display: \"flex\", cursor : \"pointer\"}}>\n                     <i className=\"fa fa-photo\"></i>\n                      \n                        &nbsp; &nbsp; &nbsp;{p.customer_files}\n                        </span>\n                    </tr> }\n                    </td>\n                  \n                    <td>\n                    <p>  {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\n                 <br>\n                 </br> \n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> } </td>\n                 <td>\n                  {p.stages_type === \"2\" ?\n                  <>\n                   {p.status === \"3\" ? \n                   <p className=\"declined\"> Discarded</p> : \n                   null}\n                   {\n                     p.status === \"1\" ?\n                     <div style={{ cursor: \"pointer\" }} title=\"Client Accepted\">\n                     <i\n                       class=\"fa fa-check\"\n                       style={{\n                         color: \"blue\",\n                         fontSize: \"16px\",\n                         marginLeft: \"10px\"\n                       }}\n                     ></i>\n                   </div> : null\n                   }\n                   {p.status === \"0\" || p.status === \"2\" ?\n                   <>\n                   {p.tlstatus === \"0\" ?\n                   <p className=\"declined\">Pending</p> :\n                   <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                    <div title=\"Discussion\">\n                      <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"green\"\n                        }}\n                      onClick = {() => toggleNested(p)}\n                      ></i>\n                    </div>\n                    <div title=\"Discard\">\n                      <i\n                        class=\"fa fa-times\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"red\"\n                        }}\n                       onClick={() => toggleDiscard(p)}\n                      ></i>\n                    </div>\n                  </div>}\n                   </> : null}</> : null}\n                 </td>\n                                </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <RejectedModal\n        toggleNested={toggleNested}\n        nestedModal={nestedModal}\n        dataItem={dataItem}\n        docData={docData}\n        getData={getData}\n      />\n\n\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        getData={getData}\n        headColor={headColor}\n      />\n\n    </div>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/RejectedModal.js",["2827","2828","2829"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  pay,\n  getPendingforAcceptance,\n}) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n  const { id, allocation_id } = pay;\n  const token = window.localStorage.getItem(\"tlToken\")\n  \n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", id);\n    formData.append(\"allocation_id\", allocation_id);\n    formData.append(\"reject_reason\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query rejected successfully.\")\n          getPendingforAcceptance();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here...\"\n              ></textarea>\n            </div>\n\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"customBtn\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/components/Search-Filter/tlFilter.js",["2830","2831","2832","2833","2834","2835","2836","2837","2838","2839","2840","2841","2842","2843","2844","2845","2846","2847","2848","2849"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction TeamFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    records,\n    setRecords,\n    setData,\n    getData,\n    AllQuery,\n   \n    InprogressQuery,\n    DeclinedQuery,\n    pendingForAcceptence,\n    completeAssignment,\n    AllProposal,\n    InprogressProposal,\n    proposal,\n    assignment,\n    AllPayment,\n    Unpaid,\n    Paid\n  } = props;\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [status1, setStatus1] = useState(1);\n\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n     if(selectedData.length != 0){\n      \n      axios\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n     }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n   \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n  \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n   \n    setSelectedData([]);\n    setStore2([]);\n    setTax2([])\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    setStatus1(1)\n    setTax2([])\n    getData();\n  };\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const onSubmit = (data) => {\n\n\n    if (AllQuery == \"AllQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n         \n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n\n    if (pendingForAcceptence == \"pendingForAcceptence\") {\n     \n      axios\n        .get(\n          `${baseUrl}/tl/pendingQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        , myConfig)\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n    if (InprogressQuery == \"InprogressQuery\") {\n\n     \n      axios\n        .get(\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=${status1}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        , myConfig)\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (DeclinedQuery == \"DeclinedQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        , myConfig)\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (completeAssignment == \"completeAssignment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getCompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        , myConfig)\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n    if (AllProposal == \"AllProposal\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (InprogressProposal == \"InprogressProposal\") {\n    if(data.p_status.length > 0){\n      axios\n      .get(\n        `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&status=${data.p_status}&pcat_id=${selectedData}`, myConfig\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setData(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n    }\n    else{\n      axios\n      .get(\n        `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&status=1&pcat_id=${selectedData}`, myConfig\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setData(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n    }\n    }\n    if (proposal === \"acceptedProposal\") {\n      \n        axios\n        .get(\n          `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=2&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n      }\n      \n  \n    if(proposal == \"proposal\"){\n      axios\n      .get(\n        `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=3&pcat_id=${selectedData}`\n      , myConfig)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setData(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n    }\n\n    if (AllPayment == \"AllPayment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        , myConfig)\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (Unpaid == \"Unpaid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\n        , myConfig)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (Paid == \"Paid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\n        , myConfig)\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          className=\"customBtn mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-inline\">\n                <div className=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    className=\"btnSearch mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    max={item}\n                  />\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    defaultValue={item}\n                    max={item}\n                  />\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n\n                  {AllQuery == \"AllQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress; Queries</option>\n                      <option value=\"2\">Completed; Queries</option>\n                      <option value=\"3\">Declined; Queries</option>\n                    </select>\n                  )}\n\n                  {InprogressQuery == \"InprogressQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                      onChange={(e) => setStatus1(e.target.value)}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress Acceptance</option>\n                      <option value=\"5\">Inprogress; Proposal</option>\n                      <option value=\"6\">Inprogress; Assignment</option>\n                    </select>\n                  )}\n\n\n                  {DeclinedQuery == \"DeclinedQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"3\">Client Declined; Proposals</option>\n                      <option value=\"4\">Client Declined; Payment</option>\n                    </select>\n                  )}\n\n                  {AllProposal == \"AllProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress; Proposals</option>\n                      <option value=\"2\">Accepted; Proposals</option>\n                      <option value=\"3\">Client Declined; Proposals</option>\n                    </select>\n                  )}\n\n                  {InprogressProposal == \"InprogressProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Preparation</option>\n                      <option value=\"5\">Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {AllPayment == \"AllPayment\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Unpaid</option>\n                      <option value=\"2\">Paid</option>\n                      <option value=\"3\">Declined</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"customBtn mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TeamFilter;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/FinalReportUpload.js",["2850","2851","2852","2853","2854"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction DraftReport({ des, loading, setLoading, fianlModal, uploadFinalReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n  const token = window.localStorage.getItem(\"tlToken\")\n\n  const onSubmit = (value) => {\n    des = false;\n    setLoading(true)\n\n    let formData = new FormData();\n\n    var uploadImg = value.p_final;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"final_report[]\", file);\n      }\n    }\n\n\n    formData.append(\"id\", id.id);\n    formData.append(\"q_id\", id.q_id);\n    axios\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          uit : token\n        },\n      })\n      .then((response) => {\n   \n        if (response.data.code === 1  && des === false) {\n          \n          setLoading(false)\n          des = true\n          var message = response.data.message\n          if (message.invalid) {\n            Swal.fire({\n              title: 'Error !',\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\n            })\n          } else if (message.faill && message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n              icon: 'success',\n            })\n          } else if (message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p>${message.success}</p>`,\n              icon: 'success',\n            })\n          }\n          else if (message.faill) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\n              icon: 'success',\n            })\n          }\n          getAssignmentList();\n          uploadFinalReport();\n          \n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_final\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"customBtn\">\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n // formData.append(\"final_report\", value.p_final[0]);","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportUpload.js",["2855","2856","2857","2858","2859"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\n\n\nfunction DraftReport({ loading, setLoading, draftModal, uploadDraftReport, id, getAssignmentList , des}) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n \n\n\n  const token = window.localStorage.getItem(\"tlToken\")\n  const onSubmit = (value) => {\n  \n    setLoading(true)\ndes = false;\n    let formData = new FormData();\n    var uploadImg = value.p_draft;\n   \n\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"draft_report[]\", file);\n      }\n    }\n\n    formData.append(\"id\", id);\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n      headers: {\n        'content-type': 'multipart/form-data',\n        uit : token\n      }\n    }).then(response => {\n    \n      if (response.data.code === 1 && des === false) {\n        des = true\n        setLoading(false)\n        var message = response.data.message\n        if (message.invalid) {\n          Swal.fire({\n            title: 'Error !',\n            html: `<p class=\"text-danger\">${message.invalid}</p>`,\n          })\n        } else if (message.faill && message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n            icon: 'success',\n          })\n        } else if (message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p>${message.success}</p>`,\n            icon: 'success',\n          })\n        }\n        else if (message.faill) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p>`,\n            icon: 'success',\n          })\n        }\n        getAssignmentList();\n        uploadDraftReport();\n      } else if (response.data.code === 0) {\n        setLoading(false)\n      }\n\n    });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_draft\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    className=\"customBtn\"\n                  >\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/Payment.js",["2860","2861"],"import { values } from \"lodash\";\nimport React from \"react\";\nimport { Spinner } from 'reactstrap';\n\nexport default class Payment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n        };\n    }\n\n    handleChange1(i, e) {\n        if (isNaN(e.target.value)) {\n            this.setState({ error: \"Please insert only digit\" })\n        }\n        else {\n            this.setState({ error: \"\" })\n        }\n        this.setState({\n            values: { ...this.state.values, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n\n    }\n\n    handleChange2(i, e) {\n        this.setState({\n            dates: { ...this.state.dates, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n    render() {\n        var fieldsArray = [];\n\n        for (var i = 1; i <= this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    <div class=\"col-md-6 my-2\">\n                      \n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name={this.state.values[i]}\n                            onChange={this.handleChange1.bind(this, i)}\n                        />\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n                    </div>\n\n                    <div class=\"col-md-6 my-2\">\n                      \n                        <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            name={this.state.dates[i]}\n                            onChange={this.handleChange2.bind(this, i)}\n                            min={this.props.item}\n                        />\n                    </div>\n                </div >\n            );\n        }\n\n        return (\n            <>\n           \n            <div className=\"inputs\">\n                {this.props.installment > 0 ?\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\n              <td>Payment</td>\n              <td>Due Dates</td>\n          </tr> : \"\"}\n          {fieldsArray}\n      </div>\n      </>\n        );\n    }\n}\n\n\n// import React from \"react\";\n\n// export default class Payment extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             values: [],\n//             dates: [],\n//         };\n//     }\n\n//     handleChange1(i, e) {\n//         if (isNaN(e.target.value)) {\n//             this.setState({ error: \"Please insert only digit\" })\n//         }\n//         else {\n//             this.setState({ error: \"\" })\n//         }\n//         this.setState({\n//             values: { ...this.state.values, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentAmount(this.state.values)\n//             })\n\n//     }\n\n//     handleChange2(i, e) {\n//         this.setState({\n//             dates: { ...this.state.dates, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentDate(this.state.dates)\n//             })\n\n//     }\n\n//     render() {\n//         var fieldsArray = [];\n\n//         for (var i = 1; i <= this.props.installment; i++) {\n//             fieldsArray.push(\n//                 <div className=\"row\">\n//                     <div class=\"col-md-6\">\n//                         <label>Amount</label>\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             name={this.state.values[i]}\n//                             onChange={this.handleChange1.bind(this, i)}\n//                         />\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n//                     </div>\n\n//                     <div class=\"col-md-6\">\n//                         <label>Due Dates</label>\n//                         <input\n//                             type=\"date\"\n//                             className=\"form-control\"\n//                             name={this.state.dates[i]}\n//                             onChange={this.handleChange2.bind(this, i)}\n//                             min={this.props.item}\n//                         />\n//                     </div>\n//                 </div >\n//             );\n//         }\n//         return (\n//             <div className=\"inputs\">\n//                 {fieldsArray}\n//             </div>\n//         );\n//     }\n// }\n","/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerFilter.js",["2862","2863","2864","2865","2866","2867","2868","2869","2870","2871","2872","2873","2874","2875","2876","2877","2878","2879","2880","2881","2882","2883","2884","2885","2886"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport {Link} from 'react-router-dom'\nfunction CustomerFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const { records,\n    setRecords, setData, getData, id,\n    query,\n    InprogressAllocation,\n    InprogressQueryProposal,\n    DeclinedQuery,\n\n    proposal,\n    inprogressProposal,\n    acceptedProposal,\n    declinedProposal,\n    allPayment,\n    paid,\n    unpaid,\n    assignment } = props;\n\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\nconst [loading, setLoading] = useState(false)\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n  const [item] = useState(current_date);\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n  useEffect(() => {\n    const getSubCategory = () => {\n     if(selectedData.length > 0){\n      axios\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`, myConfig)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n     }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n   \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    \n    setSelectedData([]);\n    setStore2([]);\n    setTax2([]);\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n\n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    setTax2([])\n    getData();\n  };\n\n  const onSubmit = (data) => {\n  setLoading(true)\n\n    if (query == \"query\") {\n\n      axios\n        .get(\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n           \n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    if (InprogressAllocation == \"InprogressAllocation\") {\n   \n     if(data.p_status.length > 0){\n      axios\n      .get(\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\n          id\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&status=${data.p_status}&pcat_id=${selectedData}`, myConfig\n      )\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setLoading(false)\n          if (res.data.result) {\n            setData(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      })\n      .catch((error) => {\n        ShowError.LoadingError(setLoading)\n       });\n     }\n     else{\n      axios\n      .get(\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\n          id\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&status=1&pcat_id=${selectedData}`, myConfig\n      )\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setLoading(false)\n          if (res.data.result) {\n            setData(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      })\n      .catch((error) => {\n        ShowError.LoadingError(setLoading)\n       });\n     }\n    }\n\n    if (InprogressQueryProposal == \"InprogressQueryProposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(id)}&status=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n\n    if (DeclinedQuery == \"DeclinedQuery\") {\n      axios\n        .get(\n          `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&pcat_id=${selectedData}&status=${data.p_status}`, myConfig\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n\n    if (proposal == \"proposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    if (inprogressProposal == \"inprogressProposal\") {\n     if(data.p_status){\n      axios\n      .get(\n        `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n          id\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&status=${data.p_status}&pcat_id=${selectedData}`, myConfig\n      )\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setLoading(false)\n          if (res.data.result) {\n            setData(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      })\n      .catch((error) => {\n        ShowError.LoadingError(setLoading)\n       });\n     }\n     else{\n      axios\n      .get(\n        `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n          id\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&status=1&pcat_id=${selectedData}`, myConfig\n      )\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setLoading(false)\n          if (res.data.result) {\n            setData(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      })\n      .catch((error) => {\n        ShowError.LoadingError(setLoading)\n       });\n     }\n    }\n\n    if (acceptedProposal == \"acceptedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=2&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    if (declinedProposal == \"declinedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=3&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n\n    if (assignment == \"assignment\") {\n      axios\n        .get(\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n    if (assignment == \"assignmentInprogress\") {\n      axios\n        .get(\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=1&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n    if (assignment == \"completeAssignment\") {\n      axios\n        .get(\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=2&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n    if (assignment == \"declinedAssignment\") {\n      axios\n        .get(\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=3&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    if (allPayment == \"allPayment\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n    if (unpaid == \"unpaid\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n    if (paid == \"paid\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`, myConfig\n        )\n        .then((res) => {\n      \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    \n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          className=\"searchBtn mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-inline\">\n      <div className=\"form-group mb-2\">\n        <Select\n         \n          placeholder=\"Select Category\"\n          defaultValue={[]}\n          onChange={handleCategory}\n          value={selectedData}\n        >\n          <Option value=\"1\" label=\"Compilance\">\n            <div className=\"demo-option-label-item\">Direct Tax</div>\n          </Option>\n          <Option value=\"2\" label=\"Compilance\">\n            <div className=\"demo-option-label-item\">Indirect Tax</div>\n          </Option>\n        </Select>\n      </div>\n        <div className=\"form-group mx-sm-1  mb-2\">\n        <Select\n          mode=\"multiple\"\n          style={{ width: 250 }}\n          placeholder=\"Select Sub Category\"\n          defaultValue={[]}\n          onChange={handleSubCategory}\n          value={store2}\n          allowClear\n        >\n          {tax2.map((p, index) => (\n            <Option value={p.id} key={index}>\n              {p.details}\n            </Option>\n          ))}\n        </Select>\n      </div>\n      <div className=\"form-group mx-sm-1  mb-2\">\n      <div>\n        <button\n          type=\"submit\"\n          className=\"btnSearch mb-2 ml-3\"\n          onClick={resetCategory}\n        >\n          X\n        </button>\n        </div>\n        </div>\n        <div className=\"form-group mx-sm-1  mb-2\">\n        <label className=\"form-select form-control\">From</label>\n      </div>\n      <div className=\"form-group mx-sm-1  mb-2\">\n        <input\n          type=\"date\"\n          name=\"p_dateFrom\"\n          className=\"form-select form-control\"\n          ref={register}\n          max={item}\n        />\n      </div>\n      <div className=\"form-group mx-sm-1  mb-2\">\n        <label className=\"form-select form-control\">To</label>\n      </div>\n      <div className=\"form-group mx-sm-1  mb-2\">\n        <input\n          type=\"date\"\n          name=\"p_dateTo\"\n          className=\"form-select form-control\"\n          ref={register}\n          defaultValue={item}\n          max={item}\n        />\n      </div>\n      <div className=\"form-group mx-sm-1  mb-2\">\n        {query == \"query\" && (\n          <select\n            className=\"form-select form-control\"\n            name=\"p_status\"\n            ref={register}\n            style={{ height: \"33px\" }}\n          >\n            <option value=\"\">--select--</option>\n            <option value=\"1\">Inprogress Queries</option>\n            <option value=\"2\">Completed Queries</option>\n            <option value=\"3\">Declined Queries</option>\n          </select>\n        )}\n\n        {InprogressAllocation == \"InprogressAllocation\" && (\n          <select\n            className=\"form-select form-control\"\n            name=\"p_status\"\n            ref={register}\n            style={{ height: \"33px\" }}\n          >\n            <option value=\"\">--select--</option>\n            <option value=\"4\">Inprogress; Allocation</option>\n            <option value=\"5\">Inprogress; Proposals</option>\n            <option value=\"6\">Inprogress; Assignments</option>\n          </select>\n        )}\n\n\n        {DeclinedQuery == \"DeclinedQuery\" && (\n          <select\n            className=\"form-select form-control\"\n            name=\"p_status\"\n            ref={register}\n            style={{ height: \"33px\" }}\n          >\n            <option value=\"\">--select--</option>\n            <option value=\"1\">Admin Declined; Queries</option>\n            <option value=\"2\">Client Declined; Queries</option>\n            <option value=\"3\">Client Declined; Proposals</option>\n            <option value=\"4\">Client Declined; Payment</option>\n          </select>\n        )}\n\n        {proposal == \"proposal\" && (\n          <select\n            className=\"form-select form-control\"\n            name=\"p_status\"\n            ref={register}\n            style={{ height: \"33px\" }}\n          >\n            <option value=\"\">--select--</option>\n            <option value=\"1\">Inprogress Proposals</option>\n            <option value=\"2\">Accepted Proposals</option>\n            <option value=\"3\">Declined Proposals</option>\n          </select>\n        )}\n\n        {inprogressProposal == \"inprogressProposal\" && (\n          <select\n            className=\"form-select form-control\"\n            name=\"p_status\"\n            ref={register}\n            style={{ height: \"33px\" }}\n          >\n            <option value=\"\">--select--</option>\n            <option value=\"4\">Inprogress; Preparation</option>\n            <option value=\"5\"> Inprogress; Acceptance</option>\n          </select>\n        )}\n\n        {allPayment == \"allPayment\" && (\n          <select\n            className=\"form-select form-control\"\n            name=\"p_status\"\n            ref={register}\n            style={{ height: \"33px\" }}\n          >\n            <option value=\"\">--select--</option>\n            <option value=\"1\">Unpaid</option>\n            <option value=\"2\">Paid</option>\n            <option value=\"3\">Declined</option>\n          </select>\n        )}\n\n        {assignment == \"assignment\" && (\n          <select\n            className=\"form-select form-control\"\n            name=\"p_status\"\n            ref={register}\n            style={{ height: \"33px\" }}\n          >\n            <option value=\"\">--select--</option>\n            <option value=\"1\">Inprogress</option>\n            <option value=\"2\">Completed</option>\n            <option value=\"3\">Payment Declined</option>\n          </select>\n        )}\n\n      </div>\n      {\n            loading ?\n              <Spinner color=\"primary\" />\n              :\n              <button type=\"submit\" className=\"searchBtn mx-sm-1 mb-2\">\n              Search\n            </button>\n          }\n      <Reset />\n{\nquery ?\n<div className=\"mx-sm-1\" style={{position: \"absolute\", top: \"50%\", right: \"10px\"}}>\n<span>\n<Link to=\"/customer/select-category\" style={{color : \"#fff\", textAlign: \"right\"}}>\n<button  className=\"autoWidthBtn mb-1\" style={{marginLeft : \"auto\", color : \"#fff\"}}>\nFresh Query \n</button> \n</Link>\n</span>\n</div>\n: \"\"\n}\n      </div>\n          </form>\n        </div>\n      </div>\n         \n    </>\n  );\n}\n\nexport default CustomerFilter;\n\n\n","/home/pooja/MazarsRepo/src/components/PendingForAllocation/History.js",["2887","2888","2889","2890","2891","2892","2893","2894","2895"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction History({ history,toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} fade={false} toggle={toggle} size=\"lg\">\n        <ModalHeader toggle={toggle}>History</ModalHeader>\n        <ModalBody>\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Query No</th>\n                <th scope=\"row\">Status</th>\n                <th scope=\"row\">Date of Allocation</th>\n                <th scope=\"row\">Notes</th>\n              </tr>\n            </thead>\n\n            {history.length > 0\n              ? history.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.name}</td>\n                      <td>{p.assign_no}</td>\n                      <td>{p.status}</td>\n                      <td>{p.date_of_allocation}</td>\n                      <td>{p.notes}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <button className= \"autoWidthBtn\" onClick={toggle}>\n            Cancel\n          </button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default History;\n","/home/pooja/MazarsRepo/src/components/Admin-Header/Admin-Header.js",["2896","2897"],"/home/pooja/MazarsRepo/src/components/Admin-Footer/Admin-Footer.js",[],"/home/pooja/MazarsRepo/src/components/Admin-Sidebar/Admin-Sidebar.js",["2898","2899","2900","2901","2902","2903","2904","2905","2906","2907","2908","2909","2910","2911","2912","2913","2914","2915","2916","2917","2918"],"import { NavLink } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ima from \"../../mazars_logo.png\";\nimport Collapse from '@mui/material/Collapse';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport { useHistory } from \"react-router\";\nimport './list.css';\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\nimport GroupAddOutlinedIcon from '@mui/icons-material/GroupAddOutlined';\nimport { makeStyles } from '@material-ui/core';\nimport ContactPageOutlinedIcon from '@mui/icons-material/ContactPageOutlined';\nimport ArticleOutlinedIcon from '@mui/icons-material/ArticleOutlined';\nimport LinkOutlinedIcon from '@mui/icons-material/LinkOutlined';\nimport TipsAndUpdatesOutlinedIcon from '@mui/icons-material/TipsAndUpdatesOutlined';\nimport QuizOutlinedIcon from '@mui/icons-material/QuizOutlined';\nimport UnsubscribeOutlinedIcon from '@mui/icons-material/UnsubscribeOutlined';\nimport PermMediaOutlinedIcon from '@mui/icons-material/PermMediaOutlined';\nimport MissedVideoCallIcon from '@mui/icons-material/MissedVideoCall';\nimport MediaBluetoothOffIcon from '@mui/icons-material/MediaBluetoothOff';\nfunction Sidebar({ adminDashboard, custDashboard, TLDashboard, TPDashboard , feedbackNumber}) {\n  const [toggleState, setToggleState] = useState(false);\n  const [feedbackNumber2, setfeedbackNumber2] = useState();\n  const [feedbackNumbertl, setfeedbackNumbertl] = useState();\n  const [feedbackNumbertp, setfeedbackNumbertp] = useState();\n  const [open2, setOpen2] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [logo, setLogo] = useState(\"customer/dashboard\")\n  const tlkey= window.localStorage.getItem(\"tlkey\");\n  const tpkey = window.localStorage.getItem(\"tpkey\");\n  const adminkey = window.localStorage.getItem(\"adminkey\")\n  let history = useHistory()\n  const toggleTab = (index) => {\n  \n    setToggleState(index);\n  };\n  const role = localStorage.getItem(\"role\")\nconst feedNumber = {\n  fontSize: \"10.5px\",\n  height: \"15px\",\n  backgroundColor: \"green\",\n  color: \"white\",\n  display: \"inline-block\",\n  margin: \"0px 0px 20px 0px\",\n  padding: \"9px 10px\",\n    borderRadius: \"50%\"\n}\nuseEffect(() => {\n  getFeedback4();\n}, [custDashboard])\n\n\nconst useStyle = makeStyles({\n  myTeamleader: {\n    fontSize: \"30px !important\",\n      opacity : \"0.6\",\n      fontWeight : 500,\n      color : \"#3B3B3B\", \n\n  },\n  myClassHover : {\n    '&:hover': {\n      cursor: 'pointer',\n    \n      \"& $myTeamleader\": {\n        color: \"#0071CE\"\n      }\n   }\n  },\n  myTeamleader2: {\n    fontSize: \"30px !important\",\n      opacity : \"0.6\",\n      fontWeight : 500,\n      color : \"#3B3B3B\", \n\n  },\n  myClassHover : {\n    '&:hover': {\n      cursor: 'pointer',\n    \n      \"& $myTeamleader2\": {\n        color: \"#0071CE\"\n      }\n   }\n  }\n});\nuseEffect(() => {\n  getFeedback2();\n}, [adminDashboard])\n\nconst getFeedback4 = () => {\n  setLogo(\"/#/customer/dashboard\")\n}\nconst getFeedback2 = () => {\n  if(adminDashboard !== undefined){\n    const token = window.localStorage.getItem(\"adminToken\")\n    const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n    axios.get(`${baseUrl}/admin/getFeedback?uid=${JSON.parse(adminkey)}&&type=total`, myConfig).then((res) => {\n      if(role === \"cms\"){\n        setLogo(\"/#/cms/cms\")\n       }\n       else{\n        setLogo(\"/#/admin/dashboard\")\n       }\n      if (res.data.code === 1) {\n       \n       if(res.data.result != undefined){\n         setfeedbackNumber2(res.data.result[0].total)\n         if(role === \"cms\"){\n          setLogo(\"/#/cms/cms\")\n         }\n         else{\n          setLogo(\"/#/admin/dashboard\")\n         }\n       }\n      }\n    });\n  }\n  if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\n    setOpen(true)\n  }\n\n};\nconst getFeedbacktl = () => {\n\n if(TLDashboard !== undefined){\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  axios\n  .get(`${baseUrl}/tl/getFeedback?tl_id=${JSON.parse(tlkey)}&type=total`, myConfig)\n  .then((res) => {\n    setLogo(\"teamleader/dashboard\")\n    if(res.data.result != undefined){\n     if(res.data.result[0]){\n      setfeedbackNumbertl(res.data.result[0].total)\n     }\n      setLogo(\"/#/teamleader/dashboard\")\n    }\n  });\n }\n if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\n  setOpen(true)\n}\n};\nuseEffect(() => {\n  getFeedbacktl();\n}, [TLDashboard])\n\nconst getFeedbacktp = () => {\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  if(TPDashboard !== undefined){\n    axios\n    .get(`${baseUrl}/tl/getFeedback?tp_id=${JSON.parse(tpkey)}&&type=total`, myConfig)\n    .then((res) => {\n      setLogo(\"taxprofessional/dashboard\")\n      if(res.data.result != undefined){\n         setfeedbackNumbertp(res.data.result[0].total)\n        setLogo(\"/#/taxprofessional/dashboard\")\n      }\n    });\n  }\n  if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\n    setOpen(true)\n  }\n};\nuseEffect(() => {\n  getFeedbacktp();\n}, [TPDashboard])\n\nconst handleClick = () => {\n\n  setOpen(!open);\n};\nconst handleClickCms = () => {\n  setOpen2(!open2)\n}\n\nconst classes = useStyle()\n  return (\n    <>\n{\n adminDashboard && role === \"cms\" ?\n  <>\n    <div\n        className=\"main-menu menu-fixed menu-light menu-accordion  menu-shadow \"\n        data-scroll-to-active=\"true\"\n        data-img=\"https://themeselection.com/demo/ chameleon-free-bootstrap-admin-template/theme-assets/images/backgrounds/02.jpg\"\n      >\n        <div className=\"navbar-header\">\n          <ul className=\"nav navbar-nav flex-row\">\n            <li className=\"nav-item mr-auto\">\n              <a className=\"navbar-brand\" href={logo} style={{display: \"flex\", height: \"75px\", padding: \"4px\", justifyContent: \"center\", alignItems: \"center\"}}>\n                \n                <img\n                  className=\"brand-logo\"\n                 \n                  src={`${ima}`}\n                  style={{display: \"flex\",  width: \"100%\", height: \"auto\", maxWidth:\"100px\", objectFit: \"contain\"}}\n                />\n              \n               \n              </a>\n            </li>\n            <li className=\"nav-item d-md-none\">\n              <a className=\"nav-link close-navbar\">\n                <i className=\"fa fa-times\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"main-menu-content\">\n\n            <ul\n              className=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li className=\"nav-item\">\n              \n                <NavLink to={\"/cms/cms\"} className={classes.myClassHover}>\n                <i class=\"\">\n                  <ArticleOutlinedIcon className={classes.myTeamleader}\n                  />\n                </i>\n    <span className=\"menu-title\" data-i18n=\"\">\n     Articles\n    </span>\n    </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n              <NavLink to={\"/cms/linklist\"} className={classes.myClassHover}>\n                <i class=\"\">\n                  <LinkOutlinedIcon className={classes.myTeamleader}\n                  />\n                </i>\n    <span className=\"menu-title\" data-i18n=\"\">\n    Important Links\n    </span>\n    </NavLink>\n                 \n              </li>\n\n              <li className=\"nav-item\">\n              <NavLink to={\"/cms/updates\"} className={classes.myClassHover}>\n                <i class=\"\">\n                  <TipsAndUpdatesOutlinedIcon className={classes.myTeamleader}\n                  />\n                </i>\n    <span className=\"menu-title\" data-i18n=\"\">\n   Updates\n    </span>\n    </NavLink>\n                   \n              </li>\n\n              <li className=\"nav-item\">\n               \n                \n     <NavLink to={\"/cms/faqlist\"} className={classes.myClassHover}>\n                <i class=\"\">\n                  <QuizOutlinedIcon className={classes.myTeamleader}\n                  />\n                </i>\n    <span className=\"menu-title\" data-i18n=\"\">\n    FAQ\n    </span>\n    </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n              <NavLink to={\"/cms/flash\"} className={classes.myClassHover}>\n                <i class=\"\">\n                  <UnsubscribeOutlinedIcon className={classes.myTeamleader}\n                  />\n                </i>\n    <span className=\"menu-title\" data-i18n=\"\">\n    Flash Updates\n    </span>\n    </NavLink>\n                 \n              </li>\n\n              <li className=\"nav-item\">\n            \n              <NavLink to={\"/cms/imagelist\"} className={classes.myClassHover}>\n                <i class=\"\">\n                  <PermMediaOutlinedIcon className={classes.myTeamleader}\n                  />\n                </i>\n    <span className=\"menu-title\" data-i18n=\"\">\n    Photo Gallery\n    </span>\n    </NavLink>\n              </li>\n              <li className=\"nav-item\">\n            \n              <NavLink to={\"/cms/videolist\"} className={classes.myClassHover}>\n                <i class=\"\">\n                  <MissedVideoCallIcon className={classes.myTeamleader}\n                  />\n                </i>\n    <span className=\"menu-title\" data-i18n=\"\">\n    Video Gallery\n    </span>\n    </NavLink>\n              </li>\n              <li className=\"nav-item\">\n            \n            <NavLink to={\"/cms/contentlist\"} className={classes.myClassHover}>\n              <i class=\"\">\n                <MediaBluetoothOffIcon className={classes.myTeamleader}\n                />\n              </i>\n  <span className=\"menu-title\" data-i18n=\"\">\n  Media News\n  </span>\n  </NavLink>\n            </li>\n\n\n             \n              \n\n            \n            \n            </ul>\n          </div>\n</div>\n  </> :\n  <>\n        <div\n        className=\"main-menu menu-fixed menu-light menu-accordion  menu-shadow \"\n        data-scroll-to-active=\"true\"\n        data-img=\"https://themeselection.com/demo/ chameleon-free-bootstrap-admin-template/theme-assets/images/backgrounds/02.jpg\"\n      >\n        <div className=\"navbar-header\">\n          <ul className=\"nav navbar-nav flex-row\">\n            <li className=\"nav-item mr-auto\">\n              <a className=\"navbar-brand\" href={logo} style={{display: \"flex\", height: \"75px\", padding: \"4px\", justifyContent: \"center\", alignItems: \"center\"}}>\n                \n                <img\n                  className=\"brand-logo\"\n                 \n                  src={`${ima}`}\n                  style={{display: \"flex\",  width: \"100%\", height: \"auto\", maxWidth:\"100px\", objectFit: \"contain\"}}\n                />\n              \n               \n              </a>\n            </li>\n            <li className=\"nav-item d-md-none\">\n              <a className=\"nav-link close-navbar\">\n                <i className=\"fa fa-times\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"main-menu-content\">\n          {custDashboard && (\n            <ul\n              className=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li className=\"nav-item\">\n                <NavLink to={\"/customer/dashboard\"}>\n                  <i className=\"fa\"> <span className=\"dashboardMenu\"></span></i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/customer/queries\"}>\n                <i className=\"fa\">\n                  <span className=\"queryMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/customer/proposal\"}>\n                <i className=\"fa\">\n                  <span className=\"proposalMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/customer/paymentstatus\"}>\n                <i className=\"fa\">\n                  <span className=\"paymentMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/customer/assignment\"}>\n                <i className=\"fa\">\n                  <span className=\"assignmentMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/customer/schedule\"}>\n                  \n\n                <i className=\"fa\">\n                  <span className=\"scheduleMenu\"></span>\n                </i>\n               \n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Schedule\n                  </span>\n                </NavLink>\n              </li>\n\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/customer/feedback-data\"}>\n                <i className=\"fa\">\n                  <span className=\"feedbackMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Feedback\n                  </span>\n                </NavLink>\n              </li>\n              \n\n              \n              <li className=\"nav-item\">\n                <NavLink to={\"/customer/contact\"}>\n                <i className=\"fa\">\n                  <span className=\"contactMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                   Contact Us\n                  </span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to={\"/customer/about\"}>\n                <i className=\"fa\">\n                  <span className=\"aboutMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                   About Us\n                  </span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to={\"/customer/modalmanual\"}>\n                <i className=\"fa\">\n                  <span className=\"helpMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                   Help \n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n\n          {adminDashboard && (\n            <ul\n              className=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li className=\"nav-item\">\n                <NavLink to={\"/admin/dashboard\"}>\n                  <i className=\"fa\"> <span className=\"dashboardMenu\"></span></i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/admin/queriestab\"}>\n                <i className=\"fa\">\n                  <span className=\"queryMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/admin/proposal\"}>\n                <i className=\"fa\">\n                  <span className=\"proposalMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/admin/adinvoice\"} className={classes.myClassHover}>\n              \n                 <i className=\"fa\">\n               <ContactPageOutlinedIcon  className={classes.myTeamleader2} />\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                   Invoice\n                  </span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to={\"/admin/paymentstatus\"}>\n                <i className=\"fa\">\n                  <span className=\"paymentMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/admin/assignment\"}>\n                <i className=\"fa\">\n                  <span className=\"assignmentMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                 \n              <ListItemButton  onMouseEnter={() => handleClick()}>\n        \n    \n<i className=\"listStyle\">\n                  <span className=\"scheduleMenu\"></span>\n                </i>\n\n\n                <span className=\"menu-title\" data-i18n=\"\">\n                  Schedule\n                </span>\n                {open ? <ExpandLess /> : <ExpandMore />}\n             \n\n      \n       \n      </ListItemButton>\n\n      <Collapse in={open}  unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <ul>\n                  <li>\n                  <NavLink to={\"/admin/schedule\"}>\n                  \n                <span className=\"menu-title\" data-i18n=\"\">\n                  Schedule\n                </span>\n                </NavLink>\n                  </li>\n                  <li>\n                  <NavLink to={\"/admin/recording\"}>\n                  \n                <span className=\"menu-title\" data-i18n=\"\">\n                Recording\n                </span>\n                </NavLink>\n                  </li>\n                </ul>\n        </List>\n      </Collapse>\n              </li>\n\n            \n\n              <li className=\"nav-item\">\n                <NavLink to={\"/admin/teamleaders\"} className={classes.myClassHover}>\n                <i class=\"\">\n                  <PersonOutlineIcon className={classes.myTeamleader}\n                  />\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Team Leaders\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/admin/taxprofessionals\"} className={classes.myClassHover}>\n                <i className=\"fa\">\n                <GroupAddOutlinedIcon className={classes.myTeamleader} />\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Tax Professionals\n                  </span>\n                </NavLink>\n              </li>\n               <li className =\"nav-item\">\n                 <NavLink to={\"/admin/customers\"} className={classes.myClassHover}>\n                 <i className=\"fa\">\n               <PersonAddAltIcon  className={classes.myTeamleader} />\n                </i>\n                   <span className=\"menu-title\" data-i18n=\"\">\n                  Client\n                  </span>\n                 </NavLink>\n               </li>\n               <li className =\"nav-item\">\n                 <NavLink to={\"/admin/reportlist\"}>\n                 <i className=\"fa\">\n                  <span className=\"reportMenu\"></span>\n                </i>\n                   <span className=\"menu-title\" data-i18n=\"\">\n                   Report\n                  </span>\n                 </NavLink>\n               </li>\n              <li className=\"nav-item\">\n                <NavLink to={\"/admin/feedback\"}>\n                <i className=\"fa\">\n                  <span className=\"feedbackMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                 Feedback <sup style={feedNumber}>{feedbackNumber2}</sup> \n          \n                  </span>\n                  {/* Feedback  <span className=\"badge\">{feedbackNumber2}</span> */}\n                </NavLink>\n              </li>\n             \n                 \n   \n            </ul>\n          )}\n\n          {TLDashboard && (\n            <ul\n              className=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li className=\"nav-item\">\n                <NavLink to={\"/teamleader/dashboard\"}>\n                  <i className=\"fa\"> <span className=\"dashboardMenu\"></span></i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/teamleader/queriestab\"}>\n                <i className=\"fa\">\n                  <span className=\"queryMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/teamleader/proposal\"}>\n                <i className=\"fa\">\n                  <span className=\"proposalMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n              \n                 <NavLink to={\"/teamleader/tlinvoice\"} className={classes.myClassHover}>\n                 <i className=\"fa\">\n               <ContactPageOutlinedIcon  className={classes.myTeamleader2} />\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                   Invoice\n                  </span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to={\"/teamleader/paymentstatus\"}>\n                <i className=\"fa\">\n                  <span className=\"paymentMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/teamleader/assignment\"}>\n                <i className=\"fa\">\n                  <span className=\"assignmentMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n           \n \n   \n              <li className=\"nav-item\">\n                 \n              <ListItemButton onMouseEnter={() => handleClick()}>\n              <i className=\"listStyle\">\n                  <span className=\"scheduleMenu\"></span>\n                </i>\n   \n      \n  \n  \n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Schedule\n                  </span>\n                  {open ? <ExpandLess /> : <ExpandMore />}\n             \n  \n        \n         \n        </ListItemButton>\n  \n      <Collapse in={open}  unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <ul>\n                  <li>\n                  <NavLink to={\"/teamleader/schedule\"}>\n                 \n                <span className=\"menu-title\" data-i18n=\"\">\n                  Schedule\n                </span>\n                </NavLink>\n                  </li>\n                  <li>\n                  <NavLink to={\"/teamleader/recording\"}>\n                 \n                <span className=\"menu-title\" data-i18n=\"\">\n                Recording\n                </span>\n                </NavLink>\n                  </li>\n                </ul>\n        </List>\n      </Collapse>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to={\"/teamleader/reports\"}>\n                <i className=\"fa\">\n                  <span className=\"reportMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Reports\n                  </span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to={\"/teamleader/addteamprof\"} className={classes.myClassHover}>\n                <i className=\"fa\">\n                <GroupAddOutlinedIcon  className={classes.myTeamleader} />\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    View T.P\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/teamleader/feedback\"}>\n                <i className=\"fa\">\n                  <span className=\"feedbackMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                  Feedback <sup style={feedNumber}>{feedbackNumbertl}</sup>\n                  </span>\n                </NavLink>\n              </li>\n              \n            \n            </ul>\n          )}\n\n          {TPDashboard && (\n            <ul\n              className=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n             <li className=\"nav-item\">\n                <NavLink to={\"/taxprofessional/dashboard\"}>\n                  <i className=\"fa\"> <span className=\"dashboardMenu\"></span></i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/taxprofessional/queriestab\"}>\n                <i className=\"fa\">\n                  <span className=\"queryMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/taxprofessional/proposal\"}>\n                <i className=\"fa\">\n                  <span className=\"proposalMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                <NavLink to={\"/taxprofessional/tpinvoice\"} className={classes.myClassHover}>\n                <i className=\"fa\">\n               <ContactPageOutlinedIcon  className={classes.myTeamleader2} />\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                   Invoice\n                  </span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to={\"/taxprofessional/paymentstatus\"}>\n                <i className=\"fa\">\n                  <span className=\"paymentMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to={\"/taxprofessional/assignment\"}>\n                <i className=\"fa\">\n                  <span className=\"assignmentMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item\">\n                 \n              <ListItemButton onMouseEnter={() => handleClick()}>\n        \n      \n              <i className=\"listStyle\">\n                  <span className=\"scheduleMenu\"></span>\n                </i>\n  \n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Schedule\n                  </span>\n                  {open ? <ExpandLess /> : <ExpandMore />}\n                \n  \n        \n         \n        </ListItemButton>\n  \n      <Collapse in={open}  unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <ul>\n                  <li>\n                  <NavLink to={\"/taxprofessional/schedule\"}>\n                 \n                <span className=\"menu-title\" data-i18n=\"\">\n                  Schedule\n                </span>\n                </NavLink>\n                  </li>\n                  <li>\n                  <NavLink to={\"/taxprofessional/recording\"}>\n\n                <span className=\"menu-title\" data-i18n=\"\">\n                Recording\n                </span>\n                </NavLink>\n                  </li>\n                </ul>\n        </List>\n      </Collapse>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to={\"/taxprofessional/reports\"}>\n                <i className=\"fa\">\n                  <span className=\"reportMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                    Reports\n                  </span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to={\"/taxprofessional/feedback\"}>\n                <i className=\"fa\">\n                  <span className=\"feedbackMenu\"></span>\n                </i>\n                  <span className=\"menu-title\" data-i18n=\"\">\n                  Feedback <sup style={feedNumber}>{feedbackNumbertp}</sup> \n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n        </div>\n        <div className=\"navigation-background\"></div>\n      </div>\n  </>\n}\n    </>\n  );\n}\n\nexport default Sidebar;\n","/home/pooja/MazarsRepo/src/components/Records/Records.js",[],"/home/pooja/MazarsRepo/src/pages/TL/Proposal/DeclinedProposal.js",["2919","2920","2921","2922","2923","2924","2925","2926","2927","2928","2929","2930","2931","2932","2933","2934"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\n\n\n\n\nfunction DeclinedProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n\n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`, myConfig)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n         \n            headerStyle: () => {\n                return { width: \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n         \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 3,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n           \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n          \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n           \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Client Declined; Proposal\" ?\n                                    <p className=\"declined\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"ProposedAmount\",\n            text: \"Proposed Amount\",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n           \n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\"}}>\n                       \n                       \n                                            <Link\n                                                to={{\n                                                    pathname: `/teamleader/chatting/${row.id}`,\n                                                    index : 3,\n                                                    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                               <MessageIcon />\n                                            </Link>\n                                            <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                           \n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                             <div  onClick={(e) => showProposalModal2(row.id)} title=\"View Proposal\">\n             <EyeIcon />\n              \n            </div>\n\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"proposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <DataTablepopulated \n                   bgColor=\"#5f7b97\"\n                   keyField= {\"assign_no\"}\n                   data={proposal}\n                   columns={columns}>\n                    </DataTablepopulated>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                        headColor=\"#5f7b97\"\n                    />\n                      <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default DeclinedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AcceptedProposal.js",["2935","2936","2937","2938","2939","2940","2941","2942","2943","2944","2945","2946","2947"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\n\nfunction AcceptedProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n    \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`, myConfig)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n           \n            headerStyle: () => {\n                return {  width: \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 2,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n         \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n\n                            {\n                                row.status == \"Accepted; Proposal\" ?\n                                    <p className=\"completed\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"ProposedAmount\",\n            text: \"Proposed Amount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n           \n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\"}}>\n                        \n                       \n                                            <Link\n                                              to={{\n                                                pathname: `/teamleader/chatting/${row.id}`,\n                                                index : 2,\n                                                routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                               <MessageIcon />\n                                            </Link>\n                                      \n                                        <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                           \n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                                 <div style={{ cursor: \"pointer\", marginLeft : \"2px\" }}   onClick={(e) => showProposalModal2(row.id)} title=\"View Proposal\">\n             <EyeIcon />\n              \n            </div>\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"acceptedProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <DataTablepopulated \n                   bgColor=\"#5f7b97\"\n                   keyField= {\"assign_no\"}\n                   data={proposal}\n                   columns={columns}>\n                    </DataTablepopulated>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                        headColor=\"#5f7b97\"\n                    />\n                     <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AcceptedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InprogressProposal.js",["2948","2949","2950","2951","2952","2953","2954","2955","2956","2957","2958","2959","2960"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, EditQuery, ActionIcon} from \"../../../components/Common/MessageIcon\";\n\n\nfunction InprogressProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n       setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`, myConfig)\n            .then((res) => {\n          \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { width: \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n          \n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 1,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n           \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n         \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n           \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"ProposedAmount\",\n            text: \"Proposed Amount\",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            \n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\" }}>\n                        <Link\n to={{\n    pathname: `/teamleader/chatting/${row.id}`,\n    index : 1,\n    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                              <MessageIcon />\n                                            </Link>\n                        <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n\n                      \n                                         \n                                       \n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n <Link \n to={{\n     pathname: `/teamleader/edit-proposal/${row.id}`,\n     index : 1,\n     routes: \"proposal\" }}>\n     <EditQuery titleName=\"Edit Proposal\"/>\n </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/teamleader/sendproposal/${row.id}`,\n                                        index : 1,\n                                        routes: \"proposal\" }}>\n                                      <ActionIcon titleName= \"Decision on proposal\" />\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                                 <div   onClick={(e) => showProposalModal2(row.id)} title=\"View Proposal\">\n                \n         <EyeIcon />\n              \n            </div>\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        InprogressProposal=\"InprogressProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <DataTablepopulated \n                   bgColor=\"#5f7b97\"\n                   keyField= {\"assign_no\"}\n                   data={proposal}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n                    <ChatHistory\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        qno={id}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                        headColor=\"#5f7b97\"\n                    />\n                      <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default InprogressProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AllProposal.js",["2961","2962","2963","2964","2965","2966","2967","2968","2969","2970","2971","2972","2973","2974","2975","2976","2977","2978","2979","2980"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport Tds from \"./Tds\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, EditQuery, ActionIcon} from \"../../../components/Common/MessageIcon\";\n\nfunction AllProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n\n\n    const [id, setId] = useState(null);\n    const [id2, setId2] = useState(null)\n    const [tds, setTds] = useState(false)\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n         setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n   const addTdsToggle = (key) => {\n     \n       setTdsForm(!tdsForm)\n   }\n   const showProposalModal2 = (e) => {\n    console.log(\"eeee\")\n    setViewProposalModal(!viewProposalModal);\n    setProposalId(e)\n  }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n      \n    useEffect(() => {\n        getProposalList();\n    }, []);\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`, myConfig)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            \n            headerStyle: () => {\n                return {  width: \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n          \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 0,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            \n           \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            \n           \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n           \n          \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n        \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <div>\n                                        {row.status}/\n                                        <p className=\"inprogress\">\n                                            {row.statusdescription}\n                                        </p>\n                                    </div>\n                                    :\n                                    row.status == \"Client Declined; Proposal\" ?\n                                        <p className=\"declined\">\n                                            {row.status}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.status}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"ProposedAmount\",\n            text: \"Proposed Amount\",\n            sort: true,\n            \n            \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n          \n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\"}}>\n                        <Link\n to={{\n    pathname: `/teamleader/chatting/${row.id}`,\n    index : 0,\n    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                               <MessageIcon />\n                                            </Link>\n                        <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                       \n\n                                      \n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/teamleader/edit-proposal/${row.id}`,\n                                        index : 0,\n                                        routes: \"proposal\" }}>\n                                      <EditQuery titleName=\"Edit Proposal\" />\n                                    </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/teamleader/sendproposal/${row.id}`,\n                                        index : 0,\n                                        routes: \"proposal\" }}>\n                                      <ActionIcon titleName=\"Dicision on propsal\"/>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                                 <div   onClick={(e) => showProposalModal2(row.id)} title=\"View Proposal\">\n                \n             <EyeIcon />\n            </div>\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        AllProposal=\"AllProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <DataTablepopulated \n          bgColor=\"#42566a\"\n          keyField= {\"assign_no\"}\n          data={proposal}\n          \n          columns={columns}>\n           </DataTablepopulated> \n                    <ChatHistory\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        qno={id}\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                        headColor=\"#42566a\"\n                    />\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    />\n                    {\n                        viewProposalModal === true ?\n                        <CommonShowProposal\n                        setViewProposalModal = {setViewProposalModal}\n                        viewProposalModal = {viewProposalModal}\n                        showProposalModal2 = {showProposalModal2}\n                        panel = \"teamleader\"\n                        proposalId = {proposalId}/>\n : \"\"              \n                    }\n                 \n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllProposal;\n\n\n\n\n{/* <div>\n                                {row.revised_text && (\n                                    <div style={{ cursor: \"pointer\" }} title=\"View History\">\n                                        <i\n                                            class=\"fa fa-comments-o\"\n                                            style={{ color: \"green\", fontSize: \"16px\", color: \"light-blue\", }}\n                                            onClick={() => chatHandler(row)}\n                                        ></i>\n                                    </div>\n                                )}\n                            </div> */}","/home/pooja/MazarsRepo/src/pages/TL/Login/VerifyOtpLogin.js",["2981"],"/home/pooja/MazarsRepo/src/pages/Admin/Report/ConsaltSearch.js",["2982","2983","2984","2985","2986"],"import React , {useState, useEffect} from 'react';\nimport { useForm } from 'react-hook-form';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { baseUrl, baseUrl3 } from '../../../config/config';\nconst ConsaltSearch = ({setData, getData}) => {\n    const [data2, setData2] = useState([]);\n    const [teamleader44, setTeamleader44] = useState(\"\")\n   \n    const today = new Date().getFullYear() + \"-\" + ('0' + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n    const prevDay = new Date().getFullYear() + \"-\" + ('0' + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + (new Date().getDate() - 1 )).slice(-2)\n    const [fDate, setFdate] = useState(prevDay)\n    const [tDate, settdate] = useState(today)\n    const [clientId, setClientId] = useState();\n    const [invoiceNum, setInvoiceNum] = useState()\n    const userid = window.localStorage.getItem(\"adminkey\")\n    var pp = []\n   \n    const { handleSubmit, register, errors, reset } = useForm()\n \n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n    \n      var dd = []\n      if (res.data.code === 1) {\n          console.log(\"res\", res.data.result)\n        pp.push(res.data.result)\n        setData2((res.data.result));\n       \n      }\n    });\n  };\n  useEffect(() => {\n      getTeamLeader()\n  }, [])\n    const options3 = data2.map(d => (\n        {\n          \"value\": d.post_name,\n          \"label\": d.postname\n        }))\n        const teamLeader = (a) => {\n            let tk = []\n               a.map((i) => {\n               \n              \n                tk.push(i.value)\n               })\n               setTeamleader44(tk)\n             \n             }\n    const onSubmit = (value) => {\n        let formData = new FormData();\n       formData.append(\"to_date\", value.to_date);\n       formData.append(\"form_date\", value.form_date);\n       formData.append(\"client_id\", value.client_id);\n       formData.append(\"invoice_number\", value.invoice_number);\n       formData.append(\"tl_post\", teamleader44)\n       formData.append(\"uid\", JSON.parse(userid));\n       axios({\n           method : \"POST\",\n           url : `${baseUrl}/report/paymentReport`,\n           data : formData\n       })\n       .then((res) => {\n           console.log(\"res\", res)\n           if(res.data.code === 1){\n               setData(res.data.result)\n           }\n       })\n    }\n    const downloadReport = () => {\n        let formData = new FormData();\n        formData.append(\"to_date\", tDate);\n        formData.append(\"form_date\", fDate);\n        formData.append(\"tl_post\", teamleader44 )\n        formData.append(\"client_id\", clientId);\n        formData.append(\"invoice_number\", invoiceNum);\n        formData.append(\"uid\", JSON.parse(userid));\n        axios({\n            method : \"POST\",\n            url : `${baseUrl}/report/downloadpaymentReport`,\n            data : formData\n        })\n        .then(function (response) {\n           if(response.data.code === 1){\n            window.open(`${baseUrl3}/${response.data.result}`)\n           }\n          // window.location.assign(`${baseUrl}/report/generateReport`)\n          })\n    }\n    const fromDate = (e) => {\n        setFdate(e.target.value)\n      \n    }\n    const toDate = (e) => {\n    \n      \n      settdate(e.target.value)\n    }\n    const refrehData = () => {\n     \n     axios.get(`${baseUrl}/tl/mobilpayTodayCall`)\n     .then((res) => {\n         if(res.data.code === 1) {\n            // getData()\n         }\n     })   \n    }\n    const clientFun = (e) => {\n  setClientId(e.target.value)    \n    }\n    const invoiceFun = (e) => {\n      setInvoiceNum(e.target.value)\n    }\n    return (\n      <form onSubmit = {handleSubmit(onSubmit)}>\n         <div className=\"row\">\n             <div className=\"col-md-3\">\n                 <label>From Date </label>\n                 <input\n          type=\"date\"\n          ref = {register}\n          onChange= {(e) => fromDate(e)}\n          defaultValue={prevDay}\n          max= {today}\n          name=\"form_date\"\n          className=\"form-control\" />\n                 </div>\n                 <div className=\"col-md-3\">\n                     <label>To Date </label>\n             <input\n          type=\"date\"\n          ref = {register}\n          onChange= {(e) => toDate(e)}\n          defaultValue={today}\n          max= {today}\n          name=\"to_date\"\n          className=\"form-control\" />\n                 </div>\n                 <div className=\"col-md-2\">\n                 <label>Client Id </label>\n                 <input\n          type=\"text\"\n          ref = {register}\n          onChange = {(e) => clientFun(e)}\n          name=\"client_id\"\n          className=\"form-control\" />\n                 </div> <div className=\"col-md-2\">\n                 <label>Invoice Number </label>\n                 <input\n          type=\"text\"\n          onChange = {(e) => invoiceFun(e)}\n          ref = {register}\n          name=\"invoice_number\"\n          className=\"form-control\" />\n                 </div>\n                 <div className=\"col-md-2\" style={{zIndex : \"1000\"}}>\n<label className=\"form-label\">Team Leader</label>\n<Select  isMulti={true}\noptions={options3}\n\nonChange= {(e) =>teamLeader(e)}/>\n</div>\n               \n         </div>\n         <div className=\"row\">\n           <div className=\"col-md-6\">\n           <button className=\"customBtn\">Search</button>\n           \n             </div>\n             <div className=\"col-md-6 my-2\" style={{display : \"flex\", justifyContent : \"flex-end\"}}>\n             <button type=\"button\" onClick={() => downloadReport()} className=\"autoWidthBtn mx-2\">Download</button>\n             <button type=\"button\" onClick={() => refrehData()} className=\"autoWidthBtn mx-2\">Pull payment data</button>\n             </div>\n         </div>\n      </form>\n    )\n}\nexport default ConsaltSearch;","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/CreateInvoice.js",["2987","2988","2989","2990","2991","2992","2993","2994"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nconst CreateInvoice = () => {\n    const userid = window.localStorage.getItem(\"adminkey\");\n    const [proposal, setProposal] = useState([]);\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    const [records, setRecords] = useState([]);\n    const token = window.localStorage.getItem(\"adminToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n   const addTdsToggle = (key) => {\n      \n     setGstinNo(key.gstin_no);\n       setTdsForm(!tdsForm)\n       setAssignNo(key.assign_no)\n       setPaidAmount(key.paid_amount)\n       setId(key.id)\n       setInstallmentNo(key.installment_no)\n       setBillNo(key.billno);\n       setId2(key.id)\n   }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?&invoice=0`, myConfig)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n          \n            headerStyle: () => {\n                return {  width: \"50px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            \n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"adinvoice\",\n                                \n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n           \n        }, \n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n         \n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Amount\",\n            dataField: \"paid_amount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        }, \n        \n       \n       \n       \n    ];\n\n    return (\n\n        <>\n            <Card>\n              \n                <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     setRec={setRecords}\n                     records={records}\n                     invoice = \"admincreate\" \n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n             \n                <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   data={proposal}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n                   \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                   {\n                       tdsForm && (\n                        <Tds \n                        tdsForm = {tdsForm}\n                        addTdsToggle = {addTdsToggle}\n                        id={id}\n                        paidAmount={paidAmount}\n                        report = {assignNo}\n                        installmentNo = {installmentNo}\n                        billNo = {billNo}\n                        id = {id2}\n                        gstNo = {gstNo}\n                        />\n                       )\n                   }\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default CreateInvoice;","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Generated.js",["2995","2996","2997","2998","2999","3000","3001","3002","3003","3004","3005","3006","3007","3008","3009","3010","3011","3012","3013","3014","3015"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\nimport moment from \"moment\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport Records from \"../../../components/Records/Records\";\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nconst Generated = () => {\n    var rowStyle2 = {}\n    const userid = window.localStorage.getItem(\"adminkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    const [showCopyUrl, setShowCopyUrl] = useState(\"click\")\n let copyTitle = \"\"\n const token = window.localStorage.getItem(\"adminToken\")\n const myConfig = {\n     headers : {\n      \"uit\" : token\n     }\n   }\n    const addTdsToggle = (key) => {\n   \n      setGstinNo(key.gstin_no);\n        setTdsForm(!tdsForm)\n        setAssignNo(key.assign_no)\n        setPaidAmount(key.paid_amount)\n        setId(key.id)\n        setInstallmentNo(key.installment_no)\n        setBillNo(key.billno);\n        setId2(key.id)\n    }\n \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?&invoice=1`, myConfig)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n    const downloadpdf = (qno, id, installmentNumber) => {\n        const myConfig2 = {\n            headers : {\n             \"uit\" : token\n            },\n            responseType: 'blob'\n          }\n        axios.get(`${baseUrl}/admin/viewinvoicepdf?assign_no=${qno}&invoice_id=${id}` , myConfig2)\n      .then((res) => {\n        console.log(\"res\", res)\n        if(res.status === 200){\n        //    window.open(URL.createObjectURL(res.data));\n           console.log(URL.createObjectURL(res.data))\n           window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           a.download = `invoice_${qno}_${installmentNumber}.pdf`\n           a.target = '_blank';\n           a.click();\n        }\n      })\n      }\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n          \n            headerStyle: () => {\n                return { width: \"50px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"adinvoice\",\n                                \n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            \n        },\n        {\n            text: \"Invoice No\",\n            dataField: \"billno\",\n            sort: true,\n           \n        },\n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n           \n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Invoice amount\",\n            dataField: \"invoice_amount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.invoice_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Tds Deducted\",\n            dataField: \"tds_amount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                var x = row.tds_amount;\n                \n                 \n                 return(\n                     <>\n                     {row.is_paid == \"0\" ?\n                     <p className=\"rightAli\">0</p> :   <p className=\"rightAli\">{nfObject.format(x)}</p>}\n                     </>\n                 \n                 )\n               }\n        }, \n        {\n            text: \"Status\",\n            dataField: \"is_paid\",\n            sort: true,\n          \n            formatter : function(cell, row) {\n                return(\n                    <>\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \n                    <>\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p style={{color : \"red\"}}>Declined</p>}\n                    </>}\n                    </>\n                )\n            }\n        }, \n      \n          \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n           \n            formatter: function (cell, row) {\n                copyTitle = row.paymenturl\n                return (\n                    <>\n                       {showCopyUrl === \"click\" ? \n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                                                    <span onClick={() => downloadpdf(row.assign_no, row.id, row.installment_no)} style={{cursor : \"pointer\"}} title=\"Download Invoice\">\n                         <DescriptionOutlinedIcon color=\"secondary\" />\n                         </span>\n                            \n                          \n                              {row.is_paid == \"0\" \n                ?   \n               \n                  \n                    <span title={row.paymenturl}>\n                    <FileCopyIcon onClick={() => {copyFun(row.paymenturl)}}  style={noPointer} />\n                                   </span> \n                  \n                \n                   \n              \n                    : \"\" }\n                        </div> : \"\"}\n                       \n                    </>\n                );\n            },\n        },\n    ];\n    \n    const noPointer = {cursor: 'pointer', color : \"blue\"};\n    const copyFun = (e)  =>{\n   \n        navigator.clipboard.writeText(e)\n  \n      }\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n         var cc = moment(row.due_date).toDate();\n        if(row.is_paid === \"2\"){\n            style.backgroundColor = \"#fff\";\n            style.color = \"#000\"\n        }\n         else if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n            style.backgroundColor = \"#bfdfd2\";\n          style.color = \"#000111\"\n        }\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n       \n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n  \n      \n    return (\n\n        <>\n            <Card>\n              \n             <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice=\"admingenerated\" \n                     setRec={setRecords}\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n              \n                <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   data={proposal}\n                   rowStyle2 = {rowStyle2}\n                   columns={columns}>\n                    </DataTablepopulated>\n                   \n                  \n                  {tdsForm && (\n                        <Tds \n                        tdsForm = {tdsForm}\n                        addTdsToggle = {addTdsToggle}\n                        id={id}\n                        paidAmount={paidAmount}\n                        report = {assignNo}\n                        installmentNo = {installmentNo}\n                        billNo = {billNo}\n                        id = {id2}\n                        generated = {\"edited\"}\n                        gstNo = {gstNo}\n                        />\n                  )}\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Generated;","/home/pooja/MazarsRepo/src/components/QueryDetails/Feedback.js",["3016"],"import React, { useState } from \"react\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction Feedback({ feedback }) {\n  \n\n    return (\n        <div>\n            <p\n                style={{\n                    textAlign: \"center\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                }}\n            >\n                Feedback\n            </p>\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th style={{ width: \"80px\" }}>S.No</th>\n                        <th style={{ width: \"200px\" }}>Date</th>\n                        <th>Feedback</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        feedback.map((p, i) => (\n                            <tr>\n                                <td>{i + 1}</td>\n                                <td style={{ display: \"flex\" , border : \"0px\"}}>\n                                    <p>{CommonServices.removeTime(p.created)}</p>\n                                    <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(p.created)}</p>\n                                </td>\n                                <td>{p.feedback}</td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Feedback;","/home/pooja/MazarsRepo/src/components/QueryDetails/QueryRecording.js",["3017","3018","3019","3020","3021","3022","3023","3024"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport ModalVideo from \"react-modal-video\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n    Button,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-modal-video/scss/modal-video.scss\";\nimport ReactHlsPlayer from 'react-hls-player'\nimport ReactPlayer from 'react-player';\nimport CloseIcon from '@material-ui/icons/Close';\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\n\n\n\nfunction QueryRecording(assingNo) {\n    // const userid = window.localStorage.getItem(\"tlkey\");\n    const [feedbackData, setFeedBackData] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [videoid, setVideoId] = useState(null);\n\n    const openModal = (videoContent) => {\n        setIsOpen(true);\n        setVideoId(videoContent);\n    };\n\n    useEffect(() => {\n\n        getRecording();\n    }, []);\n    const modalBox = {\n        display : \"flex\",\n        position : \"absolute\",\n        top : \"10%\",\n        left : \"0%\",\n        botttom: \"0%\", \n        right: \"0%\",\n       \n        width : \"100%\", \n        height: \"auto\"\n    }\n    const videoIcon = {\n        display : \"flex\", \n        justifyContent : \"space-around\", \n        alignItems : \"center\"\n    }\nconst canBtn = {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"10px\",\n    left: \"90%\",\n    padding: \"20px\",\n    cursor : \"pointer\",\n    color : \"red\"\n}\n\n    const getRecording = () => {\n        axios\n            .get(`${baseUrl}/tl/callRecordingPostlist?assign_id=${assingNo.assingNo}`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setFeedBackData(res.data.result);\n                }\n            });\n    };\n   \n   \n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            dataField: \"created_date\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_id\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n        },\n        \n        {\n            text: \"Participants\",\n            dataField: \"participants\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n        },\n       \n        {\n            text: \"Summary of Discussion\",\n            dataField: \"message\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"80px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                var recording = row.file.split(\",\");\n                let a = 1;\n                return (\n                    <>\n                        <div>\n                            {\n                                recording.map((record) => {\n                                   return(\n                                <>\n                                <p style={videoIcon}>\n                                <span>{a++}</span>   <i\n                                    className=\"material-icons\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        color: \"red\",\n                                        fontSize: \"25px\",\n                                    }}\n                                    onClick={() => openModal(record)}\n                                >\n                                    play_circle_outline\n                                 \n                                </i>\n                                </p>\n                                </>\n                                   )\n                                })\n                            }\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n  \n   \n    return (\n     \n           <div className=\"queryBox\">\n                <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"7\">\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\n                        </Col>\n                        <Col md=\"5\"></Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={feedbackData}\n                        columns={columns}\n                        rowIndex\n                    />\n                </CardBody>\n            </Card>\n            {isOpen === true ?\n          \n          <div className=\"modalBox\">\n          <div className=\"boxContainer\">\n          <div className=\"canBtn\"  title=\"cancel\">\n              <h4>Recording Player</h4>\n              <CloseIcon  onClick= {() => setIsOpen(false)} id=\"myBtn\"/> </div>\n         \n\n         <div className=\"my2\">\n         <ReactPlayer\n           url={videoid}\n           controls={true}\n           playing={true}\n           width='100%'\n           height='100%'\n          />\n             </div>\n          </div>\n     \n    </div>  : \"\"}\n           \n           </div>\n\n    );\n}\n\nexport default QueryRecording;","/home/pooja/MazarsRepo/src/components/QueryDetails/DraftReports.js",["3025","3026"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport CommonServices from \"../../common/common\";\n\nfunction DraftReports({ id }) {\n\n    \n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n\n    useEffect(() => {\n        getAssignmentData();\n    }, []);\n\n    const getAssignmentData = () => {\n        axios\n            .get(\n                `${baseUrl}/tl/getDcumentDeail?id=6&type=2`\n            )\n            .then((res) => {\n                if (res) {\n                  \n                    setAssignmentDisplay(res.data.result);\n                }\n            });\n    };\n\n    return (\n        <>\n            <div>\n                <p\n                    style={{\n                        textAlign: \"center\",\n                        color: \"black\",\n                        fontSize: \"18px\",\n                    }}\n                >\n                    Draft Reports\n                </p>\n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\n                            <th scope=\"col\">Data</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Draft Reports</th>\n                            <td>\n                                <tr>\n                                    <th>Date</th>\n                                    <th>Name</th>\n                                </tr>\n                                {assignmentDisplay.map((p, i) => (\n                                    <tr>\n                                        <td>{CommonServices.removeTime(p.date)}</td>\n                                        <td>\n                                            <a\n                                                href={`http://65.0.220.156/mazarapi/assets/upload/report/${p.name}`}\n                                                target=\"_blank\"\n                                            >\n                                                {p.name}\n                                            </a>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n}\n\nexport default DraftReports;\n","/home/pooja/MazarsRepo/src/components/QueryDetails/AddAdditionalQuery.js",["3027","3028"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { useAlert } from \"react-alert\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction AddAdditionalQuery({ addHandler, addModal, assingNo, getQuery }) {\n\n \n\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"upload\", value.p_upload[0]);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"File uploaded successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          getQuery();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n\n      });\n  };\n\n\n\n  return (\n    <>\n      <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\n        <ModalHeader toggle={addHandler}>\n          UPLOAD DOCUMENTS\n        </ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Upload Your Document</label>\n              <input\n                type=\"file\"\n                name=\"p_upload\"\n                ref={register}\n                className=\"form-control-file\"\n              />\n            </div>\n\n            <div className=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    onClick={addHandler}\n                    className=\"btn btn-primary\"\n                  >\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddAdditionalQuery;\n","/home/pooja/MazarsRepo/src/components/QueryDetails/AdditionalQuery.js",["3029","3030"],"import React from \"react\";\nimport CommonServices from \"../../common/common\";\n\nfunction AdditionalQuery({ displayQuery }) {\n  return (\n    <>\n      <div>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          ADDITIONAL QUERIES\n        </p>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n             \n              <th scope=\"col\">Date Submission</th>\n              <th scope=\"col\">Documents</th>\n            </tr>\n          </thead>\n          {displayQuery.map((p, i) => (\n            <tbody>\n              <tr key={i}>\n                {/* <td>{p.additional_queries}</td> */}\n                <td>{CommonServices.changeFormateDate(p.created)}</td>\n                <td>\n                  {p.upload_doc == \"\" ? (\n                    \"\"\n                  ) : (\n                    <p style={{ display: \"flex\" }}>\n                      <a\n                        href={`http://65.0.220.156/mazarapi/assets/image/${p.assign_no}/${p.upload_doc}`}\n                        target=\"_blank\"\n                      >\n                        <i className=\"fa fa-photo\"></i>\n                      </a>\n                      <p style={{ marginLeft: \"15px\" }}>{p.upload_doc}</p>\n                    </p>\n                  )}\n                </td>\n              </tr>\n            </tbody>\n          ))}\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default AdditionalQuery;\n","/home/pooja/MazarsRepo/src/components/QueryDetails/AssignmentDetails.js",["3031","3032","3033","3034","3035","3036","3037","3038","3039","3040","3041","3042","3043","3044","3045","3046","3047","3048","3049","3050","3051"],"import React from \"react\";\nimport CommonServices from \"../../common/common\";\nimport { ReportUrl } from \"../../config/config\";\nimport { baseUrl } from \"../../config/config\";\nimport axios from \"axios\";\nfunction AssignmentDetails({ p, panel, finalDate, submitData, customerQuery , diaplayAssignment, diaplayProposal, reports, assingNo }) {\n\n  const {\n    assignment_number,\n    assignment_date,\n    date_of_delivery,\n  } = diaplayAssignment;\n\n  const { cust_accept_date } = diaplayProposal;\n\n  const timeTaken = (a, b) => {\n    var date2 = CommonServices.removeTime(a);\n    var date1 = CommonServices.removeTime(b);\n\n  \n    var difference = Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\n   \n   \n  };\n  const downloadpdf = (qno, qid, name) => {\n    let userId, token;\n    if(panel === \"admin\"){\n      userId = window.localStorage.getItem(\"adminkey\");\n      token = window.localStorage.getItem(\"adminToken\")\n      const myConfig2 = {\n        headers : {\n         \"uit\" : token\n        },\n        responseType: 'blob'\n      }\n      axios.get(`${baseUrl}/admin/viewdocument?assign_no=${qno}&id=${qid}` , myConfig2)\n      .then((res) => {\n        console.log(\"res\", res)\n        if(res.status === 200){\n          window.URL = window.URL || window.webkitURL;\n             var url = window.URL.createObjectURL(res.data);\n             var a = document.createElement(\"a\");\n             document.body.appendChild(a);\n             a.style = \"display: none\";\n             a.href = url;\n             console.log(res.headers)\n             a.download = name;\n             a.target = '_blank';\n             a.click();\n        }\n      })\n     }\n  else if(panel === \"teamleader\"){\n    userId = window.localStorage.getItem(\"tlkey\");\n    token = window.localStorage.getItem(\"tlToken\")\n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/tl/viewdocument?assign_no=${qno}&id=${qid}` , myConfig2)\n    .then((res) => {\n      console.log(\"res\", res)\n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           console.log(res.headers)\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    })\n   }\n   else  if(panel === \"taxprofessional\"){\n    userId = window.localStorage.getItem(\"tpkey\");\n    token = window.localStorage.getItem(\"tptoken\")\n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/tl/viewdocument?assign_no=${qno}&id=${qid}` , myConfig2)\n    .then((res) => {\n      console.log(\"res\", res)\n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           console.log(res.headers)\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    })\n   }\n   else if(panel === \"client\"){\n    userId = window.localStorage.getItem(\"userid\");\n    token = window.localStorage.getItem(\"clientToken\")\n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/customers/viewdocument?assign_no=${qno}&id=${qid}` , myConfig2)\n    .then((res) => {\n      console.log(\"res\", res)\n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           console.log(res.headers)\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    })\n   }\n    \n  \n  }\n  console.log(\"reports\", reports)\n  return (\n    <>\n      <div className=\"queryBox\">\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          Assignment Details\n        </p>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Titles</th>\n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Assignment Number</th>\n              <td>{assignment_number}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Assignment Date</th>\n              <td>{CommonServices.removeTime(assignment_date)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Proposed Date of Completion</th>\n              <td>\n                {p.query_status >= 9 ? (\n                  <p>{CommonServices.removeTime(p.Exp_Delivery_Date)}</p>\n                ) : null}\n              </td>\n            </tr>\n            {/* {p.query_status >= 9 ? ( */}\n            <tr>\n              <th scope=\"row\">Assignment Status</th>\n              <td>\n                <tr style={{display : \"flex\"}}>\n                  <th  style={{display : \"flex\", width : \"200px\"}}>Assignment Stage</th>\n                  <th  style={{display : \"flex\", width : \"200px\"}}>Status</th>\n                </tr>\n               <tr style={{display : \"flex\"}}>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>Client Discussion</td>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>{CommonServices.capitalizeFirstLetter(p.client_discussion)}</td>\n                </tr>\n               <tr style={{display : \"flex\"}}>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>Draft Reports</td>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>{CommonServices.capitalizeFirstLetter(p.draft_report)}</td>\n                </tr>\n               <tr style={{display : \"flex\"}}>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>Final Discussion</td>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>{CommonServices.capitalizeFirstLetter(p.final_discussion)}</td>\n                </tr>\n               <tr style={{display : \"flex\"}}>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>Delivery of Final Reports</td>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>{CommonServices.capitalizeFirstLetter(p.delivery_report)}</td>\n                </tr>\n               <tr style={{display : \"flex\"}}>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>Awaiting Completion</td>\n                  <td  style={{display : \"flex\", width : \"200px\"}}>{CommonServices.capitalizeFirstLetter(p.other_stage)}</td>\n                </tr>\n              </td>\n            </tr>\n            {/* ) : null} */}\n            <tr>\n              <th scope=\"row\">Time taken to complete the assignment</th>\n              <td>\n                {p.client_discussion == \"completed\" &&\n                  p.delivery_report == \"completed\" &&\n                  p.draft_report == \"completed\" &&\n                  p.final_discussion == \"completed\"\n               \n                  ? finalDate + \" Days\"\n                  : null}\n              </td>\n            </tr>\n\n            <tr>\n              <th scope=\"row\">Reports</th>\n              <td>\n                {\n                  reports.map((p, i) => (\n                    \n                    <>\n                      {customerQuery == \"customerQuery\" && submitData[0].paid_status == \"2\" ? null :\n                      <tr style={{display : \"flex\", width : \"500px\"}}>\n                        <td style={{display : \"flex\", width : \"50px\"}}>{i + 1}</td>\n                        <td style={{display : \"flex\", width : \"200px\"}}>\n                          {/* <a\n                            href={`${ReportUrl}/${assingNo}/${p.document}`}\n                            target=\"_blank\"\n                          >\n                            <i className=\"fa fa-photo\"></i> {p.document}\n                          </a> */}\n                           <span onClick={() => downloadpdf(assingNo, p.docid, p.document)}>\n                     <i className=\"fa fa-photo\"></i> {p.document}\n                       </span>\n                        </td>\n                        <td style={{display : \"flex\", width: \"150px\", color: \"green\" }}>\n                          {p.stages_type == 2 && p.revise_report == null && \"Draft Report\" || p.stages_type == 3 && p.revise_report == null && \"Final Report\" || p.revise_report != null && \"Draft Report\"}\n                        </td>\n                        {p.status == \"3\"\n                            ?\n                        <td style={{display : \"flex\", width : \"100px\"}}>\n                         \n                            <p className=\"declined\">Discarded</p>\n                            \n                        </td> : <td style={{display : \"flex\", width : \"200px\"}}></td>}\n                      </tr> }\n                    </>\n                  ))\n                }\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default AssignmentDetails;\n","/home/pooja/MazarsRepo/src/components/Footer/Footer.js",["3052","3053","3054","3055","3056","3057"],"/home/pooja/MazarsRepo/src/components/Header/Header.js",["3058","3059","3060","3061","3062","3063"],"import { Link, NavLink, useHistory } from \"react-router-dom\";\nimport \"../../assets/css/style.css\";\nimport mazars from \"../../mazars_logo.png\";\nimport { baseUrl } from \"../../config/config\";\nimport axios from \"axios\";\nimport {useState} from 'react';\nimport Collapse from '@mui/material/Collapse';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport List from '@mui/material/List';\nimport Cookies from \"js-cookie\";\nfunction Header({ id, cust_sign, noAdminSign, noTlSign, \n  noTpSign, admin, mtl, mtp, noSign, loginOTP, getData, showCook }) {\n  let history = useHistory();\n\n  const custLogout = () => {\n    localStorage.removeItem(\"userid\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"uid\");\n    localStorage.removeItem(\"category\");\n    history.push(\"/customer/signin\");\n  }\n\n\n\n  return (\n    <>\n      <div className=\"header\">\n        {id && (\n         \n            <Link to=\"/customer/questionnaire-page\">\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\n            </Link>\n         \n        )}\n\n        {cust_sign && (\n          <div className=\"noSignINBox\">\n            <Link to=\"/\">\n              <img className=\"logo\" src=\"https://www.mazars.co.in/extension/ezmazars_rwdesign/design/mazars2020/images/mazars-logo.png\" className=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        {noSign && (\n          <div style = {{display : \"flex\", width: \"100%\", alignItems: \"center\",  justifyContent: \"space-between\"}}>\n              <Link to=\"/\">\n              <img src={mazars} className=\"logo\" alt=\"mazar\"/>\n            </Link>\n          <div>\n        <CmsCont getData= {getData} showCook = {showCook}/>\n            </div>\n          </div>\n        )}\n\n\n        {loginOTP && (\n          <div>\n            <img src={mazars} className=\"logo\" alt=\"mazar\"/>\n          </div>\n        )}\n\n        {admin && (\n          <div>\n            <Link to=\"/admin/start\">\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        {mtl && (\n          <div>\n            <Link to=\"/teamleader/start\">\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        {mtp && (\n          <div>\n            <Link to=\"/taxprofessional/start\">\n              <img src={mazars} className=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        <div className=\"noSignINBox\">\n          {id && (\n            <ul className=\"menu\">\n              <li style={{ color: \"#fff\" }}>{id}</li>\n              <li onClick={custLogout} style={{ color: \"#fff\" }}>\n                <i className=\"fa fa-sign-out\">logout</i>\n              </li>\n            </ul>\n          )}\n\n          {cust_sign && (\n            <button className=\"customBtn\">\n            <Link className=\"SignUpLink\"\n              to={{\n                pathname: \"/\",\n              }}\n            >\n              Sign In\n            </Link>\n          </button>\n           \n          \n           \n          )}\n         \n          {admin && !noAdminSign && (\n             <button className=\"customBtn\">\n             <Link className=\"SignUpLink\"\n               to={{\n                 pathname: \"/admin/login\",\n               }}\n             >\n               Sign In\n             </Link>\n           </button>\n          )}\n\n          {mtl && !noTlSign && (\n  <button className=\"customBtn\">\n  <Link className=\"SignUpLink\"\n    to={{\n      pathname: \"/teamleader/login\",\n    }}\n  >\n    Sign In\n  </Link>\n</button>\n          )}\n\n          {mtp && !noTpSign && (\n             <button className=\"customBtn\">\n             <Link className=\"SignUpLink\"\n               to={{\n                 pathname: \"/taxprofessional/login\",\n               }}\n             >\n               Sign In\n             </Link>\n           </button>\n          )}\n\n\n\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Header;\n\nconst CmsCont = (props) => {\n  const [open, setOpen] = useState(false)\n  const [open2, setOpen2] = useState(false)\n  let history = useHistory()\n  const handleClickOn = () => {\n    setOpen(false);\n  };\n  const handleClickOff = () => {\n\n    setOpen(true);\n  };\n  const handleClickOn2 = () => {\n\n    setOpen2(false);\n  };\n  const handleClickOff2 = () => {\nconsole.log(\"header fixed\")\n    setOpen2(true);\n  };\n  const cookieEnable = Cookies.get(\"accept\")\n  const myLink = (e) => {\n   if(cookieEnable){\n     if(e === \"direct\"){\n      history.push(\"/customer/direct\")\n     }\n     else if(e === \"indirect\"){\n       history.push(\"/customer/indirect\")\n     }\n     else if (e === \"photo\"){\n       history.push(\"/customer/media\")\n     }\n     else if (e === \"video\"){\n      history.push(\"/customer/videolist\")\n    }\n    else if (e === \"mediacontent\"){\n      history.push(\"/customer/mediacontent\")\n    }\n    else if (e === \"faqlist\"){\n      history.push(\"/customer/faq-question\")\n    }\n    else if (e === \"linklist\"){\n      history.push(\"/customer/link\")\n    }\n     \n    else if (e === \"updatelist\"){\n      history.push(\"/customer/updates\")\n    }\n   }\n   else{\n    \nprops.showCook(\"showCookies\")\n   }\n  }\n  return(\n    <>\n<div className=\"clientSubMenu\">\n  <li className=\"nav-item tabHoverLinksubMenu\"  onMouseEnter={() => handleClickOff()}  onMouseLeave = {() => handleClickOn()}>\n       <ListItemButton>\n       <span className=\"nav-item\">\n                     Articles\n                   </span>\n</ListItemButton>\n   \n         <Collapse in={open}  unmountOnExit>\n           <List component=\"div\" className=\"myLink22\">\n           <ul>\n                \n                  \n                     <li className=\"tabHover mx-1\" onClick = {() => myLink(\"direct\")}>\n                   <span className=\"menu-title\" data-i18n=\"\">\n                  Direct Tax\n                   </span>\n                   </li>\n                 \n                   \n                    \n                    \n                     <li className=\"tabHover mx-1\" onClick = {() => myLink(\"indirect\")}>\n                   <span className=\"menu-title\" data-i18n=\"\">\n                Indirect Tax\n                   </span>\n                   </li>\n                  \n                    \n                   </ul>\n           </List>\n         </Collapse>\n                 </li>\n   \n         <li className=\"nav-item headerHover\" onClick = {() => myLink(\"updatelist\")}> \n   \n      Updates\n  \n</li>\n\n      <li className=\"nav-item headerHover\" onClick = {() => myLink(\"linklist\")}> \n   \n       Important Links\n    \n</li>\n      <li className=\"nav-item tabHoverLinksubMenu\" \n         onMouseLeave = {() => handleClickOn2()}>\n                 \n                 <ListItemButton \n                 onMouseEnter={() => handleClickOff2()}>\n   <span className=\"nav-item\">\n                  Media Gallery\n                   </span>\n         </ListItemButton>  \n         <Collapse in={open2}  unmountOnExit>\n           <List component=\"div\" className=\"myLink22\">\n           <ul>\n                \n               \n   <li className=\"tabHover mx-1\" onClick = {() => myLink(\"photo\")}>\n                   <span className=\"menu-title\" data-i18n=\"\">\n               Photo Gallery\n                   </span>\n                   </li>\n   \n                   \n                    \n                   \n                     <li className=\"tabHover mx-1\" onClick = {() => myLink(\"video\")}>\n                   <span className=\"menu-title\" data-i18n=\"\">\n              Video Gallery\n                   </span>\n                   </li>\n                   \n                  \n                     <li className=\"tabHover mx-1\" onClick = {() => myLink(\"mediacontent\")}>\n                   <span className=\"menu-title\" data-i18n=\"\">\n                       Media news\n                   </span>\n                   </li>\n                   \n                    \n                   </ul>\n           </List>\n         </Collapse>\n                 </li>\n   \n                 <li className=\"nav-item headerHover\" onClick = {() => myLink(\"faqlist\")}> \n    {/* <NavLink \n    to = {{\n  pathname : \"/customer/updates\",\n  index : 4\n}} > */}\n \n      FAQs\n   \n    </li>\n</div>\n    </>\n  )\n}\n","/home/pooja/MazarsRepo/src/components/QueryDetails/ProposalDetails.js",["3064","3065","3066","3067","3068","3069","3070","3071","3072","3073","3074","3075","3076","3077","3078","3079","3080","3081"],"import React, { useState, useEffect } from \"react\";\nimport CommonServices from \"../../common/common\";\nimport { baseUrl, baseUrl3 } from \"../../config/config\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\n\nimport axios from \"axios\";\nimport { Markup } from 'interweave';\nfunction ProposalDetails({\n  diaplayProposal,\n  diaplayHistory,\n  paymentDetails,\n  p,\n  accept,\n  tlName2,\n  tpStatus,\n  tp22, \n  panel,\n  overDue\n}) {\n\n  const {\n    amount,\n    accepted_amount,\n    payment_received,\n    cust_accept_date,\n    proposal_date,\n    description,\n\n    amount_type,\n    amount_fixed,\n    amount_hourly,\n\n    payment_terms,\n    no_of_installment,\n    installment_amount,\n    due_date,\n    proposal_reactive_dates,\n    proposal_reactive_notes\n    \n  } = diaplayProposal;\n\n  const { tlname, date_of_allocation } = diaplayHistory;\n  \n  var nfObject = new Intl.NumberFormat('hi-IN')\n \nconst downloadpdf = () => {\n  const token = window.localStorage.getItem(\"adminToken\")\n    \n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n if(panel === \"admin\"){\n  axios.get(`${baseUrl}/admin/dounloadpdf?id=${p.id}` , myConfig)\n  .then((res) => {\n    console.log(\"res\", res)\n    if(res.status === 200){\n       window.open(URL.createObjectURL(res.data));\n    }\n  })\n }\n else if (panel === \"teamleader\") {\n  const token = window.localStorage.getItem(\"tlToken\")\n    \n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n  axios.get(`${baseUrl}/tl/dounloadpdf?id=${p.id}` , myConfig)\n  .then((res) => {\n    console.log(\"res\", res)\n    if(res.status === 200){\n       window.open(URL.createObjectURL(res.data));\n    }\n  })\n }\n else if (panel === \"taxprofessional\"){\n  const token = window.localStorage.getItem(\"tptoken\")\n    \n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n  axios.get(`${baseUrl}/tl/dounloadpdf?id=${p.id}` , myConfig)\n  .then((res) => {\n    console.log(\"res\", res)\n    if(res.status === 200){\n       window.open(URL.createObjectURL(res.data));\n    }\n  })\n }\n else if (panel === \"client\"){\n  const token = window.localStorage.getItem(\"clientToken\")\n    \n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n  axios.get(`${baseUrl}/customers/dounloadpdf?id=${p.id}` , myConfig)\n  .then((res) => {\n    console.log(\"res\", res)\n    if(res.status === 200){\n       window.open(URL.createObjectURL(res.data));\n    }\n  })\n }\n}\n  //installment\n  const installAmount = (data) => {\n    var item = data.split(',')\n   \n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\n  const installAmount2 = (data) => {\n    var item = data.split(',')\n   \n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{nfObject.format(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\n  // curent date\n  var date = new Date();\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n\n  const [currentDate] = useState(convert(date));\n \n\n  const dataCheck = (dateArr) => {\n    let duedd = 0\n\n    for (let i = 0; i < dateArr.length; i++) {\n      if (dateArr[i] < currentDate) {\n\n       duedd++;\n      }\n    }\n    return duedd\n  }\n\n  const dueDate = (a, b) => {\n    var item1 = a.split(',')\n    var item2 = b.split(',')\n\n    var due = dataCheck(item2);\n\n   \n\n    //total installment\nlet nd = 0;\n    var total_Installment = 0;\n    for (var i = 1; i <= due; i++) {\n      let pk  = Number(item1[i])\n      // total_Installment = total_Installment + item1[i];\n      console.log(\"item\", item1[i])\n      console.log(total_Installment + pk)\n     \n     if(item1[i] !== undefined){\n      total_Installment = total_Installment + pk;\n     }\n      nd = total_Installment + pk;\n    }\n\n\n    //total payment history\n    var total_Payment_History = paymentDetails.reduce(function (prev, current) {\n      return prev + +current.paid_amount\n    }, 0);\n\n\n    console.log(\"PaymenHistory\", total_Payment_History)\n\n    var amount =  total_Payment_History - total_Installment \n\n\n    if (amount > 0) {\n      if(payment_received){\n        return (accepted_amount - payment_received)\n      }\n      else{\n        return total_Payment_History\n      }\n    }\n  }\n  return (\n    <>\n      <div className=\"queryBox\">\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          Proposal and Payment Details\n        </p>\n\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Titles</th>\n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Date of Allocation</th>\n              <td>{accept > \"1\" ? CommonServices.changeFormateDate(date_of_allocation) : \"\"}</td>\n            </tr>\n            \n            \n            <tr>\n              <th scope=\"row\">Name of Team Leader</th>\n              <td>{accept > \"1\" ? tlName2 : \"\"}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Name of Tax Professional(s)</th>\n              <td>{tpStatus == \"2\" ? tp22 : \"\"}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Date of Proposal</th>\n              <td>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                  {CommonServices.removeTime(proposal_date)}\n                  {proposal_date && (\n                    // <a\n                    //   className=\"customBtn\"\n                    //   href={`${baseUrl}/customers/dounloadpdf?id=${p.id}`}\n                    //   role=\"button\"\n                    // >\n                    //   Download\n                    // </a>\n                    <button className=\"customBtn\" onClick={() => downloadpdf()}>\n                      Download\n                      </button>\n                  )}\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Scope of Work</th>\n              <td className=\"tableStyle\"> <Markup content={description} /></td>\n            </tr>\n\n            <tr>\n              <th scope=\"row\">Amount</th>\n              <td>\n                <tr style={{display : \"flex\", width : \"100%\"}}>\n                  <th style={{display : \"flex\", width : \"50%\"}}>Amount Type</th>\n                  <th style={{display : \"flex\", width : \"50%\"}}>Price</th>\n                </tr>\n                <tr style={{display : \"flex\", width : \"100%\"}}>\n                  <td style={{display : \"flex\", width : \"50%\"}}>{CommonServices.capitalizeFirstLetter(amount_type)}</td>\n                  <td style={{display : \"flex\", width : \"50%\", justifyContent : \"flex-start\"}}>\n                    {\n                      amount_type == \"fixed\" ?\n                       nfObject.format(amount_fixed)\n                        :\n                        amount_type == \"hourly\" ?\n                        nfObject.format(amount_hourly) \n                          :\n                          amount_type == \"mixed\" ?\n                            <div>\n                              <p>Fixed : {nfObject.format(amount_fixed)}</p>\n                              <p>Hourly : {nfObject.format(amount_hourly)}</p>\n                            </div>\n                            :\n                            \"\"\n                    }\n                  </td>\n                </tr>\n              </td>\n            </tr>\n\n            <tr>\n              <th scope=\"row\">Payment Terms</th>\n              {\n                payment_terms == \"lumpsum\" ?\n                  <td>\n                    <tr>\n                      <th>Payment Type</th>\n                      <th>Due Dates</th>\n                    </tr>\n                    <tr>\n                      <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\n                      <td>\n                        {CommonServices.removeTime(due_date)}\n                      </td>\n                    </tr>\n                  </td>\n                  :\n                  payment_terms == \"installment\" ?\n                    <td>\n                      <tr style={{display : \"flex\", width : \"100%\"}}>\n                        <th style={{display : \"flex\", width : \"25%\"}}>Payment Type</th>\n                        <th style={{display : \"flex\", width : \"25%\"}}>No of Installments</th>\n                        <th style={{display : \"flex\", width : \"25%\"}}>Installment Amount</th>\n                        <th style={{display : \"flex\", width : \"25%\"}}>Due Dates</th>\n                      \n                      </tr>\n                      <tr style={{display : \"flex\", width : \"100%\"}}>\n                       \n                        <td style={{display : \"flex\", width : \"25%\"}}>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\n                        <td style={{display : \"flex\", width : \"25%\", justifyContent : \"center\"}}>{no_of_installment}</td>\n                        <td style={{display : \"flex\", width : \"25%\", flexDirection : \"column\", textAlign : \"right\"}}>{installAmount2(installment_amount)}</td>\n                        <td style={{display : \"flex\", width : \"25%\", flexDirection : \"column\"}}>{installAmount(due_date)}</td>\n                        \n                      </tr>\n                    </td>\n                    :\n                    \"\"\n              }\n\n            </tr>\n            <tr>\n              <th scope=\"row\">Proposed Amount</th>\n              <td>{nfObject.format(amount)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Proposal Status</th>\n              <td>\n                {p.query_status == \"4\" && \"Inprogress\"}\n                {p.query_status == \"6\" && \"Declined\"}\n                {(p.query_status == \"5\" || p.query_status > 6) && \"Accepted\"}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Amount Accepted</th>\n              <td>{nfObject.format(accepted_amount)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Date of Acceptance / Decline</th>\n              <td>{CommonServices.removeTime(cust_accept_date)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment History</th>\n              <td>\n                <tr style={{display : \"flex\", width : \"100%\"}}>\n                  <th style={{display : \"flex\", width :\"20%\"}}>Date</th>\n                 \n                    <th style={{display : \"flex\", width : \"20%\"}}>Invoice Amount</th>\n                    <th style={{display : \"flex\", width : \"20%\"}}>Tds Deducted</th>\n                    <th style={{display : \"flex\", width : \"20%\"}}>Amount Paid </th>\n                    <th style={{display : \"flex\", width : \"20%\"}}>Payment Receipt</th>\n                </tr>\n                {paymentDetails.map((pay, i) => (\n                  <tr style={{display : \"flex\", width : \"100%\"}}>\n                    {pay.is_paid == \"1\" ?\n                  \n                    <>\n                     <td style={{display : \"flex\", width : \"20%\"}}>{CommonServices.removeTime(pay.payment_date)}</td> \n                    <td style={{display : \"flex\", width : \"20%\", justifyContent : \"flex-end\"}}>{pay.invoice_amount}</td>\n                    <td style={{display : \"flex\", width : \"20%\", justifyContent : \"flex-end\"}}>{pay.tds_amount}</td>\n                    <td style={{display : \"flex\", width : \"20%\", justifyContent : \"flex-end\"}}>{pay.amount}</td>\n                    <td style={{display : \"flex\", width : \"20%\"}}>\n\n                    <a href={pay.receipt_url} target=\"_blank\">\n                    <span title=\"view receipt\" style={{margin: \"0 2px\"}}>\n                    <i \n                   className=\"fa fa-eye\"\n                   style={{color : \"green\", \n                   fontSize : \"16px\", \n                   pointer : \"cursor\"}}>\n                     </i></span></a>\n                    </td>\n                    </> :\n                      \"\" \n                    }\n                  \n                  </tr>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment Received</th>\n              <td>{nfObject.format(payment_received)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment Overdue</th>\n              <td>{overDue}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment Outstanding</th>\n              <td>{nfObject.format(accepted_amount - payment_received)}</td>\n            </tr>\n         \n            \n            {\n              p.paid_status == \"2\" && \n              <>\n              <tr>\n              <th scope=\"row\">Payment decline reason</th>\n              <td>{p.notes}</td>\n            </tr>\n            <tr>\n                <th scope=\"row\">Payment Decline Date</th>\n                <td>{CommonServices.removeTime(p.payment_declined_date)}</td>\n              </tr>\n              </>\n             \n            }\n             {\n             p.decline_notes !== null && p.decline_notes.length > 0 ?\n                <tr>\n                  <th scope=\"row\">Reasons for proposal Decline</th>\n                  <td colspan=\"1\">\n                    {\n                      p.decline_notes\n                    }\n                  </td>\n                </tr>\n                : null\n            }\n             {\n               proposal_reactive_notes.length > 0 ?\n                 <tr>\n                   <th scope=\"row\"> Date of restoring proposal</th>\n                   <td colspan=\"1\">\n                     {\n                      proposal_reactive_dates\n                     }\n                   </td>\n                 </tr>\n                 : null\n             }\n                          {\n               proposal_reactive_notes.length > 0  ?\n           \n           <tr>\n                   <th scope=\"row\"> Reason of restoring proposal </th>\n                   <td colspan=\"1\">\n                     {\n                       proposal_reactive_notes\n                     }\n                   </td>\n                 </tr>\n                 : null\n             }\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default ProposalDetails;\n\n\n\n\n \n","/home/pooja/MazarsRepo/src/components/QueryDetails/BasicQuery.js",["3082","3083","3084","3085","3086","3087","3088","3089","3090","3091"],"import React, { useState, useEffect } from \"react\";\nimport CommonServices from \"../../common/common\";\nimport { ImageUrl } from \"../../config/config\";\nimport { Markup } from 'interweave';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport './queryStyle.css';\n\nfunction BasicQuery({qstatus, panel, p, diaplaySpecific, queryDocs, year, purpose, declined2,\n  declinedStatus }) {\n\n\n    const downloadpdf = (qno, qid, name) => {\n      let userId, token;\n      if(panel === \"admin\"){\n        userId = window.localStorage.getItem(\"adminkey\");\n        token = window.localStorage.getItem(\"adminToken\")\n        const myConfig2 = {\n          headers : {\n           \"uit\" : token\n          },\n          responseType: 'blob'\n        }\n        axios.get(`${baseUrl}/admin/viewdocument?assign_no=${qno}&id=${qid}` , myConfig2)\n        .then((res) => {\n          console.log(\"res\", res)\n          if(res.status === 200){\n            window.URL = window.URL || window.webkitURL;\n               var url = window.URL.createObjectURL(res.data);\n               var a = document.createElement(\"a\");\n               document.body.appendChild(a);\n               a.style = \"display: none\";\n               a.href = url;\n               console.log(res.headers)\n               a.download = name;\n               a.target = '_blank';\n               a.click();\n          }\n        })\n       }\n     else if(panel === \"teamleader\"){\n      userId = window.localStorage.getItem(\"tlkey\");\n      token = window.localStorage.getItem(\"tlToken\")\n      const myConfig2 = {\n        headers : {\n         \"uit\" : token\n        },\n        responseType: 'blob'\n      }\n      axios.get(`${baseUrl}/tl/viewdocument?assign_no=${qno}&id=${qid}` , myConfig2)\n      .then((res) => {\n        console.log(\"res\", res)\n        if(res.status === 200){\n          window.URL = window.URL || window.webkitURL;\n             var url = window.URL.createObjectURL(res.data);\n             var a = document.createElement(\"a\");\n             document.body.appendChild(a);\n             a.style = \"display: none\";\n             a.href = url;\n             console.log(res.headers)\n             a.download = name;\n             a.target = '_blank';\n             a.click();\n        }\n      })\n     }\n     else if(panel === \"taxprofessional\"){\n      userId = window.localStorage.getItem(\"tpkey\");\n      token = window.localStorage.getItem(\"tpToken\")\n      const myConfig2 = {\n        headers : {\n         \"uit\" : token\n        },\n        responseType: 'blob'\n      }\n      axios.get(`${baseUrl}/tl/viewdocument?assign_no=${qno}&id=${qid}` , myConfig2)\n      .then((res) => {\n        console.log(\"res\", res)\n        if(res.status === 200){\n          window.URL = window.URL || window.webkitURL;\n             var url = window.URL.createObjectURL(res.data);\n             var a = document.createElement(\"a\");\n             document.body.appendChild(a);\n             a.style = \"display: none\";\n             a.href = url;\n             console.log(res.headers)\n             a.download = name;\n             a.target = '_blank';\n             a.click();\n        }\n      })\n     }\n     else if(panel === \"client\"){\n      userId = window.localStorage.getItem(\"userid\");\n      token = window.localStorage.getItem(\"clientToken\")\n      const myConfig2 = {\n        headers : {\n         \"uit\" : token\n        },\n        responseType: 'blob'\n      }\n      axios.get(`${baseUrl}/customers/viewdocument?assign_no=${qno}&id=${qid}` , myConfig2)\n      .then((res) => {\n        console.log(\"res\", res)\n        if(res.status === 200){\n          window.URL = window.URL || window.webkitURL;\n             var url = window.URL.createObjectURL(res.data);\n             var a = document.createElement(\"a\");\n             document.body.appendChild(a);\n             a.style = \"display: none\";\n             a.href = url;\n             console.log(res.headers)\n             a.download = name;\n             a.target = '_blank';\n             a.click();\n        }\n      })\n     }\n      \n    \n    }\n  \n  return (\n    <>\n      <div className=\"queryBox\">\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          Basic Query Information\n        </p>\n        <table className=\"table table-bordered p-2\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Titles</th> \n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Query No</th>\n              <td>{p.assign_no}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Query Date</th>\n              <td>{CommonServices.changeFormateDate(p.created)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Client ID</th>\n              <td>{p.email}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Category</th>\n              <td>{p.cat_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Sub- Category</th>\n              <td>{p.sub_cat_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Name of the Case</th>\n              <td>{p.case_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Assessment Year(s)</th>\n              <td>\n                {year.map((p, i) => (\n                  <p key={i}>{p.value}</p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Brief fact of the case</th>\n           <td className=\"tableStyle\"> <Markup content={p.fact_case} /></td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Uploaded Documents</th>\n              <td>\n                {queryDocs.map((p, i) => (\n                  <p style={{ display: \"flex\" }}>\n                     <span onClick={() => downloadpdf(p.assign_no, p.id, p.name)} style={{display : \"flex\", cursor : \"pointer\"}}>\n                     <i className=\"fa fa-photo\"></i>\n                      \n                  \n                    <p style={{ marginLeft: \"15px\" }}>{p.name}</p>\n                    </span>\n                  </p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Specific questions</th>\n              <td>\n                {diaplaySpecific.map((p, i) => (\n                  <div>{i + 1}. {p.text}</div>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Purpose of the query</th>\n              <td colspan=\"1\">\n                {purpose.map((p, i) => (\n                  <p key={i}>{p.value}</p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Format in which Opinion is required</th>\n              <td colspan=\"1\">\n                <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                <p>\n                  {p.softcopy_digitally_assigned === \"1\" &&\n                    \"SoftCopy- Digitally Signed\"}\n                </p>\n\n                <p>\n                  {p.printout_physically_assigned === \"1\" &&\n                    \"Printout- Physically Signed\"}\n                </p>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Timelines within which Opinion is Required</th>\n              <td colspan=\"1\">{p.Timelines}</td>\n            </tr>\n            {qstatus == \"-1\" || p.is_delete == \"1\" ? \n            <tr>\n              <th scope=\"row\">Date of Decline</th>\n              <td>{qstatus == \"-1\" || p.is_delete == \"1\" ? declined2 : \"\"}</td>\n              </tr> : \"\"}\n            {\n              p.query_status == \"-1\" ?\n                <tr>\n                  <th scope=\"row\">Reasons for Admin Decline Query</th>\n                  <td colspan=\"1\">\n                    {\n                      p.decline_notes\n                    }\n                  </td>\n                </tr>\n                : null\n            }\n            {\n              p.is_delete == \"1\" ?\n                <tr>\n                  <th scope=\"row\">Reasons for client Decline Query</th>\n                  <td colspan=\"1\">\n                    {\n                      p.decline_notes\n                    }\n                  </td>\n                </tr>\n                : null\n            }\n             \n            \n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default BasicQuery;\n","/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/ResendOtp.js",["3092","3093"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Alerts from \"../../../common/Alerts\";\n\n\n\nfunction ResendOtp({ id, setTime, setDisabled, loading, getTime, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n        let formData = new FormData();\n        formData.append(\"email\", id);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/admin/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime(setTime, setDisabled);\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n                }\n            })\n            .catch((error) => {\n             \n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n{loading === true ? \"\" :\n                <div style={{ paddingTop: \"10px\" }}>\n                <button type=\"submit\" class=\"autoWidthBtn\">SEND OTP</button>\n            </div>}\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/pages/Admin/customer/CustHistory.js",["3094","3095","3096","3097","3098","3099","3100","3101","3102","3103"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction CustHistory({ history, toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n  \n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <div>\n       <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Query Details</ModalHeader>\n        <ModalBody>\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n               \n             \n                \n                <th scope=\"row\">Query Stages</th>\n                <th scope=\"row\">Total</th>\n              </tr>\n            </thead>\n\n            {history != undefined \n              ? \n                  <tbody>\n                      <tr>\n                      <th scope=\"row\">Query Raised</th>\n                      <td>{history.total}</td>\n                      </tr>\n                      <tr>\n                      <th scope=\"row\">Query Completed</th>\n                      <td>{history.complete_query}</td>\n                     </tr>\n                     <tr>\n                     <th scope=\"row\">Query Inprogress</th>\n                     <td>{history.inprogress_queries}</td>\n                   \n                     </tr>\n                     <tr>\n                     <th scope=\"row\">Query Declined</th>\n                     <td>{history.declined_queries}</td>\n                    </tr>\n                  </tbody>\n                \n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <button className = \"customBtn\" onClick={toggle}>\n            Cancel\n          </button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default CustHistory;\n","/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerListFilter.js",["3104","3105","3106","3107","3108","3109","3110"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { useForm } from \"react-hook-form\";\n\nfunction CustomerListFilter(props) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n  const [selectedData, setSelectedData] = useState([]);\n\n  const { setData, searchQuery, setRecords, records, getCustomer  } = props;\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n  \n  const resetData = () => {\n   \n    reset();\n   getCustomer();\n  };\n\n  \n\n  \n  const onSubmit = (data) => {\n\nif(searchQuery == \"SearchQuery\")\naxios\n.get(\n  `${baseUrl}/admin/getAllList?&name=${data.name}&country=${data.country}&state=${data.state}&city=${data.city2\n  }&email=${data.email}&occupation=${data.occupation}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n)\n.then((res) => {\n\n  if (res.data.code === 1) {\n    if (res.data.result) {\n      setData(res.data.result);\n    setRecords(res.data.result.length)\n    }\n  }\n});     \n};\n\n  return (\n    <>\n    <div className=\"row\">\n      <div className=\"col-sm-12 d-flex\">\n        <div>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n          <div className=\"row my-3\">\n        <div className=\"col-sm-3\">\n            \n          <input \n          placeholder=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          ref={register}\n          />\n      </div>\n      <div className=\"col-sm-3\">\n            \n            <input \n            placeholder=\"Country\"\n            type=\"country\"\n            name=\"country\"\n            className=\"form-control\"\n            ref={register}\n            />\n        </div>\n        <div className=\"col-sm-3\">\n            \n            <input \n            placeholder=\"City\"\n            type=\"text\"\n            name=\"city2\"\n            className=\"form-control\"\n            ref={register}\n            />\n        </div>\n              <div className=\"col-sm-3\">\n                  \n                  <input \n                  placeholder=\"State\"\n                  type=\"text\"\n                  name=\"state\"\n                  className=\"form-control\"\n                  ref={register}/>\n              </div>\n             \n              \n          \n          </div>\n          <div className=\"row my-3\">\n          <div className=\"col-sm-3\">\n                \n                <input \n                placeholder=\"Email\"\n                type=\"text\"\n                name=\"email\"\n                className=\"form-control\"\n                ref={register}/>\n            </div>\n            <div className=\"col-sm-3\">\n              \n              <input \n              placeholder=\"Occupation\"\n              type=\"text\"\n              name=\"occupation\"\n              className=\"form-control\"\n              ref={register}/>\n          </div>\n          <div className=\"form-inline\">\n             \n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <label className=\"form-select form-control\">From</label>\n             </div>\n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <input\n                 type=\"date\"\n                 name=\"p_dateFrom\"\n                 className=\"form-select form-control\"\n                 ref={register}\n                 max={item}\n               />\n             </div>\n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <label className=\"form-select form-control\">To</label>\n             </div>\n\n             <div className=\"form-group mx-sm-1  mb-2\">\n               <input\n                 type=\"date\"\n                 name=\"p_dateTo\"\n                 className=\"form-select form-control\"\n                 ref={register}\n                 defaultValue={item}\n                 max={item}\n               />\n             </div>\n</div>\n          </div>\n             \n              <div className=\"row my-3\">\n             \n             <div className=\"col-sm-6\">\n             <button type=\"submit\" className=\"customBtn mx-sm-1 mb-2\">\n                Search\n              </button>\n              <button\n          type=\"submit\"\n          className=\"customBtn mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n        <div className=\"form-group d-inline-block\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div>\n             </div>\n              \n              </div>\n \n           \n\n           \n          </form>\n        </div>\n      </div>\n    </div>\n  </>\n  );\n}\n\nexport default CustomerListFilter;\n","/home/pooja/MazarsRepo/src/pages/Admin/Recording/RecordingEdit.js",["3111","3112","3113"],"/home/pooja/MazarsRepo/src/components/LoadingTime/LoadingTime.js",["3114","3115"],"import Swal from \"sweetalert2\";\n const LoadingError = (setLoading) => {\nsetTimeout(() =>{\n    setLoading(false)\n    Swal.fire({\n        title : \"error\",\n        html : \"Something went wrong, Please try again\",\n        icon : \"error\"\n    })\n}, 30000)\n}\n\nvar timerOn = true;\nconst timer2 = (setTime, setDisabled) => {\n    function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(remaining)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n       \n      }\n      timer(180);\n}\nexport default {\n    LoadingError, timer2\n  };","/home/pooja/MazarsRepo/src/config/services/TaxProffesional.js",["3116"],"import http from \"../http/http-common\";\n\nconst getAll = () => {\n  return http.get(\"/tp/getTaxProfessional\");\n};\n\nconst get = (id) => {\n  return http.get(`/tp/getTaxProfessional?id=${id}`);\n};\n\nconst create = (data) => {\n  return http.post(\"/tutorials\", data);\n};\n\nconst remove = (id) => {\n  return http.delete(`/tl/deleteTeamLeader?id=${id}`);\n};\n\nconst editTL = (id) => {\n  return http.get(`/tl/getTeamLeader?id=212`);\n};\n\nexport default {\n  getAll,\n  get,\n  create,\n  remove,\n  editTL\n};\n","/home/pooja/MazarsRepo/src/components/Search-Filter/RecordingFilter.js",["3117","3118","3119","3120","3121","3122","3123","3124","3125","3126"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction RecordingFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    records,\n    setRecords,\n    setData,\n    getRecording,\n    SearchQuery,\n   userid,\n  \n \n  } = props;\n  // const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [status1, setStatus1] = useState(1);\n\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n  const [item] = useState(current_date);\n\n \n\n  \n \n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    setStatus1(1)\n   getRecording();\n  };\n\n  const onSubmit = (data) => {\n \nif(SearchQuery == \"SearchQuery\") {\n  \n    axios\n        .get(\n          `${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}&assign_id=${data.queryNo}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n}\n\n   \n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          className=\"customBtn mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-inline\">\n          \n             <input\n                    type=\"text\"\n                    name=\"queryNo\"\n                    ref={register}\n                    className=\"form-select form-control\"\n                    \n                  />\n                <button type=\"submit\" className=\"customBtn mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RecordingFilter;\n\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/RejectModal.js",["3127","3128","3129","3130"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction RejectedModal({\n  nestedModal,\n  toggleNested,\n  dataItem,\n  docData,\n  getData\n}) {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"message\", value.p_chat);\n    formData.append(\"type\", 1);\n    formData.append(\"docid\", docData.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          toggleNested();\n          getData();\n          var variable = \"Submitted Successfully \"\n          Alerts.SuccessNormal(variable)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\n        <ModalHeader>Discussion</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here\"\n              ></textarea>\n\n              {errors.p_chat && (\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <div>\n                    <button type=\"submit\" className=\"customBtn\">\n                      Submit\n                    </button>\n                    <button color=\"primary\"className=\"dangerBtn mx-2\" onClick={toggleNested}>Cancel</button>\n                  </div>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default RejectedModal;\n\n","/home/pooja/MazarsRepo/src/components/Admin-Header/NavWrapper.js",["3131","3132","3133","3134","3135","3136","3137","3138","3139","3140"],"import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport CustomerNotification from \"./CustomerNotification\";\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport './index.css'\nimport CommonServices from \"../../common/common\";\n\nfunction NavWrapper(props) {\n  const { color, logout, name, email, feedbackNumber} = props;\n\n  const history = useHistory();\n  const userId = window.localStorage.getItem(\"userid\");\n  const adminkey = window.localStorage.getItem(\"adminkey\");\n  const tlkey = window.localStorage.getItem(\"tlkey\");\n  const tpkey = window.localStorage.getItem(\"tpkey\")\n\n\n  return (\n    <>\n      <div className=\"navbar-wrapper\">\n        <div className=\"navbar-container\" style={{ background: color, borderBottom: \"2px solid #787878\" }}>\n          <div className=\"collapse navbar-collapse show\" id=\"navbar-mobile\">\n            <ul className=\"nav navbar-nav mr-auto float-left\">\n              <li className=\"nav-item d-block d-md-none\">\n                <a\n                  className=\"nav-link nav-menu-main menu-toggle hidden-xs is-active\"\n                  href=\"#\"\n                >\n                  <i className=\"fa fa-bars\"></i>\n                </a>\n              </li>\n\n              <li className=\"nav-item dropdown navbar-search\">\n                <ul className=\"dropdown-menu\">\n                  <li className=\"arrow_box\">\n                    <form>\n                      <div className=\"input-group search-box\">\n                        <div className=\"position-relative has-icon-right full-width\">\n                          <input\n                            className=\"form-control\"\n                            id=\"search\"\n                            type=\"text\"\n                            placeholder=\"Search here...\"\n                          />\n                          <div className=\"form-control-position navbar-search-close\">\n                            <i className=\"fa fa-times\"> </i>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </li>\n                </ul>\n              </li>\n\n              <li style={{zIndex: 99, margin: \"auto\"}}>\n                <h4 className=\"contentTitle\">{name == \"customer\" ? CommonServices.capitalizeFirstLetter(\"client\") : CommonServices.capitalizeFirstLetter(name)}: {JSON.parse(email)} </h4>\n              </li>\n             \n            </ul>\n\n            <ul className=\"nav navbar-nav float-right\" style={{display: \"flex\", flexDirection: \"row\"}}>\n\n              {name == \"customer\" && (\n                <CustomerNotification panel=\"client\" tokenKey={userId} name={name} />\n              )}\n\n              {name == \"admin\" && (\n                <CustomerNotification  panel=\"admin\" tokenKey={adminkey} name={name} />\n              )}\n\n              {name == \"Team Leader\" && (\n                <CustomerNotification panel=\"teamleader\" tokenKey={tlkey} name={name} />\n              )}\n               {name == \"Tax Professional\" && (\n                <CustomerNotification panel=\"taxprofessional\" tokenKey={tpkey} name={name} />\n              )}\n\n\n              <li className=\"dropdown dropdown-user nav-item\">\n                <a\n                  className=\"dropdown-toggle nav-link dropdown-user-link\"\n                  href=\"#\"\n                  data-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  <span className=\"avatar avatar-online\">\n                    <img\n                      src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n                      alt=\"avatar\"\n                    />\n                    <i style={{ paddingLeft: \"6px\" }}></i>\n                  </span>\n                </a>\n\n                <div className=\"dropdown-menu dropdown-menu-right changePassword\">\n                  <div className=\"arrow_box_right\">\n\n                    {name == \"customer\" && (\n                      <Link to=\"/customer/change-password\">\n                        <div className=\"dropdown-item\" \n                          style={{ cursor: \"pointer\" }}>\n                          <VpnKeyIcon />\n                          <span style={{ marginLeft: \"3px\" }}>Change Password</span>\n                        </div>\n                      </Link>\n                    )}\n\n                    <div\n                      className=\"dropdown-item\"\n                      onClick={logout}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <LockOpenIcon />\n                      <span style={{ marginLeft: \"10px\" }}>Logout</span>\n                    </div>\n\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default NavWrapper;\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Tds.js",["3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153"],"import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router\";\nimport { parseInt } from \"lodash\";\nimport Swal from \"sweetalert2\";\nimport {Spinner} from \"reactstrap\";\nimport \"./porposalStyle.css\";\n\nfunction Tds (props)  {\n  const history = useHistory();\n    const userid = window.localStorage.getItem(\"tlkey\")\n    const f2 = useRef(null);\n    const [sac33, setSac] = useState([])\n    const [services2, setServices2] = useState();\n    const [services, setServices] = useState();\n    const [cgetTotal, setCgstTotal] = useState()\n    const [sgetTotal, setSgstTotal] = useState()\n    const [igetTotal, setIgstTotal] = useState()\n    const [gst, setGst] = useState()\n    const [tds2, setTds] = useState()\n    const [grandTotal, setgrandTotal] = useState();\n   const [total, setTotal] = useState()\n   const [pocketExp, setPocketExp] = useState()\n   const [cgetRate, setCgetRate] = useState()\n   const [igetRate, setIgetRate] = useState();\n   const [sgetRate, setSgetRate] = useState();\n   const [basicAmount, setBasicAmount] = useState()\n   const [billNo, setBillNo] = useState();\n   const [gstNum , setGstNum] = useState();\n   const [tdsR, setTdsR] = useState();\n   const [disabled, setDisabled] = useState(false)\n  const [description, setDiscription] = useState()\nconst [loading, setLoading] = useState(false);\nconst token = window.localStorage.getItem(\"tlToken\")\nconst myConfig = {\n    headers : {\n     \"uit\" : token\n    }\n  }\nvar tdsRate = 10;\nconst percent = {\n  display : \"flex\", \n  justifyContent : \"space-between\",\n  flexDirection : \"row\",\n  alignItems : \"center\"\n}\n  const getServices = () => {\n    axios.get(`${baseUrl}/tl/getServices`, myConfig)\n    .then((res) => {\n\n      if(res.data.code === 1){\n        setServices(res.data.result);\n      }\n    })\n  }\n  useEffect(() => {\n    getServices();\n  }, [])\n  useEffect(() => {\n    if(props.generated == \"edited\"){\n    getDataild();\n    }\n    else {\n   \n      setTdsR(10)\n      setCgetRate(0);\n      setIgetRate(0);\n      setSgetRate(0)\n      setGstNum(props.gstNo);\n    setBillNo(props.billNo)\n    setBasicAmount(props.paidAmount)\n    setPocketExp(0)\n    setCgstTotal(parseInt(props.paidAmount * 0 / 100).toFixed(2))\n    setIgstTotal(parseInt(0));\n    setSgstTotal(parseInt(0))\n    setGst(parseInt(props.paidAmount * 0 / 100))\n    setTds(parseInt(props.paidAmount * tdsRate / 100))\n    setTotal(parseInt(props.paidAmount) + parseInt(props.paidAmount * cgetRate / 100))\n    setgrandTotal(parseInt(parseInt(props.paidAmount) + parseInt(props.paidAmount * 0 / 100)) - parseInt(props.paidAmount * tdsRate / 100))\n    }\n  }, [props.paidAmount])\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\n\nconst getDataild = () => {\n  axios\n  .get(`${baseUrl}/tl/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1&invoice_id=${props.id}`, myConfig)\n.then((res) => {\n\nif(res.data.payment_detail){\n  res.data.payment_detail.map((i) => {\n  setSac(i.serviceCode)\n     setGstNum(i.gstin_no)\n setBillNo(i.billno)\n setDiscription(i.description)\nsetTdsR(parseFloat(i.tds_rate))\n setBasicAmount(parseInt(i.paid_amount))\n setPocketExp(parseFloat(i.opt_expenses));\n setCgstTotal(parseFloat(i.cgst_amount).toFixed(2));\n setIgstTotal(parseFloat(i.igst_amount).toFixed(2));\n setSgstTotal(parseFloat(i.sgst_amount).toFixed(2));\n setCgetRate(parseFloat(i.cgst_rate));\n setIgetRate(parseFloat(i.igst_rate));\n setSgetRate(parseFloat(i.sgst_rate));\nsetTds(parseFloat(i.tds_amount))\n setgrandTotal(parseFloat(i.payable_amount))\n setTotal(parseFloat(i.invoice_amount))\n setGst(parseFloat(i.gst));\n setDisabled(true);\n  })\n}\n\n})\n}\n  // Cgst Tax function\nconst cgstFun = (e) => {\n \n \n let kkk = e.target.value.split(\".\")[1]\n  if(kkk)\n   if(kkk.length < 3){\n     let a = 0;\n   \n    setCgetRate(e.target.value);\n    if(pocketExp.length === 0){\n      a = parseInt(basicAmount) + parseInt(0);\n    }\n    else{\n      a = parseInt(basicAmount) + parseInt(pocketExp);\n    }\n     let cget = parseFloat(a * e.target.value / 100)\n     let total = Number(cget) + Number(igetTotal) + Number(sgetTotal)\n     setCgstTotal(parseFloat(cget).toFixed(2));\n     setGst(Math.round(total))\n    \n  \n     setTotal(parseInt(a) + Math.round(total))\n     setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n   \n   }\n   else{\n     return false;\n   }\n else{\n  setCgetRate(e.target.value);\n  \n  let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n  \n   let cget = parseFloat(a * e.target.value / 100)\n   let total = Number(cget) + Number(igetTotal) + Number(sgetTotal)\n   setCgstTotal(parseFloat(cget).toFixed(2));\n  \n   setGst(parseInt(Math.round(total)))\n  \n   setTotal(parseInt(a) + Math.round(total))\n  //  setTotal(parseInt(cget) + parseInt(igetTotal) + parseInt(sgetTotal + parseInt(a)))\n  setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n  \n }\n}\n// Sgst tax function\nconst sgstFun = (e) => {\n  let kkk = e.target.value.split(\".\")[1]\n  if(kkk){\n    if(kkk.length < 3){\n      let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n      setSgetRate(e.target.value)\n     \n            let cget = parseFloat(a * e.target.value / 100)\n            let total = Number(cget) + Number(igetTotal) + Number(cgetTotal)\n            setSgstTotal(parseFloat(cget).toFixed(2))\n            setGst(Math.round(total))\n         \n            setTotal(parseInt(a) + Math.round(total))\n            setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n    }\n    else{\n      return false;\n    }\n  }\nelse{\n  setSgetRate(e.target.value)\n  let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n        let cget = parseFloat(a * e.target.value / 100)\n        let total = Number(cget) + Number(igetTotal) + Number(cgetTotal)\n        setGst(Math.round(total))\n        setSgstTotal(parseFloat(cget).toFixed(2))\n       \n        setTotal(parseInt(a) + Math.round(total))\n        setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n}\n   \n   }\n  \n \n// Igst tax function\n const igstFun = (e) => {\n \n  let kkk = e.target.value.split(\".\")[1]\n  if(kkk){\nif(kkk.length < 3){\n  setIgetRate(e.target.value)\n  let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n      let cget = parseFloat(a * e.target.value / 100) \n         setIgstTotal(parseFloat(cget).toFixed(2)) \n         let total = Number(cget) + Number(cgetTotal) + Number(sgetTotal)\n         setGst(Math.round(total));\n    \n         setTotal(parseInt(a) + Math.round(total))\n         setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n}\nelse{\n  return false;\n}\n  }\n   else{\n    setIgetRate(e.target.value)\n    let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n        let cget = parseFloat(a * e.target.value / 100) \n           setIgstTotal(parseFloat(cget).toFixed(2)) \n           let total = Number(cget) + Number(cgetTotal) + Number(sgetTotal)\n           setGst(parseInt(Math.round(total)));\n          \n           setTotal(parseInt(a) + Math.round(total))\n           setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n   }\n      \n }\n // Tds function\n const tdsFun = (e) => {\n  let kkk = e.target.value.split(\".\")[1]\n if(kkk){\n   if(kkk.length < 3){\n    if(e.target.value > 100){\n      setTdsR(100);\n     let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n      let cget = Math.round((a * 100 / 100))\n         setTds(cget)\n       setgrandTotal(parseInt(total) - parseInt(cget))\n     \n    }  \n    else{\n     setTdsR(e.target.value)\n    let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n      let cget = Math.round((a * e.target.value / 100))\n         setTds(cget)\n       setgrandTotal(parseInt(total) - parseInt(cget))  \n    }\n   }\n   else{\n     return false\n   }\n }\n else{\n  if(e.target.value > 100){\n    setTdsR(100);\n   let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n    let cget = Math.round((a * 100 / 100))\n       setTds(cget)\n     setgrandTotal(parseInt(total) - parseInt(cget))\n   \n  }  \n  else{\n   setTdsR(e.target.value)\n  let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n    let cget = Math.round((a * e.target.value / 100))\n       setTds(cget)\n     setgrandTotal(parseInt(total) - parseInt(cget))  \n  }\n }\n }\n \n\n const pocketExpFun = (e) => {\n if(e.target.value === \"\"){\n   setPocketExp('')\n }\n else{\n   setPocketExp(parseInt(e.target.value).toString())\n }\n//setPocketExp(e.target.value)\n  let a;\n  if(e.target.value){\n    if(basicAmount.length == \"0\"){\n       a = Math.round(e.target.value) + parseInt(0);\n    }\n    else{\n      a = Math.round(e.target.value) + parseInt(basicAmount);\n    }\n   \n  \n \n  let cget1 = parseFloat((a * cgetRate / 100))\n  let sget1 = parseFloat((a * sgetRate / 100))\n  let iget1 = parseFloat((a * igetRate / 100))\n  let tdsamount = parseInt(Math.round(a * tdsR / 100))\n    setCgstTotal(parseFloat(a * cgetRate / 100).toFixed(2));\n   setSgstTotal(parseFloat(a * sgetRate / 100).toFixed(2));\n   setIgstTotal(parseFloat(a * igetRate / 100).toFixed(2));\n   \n\n let total = Number(cget1) + Number(iget1) + Number(sget1)\n setTotal(parseInt(a) + Math.round(total))\nsetGst(total)\n\n  setTds((oldData) => {\n    return(parseInt(tdsamount))\n  })\n  setgrandTotal((oldData) => {\n    return((parseInt(cget1) + parseInt(iget1) + parseInt(sget1) + parseInt(a)) - parseInt(tdsamount))\n  })\n \n}\n}\n\nconst basicFun = (e) => {\n \n  let a = parseFloat((e.target.value) + (pocketExp));\n  let tdsamount = parseInt(Math.round(a * tdsR / 100))\n  setBasicAmount(e.target.value);\n  if(e.target.value > 0){\n    setCgstTotal(parseFloat(a * cgetRate / 100).toFixed(2));\n   setSgstTotal(parseFloat(a * sgetRate / 100).toFixed(2));\n   setIgstTotal(parseFloat(a * igetRate / 100).toFixed(2));\n   setGst((oldData) => {\n    return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)))\n   })\n  setTotal((oldData) => {\n    return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a))\n  })\n  setTds((oldData) => {\n    return(parseInt(tdsamount))\n  })\n  setgrandTotal((oldData) => {\n    return((parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a)) - parseInt(tdsamount))\n  })\n \n}\n}\n    const onSubmit= (value) => {\n      setLoading(true);\n        let formData = new FormData();\n       formData.append(\"tl_id\", JSON.parse(userid));\n         formData.append(\"id\", props.id)\n         formData.append(\"qno\", props.report)\n         formData.append(\"description\", description);\n         formData.append(\"serviceCode\", sac33);\n        formData.append(\"basic_amount\", basicAmount);\n        formData.append(\"cgst_rate\", cgetRate);\n        formData.append(\"opt_expenses\", pocketExp);\n        formData.append(\"cgst_total\", cgetTotal)\n        formData.append(\"sgst_rate\", sgetRate);\n       \n        formData.append(\"sgst_total\", sgetTotal)\n        formData.append(\"igst_rate\", igetRate);\n      \n        formData.append(\"igst_total\", igetTotal)\n        formData.append(\"total\", total);\n        formData.append(\"tds_rate\", tdsR);\n        formData.append(\"gst\", gst);\n        formData.append(\"tds_total\", tds2)\n        formData.append(\"netpaid_amount\", grandTotal)\n        formData.append(\"gstin_no\", gstNum);\n        formData.append(\"bill_no\", billNo);\n        formData.append(\"invoice_by\", JSON.parse(userid))\n        {props.generated == \"edited\" ? formData.append(\"generate_status\", 1) :\n      formData.append(\"generate_status\" , 0)}\n        axios({\n            method : \"POST\",\n            data : formData,\n            headers : {\n              uit : token\n            },\n            url : `${baseUrl}/tl/generateInvoive`\n        })\n        .then((res) => {\n            setLoading(false);\n            if(res.data.code === 1){\n              Swal.fire({\n                title : \"success\", \n                html : \"Invoice generated successfully\",\n                icon : \"success\"\n              })\n             \n                history.push(\"/teamleader/tlinvoice\")\n            }\n           else{\n                 Swal.fire({\n                title : \"error\", \n                html : `${res.data.result}`,\n                icon : \"error\"\n              })\n               \n              }\n        })\n      \n    }\n  const serviceFun = (e) => {\n    setDiscription(e)\n   services.map((k) => {\n    \nif(k.service == e) {\nsetSac(k.sac)\nsetServices2(k.service)\n}\n   })\n     \n  }\n\n  \n    return(\n      \n        <Modal isOpen={props.tdsForm} toggle={props.addTdsToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\n        <ModalHeader toggle={props.addTdsToggle}> Generate Invoice - \n        \n        </ModalHeader>\n        <ModalBody>\n    \n    <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\" ref={f2}>\n    <div className=\"container gutter-3\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>GSTIN</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         maxLength=\"24\"\n         ref={register}\n         name=\"gst_in\"\n         value={gstNum}\n         onChange= {(e) => setGstNum(e.target.value)}\n         className=\"form-control\"\n          />\n            </div>\n          </div>\n          </div>\n          <div className=\"col-md-6\">\n          <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>Invoice No</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         ref={register}\n         name=\"bill_no\"\n         value={billNo}\n         disabled \n         className=\"form-control\"\n       //  onChange= {(e) => (setBillNo(e.target.value))}\n          />\n            </div>\n          </div>\n            </div>\n        </div>\n            <div className=\"row my-2\">\n              {services === undefined ? \"\" : \n              <div className=\"col-md-6\">\n              <label>Description <span className=\"declined\">*</span></label>\n          <select \n      \n       value={description}\n           ref={register({ required: true })}\n\n           name=\"description\"\n        style={{height : \"33.5px\"}}\n          onChange = {(e) => serviceFun(e.target.value)}\n          className={classNames(\"form-control\", {\n            \"is-invalid\": errors.description,\n          })}>\n              <option value=\"\">please select value</option>\n          {services.map((i) => (\n               <option value={i.services} key={i.id} className=\"form-control\"> {i.service}</option>\n          ))}\n            </select>\n              </div>}\n                  <div className=\"col-md-6\">\n                  <label>Basic Amount</label>\n                    <input \n                    type=\"number\"\n\n                    name=\"basic_amount\"\n                    ref={register({required : true})}\n                    className=\"form-control\"\n                    placeholder=\"Amount\" \n                    disabled\n                    onChange= {(e) => basicFun(e)}\n                  value={basicAmount}/>\n                    </div> \n            </div>\n           <div className=\"row my-2\">\n             <div className=\"col-md-6 headCenter\">\n               <label>Out of Pocket Expenses</label>\n               </div>\n               <div className=\"col-md-6\">\n               <input \n                    type=\"number\"\n                    name=\"pocket_amount\"\n                  \n                    ref={register}\n                    className=\"form-control\"\n                    onChange={(e) => pocketExpFun(e)}\n                    value={pocketExp}\n                    placeholder=\"Pocket Amount\"  />\n               </div>\n             </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-4\">\n              <label>CGST</label>\n             <div className=\"row\">\n             <div className=\"col-md-6\" style={percent}>\n              <input \n                    type=\"number\"\n                    ref={register}\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    value={cgetRate}\n                    name=\"cgst_rate\"\n                    onChange= {(e) => cgstFun(e)} /> %\n                \n                  </div>\n                  <div className=\"col-md-6\">\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    placeholder=\"0\" \n                    disabled \n                    name=\"cgst_total\"\n                    value = {cgetTotal}/>\n                  </div>\n                 </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                  <label>SGST/UTGST </label>\n              <div className=\"row\">\n                  <div className=\"col-md-6\" style={percent}>\n                  <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    ref={register}\n                    step=\"0.00001\"\n                    name=\"sgst_rate\"\n                    placeholder=\"Rate\" \n                   value = {sgetRate}\n                    onChange= {(e) => sgstFun(e)}/> %\n                      </div>\n                      <div className=\"col-md-6\">\n                      <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    \n                    name=\"sgst_total\" \n                    disabled\n                    value={sgetTotal}/>\n                          </div>\n                  </div>\n            \n                  </div>\n                  <div className=\"col-md-4\">\n              <label>IGST</label>\n              <div className=\"row\">\n              <div className=\"col-md-6\" style={percent}>\n                <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    ref={register}\n                    name=\"igst_rate\"\n                   value={igetRate}\n                    onChange= {(e) => igstFun(e)} /> %\n                    </div>\n                   \n                    <div className=\"col-md-6\">\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                  \n                    name=\"igst_total\"\n                    disabled\n                    ref={register}\n                    value={igetTotal} />\n                    </div>\n                  </div>\n                  </div>\n                  </div>\n                \n          <hr/>\n          \n            <div className=\"row my-2\">\n                <div className=\"col-md-4 headCenter\">\n                  <label>Total GST</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                        </div>\n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"total\"\n                    disabled\n                   \n                    ref={register}\n                   value={Math.round(gst)} />\n                            </div>\n                </div>\n                <hr/>\n                <div className=\"row my-2\">\n                <div className=\"col-md-8 headCenter\">\n                  <label>Total Invoice Amount</label>\n                    </div>\n                   \n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"totalAmount\"\n                    disabled\n                   \n                    ref={register}\n                   value={Math.round(total)} />\n                            </div>\n                </div>\n           \n            <div className=\"row my-2\">\n              <div className=\"col-md-4 my-1 headCenter\">\n              <label>TDS </label>\n                  </div>\n                <div className=\"col-md-4 my-1\">\n               <div className = \"row\">\n                \n                   <div className=\"col-md-8\"  style={percent}>\n                   <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    name=\"tds_rate\"\n                    value={tdsR}\n                    ref={register}\n                    onChange= {(e) => tdsFun(e)} /> %\n                     </div>\n                     <div className=\"col-md-4\">\n                   </div>\n                 </div>\n                    </div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                    value={Math.round(tds2)} />\n                    </div>\n                   \n            </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-6 my-1 headCenter\">\n              <label>Net Payable Amount</label>\n                  </div>\n                  <div className=\"col-md-2 my-1\"></div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                  value={Math.round(grandTotal)} />\n                    </div>\n                   \n            </div>\n        <ModalFooter>\n       \n             <>\n             {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                 <>\n                  <button  type=\"submit\" className=\"customBtn\">submit</button>\n          \n             <button  type=\"button\" className=\"customBtn mx-3\" onClick={props.addTdsToggle}>Cancel</button>\n                 </>\n              }\n             \n             </>\n        </ModalFooter>\n          </div>\n        </form>\n       \n           \n      \n        </ModalBody>\n      </Modal>\n    )\n}\nexport default Tds;","/home/pooja/MazarsRepo/src/pages/TL/Proposal/ChatHistory.js",["3154","3155"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\n  const [notification, setNotification] = useState([]);\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getNotification();\n  }, [qno]);\n\n  const getNotification = () => {\n   if(qno != null){\n    axios\n    .get(\n      `${baseUrl}/customers/getNotification?id=${JSON.parse(\n        userId\n      )}&type=2&q_no=${qno}`\n    )\n    .then((res) => {\n     \n      if (res.data.code === 1) {\n        setNotification(res.data.result);\n      }\n    });\n   }\n  };\n\n  \n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Message</th>\n                <th scope=\"row\">Date</th>\n              </tr>\n            </thead>\n            {notification.length > 0\n              ? notification.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.message}</td>\n                      <td>{p.setdate}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ChatHistory;\n","/home/pooja/MazarsRepo/src/components/Search-Filter/InvoiceFilter.js",["3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167"],"/home/pooja/MazarsRepo/src/components/commonShowProposal/CommonShowProposal.js",["3168","3169","3170","3171"],"// import React from 'react';\n// import {Modal, ModalHeader, ModalBody, ModalFooter, Button} from 'reactstrap';\n// import { baseUrl } from \"../../config/config\";\n// import { Typography } from '@mui/material';\n// const ShowProposal = ({setViewProposal, viewProposalModal, showProposalModal2 , proposalId}) => {\n  \n//     return(\n       \n//         <>\n       \n//           <Modal isOpen={viewProposalModal} toggle={showProposalModal2} size=\"lg\" scrollable={true} style={{ height: \"100%\" }} >\n//             <ModalHeader toggle={showProposalModal2}>\n// <Typography variant=\"h6\">\n// View Proposal\n// </Typography>\n//             </ModalHeader>\n//             <ModalBody>\n//           <iframe src={`${baseUrl}/customers/dounloadpdf?id=${proposalId}&viewpdf=1`}\n//             height=\"100%\" width=\"100%\" />\n//         </ModalBody>\n           \n//         </Modal>\n       \n       \n//         </>\n//     )\n// }\n// export default ShowProposal;\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { baseUrl } from \"../../config/config\";\nimport axios from \"axios\";\nimport { Typography } from '@mui/material';\nfunction ShowProposal({setViewProposal, panel, viewProposalModal, showProposalModal2 , proposalId}) {\n  const [url, setUrl] = useState(\"\")\n \nuseEffect(() => {\n  if(proposalId && panel === \"admin\"){\n   \n    const token = window.localStorage.getItem(\"adminToken\")\n    const myConfig = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/admin/dounloadpdf?id=${proposalId}&viewpdf=1` , myConfig)\n  .then((res) => {\n   \n    if(res.status === 200){\n     \n      setUrl(URL.createObjectURL(res.data))\n    }\n  })\n  }\n  else if(proposalId && panel === \"teamleader\"){\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/tl/dounloadpdf?id=${proposalId}&viewpdf=1` , myConfig)\n  .then((res) => {\n   \n    if(res.status === 200){\n     \n      setUrl(URL.createObjectURL(res.data))\n    }\n  })\n  }\n  else if (proposalId && panel === \"taxprofessional\") {\n   \n      const token = window.localStorage.getItem(\"tptoken\")\n      const myConfig = {\n        headers : {\n         \"uit\" : token\n        },\n        responseType: 'blob'\n      }\n      axios.get(`${baseUrl}/tl/dounloadpdf?id=${proposalId}&viewpdf=1` , myConfig)\n    .then((res) => {\n     \n      if(res.status === 200){\n       \n        setUrl(URL.createObjectURL(res.data))\n      }\n    })\n    \n  }\n  else{\n    const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/customers/dounloadpdf?id=${proposalId}&viewpdf=1` , myConfig)\n  .then((res) => {\n   \n    if(res.status === 200){\n     \n      setUrl(URL.createObjectURL(res.data))\n    }\n  })\n  }\n  \n}, [proposalId])\n\n  return (\n    \n      <Modal isOpen={viewProposalModal} toggle={showProposalModal2} size=\"lg\" scrollable={true} style={{ height: \"100%\" }}>\n      <ModalHeader toggle={showProposalModal2}>\n <Typography variant=\"h6\">\n View Proposal\n </Typography>\n             </ModalHeader>\n        <ModalBody>\n          <iframe src={url}\n            height=\"100%\" width=\"100%\" />\n        </ModalBody>\n        \n\n      </Modal>\n   \n  );\n}\n\nexport default ShowProposal;\n","/home/pooja/MazarsRepo/src/config/http/http-common.js",[],"/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Tds.js",["3172","3173","3174","3175","3176","3177","3178"],"import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router\";\nimport { parseInt } from \"lodash\";\nimport Swal from \"sweetalert2\";\n\nfunction Tds (props)  {\n  const history = useHistory();\n    const userid = window.localStorage.getItem(\"adminkey\")\n    const f2 = useRef(null);\n    const [sac33, setSac] = useState([])\n    const [services2, setServices2] = useState();\n    const [services, setServices] = useState();\n    const [cgetTotal, setCgstTotal] = useState()\n    const [sgetTotal, setSgstTotal] = useState()\n    const [igetTotal, setIgstTotal] = useState()\n    const [gst, setGst] = useState()\n    const [tds2, setTds] = useState()\n    const [grandTotal, setgrandTotal] = useState();\n   const [total, setTotal] = useState()\n   const [pocketExp, setPocketExp] = useState()\n   const [cgetRate, setCgetRate] = useState()\n   const [igetRate, setIgetRate] = useState();\n   const [sgetRate, setSgetRate] = useState();\n   const [basicAmount, setBasicAmount] = useState()\n   const [billNo, setBillNo] = useState();\n   const [gstNum , setGstNum] = useState();\n   const [disabled, setDisabled] = useState(false)\n  \n\nvar tdsRate = 10;\nconst percent = {\n  display : \"flex\", \n  justifyContent : \"space-between\",\n  flexDirection : \"row\",\n  alignItems : \"center\"\n}\n  const getServices = () => {\n    axios.get(`${baseUrl}/admin/getServices`)\n    .then((res) => {\n\n      if(res.data.code === 1){\n        setServices(res.data.result);\n      }\n    })\n  }\n  useEffect(() => {\n    getServices();\n  }, [])\n  useEffect(() => {\n    if(props.generated == \"edited\"){\n    getDataild();\n    }\n    else {\n      setCgetRate(18);\n      setIgetRate(0);\n      setSgetRate(0)\n      setGstNum(props.gstNo);\n    setBillNo(props.billNo +\"/\" + props.id)\n    setBasicAmount(props.paidAmount)\n    setPocketExp(0)\n    setCgstTotal(parseInt(props.paidAmount * 18 / 100))\n    setIgstTotal(parseInt(0));\n    setSgstTotal(parseInt(0))\n    setGst(parseInt(props.paidAmount * 18 / 100))\n    setTds(parseInt(props.paidAmount * tdsRate / 100))\n    setTotal(parseInt(props.paidAmount) + parseInt(props.paidAmount * cgetRate / 100))\n    setgrandTotal(parseInt(parseInt(props.paidAmount) + parseInt(props.paidAmount * 18 / 100)) - parseInt(props.paidAmount * tdsRate / 100))\n    }\n  }, [props.paidAmount])\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\n\nconst getDataild = () => {\n  axios\n  .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1&invoice_id=${props.id}`)\n.then((res) => {\n\nif(res.data.payment_detail){\n  res.data.payment_detail.map((i) => {\n   \n     setGstNum(i.gstin_no)\n setBillNo(i.billno)\n\n setBasicAmount(parseInt(i.paid_amount))\n setPocketExp(parseInt(i.opt_expenses));\n setCgstTotal(parseInt(i.cgst_amount));\n setIgstTotal(parseInt(i.igst_amount));\n setSgstTotal(parseInt(i.sgst_amount));\n setCgetRate(parseInt(i.cgst_rate));\n setIgetRate(parseInt(i.igst_rate));\n setSgetRate(parseInt(i.sgst_rate));\nsetTds(parseInt(i.tds_amount))\n setgrandTotal(parseInt(i.payable_amount))\n setTotal(parseInt(i.invoice_amount))\n setGst(parseInt(i.gst));\n setDisabled(true);\n  })\n}\n\n})\n}\n  // Cgst Tax function\nconst cgstFun = (e) => {\n  setCgetRate(e.target.value);\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n   let cget = parseInt(a * e.target.value / 100)\n   setCgstTotal(parseInt(cget));\n   setGst(parseInt(cget + igetTotal + sgetTotal))\n   setTotal(parseInt(cget + igetTotal + sgetTotal + a))\n   setgrandTotal(parseInt(cget + sgetTotal + igetTotal + a - tds2))\n\n}\n// Sgst tax function\nconst sgstFun = (e) => {\n  setSgetRate(e.target.value)\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n        let cget = parseInt(a * e.target.value / 100)\n        setSgstTotal(parseInt(cget))\n        setTotal(parseInt(cget + igetTotal + cgetTotal + a))\n        setGst(parseInt(cget + igetTotal + cgetTotal))\n        setgrandTotal(parseInt(cget + igetTotal + cgetTotal + a - tds2))\n }\n// Igst tax function\n const igstFun = (e) => {\n   setIgetRate(e.target.value)\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n      let cget = parseInt(a * e.target.value / 100) \n         setIgstTotal(cget) \n         setGst(parseInt(cget + sgetTotal + cgetTotal));\n         setTotal(parseInt(cget + sgetTotal + cgetTotal + a))\n         setgrandTotal(parseInt(cget + cgetTotal + sgetTotal + a - tds2))\n        \n }\n // Tds function\n const tdsFun = (e) => {\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n   let cget = (a * e.target.value / 100)\n      setTds(cget)\n    setgrandTotal(parseInt(total) - parseInt(cget))    \n } \n\n // Pocket Function\n const pocketExpFun = (e) => {\n  setPocketExp(e.target.value)\n  let a = parseInt(e.target.value) + parseInt(basicAmount);\n  if(e.target.value > 0){\n    setCgstTotal(a * cgetRate / 100);\n   setSgstTotal(a * sgetRate / 100);\n   setIgstTotal(a * igetRate / 100);\n   // })\n setGst((oldData) => {\n  return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100))\n })\n  setTotal((oldData) => {\n    return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a))\n  })\n  }\n  setgrandTotal((oldData) => {\n    return((parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a)) - parseInt(a * tdsRate / 100))\n  })\n  setTds((oldData) => {\n    return(parseInt(a * tdsRate / 100))\n  })\n}\n\nconst basicFun = (e) => {\n  let a = parseInt(e.target.value) + parseInt(pocketExp);\n  setBasicAmount(e.target.value);\n  if(e.target.value > 0){\n    setCgstTotal(a * cgetRate / 100);\n   setSgstTotal(a * sgetRate / 100);\n   setIgstTotal(a * igetRate / 100);\n setGst((oldData) => {\n  return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100))\n })\n  setTotal((oldData) => {\n    return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a))\n  })\n  }\n  setgrandTotal((oldData) => {\n    return((parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a)) - parseInt(a * tdsRate / 100))\n  })\n  setTds((oldData) => {\n    return(parseInt(a * tdsRate / 100))\n  })\n}\n    const onSubmit= (value) => {\n      \n        let formData = new FormData();\n       formData.append(\"tl_id\", JSON.parse(userid));\n         formData.append(\"id\", props.id)\n         formData.append(\"qno\", props.report)\n         formData.append(\"description\", services2);\n         formData.append(\"serviceCode\", sac33);\n        formData.append(\"basic_amount\", basicAmount);\n        formData.append(\"cgst_rate\", cgetRate);\n        formData.append(\"opt_expenses\", pocketExp);\n        formData.append(\"cgst_total\", cgetTotal)\n        formData.append(\"sgst_rate\", sgetRate);\n       \n        formData.append(\"sgst_total\", sgetTotal)\n        formData.append(\"igst_rate\", igetRate);\n      \n        formData.append(\"igst_total\", igetTotal)\n        formData.append(\"total\", total);\n        formData.append(\"tds_rate\", tdsRate);\n        formData.append(\"gst\", gst);\n        formData.append(\"tds_total\", tds2)\n        formData.append(\"netpaid_amount\", grandTotal)\n        formData.append(\"gstin_no\", gstNum);\n        formData.append(\"bill_no\", billNo)\n        axios({\n            method : \"POST\",\n            data : formData,\n            url : `${baseUrl}/tl/generateInvoive`\n        })\n        .then((res) => {\n            if(res.data.code === 1){\n              Swal.fire({\n                title : \"success\", \n                html : \"Invoice generated successfully\",\n                icon : \"success\"\n              })\n                history.push(\"/admin/adinvoice\")\n            }\n          \n        })\n      \n    }\n  const serviceFun = (e) => {\n    \n   services.map((k) => {\n    \nif(k.id == e) {\nsetSac(k.sac)\nsetServices2(k.service)\n}\n   })\n     \n  }\n\n  \n    return(\n      \n        <Modal isOpen={props.tdsForm} toggle={props.addTdsToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\n        <ModalHeader toggle={props.addTdsToggle}> Generate Invoice - \n        \n        </ModalHeader>\n        <ModalBody>\n    \n    <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\" ref={f2}>\n    <div className=\"container gutter-3\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>GSTIN</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         ref={register}\n         name=\"gst_in\"\n         value={gstNum}\n         onChange= {(e) => setGstNum(e.target.value)}\n         className=\"form-control\"\n          />\n            </div>\n          </div>\n          </div>\n          <div className=\"col-md-6\">\n          <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>Invoice No</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         ref={register}\n         name=\"bill_no\"\n         value={billNo}\n         disabled = {disabled}\n         className=\"form-control\"\n         onChange= {(e) => (setBillNo(e.target.value) + \"/id\")}\n          />\n            </div>\n          </div>\n            </div>\n        </div>\n            <div className=\"row my-2\">\n              {services === undefined ? \"\" : \n              <div className=\"col-md-6\">\n              <label>Descirption <span className=\"declined\">*</span></label>\n          <select \n           ref={register({ required: true })}\n           name=\"description\"\n        style={{height : \"33.5px\"}}\n          onChange = {(e) => serviceFun(e.target.value)}\n          className={classNames(\"form-control\", {\n            \"is-invalid\": errors.p_name,\n          })}>\n              <option value=\"\">--select--</option>\n          {services.map((i) => (\n               <option value={i.id} key={i.id} className=\"form-control\"> {i.service}</option>\n          ))}\n            </select>\n              </div>}\n                  <div className=\"col-md-6\">\n                  <label>Basic Amount</label>\n                    <input \n                    type=\"text\"\n\n                    name=\"basic_amount\"\n                    ref={register({required : true})}\n                    className=\"form-control\"\n                    placeholder=\"Amount\" \n                    onChange= {(e) => basicFun(e)}\n                  value={basicAmount}/>\n                    </div> \n            </div>\n           <div className=\"row my-2\">\n             <div className=\"col-md-6\">\n               <h5>Out of Pocket Expenses</h5>\n               </div>\n               <div className=\"col-md-6\">\n               <input \n                    type=\"text\"\n                    name=\"pocket_amount\"\n                    ref={register}\n                    className=\"form-control\"\n                    onChange={(e) => pocketExpFun(e)}\n                    value={pocketExp}\n                    placeholder=\"Pocket Amount\"  />\n               </div>\n             </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-4\">\n              <h4>CGST</h4>\n             <div className=\"row\">\n             <div className=\"col-md-6\" style={percent}>\n              <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    \n                    placeholder=\"Rate\"\n                    value={cgetRate}\n                    name=\"cgst_rate\"\n                    onChange= {(e) => cgstFun(e)} /> %\n                \n                  </div>\n                  <div className=\"col-md-6\">\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    placeholder=\"0\" \n                    disabled \n                    name=\"cgst_total\"\n                    value = {Math.round(cgetTotal)}/>\n                  </div>\n                 </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                  <h4>SGST/UTGST </h4>\n              <div className=\"row\">\n                  <div className=\"col-md-6\" style={percent}>\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    \n                    name=\"sgst_rate\"\n                    placeholder=\"Rate\" \n                   value = {sgetRate}\n                    onChange= {(e) => sgstFun(e)}/> %\n                      </div>\n                      <div className=\"col-md-6\">\n                      <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    \n                    name=\"sgst_total\" \n                    disabled\n                    value={Number(sgetTotal).toFixed(0)}/>\n                          </div>\n                  </div>\n            \n                  </div>\n                  <div className=\"col-md-4\">\n              <h4>IGST</h4>\n              <div className=\"row\">\n              <div className=\"col-md-6\" style={percent}>\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                  \n                    placeholder=\"Rate\"\n                    ref={register}\n                    name=\"igst_rate\"\n                   value={igetRate}\n                    onChange= {(e) => igstFun(e)} /> %\n                    </div>\n                   \n                    <div className=\"col-md-6\">\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                  \n                    name=\"igst_total\"\n                    disabled\n                    ref={register}\n                    value={Number(igetTotal).toFixed(0)} />\n                    </div>\n                  </div>\n                  </div>\n                  </div>\n                \n          <hr/>\n          \n            <div className=\"row my-2\">\n                <div className=\"col-md-4\">\n                  <h4>Total GST</h4>\n                    </div>\n                    <div className=\"col-md-4\">\n                        </div>\n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"total\"\n                    disabled\n                   \n                    ref={register}\n                   value={Math.round(gst)} />\n                            </div>\n                </div>\n                <hr/>\n                <div className=\"row my-2\">\n                <div className=\"col-md-8\">\n                  <h4>Total Invoice Amount</h4>\n                    </div>\n                   \n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"totalAmount\"\n                    disabled\n                   \n                    ref={register}\n                   value={Number(total).toFixed(0)} />\n                            </div>\n                </div>\n           \n            <div className=\"row my-2\">\n              <div className=\"col-md-4 my-1\">\n              <h4>TDS </h4>\n                  </div>\n                <div className=\"col-md-4 my-1\">\n               <div className = \"row\">\n                \n                   <div className=\"col-md-6\"  style={percent}>\n                   <input \n                    type=\"text\"\n                    className=\"form-control\"\n                   \n                    placeholder=\"Rate\"\n                    name=\"tds_rate\"\n                    defaultValue={tdsRate}\n                    ref={register}\n                    onChange= {(e) => tdsFun(e)} /> %\n                     </div>\n                     <div className=\"col-md-6\">\n                   </div>\n                 </div>\n                    </div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                    value={Number(tds2).toFixed(0)} />\n                    </div>\n                   \n            </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-6 my-1\">\n              <h4>Net Payable Amount</h4>\n                  </div>\n                  <div className=\"col-md-2 my-1\"></div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                  value={Number(grandTotal).toFixed(0)} />\n                    </div>\n                   \n            </div>\n        <ModalFooter>\n       \n             <>\n             <button  type=\"submit\" className=\"btn btn-success\">submit</button>\n          \n             <button  type=\"button\" className=\"btn btn-danger mx-3\" onClick={props.addTdsToggle}>Cancel</button> \n             </>\n        </ModalFooter>\n          </div>\n        </form>\n       \n           \n      \n        </ModalBody>\n      </Modal>\n    )\n}\nexport default Tds;","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DiscardReport.js",["3179","3180","3181","3182","3183"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CommonServices from \"../../../common/common\";\n\nfunction DiscardReport({\n  ViewDiscussion,\n  ViewDiscussionToggel,\n  report,\n  getData,\n  headColor\n}) {\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getHistory();\n  }, [report]);\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n  const getHistory = () => {\n   \n      if(report != undefined && report.length > 0){\n        axios.get(`${baseUrl}/admin/getMessage?id=${JSON.parse(userId)}&q_no=${report}`, myConfig).then((res) => {\n        \n          if (res.data.code === 1) {\n            setData(res.data.result);\n          }\n        });\n      }\n   \n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\n        <ModalBody>\n          <table className=\"table table-bordered\">\n          <thead>\n              <tr style={{backgroundColor: `${headColor}`,  color: \"#fff\"}}>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`}}>S.No</th>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`}}>Date</th>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`}}>Name</th>\n                <th scope=\"row\" style={{border: `1px solid ${headColor}`}}>Message</th>\n              </tr>\n            </thead>\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\n                    <td>{p.sender}</td>\n                    <td style={{ width : \"460px\", overflow : \"wrap\"}}>\n                      {\n                        p.type == \"sent\" ?\n                          <i className=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                          :\n                          <i className=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                      }\n                      {p.message}\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n\n        </ModalBody>\n        <ModalFooter>\n          <div>\n            <button className = \"autoWidthBtn\" onClick={ViewDiscussionToggel}>Cancel</button>\n          </div>\n        </ModalFooter>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default DiscardReport;\n\n","/home/pooja/MazarsRepo/src/components/Admin-Header/CustomerNotification.js",["3184","3185","3186"],"/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/History.js",["3187","3188","3189","3190","3191","3192","3193","3194","3195"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction History({ history, toggle,modal, bgColor }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n   \n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} fade={false} toggle={toggle} size=\"lg\">\n        <ModalHeader toggle={toggle}>History</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th  style={{backgroundColor: \"#42566a\", color: \"#fff\", border: \"1px solid #42566a\"}}>S.No</th>\n                <th   style={{backgroundColor: \"#42566a\", color: \"#fff\",  border: \"1px solid #42566a\"}}>From</th>\n                <th   style={{backgroundColor: \"#42566a\", color: \"#fff\",  border: \"1px solid #42566a\"}}>To</th>\n                <th   style={{backgroundColor: \"#42566a\", color: \"#fff\",  border: \"1px solid #42566a\"}}>Name</th>\n                <th   style={{backgroundColor: \"#42566a\", color: \"#fff\",  border: \"1px solid #42566a\"}}>Email</th>\n                <th   style={{backgroundColor: \"#42566a\", color: \"#fff\",  border: \"1px solid #42566a\"}}>Phone</th>\n              </tr>\n            </thead>\n\n            {history.length > 0\n              ? history.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.from_date}</td>\n                      <td>{p.to_date}</td>\n                      <td>{p.name}</td>\n                      <td>{p.personal_email}</td>\n                      <td>{p.phone}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"customBtn\" onClick={toggle}>\n            Cancel\n          </button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default History;\n","/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/History.js",["3196","3197","3198","3199","3200","3201","3202","3203","3204"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction History({ history,toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n   \n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} fade={false} toggle={toggle} size=\"lg\">\n        <ModalHeader toggle={toggle}>History</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th  style={{backgroundColor: \"#42566a\", color: \"#fff\", border: \"1px solid #42566a\"}}>S.No</th>\n                <th  style={{backgroundColor: \"#42566a\", color: \"#fff\", border: \"1px solid #42566a\"}}>From</th>\n                <th  style={{backgroundColor: \"#42566a\", color: \"#fff\", border: \"1px solid #42566a\"}}>To</th>\n                <th  style={{backgroundColor: \"#42566a\", color: \"#fff\", border: \"1px solid #42566a\"}}>Name</th>\n                <th  style={{backgroundColor: \"#42566a\", color: \"#fff\", border: \"1px solid #42566a\"}}>Email</th>\n                <th  style={{backgroundColor: \"#42566a\", color: \"#fff\", border: \"1px solid #42566a\"}}>Phone</th>\n              </tr>\n            </thead>\n\n            {history.length > 0\n              ? history.map((p, i) => (\n                  <tbody>\n                      <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.from_date}</td>\n                      <td>{p.to_date}</td>\n                      <td>{p.name}</td>\n                      <td>{p.personal_email}</td>\n                      <td>{p.phone}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"customBtn\" onClick={toggle}>\n            Cancel\n          </button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default History;\n","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Demo.js",["3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222"],"/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/FinalReport.js",["3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport moment from \"moment\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {ViewDiscussionIcon, Payment} from \"../../../components/Common/MessageIcon\";\n\nfunction FinalReport() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [assignmentCount, setCountAssignment] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [reportModal, setReportModal] = useState(false);\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n  const [report, setReport] = useState();\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  var rowStyle2 = {}\n  var clcomp= {\n    color: \"green\"\n  }\n  var clinpro = {\n    color : \"blue\"\n  }\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\n    \n      if (res.data.code === 1) {\n        setAssignmentDisplay(res.data.result);\n        setCountAssignment(res.data.result.length);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n  \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n   \n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n    \n    setStatus(value);\n  };\n // View Report \n \n  const ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key);\n  };\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n     \n      sort: true,\n       \n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      \n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            {/* <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index : 2,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n     \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n     \n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span className=\"declined\">Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                {row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                      {row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                     {row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                             {row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                            {row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n    \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n  \n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n   \n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      \n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => ViewReport(row.assign_no)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"TL name\",\n      dataField: \"tl_name\",\n      sort: true,\n    \n    },\n    {\n      text: \"Action\",\n     \n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\" }}>\n\n           \n                <Link\n                \n                    to={{\n                      pathname: `/admin/chatting/${row.q_id}`,\n                      index : 2,\n                      routes: \"assignment\",\n                    obj: {\n                      message_type: \"3\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/assignment`\n                    }\n                  }}\n                >\n               <MessageIcon />\n                </Link>\n                <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n    else if(row.paid_status != \"2\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n  const onSubmit = (data) => {\n\n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignmentDisplay(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          className=\"customBtn mx-sm-1\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-inline\">\n              <div className=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"btnSearch mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <button type=\"submit\" className=\"customBtn\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody className=\"card-body\">\n          <Records records={records} />\n          <DataTablepopulated \n                  bgColor=\"#7c887c\"\n                   keyField= {\"assign_no\"}\n                   data={assignmentDisplay}\n                   rowStyle2= {rowStyle2}\n                   columns={columns}>\n                    </DataTablepopulated>\n  <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n            deleiverAble = \"#7c887c\"\n          />\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n            headColor=\"#7c887c\"\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default FinalReport;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DraftReport.js",["3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n \n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport moment from \"moment\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {ViewDiscussionIcon, Payment} from \"../../../components/Common/MessageIcon\";\n\n\nfunction DraftReport() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [assignmentCount, setCountAssignment] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [reportModal, setReportModal] = useState(false);\n  const [report, setReport] = useState();\nvar rowStyle2 = {}\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  var clcomp= {\n    color: \"green\"\n  }\n  var clinpro = {\n    color : \"blue\"\n  }\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setAssignmentDisplay(res.data.result);\n        setCountAssignment(res.data.result.length);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n   \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n   \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n \n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //reset date\n  const resetData = () => {\n   \n    reset();\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n   \n    setStatus(value);\n  };\n  // view report\n  const ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key);\n  };\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      \n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      \n      formatter: function nameFormatter(cell, row) {\n        \n        return (\n          <>\n           \n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index : 1,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      \n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span className=\"declined\">Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                {row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                      {row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                     {row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                             {row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                            {row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      \n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n        \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n   \n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      \n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => ViewReport(row.assign_no)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"TL name\",\n      dataField: \"tl_name\",\n      sort: true,\n     \n    },\n    {\n      text: \"Action\",\n      \n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\"}}>\n\n\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    index : 1,\n                    routes: \"assignment\",\n                    obj: {\n                      message_type: \"3\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/assignment`\n                    }\n                  }}\n                >\n                <MessageIcon />\n                </Link>\n            \n\n              <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n    else if(row.paid_status != \"2\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n  const onSubmit = (data) => {\n    \n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignmentDisplay(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          className=\"customBtn mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-inline\">\n              <div className=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"btnSearch mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n\n\n\n              <button type=\"submit\" className=\"customBtn\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody className=\"card-body\">\n          <Records records={records} />\n          <DataTablepopulated \n                   bgColor=\"#7c887c\"\n                   keyField= {\"assign_no\"}\n                   data={assignmentDisplay}\n                   rowStyle2= {rowStyle2}\n                   columns={columns}>\n                    </DataTablepopulated>\n  <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n            deleiverAble = \"#7c887c\"\n          />\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n            headColor=\"#7c887c\"\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/AllAssignment.js",["3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Records from \"../../../components/Records/Records\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {ViewDiscussionIcon, Payment} from \"../../../components/Common/MessageIcon\";\n\n\nfunction AssignmentComponent() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [assignmentCount, setCountAssignment] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [hide, setHide] = useState();\n  const [report, setReport] = useState();\n  const [error, setError] = useState(false);\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n  const [item] = useState(current_date);\n   var rowStyle2 = {}\n   var clcomp= {\n    color: \"green\"\n  }\n  var clinpro = {\n    color : \"blue\"\n  }\n  const [reportModal, setReportModal] = useState(false);\n  const ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key);\n  };\n\n  const [assignNo, setAssignNo] = useState(null);\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  const [viewData, setViewData] = useState({});\n  const [viewModal, setViewModal] = useState(false);\n  const ViewHandler = (key) => {\n  \n    setViewModal(!viewModal);\n    setViewData(key);\n  };\n  \n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const getAssignmentData = () => {\n    axios.get(`${baseUrl}/admin/getAssignments`, myConfig).then((res) => {\n    \n      if (res.data.code === 1) {\n        setAssignmentDisplay(res.data.result);\n        setCountAssignment(res.data.result.length);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n    if(selectedData.length > 0){\n      axios\n      .get(`${baseUrl}/admin/getCategory?pid=${selectedData}`, myConfig)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n  setError(false)\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n  setError(false)\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(error)\n  \n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n    setError(false)\n    setTax2([])\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n     setTax2([])\n    setError(false)\n    setHide(\"\")\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n  setError(false)\n \n    setStatus(value);\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      \n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      \n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n        \n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index : 0,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n     \n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n     \n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"200px\" };\n      },\n\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span className=\"declined\">Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                {row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                      {row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                     {row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                             {row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                            {row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n        \n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n     \n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => ViewReport(row.assign_no)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"TL name\",\n      dataField: \"tl_name\",\n      sort: true,\n     \n    },\n    {\n      text: \"Action\",\n     \n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\" }}>\n\n            \n                <Link\n                \n                    to={{\n                      pathname: `/admin/chatting/${row.q_id}`,\n                      index : 0,\n                      routes: \"assignment\",\n                    obj: {\n                      message_type: \"3\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/assignment`\n                    }\n                  }}\n                >\n                 <MessageIcon />\n                </Link>\n            \n                <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n \n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n  \n    return style;\n  }\n  const onSubmit = (data) => {\n   \n   if(hide == 1 || hide == 2){\nif(status.length > 0){\n  axios\n  .get(\n    `${baseUrl}/admin/getAssignments?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=${status}&stages_status=${data.p_status}&pcat_id=${selectedData}`\n    , myConfig\n  )\n  .then((res) => {\n   \n    if (res.data.code === 1) {\n      if (res.data.result) {\n        setAssignmentDisplay(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    }\n  });\n}\nelse{\nsetError(true)\n  return false\n}\n   }\n   else{\n    axios\n    .get(\n      `${baseUrl}/admin/getAssignments?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=${status}&stages_status=${data.p_status}&pcat_id=${selectedData}`\n      , myConfig\n    )\n    .then((res) => {\n     \n      if (res.data.code === 1) {\n        if (res.data.result) {\n          setAssignmentDisplay(res.data.result);\n          setRecords(res.data.result.length);\n        }\n      }\n    });\n   }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          className=\"customBtn mx-sm-1\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  const disabledHandler = (e) => {\n    setStatus([])\n    setHide(e.target.value);\n    setError(false)\n  };\n\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-inline\">\n              <div className=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"btnSearch mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <div className=\"form-group mx-sm-1  mb-2\">\n                <select\n                  className=\"form-select form-control\"\n                  name=\"p_status\"\n                  ref={register}\n                  style={{ height: \"33px\" }}\n                  onChange={(e) => disabledHandler(e)}\n                >\n                  <option value=\"\">--select--</option>\n                  <option value=\"1\">Inprogress</option>\n                  <option value=\"2\">Completed</option>\n                  <option value=\"3\">Payment Declined</option>\n                </select>\n              </div>\n\n              {\n                hide == \"1\" || hide == \"2\" ?\n                 \n                  <div className=\"form-group mx-sm-1  mb-2\">\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: 210 }}\n                      placeholder=\"Select stages\"\n                      defaultValue={[]}\n                      onChange={assingmentStatus}\n                      value={status}\n                      allowClear\n                      className={error ? \"customError\" : \"\"}\n                    >\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Client Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Draft reports\n                        </div>\n                      </Option>\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Final Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Delivery of Final Reports\n                        </div>\n                      </Option>\n                      <Option value=\"Completed\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">Awaiting Completion</div>\n                      </Option>\n                    </Select>\n                  </div> : \"\"\n\n              }\n\n              <button type=\"submit\" className=\"customBtn\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody className=\"card-body\">\n          <Records records={records} />\n          <DataTablepopulated \n                  bgColor = \"#5a625a\"\n                   keyField= {\"assign_no\"}\n                   data={assignmentDisplay}\n                   rowStyle2= {rowStyle2}\n                   columns={columns}>\n                    </DataTablepopulated>\n                   \n{\n  reportModal === true ?\n  <ViewAllReportModal\n  ViewReport={ViewReport}\n  reportModal={reportModal}\n  report={report}\n  getPendingforAcceptance={getAssignmentData}\n  deleiverAble = \"#5a625a\"\n/> : \"\"\n}\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n            headColor=\"#5a625a\"\n          />\n\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default AssignmentComponent;\n","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paid.js",["3282","3283","3284","3285","3286"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n  \n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport CommonServices from \"../../../common/common\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {ViewDiscussionIcon, Payment} from \"../../../components/Common/MessageIcon\";\n\n\nfunction Paid() {\n\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [paymentcount, setPaymentCount] = useState(\"\");\n    const [pay, setPay] = useState([]);\n    const [records, setRecords] = useState([]);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const token = window.localStorage.getItem(\"adminToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/admin/getUploadedProposals?status=1`, myConfig).then((res) => {\n           \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setPaymentCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n    \n    const toggle = (key) => {\n     \n        setModal(!modal);\n\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n                \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n           \n            headerStyle: () => {\n                return { width : \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            \n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n          \n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n          \n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n          \n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p className=\"declined\">{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n          \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n          \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n          \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n          \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"tl_name\",\n            text: \"TL name\",\n            sort: true,\n            \n        },\n        {\n            text: \"Action\",\n           \n            formatter: function (cell, row) {\n                return (\n                    <>\n                       \n                        <div style={{ display: \"flex\"}}>\n\n                        <Link\n             to={{\n                pathname: `/admin/chatting/${row.assign_id}`,\n                index : 1,\n                routes: \"paymentstatus\",\n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.assign_id,\n                  routes: `/admin/paymentstatus`\n                }\n              }}\n            >\n              <MessageIcon />\n            </Link>\n            <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"mx-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div> \n                        <Link\n               to={{\n                pathname: `/admin/paydetails/${row.assign_id}`,\n                index : 1,\n                routes: \"paymentstatus\",\n              \n              }}\n            >\n                             <Payment />\n                            </Link>\n                      \n\n\n                           \n\n\n                      \n           \n       \n\n                    </div> \n                    </>\n                );\n            },\n        },\n    ];\n\n    const rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n     \n        if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n      \n        return style;\n      }\n    return (\n        <div>\n            <Card>\n\n\n                <CardHeader>\n                    <AdminFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        unpaid=\"unpaid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <Records records={records} />\n                    <DataTablepopulated \n                  bgColor=\"#3e8678\"\n                   keyField= {\"assign_no\"}\n                   data={payment}\n                   rowStyle2= {rowStyle2}\n                   columns={columns}>\n                    </DataTablepopulated>\n                   \n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date</th>\n                                        <th scope=\"row\">Amount</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                        headColor=\"#3e8678\"\n                    />\n\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default Paid;\n","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Unpaid.js",["3287","3288","3289","3290","3291","3292","3293","3294","3295"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport CommonServices from \"../../../common/common\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {ViewDiscussionIcon, Payment} from \"../../../components/Common/MessageIcon\";\nimport moment from \"moment\";\n\n\nfunction Unpaid() {\n\n    const [payment, setPayment] = useState([]);\n\n    const [paymentcount, setPaymentCount] = useState(\"\");\n    const [pay, setPay] = useState([]);\n    const [records, setRecords] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const token = window.localStorage.getItem(\"adminToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/admin/getUploadedProposals?status=2`, myConfig).then((res) => {\n           \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setPaymentCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n    \n    const toggle = (key) => {\n       \n        setModal(!modal);\n\n      if(typeof(key) == \"object\"){\n\n      }\n      else{\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n              \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n      }\n    };\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n         \n            headerStyle: () => {\n                return { width : \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n           \n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 2,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            \n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            \n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"status\",\n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p className=\"declined\">{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n           \n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n          \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n          \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"tl_name\",\n            text: \"TL name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Action\",\n           \n            formatter: function (cell, row) {\n                return (\n                    <>\n                       \n                        <div style={{ display: \"flex\"}}>\n\n                        <Link\n              to={{\n                pathname: `/admin/chatting/${row.assign_id}`,\n                index : 2,\n                routes: \"paymentstatus\",\n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.assign_id,\n                  routes: `/admin/paymentstatus`\n                }\n              }}\n            >\n<MessageIcon />\n            </Link>\n            <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"mx-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                        <Link\n              to={{\n                pathname: `/admin/paydetails/${row.assign_id}`,\n                index : 2,\n                routes: \"paymentstatus\",\n               \n              }}\n            >\n                          <Payment />\n                            </Link>\n                        \n\n\n                         \n\n\n                      \n                    </div> \n                    </>\n                );\n            },\n        },\n    ];\n    const rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n     \n        if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n      \n        return style;\n      }\n    return (\n        <div>\n            <Card>\n\n                <CardHeader>\n                    <AdminFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        paid=\"paid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <Records records={records} />\n                    <DataTablepopulated \n                   bgColor=\"#3e8678\"\n                   keyField= {\"assign_no\"}\n                   rowStyle2= {rowStyle2}\n                   data={payment}\n                   columns={columns}>\n                    </DataTablepopulated>\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                        headColor=\"#3e8678\"\n                    />\n\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default Unpaid;\n","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/AllPayment.js",["3296","3297","3298","3299","3300","3301"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport CommonServices from \"../../../common/common\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {ViewDiscussionIcon, Payment} from \"../../../components/Common/MessageIcon\";\nimport moment from \"moment\";\n\nfunction AllPayment() {\n\n    const [payment, setPayment] = useState([]);\n\n    const [paymentcount, setPaymentCount] = useState(\"\");\n    const [pay, setPay] = useState([]);\n    const [records, setRecords] = useState([]);\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const token = window.localStorage.getItem(\"adminToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/admin/getUploadedProposals` , myConfig).then((res) => {\n            \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setPaymentCount(res.data.result.length);\n                setRecords(res.data.result.length);\n            }\n        });\n    };\n\n    const [modal, setModal] = useState(false);\n    const toggle = (key) => {\n    \n        setModal(!modal);\n        if(typeof(key) == \"object\"){\n\n        }\n       else{\n        fetch(`${baseUrl}/admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n               \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n       }\n    };\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n           \n            headerStyle: () => {\n                return { width : \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n           \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n           \n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n           \n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            \n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p className=\"declined\">{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n          \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Amount Outstanding\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"tl_name\",\n            text: \"TL name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Action\",\n            \n            formatter: function (cell, row) {\n                return (\n                    <>\n                       \n                      \n                     <div style={{display: \"flex\"}}>\n                     <Link\n                            to={{\n                                pathname: `/admin/chatting/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.assign_id,\n                  routes: `/admin/paymentstatus`\n                }\n              }}\n            >\n          <MessageIcon />\n            </Link>\n\n\n            <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"mx-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                      \n                        <Link\n                            to={{\n                                pathname: `/admin/paydetails/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n               \n              }}\n            >\n                         <Payment />\n                            </Link>\n                        \n\n\n\n\n                     </div>\n                       \n        \n\n                 \n                    </>\n                );\n            },\n        },\n    ];\nconst rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n \n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n  \n    return style;\n  }\n\n    return (\n        <div>\n            <Card>\n\n                <CardHeader>\n                    <AdminFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        AllPayment=\"AllPayment\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <Records records={records} />\n                    <DataTablepopulated \n                   bgColor=\"#2b5f55\"\n                   rowStyle2= {rowStyle2}\n                   keyField= {\"assign_no\"}\n                   data={payment}\n                   columns={columns}>\n                    </DataTablepopulated>\n                   \n                  \n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>Payment History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                        headColor=\"#2b5f55\"\n                    />\n\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default AllPayment;\n","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/Reset.js",["3302","3303"],"import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Select, Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\n\nfunction Reset() {\n  \n  const { Option } = Select;\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n\n\n\n  const handleChange = (value) => {\n  \n    setStore2(value);\n  };\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader?id=243`).then((res) => {\n      \n        setValue(res.data.result[0]);    \n      });\n    };\n\n    getTeamLeader();\n  }, []);\n\n \n  const data1 = value.name;\n  const data2 = value.email;\n  const data3 = value.phone;\n  const data4 = value.parent_id;\n  const data5 = value.cat_name;\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${store2}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [store2]);\n\n  const onFinish = (values) => {\n   \n\n  \n  };\n\n  if (!(data1 && data2 && data3 && data4 && data5)) return <p>loading</p>;\n  else\n    return (\n      <>\n        <div class=\"container\">\n          <Form\n            name=\"basic\"\n            initialValues={{\n              username: `${data1}`,\n              email: `${data2}`,\n              phone: `${data3}`,\n              category: `${data4}`,\n              sub_category: `${data5}`,\n            }}\n            onFinish={onFinish}\n          >\n            <Form.Item label=\"Username\" name=\"username\">\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"email\" label=\"email \">\n              <Input />\n            </Form.Item>\n\n            <Form.Item name=\"category\" label=\"Category\">\n              <Select onChange={handleChange}>\n                <Option value=\"1\">Direct</Option>\n                <Option value=\"2\">InDirect</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"sub_category\" label=\"Sub-category\">\n              <Select>\n                <Option value=\"\">--Select Sub-Category--</Option>\n                {tax2.map((p, index) => (\n                  <Option key={index} value={p.id}>\n                    {p.details}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"phone\" label=\"phone\">\n              <Input/>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n\n          </Form>\n\n         \n        </div>\n      </>\n    );\n}\n\nexport default Reset;\n\n","/home/pooja/MazarsRepo/src/components/PendingForAllocation/PendingForAllocation.js",["3304","3305"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './Allocation.css';\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  \n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport History from \"./History\";\nimport Records from \"../../components/Records/Records\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport DataTablepopulated from \"../DataTablepopulated/DataTabel\";\nimport {DeleteIcon, DiscussProposal} from \"../../components/Common/MessageIcon\";\n\nfunction PendingAllocation({ CountPendingForAllocation }) {\n\n  const [pendingData, setPendingData] = useState([])\n  const [history, setHistory] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [modal, setModal] = useState(false);\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n    headers : {\n     \"uit\" : token\n    }\n  }\n  const toggle = (key) => {\n    \n\n    setModal(!modal);\n\n    fetch(`${baseUrl}/admin/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n        uit : token\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n       \n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n\n\n\n  useEffect(() => {\n    getPendingForAllocation();\n  }, []);\n\n  const getPendingForAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`, myConfig).then((res) => {\n    \n      if (res.data.code === 1) {\n        // CountPendingForAllocation(res.data.result.length);\n        setPendingData(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      \n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      \n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n     \n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n\n              {row.status} /\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      \n      formatter: function (cell, row) {\n        return (\n         \n          <>\n            {row.is_assigned === \"1\" ? (\n              <p className=\"inprogress\">\n                Allocated to {row.tname} on\n                <p>{row.allocation_time}</p>\n              </p>\n            ) : (\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n               \n                  <Link\n                    to={`/admin/queryassing/${row.id}`}\n                  >\n                   <DiscussProposal titleName=\"Assign to\" />\n                  </Link>\n\n                \n                \n                  <Link\n                    to={`/admin/query_rejection/${row.id}`}\n                  >\n                   <DeleteIcon titleName=\"Decline Query\"/>\n                  </Link>\n                \n\n\n\n              </div>\n\n\n\n            )}\n          </>\n        );\n      },\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              className=\"autoWidthBtn\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setPendingData}\n            getData={getPendingForAllocation}\n            pendingAlloation=\"pendingAlloation\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody className = \"card-body\">\n          <Records records={records} />\n          <DataTablepopulated \n          bgColor=\"#55425f\"\n          keyField= {\"assign_no\"}\n          data={pendingData} \n          columns={columns}>\n           </DataTablepopulated>\n          <History history={history} toggle={toggle} modal={modal} />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default React.memo(PendingAllocation);","/home/pooja/MazarsRepo/src/pages/Admin/Login/VerifyOtpLogin.js",["3306"],"/home/pooja/MazarsRepo/src/pages/Admin/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/components/AllQueriesData/AllQueriesData.js",["3307","3308","3309","3310","3311","3312","3313","3314"],"/home/pooja/MazarsRepo/src/components/DeclinedQueries/DeclinedQueries.js",["3315","3316","3317","3318"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n \n} from \"reactstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport AdminFilter from \"../Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../../pages/Admin/AssignmentTab/DiscardReport\";\nimport DataTablepopulated from \"../DataTablepopulated/DataTabel\";\nimport { ViewDiscussionIcon} from \"../../components/Common/MessageIcon\";\n\nfunction DeclinedQueries({ CountPendingForPayment }) {\n\n  const [pendingData, setPendingData] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    getPendingForPayment();\n  }, []);\n\n  const getPendingForPayment = () => {\n    axios.get(`${baseUrl}/admin/declinedQueries`, myConfig).then((res) => {\n    \n      if (res.data.code === 1) {\n        setPendingData(res.data.result);\n        setRecords(res.data.result.length);\n\n        // CountPendingForPayment(res.data.result.length);\n      }\n    });\n  };\n\n  const ViewDiscussionToggel = (key) => {\n\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { width: \"50px\"};\n      },\n     \n      formatter: (cellContent, row, rowIndex, index) => {\n     \n        return <div>{rowIndex + 1}</div>;\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n     \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 3,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n     \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n     \n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n     \n    },\n   \n    {\n      text: \"Status\",\n     \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status} /\n              {\n                row.status == \"Inprogress Query\" ?\n                <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                  <p className=\"declined\">\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                    <p className=\"completed\">\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      sort: true,\n     \n      formatter : function forma(cell, row) {\n        return(\n          <>\n                     <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-1\">\n          <ViewDiscussionIcon />\n        </span>\n          </>\n        )\n      }\n    },\n  ];\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setPendingData}\n            getData={getPendingForPayment}\n            declinedQueries=\"declinedQueries\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n        <Records records={records} />\n        <DataTablepopulated \n          bgColor=\"#55425f\"\n          keyField= {\"assign_no\"}\n          data={pendingData}\n          \n          columns={columns}>\n            </DataTablepopulated>\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getPendingForPayment}\n            headColor=\"#6e557b\"\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedQueries;","/home/pooja/MazarsRepo/src/components/PendingForProposals/PendingForProposals.js",["3319","3320","3321","3322","3323","3324","3325","3326","3327","3328","3329","3330","3331","3332","3333"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DataTablepopulated from \"../DataTablepopulated/DataTabel\";\n\n\nfunction PendingForProposals({ CountPendingProposal }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n  const [nonpendingData, setNonPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n    headers : {\n     \"uit\" : token\n    }\n  }\n  const toggle = (key) => {\n   \n    setModal(!modal);\n\n    fetch(`${baseUrl}/admin/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n        uit : token\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n     \n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getPendingForProposals();\n  }, []);\n\n  const getPendingForProposals = () => {\n    axios.get(`${baseUrl}/admin/pendingProposal`, myConfig).then((res) => {\n      \n      if (res.data.code === 1) {\n        setNonPendingData(res.data.result);\n        setRecords(res.data.result.length);\n        // CountPendingProposal(res.data.result.length);\n      }\n    });\n  };\n\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return({width: \"50px\"})\n      }\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      \n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n     \n      formatter: function nameFormatter(cell, row) {\n       \n        return (\n          <>\n            <Link\n          \n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 2,\n                routes: \"queriestab\",\n              }}\n            >{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n     \n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n     \n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n     \n     \n    },\n    {\n      text: \"Status\",\n     \n     \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"tname\",\n      text: \"TL name\",\n      sort: true,\n     \n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n     \n     \n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              className=\"autoWidthBtn\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setNonPendingData}\n            getData={getPendingForProposals}\n            pendingForProposal=\"pendingForProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <DataTablepopulated \n          bgColor=\"#55425f\"\n          keyField= {\"assign_no\"}\n          data={nonpendingData}\n          \n          columns={columns}>\n           </DataTablepopulated> \n          <Modal isOpen={modal} fade={false} toggle={toggle} size=\"lg\">\n            <ModalHeader toggle={toggle}>History</ModalHeader>\n            <ModalBody>\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"row\">S.No</th>\n                    <th scope=\"row\">Name</th>\n                    <th scope=\"row\">Query No</th>\n                    <th scope=\"row\">Status</th>\n                    <th scope=\"row\">Date of Allocation</th>\n                  </tr>\n                </thead>\n\n                {history.length > 0\n                  ? history.map((p, i) => (\n                    <tbody>\n                      <tr>\n                        <td>{i + 1}</td>\n                        <td>{p.name}</td>\n                        <td>{p.assign_no}</td>\n                        <td>{p.status}</td>\n                        <td>{p.date_of_allocation}</td>\n                      </tr>\n                    </tbody>\n                  ))\n                  : null}\n              </table>\n            </ModalBody>\n            <ModalFooter>\n              <button className=\"autoWidthBtn\" onClick={toggle}>\n                Cancel\n              </button>\n            </ModalFooter>\n          </Modal>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForProposals;","/home/pooja/MazarsRepo/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js",["3334","3335","3336","3337"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n \n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport RetviewModal from \"../AllProposalComponent/RetviewModal\";\nimport ShowProposal from \"../AllProposalComponent/ShowProposal\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\n\nfunction DeclinedProposal({ declinedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [retview, setRetview] = useState(false)\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [viewProposalModal, setViewProposalModal] = useState(false)\n  const [proposalId, setProposalId] = useState()\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n  const showProposalModal2 = (e) => {\n    console.log(\"eeee\")\n    setViewProposalModal(!viewProposalModal);\n    setProposalId(e)\n  }\n\n  useEffect(() => {\n    getDeclinedProposal();\n  }, []);\n\n  const getDeclinedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?&status=6`, myConfig).then((res) => {\n\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n        // declinedProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const retviewProposal = (e) => {\n    setRetview(!retview);\n    setAssignNo(e)\n  }\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n    \n      headerStyle: () => {\n        return { width : \"50px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      \n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 3,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n     \n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Declined of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      \n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {\n                row.status == \"Client Declined; Proposal\" ?\n                  <p className=\"declined\">\n                    {row.status}\n                  </p> :\n                  null\n              }\n\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n\n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.ProposedAmount;\n        \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n    \n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n       \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      \n    },\n    {\n      text: \"Action\",\n     \n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\" }}>\n          \n                <Link\n                \n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    index: 3,\n                    routes: \"proposal\",\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n              <MessageIcon />\n                </Link>\n             \n\n                <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n\n\n              {row.statuscode > \"3\" ?\n                                <div  onClick={(e) => showProposalModal2(row.q_id)} className=\"ml-1\">\n                                <EyeIcon  />\n                               </div>\n                :\n                null\n              }\n{\n  row.statuscode == \"6\" ? \n  <>\n<div  onClick={(e) => retviewProposal(row.q_id)} className=\"ml-1\">\n<DiscussProposal titleName =\"Restore Proposal\"/>\n</div>\n  </> : \"\"\n}\n\n\n            \n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getDeclinedProposal}\n            declinedProposal=\"declinedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   data={proposalDisplay}\n                   columns={columns}>\n                    </DataTablepopulated>\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getDeclinedProposal}\n            \n            headColor=\"#42566a\"\n          />\n            <RetviewModal \n          retview = {retview}\n          retviewProposal  = {retviewProposal }\n          getProposalData  ={ getDeclinedProposal}\n          assignNo = {assignNo}\n         />\n          \n          <ShowProposal \n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedProposal;\n","/home/pooja/MazarsRepo/src/pages/Admin/AcceptedProposal/AcceptedProposal.js",["3338","3339","3340","3341","3342","3343","3344","3345","3346","3347","3348","3349"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport ShowProposal from \"../AllProposalComponent/ShowProposal\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\nfunction AcceptedProposal({ acceptedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [viewProposalModal, setViewProposalModal] = useState(false)\n  const [proposalId, setProposalId] = useState()\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n  const showProposalModal2 = (e) => {\n    console.log(\"eeee\")\n    setViewProposalModal(!viewProposalModal);\n    setProposalId(e)\n  }\n\n  useEffect(() => {\n    getAcceptedProposal();\n  }, []);\n  const getAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?status1=2`, myConfig).then((res) => {\n   \n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n    \n      headerStyle: () => {\n        return { width : \"50px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n     \n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n           <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 2,\n                routes: \"proposal\",\n              }}\n            >{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      \n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      \n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n    \n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n     \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n\n              {\n                row.status == \"Accepted; Proposal\" ?\n                  <p className=\"completed\">\n                    {row.status}\n                  </p> :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n     \n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.ProposedAmount;\n         \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n\n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n         \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      \n    },\n    {\n      text: \"Action\",\n     \n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\" }}>\n            <Link\n  to={{\n    pathname: `/admin/chatting/${row.q_id}`,\n    index: 2,\n    routes: \"proposal\",\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n                  <MessageIcon />\n                </Link>\n       \n            <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n              {row.statuscode > \"3\" || row.statuscode == \"10\" ?\n                <div  onClick={(e) => showProposalModal2(row.q_id)} className=\"ml-1\">\n                <EyeIcon  />\n               </div>\n                :\n                null\n              }\n\n\n             \n                     \n\n               \n\n\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getAcceptedProposal}\n            acceptedProposal=\"acceptedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   data={proposalDisplay}\n                   columns={columns}>\n                    </DataTablepopulated>\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAcceptedProposal}\n            headColor=\"#42566a\"\n          />\n           <ShowProposal \n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AcceptedProposal;\n","/home/pooja/MazarsRepo/src/components/PendingForAcceptence/PendingForAcceptence.js",["3350","3351","3352","3353","3354","3355","3356","3357","3358","3359","3360"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../../pages/Admin/AssignmentTab/DiscardReport\";\nimport RetviewModal from \"../../pages/Admin/AllProposalComponent/RetviewModal\"\nimport ShowProposal from \"../../pages/Admin/AllProposalComponent/ShowProposal\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../components/Common/MessageIcon\";\nfunction PendingForAcceptence({ pendingProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [retview, setRetview] = useState(false)\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [viewProposalModal, setViewProposalModal] = useState(false)\n  const [proposalId, setProposalId] = useState()\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  const showProposalModal2 = (e) => {\n    console.log(\"eeee\")\n    setViewProposalModal(!viewProposalModal);\n    setProposalId(e)\n  }\n  useEffect(() => {\n    getPendingAcceptedProposal();\n  }, []);\n\n  const getPendingAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?status1=1`, myConfig).then((res) => {\n     \n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n        // pendingProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const retviewProposal = (e) => {\n    setRetview(!retview);\n    setAssignNo(e)\n  }\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n   \n      headerStyle: () => {\n        return { width : \"50px\"};\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n     \n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 1,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      \n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      \n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      \n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n     \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Proposed Amount\",\n      sort: true,\n     \n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.ProposedAmount;\n        \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n       \n      },\n     \n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n        \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n     \n    },\n    {\n      text: \"Action\",\n     \n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\" }}>\n          \n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    index: 1,\n                    routes: \"proposal\",\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n                  <MessageIcon />\n                </Link>\n            \n                <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n\n\n              {row.statuscode > \"3\" ?\n               <div  onClick={(e) => showProposalModal2(row.q_id)} className=\"ml-1\">\n               <EyeIcon  />\n              </div>\n                :\n                null\n              }\n\n{\n  row.statuscode == \"6\" ? \n  <>\n<div  onClick={(e) => retviewProposal(row.q_id)}>\n<DiscussProposal titleName =\"Restore Proposal\"/>\n</div>\n  </> : null\n}\n              \n\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getPendingAcceptedProposal}\n            pendingAcceptedProposal=\"pendingAcceptedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   data={proposalDisplay}\n                   columns={columns}>\n                    </DataTablepopulated>\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getPendingAcceptedProposal}\n            headColor=\"#42566a\"\n          />\n           <RetviewModal \n          retview = {retview}\n          retviewProposal  = {retviewProposal }\n          getProposalData  ={ getPendingAcceptedProposal}\n          assignNo = {assignNo}\n         />\n         <ShowProposal \n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PendingForAcceptence;\n","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/AllProposalComponent.js",["3361","3362","3363","3364","3365","3366","3367","3368","3369"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport RetviewModal from \"./RetviewModal\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport ViewComponent from \"../ViewProposal/ViewComponent\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport ShowProposal from \"./ShowProposal\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport CommonShowProposal from '../../../components/commonShowProposal/CommonShowProposal';\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\nfunction AllProposalComponent({ allProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [assignNo, setAssignNo] = useState('');\n  const [viewData, setViewData] = useState({});\n  const [viewModal, setViewModal] = useState(false);\n  const [retview, setRetview] = useState(false)\n  const [viewProposalModal, setViewProposalModal] = useState(false)\n  const [proposalId, setProposalId] = useState()\n  const token = window.localStorage.getItem(\"adminToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const ViewHandler = (key) => {\n   \n    setViewModal(!viewModal);\n    setViewData(key);\n  };\n\nconst showProposalModal2 = (e) => {\n \n  setViewProposalModal(!viewProposalModal);\n  setProposalId(e)\n}\n  \n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getProposalData();\n  }, []);\n\n  const getProposalData = () => {\n    axios.get(`${baseUrl}/admin/getProposals`, myConfig).then((res) => {\n    \n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\nconst retviewProposal = (e) => {\n  setRetview(!retview);\n  setAssignNo(e)\n}\n  const columns = [\n    {\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n    \n      headerStyle: () => {\n        return { width : \"50px\"};\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n    \n      formatter: function dateFormat(cell, row) {\n    \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n    \n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 0,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      \n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      \n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      \n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance / decline of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      \n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {\n                row.status == \"Inprogress\" ?\n                  <div>\n                    {row.status}/\n                    <p className=\"inprogress\">\n                      {row.statusdescription}\n                    </p>\n                  </div>\n                  :\n                  row.status == \"Client Declined; Proposal\" ?\n                    <p className=\"declined\">\n                      {row.status}\n                    </p> :\n                    row.status == \"Accepted; Proposal\" ?\n                      <p className=\"completed\">\n                        {row.status}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n     \n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n       var nfObject = new Intl.NumberFormat('hi-IN')\n        var x = row.ProposedAmount;\n        \n        return(\n          <p className=\"rightAli\">{nfObject.format(x)}</p>\n        )\n      }\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n     \n      sortFunc: (a, b, order, dataField) => {\n        if (order === 'asc') {\n          return b - a;\n        }\n        return a - b; // desc\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n         \n         return(\n           <p className=\"rightAli\">{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{display: \"flex\"}}>\n           \n                <Link\n               \n                    to={{\n                      pathname: `/admin/chatting/${row.q_id}`,\n                      index: 0,\n                      routes: \"proposal\",\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n                <MessageIcon />\n                </Link>\n            \n\n              <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n\n\n              {row.statuscode > \"3\" || row.statuscode == \"10\" ?\n                <div  onClick={(e) => showProposalModal2(row.q_id)} className=\"ml-1\">\n                <EyeIcon  />\n               </div>\n                :\n                null\n              }\n{\n  row.statuscode == \"6\" ? \n  <>\n\n<div  onClick={(e) => retviewProposal(row.q_id)}>\n<DiscussProposal titleName =\"Restore Proposal\"/>\n</div>\n  </> : null\n}\n\n            \n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getProposalData}\n            allProposal=\"allProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   data={proposalDisplay}\n                   columns={columns}>\n                    </DataTablepopulated>\n          <ViewComponent\n            ViewHandler={ViewHandler}\n            viewModal={viewModal}\n            viewData={viewData}\n            getProposalData={getProposalData}\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getProposalData}\n            headColor=\"#42566a\"\n          />\n          <RetviewModal \n          retview = {retview}\n          retviewProposal  = {retviewProposal }\n          getProposalData  ={getProposalData}\n          assignNo = {assignNo}\n         />\n       {\n         showProposalModal2 === true ?\n         <CommonShowProposal \n         setViewProposalModal = {setViewProposalModal}\n         viewProposalModal = {viewProposalModal}\n         showProposalModal2 = {showProposalModal2}\n         panel = \"admin\"\n         proposalId = {proposalId} /> : \"\"\n       }\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllProposalComponent;\n","/home/pooja/MazarsRepo/src/views/EditQuery/DeleteQuery.js",["3370","3371","3372"],"import React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction DeleteQuery({ id, setLoading }) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n\n\n\n  //check\n  const del = (id) => {\n\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Want to delete query ?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  const deleteCliente = (id) => {\n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/deleteQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          setLoading(false)\n          Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\n          history.push(\"/customer/queries\");\n        } else {\n          setLoading(false)\n          Swal.fire(\"Oops...\", \"Query not deleted\", \"error\");\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  return (\n    <div>\n      <button type=\"button\" class=\"customBtn\" onClick={() => del(id)}>\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default DeleteQuery;\n\n{\n  /* <i\n        className=\"fa fa-trash\"\n        style={{\n          fontSize: 16,\n          cursor: \"pointer\",\n        }}\n        \n      ></i> */\n}\n","/home/pooja/MazarsRepo/src/views/Schedule/demo.js",["3373","3374","3375","3376","3377","3378","3379","3380","3381","3382"],"/home/pooja/MazarsRepo/src/views/ChangePassword/ResendOtp.js",["3383","3384"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Alerts from \"../../common/Alerts\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\n\nfunction ResendOtp({ email, setDisabled, getTime, setLoad, setLoading, loading }) {\n    const userId = window.localStorage.getItem(\"userid\");\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n        let formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"uid\", JSON.parse(userId));\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/customers/regenrateotp`,\n            data: formData,\n        })\n            .then(function (response) {\n\n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime();\n                    setLoad(true)\n                } if (response.data.code === 0) {\n                    setLoading(false)\n                }\n            })\n            .catch((error) => {\n              ShowError.LoadingError(setLoading)\n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" class=\"autoWidthBtn\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/views/NewPassword/ResendOtp.js",["3385","3386"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Alerts from \"../../common/Alerts\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\n\nfunction ResendOtp({ id, setDisabled, getTime, setLoad, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"email\", id);\n        formData.append(\"p\", \"forgot\");\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/customers/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n            \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your regsitered email address.\")\n                    setDisabled(false)\n                    setLoad(true)\n                    getTime();\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                }\n            })\n            .catch((error) => {\n              ShowError.LoadingError(setLoading)\n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" className=\"autoWidthBtn\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/components/InputRoom/index.js",["3387","3388"],"import React from \"react\";\nimport * as Cookies from \"js-cookie\";\n\nimport \"../../assets/fonts/css/icons.css\";\n// import Validator from \"../../utils/Validator\";\n// import { RESOLUTION_ARR } from \"../../utils/Settings\";\nimport \"./index.css\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: \"\",\n      baseMode: \"avc\",\n      transcode: \"interop\",\n      attendeeMode: \"video\",\n      videoProfile: \"480p_4\",\n    };\n  }\n\n \n  render() {\n    return (\n      <div className=\"wrapper index\">\n        <div className=\"ag-header\"></div>\n        <div className=\"ag-main\">\n          <section className=\"login-wrapper\">\n            <div className=\"login-header\"></div>\n\n            \n\n            <div className=\"login-footer\">\n              <a\n              \n                className=\"ag-rounded button is-info\"\n              >\n                Join\n              </a>\n            </div>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n","/home/pooja/MazarsRepo/src/views/ProposalView/RejectedModal22.js",["3389","3390","3391","3392","3393","3394"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router\";\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal22({\n    showRejectedBox,\n    rejectedBox,\n    deleteCliente,\n    getQueriesData,\n    assignNo\n}) {\nlet history = useHistory()\n  const userId = window.localStorage.getItem(\"userid\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n  const token = window.localStorage.getItem(\"clientToken\")\n  const onSubmit = (value) => {\n setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"id\", assignNo);\n    formData.append(\"status\", 6);\n    formData.append(\"notes\", value.p_chat);\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/ProposalAccept`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Swal.fire(\"Rejected\", \"\", \"success\");\n          history.push({\n            pathname: `/customer/proposal`,\n            index: 0,\n          });\n        } else {\n          setLoading(false)\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={rejectedBox} toggle={deleteCliente} size=\"md\">\n        <ModalHeader toggle={deleteCliente}>Please provide the reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"customBtn\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal22;\n","/home/pooja/MazarsRepo/src/components/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/ViewAllReport.js",["3395","3396","3397","3398","3399","3400","3401","3402","3403","3404","3405","3406"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport * as yup from \"yup\";\nimport CommonServices from \"../../../common/common\";\nimport DiscardReport from \"./DiscardReport\";\nimport './modalSty.css';\nimport { makeStyles } from '@material-ui/core';\nimport {Typography} from \"@material-ui/core\"\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\nconst useStyle = makeStyles({\n  modalHeaderStyle : {\n    display : \"flex\",\n    width : \"100%\", \n    justifyContent : \"space-between\"\n  }\n})\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  getPendingforAcceptance,\n  deleiverAble\n}) {\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const [data, setData] = useState([]);\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const token = window.localStorage.getItem(\"adminToken\")\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n  }\nconst viewStyle = {\n  display: \"block\",\n    width: \"100%\",\n    border: \"1px solid black\"\n}\n  useEffect(() => {\n    getData();\n  }, [report]);\n  const downloadpdf = (qid, name) => {\n    let userId, token;\n  console.log(\"dpdf\", qid, name)\n    userId = window.localStorage.getItem(\"adminkey\");\n    token = window.localStorage.getItem(\"adminToken\")\n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/admin/viewreportdocument?assign_no=${report}&id=${qid}` , myConfig2)\n    .then((res) => {\n     \n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           console.log(res.headers)\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    })\n   }\n   const downloadpdfclient = (qid, name) => {\n    let userId, token;\n    console.log(\"dcpdf\", qid, name)\n    userId = window.localStorage.getItem(\"adminkey\");\n    token = window.localStorage.getItem(\"adminToken\")\n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/admin/viewreportdocument?assign_no=${report}&id=${qid}&document=2` , myConfig2)\n    .then((res) => {\n     \n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           console.log(res.headers)\n           a.style = \"display: none\";\n           a.href = url;\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    })\n   }\n  const getData = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/getstagesinfo`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n const classes = useStyle()\n  return (\n    <>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n       <ModalHeader toggle={ViewReport} className = {classes.modalHeaderStyle}>\n           \n           <Typography variant=\"h6\">\n           View All Report \n           </Typography>\n           <button class=\"autoWidthBtn\" onClick={() => ViewDiscussionToggel()}>\n                View Discussion\n              </button>\n           \n        </ModalHeader>\n        <ModalBody>\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th style={{border: `1px solid ${deleiverAble}`, color: \"#fff\", backgroundColor: `${deleiverAble}`}}>S.No</th>\n                <th style={{border: `1px solid ${deleiverAble}`, color: \"#fff\", backgroundColor: `${deleiverAble}`,  width:\"120px\"}}>Date</th>\n                <th style={{border: `1px solid ${deleiverAble}`, color: \"#fff\", backgroundColor: `${deleiverAble}`}}>Document</th>\n               \n                <th style={{border: `1px solid ${deleiverAble}`, color: \"#fff\", backgroundColor: `${deleiverAble}` , width: \"150px\"}}>Report Type</th>\n                <th style={{border: `1px solid ${deleiverAble}`, color: \"#fff\", backgroundColor: `${deleiverAble}`, width: \"100px\"}}>Action</th>\n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr className=\"modalTable\">\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                    \n                    <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                           <span onClick={() => downloadpdf(p.docid, p.document)} style={{display: \"flex\", cursor : \"pointer\"}}>\n                     <i className=\"fa fa-photo\"></i>\n                     \n                       \n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </span>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                     \n                     <span onClick={() => downloadpdfclient(p.docid, p.customer_files)} style={{display: \"flex\", cursor : \"pointer\"}}>\n                     <i className=\"fa fa-photo\"></i>\n                      \n                        &nbsp; &nbsp; &nbsp;{p.customer_files}\n                        </span>\n                    </tr> }\n                    </td>\n                  \n                    \n                  \n                   \n\n                    <td>\n                  <p>    {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\n                  \n                  <br>\n                  </br> \n                  {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> }</td>\n                  <td>\n                  {p.stages_type === \"2\" ? <>\n                  {p.status === \"3\" ? \n                   <p className=\"declined\"> Discarded</p> : \n                   null}\n                   {\n                     p.status === \"1\" ?\n                     <div style={{ cursor: \"pointer\" }} title=\"Client Accepted\">\n                     <i\n                       class=\"fa fa-check\"\n                       style={{\n                         color: \"blue\",\n                         fontSize: \"16px\",\n                         marginLeft: \"10px\"\n                       }}\n                     ></i>\n                   </div> : null\n                   }\n                   {p.status === \"0\" || p.status === \"2\" ?\n                   <>\n                   {p.tlstatus === \"0\" ?\n                   <p className=\"declined\">Pending</p> :\n                   <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                    <div title=\"Discussion\">\n                      <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"green\"\n                        }}\n                     \n                      ></i>\n                    </div>\n                    <div title=\"Discard\">\n                      <i\n                        class=\"fa fa-times\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"red\"\n                        }}\n                      \n                      ></i>\n                    </div>\n                  </div>}\n                   </> : null}</> : null}\n                 </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        getData={getData}\n        headColor=\"#5a625a\"\n      />\n    </>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/components/Search-Filter/AdminFilter.js",["3407","3408","3409","3410","3411","3412","3413","3414","3415","3416","3417","3418","3419","3420","3421","3422","3423","3424","3425","3426","3427"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction AdminFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    records,\n    setRecords,\n    setData,\n    getData,\n    acceptedProposal,\n    pendingAcceptedProposal,\n    declinedProposal,\n    declinedQueries,\n    pendingForProposal,\n    pendingAlloation,\n    allQueries,\n    assignment,\n    allProposal,\n    AllPayment,\n    paid,\n    unpaid,\n  } = props;\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n  const [item] = useState(current_date);\n\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      if(selectedData != undefined && selectedData.length > 0){\n        axios\n        .get(`${baseUrl}/admin/getCategory?pid=${selectedData}`)\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n      }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n   \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n   \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n   \n    setSelectedData([]);\n    setTax2([])\n    setStore2([]);\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    setTax2([])\n    getData();\n  };\n\n\n  const onSubmit = (data) => {\n\n   \n\n\n\n    if (acceptedProposal == \"acceptedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?status1=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (pendingAcceptedProposal == \"pendingAcceptedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?status1=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (declinedProposal == \"declinedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?&status=6&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (declinedQueries == \"declinedQueries\") {\n      axios\n        .get(\n          `${baseUrl}/admin/declinedQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (pendingForProposal == \"pendingForProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/pendingProposal?category=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (allQueries == \"allQueries\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getAllQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (pendingAlloation == \"pendingAlloation\") {\n      axios\n        .get(\n          `${baseUrl}/admin/pendingAllocation?category=${store2}&date1=${data.p_dateFrom}&date2=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (AllPayment == \"AllPayment\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (unpaid == \"unpaid\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (paid == \"paid\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (allProposal == \"allProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status1=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          className=\"searchBtn mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-inline\">\n                <div className=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div>\n                  <button\n                    type=\"submit\"\n                    className=\"btnSearch mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    max={item}\n                  />\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    defaultValue={item}\n                    max={item}\n                  />\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  {allQueries == \"allQueries\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress Queries</option>\n                      <option value=\"2\">Completed Queries</option>\n                      <option value=\"3\">Declined Queries</option>\n\n                    </select>\n                  )}\n\n                  {pendingAcceptedProposal == \"pendingAcceptedProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Preparation</option>\n                      <option value=\"5\"> Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {pendingForProposal == \"pendingForProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress; Preparation</option>\n                      <option value=\"2\"> Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {allProposal == \"allProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress Proposals</option>\n                      <option value=\"2\">Accepted Proposals</option>\n                      <option value=\"3\">Client Declined Proposals</option>\n                    </select>\n                  )}\n\n                  {declinedQueries == \"declinedQueries\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Admin Declined; Queries</option>\n                      <option value=\"2\">Client Declined; Queries</option>\n                      <option value=\"3\">Client Declined; Proposals</option>\n                      <option value=\"4\">Client Declined; Payment</option>\n                    </select>\n                  )}\n\n                  {AllPayment == \"AllPayment\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Unpaid</option>\n                      <option value=\"2\">Paid</option>\n                      <option value=\"3\">Declined</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"searchBtn mx-sm-1 mb-2\">\n                        Search\n                      </button>\n                <Reset />\n\n               \n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AdminFilter;\n\n\n   ","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/ShowProposal.js",["3428","3429","3430"],"import React from 'react';\nimport {Modal, ModalHeader, ModalBody, ModalFooter, Button} from 'reactstrap';\nimport { baseUrl } from '../../../config/config';\nimport { Typography } from '@mui/material';\nconst ShowProposal = ({setViewProposal, viewProposalModal, showProposalModal2 , proposalId}) => {\n  \n    return(\n       \n        <>\n       \n          <Modal isOpen={viewProposalModal} toggle={showProposalModal2} size=\"lg\" scrollable={true} style={{ height: \"100%\" }} >\n            <ModalHeader toggle={showProposalModal2}>\n<Typography variant=\"h6\">\nView Proposal\n</Typography>\n            </ModalHeader>\n            <ModalBody>\n          <iframe src={`${baseUrl}/customers/dounloadpdf?id=${proposalId}&viewpdf=1`}\n            height=\"100%\" width=\"100%\" />\n        </ModalBody>\n           \n        </Modal>\n       \n       \n        </>\n    )\n}\nexport default ShowProposal;","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/RetviewModal.js",["3431","3432","3433","3434"],"import React from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { Typography } from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Spinner } from \"reactstrap\";\nimport { useState } from \"react\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Swal from \"sweetalert2\";\nconst RetviewModal = ({\n    retview,\n    retviewProposal,\n    getProposalData,\n    assignNo\n}) => {\n    const [loading, setLoading] = useState(false);\n    const userId = localStorage.getItem(\"adminkey\")\n    const Schema = yup.object().shape({\n        p_reason: yup.string().required(\"\"),\n      });\n      const token = window.localStorage.getItem(\"adminToken\")\n      const myConfig = {\n          headers : {\n           \"uit\" : token\n          }\n        }\n    const { handleSubmit, register, reset, errors } = useForm({\n        resolver: yupResolver(Schema),\n      });\n      const onSubmit = (value) => {\n          setLoading(true)\n        let formData = new FormData();\n        formData.append(\"uid\", JSON.parse(userId));\n        formData.append(\"qid\", assignNo);\n        formData.append(\"notes\", value.p_reason);\n    \n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/admin/reactiveProposal`,\n          headers : {\n            uit : token\n          },\n          data: formData,\n        })\n      .then((response) => {\n         if(response.data.code === 1){\n             setLoading(false)\n\n             retviewProposal()\n             getProposalData()\n             Swal.fire({\n                 \"title\" : \"success\",\n                 \"html\" : \"Proposal restored successfully\",\n                 \"icon\" : \"success\"\n             })\n         }\n         else{\n             setLoading(false)\n             retviewProposal()\n             getProposalData()\n             Swal.fire({\n                 \"title\" : \"error\",\n                 \"html\" : \"something went wrong , please try again\",\n                 \"icon\" :\"error\"\n             })\n         }\n      })\n    }\n    return(\n        <Modal isOpen={retview} toggle={retviewProposal}>\n            <ModalHeader toggle={retviewProposal }>\n<Typography variant=\"h6\">\n    Please provide the reason\n</Typography>\n            </ModalHeader>\n            <ModalBody>\n  <form onSubmit={handleSubmit(onSubmit)}>\n <div className=\"mb-3\">\n<textarea\n  className={classNames(\"form-control\", {\n    \"is-invalid\": errors.p_reason,\n  })}\nname=\"p_reason\" \nid=\"textarea\"\nref={register}\nplaceholder=\"Enter text here...\"\nrows=\"6\">\n</textarea>\n</div>\n<div className=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className = \"autoWidthBtn\">\n                    Submit\n                  </button>\n              }\n            </div>\n</form>\n\n            </ModalBody>\n           \n        </Modal>\n    )\n\n}\nexport default RetviewModal;","/home/pooja/MazarsRepo/src/agora.config.js",[],"/home/pooja/MazarsRepo/src/components/AgoraVideoCall/index.jsx",["3435","3436","3437","3438","3439","3440","3441","3442","3443","3444","3445","3446","3447","3448","3449","3450","3451","3452","3453","3454","3455"],"/home/pooja/MazarsRepo/src/pages/Admin/ViewProposal/ViewComponent.js",["3456","3457","3458","3459","3460","3461"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\n\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\n\n\n  return (\n    <div>\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{viewData.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Name of Team Leader</th>\n                <td>{viewData.tl_name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date of Allocation</th>\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposed Amount</th>\n                <td>{viewData.ProposedAmount}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Status</th>\n                <td>\n                  {\n                    viewData.status == \"Inprogress\" ?\n                      <div>\n                        {viewData.status}/\n                        <p className=\"inprogress\">\n                          {viewData.statusdescription}\n                        </p>\n                      </div>\n                      :\n                      viewData.status == \"Declined; Proposal\" ?\n                        <div>\n                          {viewData.status}\n                          <p className=\"declined\">\n                            {viewData.statusdescription}\n                          </p>\n                        </div> :\n                        viewData.status == \"Accepted; Proposal\" ?\n                          <div>\n                            {viewData.status}\n                            <p className=\"completed\">\n                              {viewData.statusdescription}\n                            </p>\n                          </div> :\n                          null\n                  }\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ViewComponent;\n","/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/index.jsx",["3462","3463","3464","3465","3466","3467","3468","3469","3470","3471","3472","3473","3474","3475","3476","3477","3478","3479","3480","3481","3482","3483","3484"],"/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/RecordingModal.js",["3485","3486","3487","3488","3489","3490","3491"],"/home/pooja/MazarsRepo/src/views/ProposalView/TermsConditions.js",["3492","3493","3494"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { baseUrl } from \"../../config/config\";\nimport axios from \"axios\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  readTerms,\n  id\n}) {\n  const [url, setUrl] = useState(\"\")\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n    headers : {\n     \"uit\" : token\n    },\n    responseType: 'blob'\n  }\nuseEffect(() => {\n  axios.get(`${baseUrl}/customers/dounloadpdf?id=${id}&viewpdf=1` , myConfig)\n  .then((res) => {\n    console.log(\"res\", res)\n    if(res.status === 200){\n     \n      setUrl(URL.createObjectURL(res.data))\n    }\n  })\n}, [])\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={readTerms} size=\"lg\" scrollable={true} style={{ height: \"100%\" }} >\n        <ModalHeader toggle={readTerms}>Engagement Letter</ModalHeader>\n        <ModalBody>\n          <iframe src={url}\n            height=\"100%\" width=\"100%\" />\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"customBtn\" onClick={readTerms}>Close</button>\n        </ModalFooter>\n\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/views/AddFressAssignment/data.js",[],"/home/pooja/MazarsRepo/src/views/AssignmentTab/CustomerDeclinedPayment.js",["3495","3496","3497"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl} from \"../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport { Link} from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport Records from \"../../components/Records/Records\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport './index.css';\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport MessageIcon, { ViewDiscussionIcon, HelpIcon} from \"../../components/Common/MessageIcon\";\nfunction CustomerDeclinedPayment() {\n    const userId = window.localStorage.getItem(\"userid\");\n    const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n    const [records, setRecords] = useState([]);\n    const [report, setReport] = useState();\n    const [dataItem, setDataItem] = useState({});\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [reportModal, setReportModal] = useState(false);\n    const [openManual, setManual] = useState(false)\n    const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n  const needHelp = () => {\n      \n      setManual(!openManual)\n  }\n    const ViewReport = (key) => {\n      \n        setReportModal(!reportModal);\n        setReport(key.assign_no);\n        setDataItem(key)\n    };\n\n   \n   \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getAssignmentData();\n    }, []);\n\n\n    const getAssignmentData = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=3`, myConfig\n            )\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setAssignmentDisplay(res.data.result);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle : () => {\n                return( {\n                    width: \"50px\"\n                })\n            } \n        },\n        {\n            dataField: \"created\",\n            text: \"Date\",\n            sort: true,\n            \n             formatter: function dateFormat(cell, row) {\n             \n              var oldDate = row.created;\n              if (oldDate == null) {\n                return null;\n              }\n              return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n          },\n          {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            \n            formatter: function nameFormatter(cell, row) {\n             \n                return (\n                    <>\n                           <Link\n                                to={{\n                                    pathname: `/customer/my-assingment/${row.id}`,\n                                    index : 3,\n                                    routes: \"assignment\",\n                                }}\n                            >\n                                {row.assign_no}\n                            </Link>\n                    </>\n                );\n            },\n        \n          },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n           \n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n           \n        },\n        {\n            dataField: \"status\",\n            text: \"Status\",\n            \n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div>\n                  {row.paid_status == \"2\" &&\n                      <p>\n                        <span className=\"declined\">Payment Declined</span>\n                      </p>\n                    }\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                     <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                      {row.client_discussion}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                      <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                            {row.draft_report}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                      <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                           {row.final_discussion}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                      <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                   {row.delivery_report}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                      <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                  {row.other_stage}\n                       </span>\n                    </p>\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            dataField: \"Exp_Delivery_Date\",\n            text: \"Expected date of delivery\",\n            sort: true,\n                   formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.created;\n                if (oldDate === null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"final_date\",\n            text: \"Actual date of delivery\",\n            sort: true,\n                       formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.final_date;\n                if (oldDate === null || oldDate === \"0000-00-00\") {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Deliverable\",\n            \n            formatter: function (cell, row) {\n               \n                return (\n                    <>\n\n{\n  row.status === \"Payment decliend\" || row.paid_status === \"2\" ? null :\n    <div>\n      {row.assignment_draft_report || row.final_report ?\n        <div title=\"View All Report\"\n          style={{ cursor: \"pointer\", textAlign: \"center\" }}\n          onClick={() => ViewReport(row)}\n        >\n          <DescriptionOutlinedIcon color=\"secondary\" />\n        </div>\n        :\n        null\n      }\n    </div>\n}\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Team Leader\",\n          \n            formatter: priceFormatter,\n        },\n        {\n            text: \"Action\",\n            headerStyle : () => {\n                return({width: \"70px\"})\n              },\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        {row.paid_status === \"2\" ? null :\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n                       \n                            <Link\n                               \n                                    to={{\n                                        pathname: `/customer/chatting/${row.assign_id}`,\n                                        index : 3,\n                                        routes: \"assignment\",\n                                    obj: {\n                                        message_type: \"4\",\n                                        query_No: row.assign_no,\n                                        query_id: row.id,\n                                        routes: `/customer/assignment`\n                                    }\n                                }}\n                            >\n                              <MessageIcon />\n                            </Link>\n                            <div onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                                  <ViewDiscussionIcon />\n                                </div>\n\n                    </div> }\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n    //tl,phone,email\n    function priceFormatter(cell, row) {\n       \n        if (row) {\n            return (\n                <>\n                    <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\n                    <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\n                    <p style={{ fontSize: \"10px\" }}>{row.email}</p>\n                </>\n            );\n        }\n\n        return null;\n    }\n\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n                      <CustomerFilter\n                        setData={setAssignmentDisplay}\n                        getData={getAssignmentData}\n                        id={userId}\n                        assignment=\"declinedAssignment\"\n                        records={records}\n                        setRecords={setRecords}\n                    />\n                </CardHeader>\n\n                <CardBody>\n          <Records records={records} />\n          <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"assignProcess\"} />\n                        </ModalBody>\n                    </Modal>\n                    <DataTablepopulated \n         bgColor =\"#7c887c\"\n          bootstrap4\n          keyField=\"id\"\n          data={assignmentDisplay}\n          columns={columns}>\n           </DataTablepopulated>\n\n                    <ViewAllReportModal\n                        ViewReport={ViewReport}\n                        reportModal={reportModal}\n                        report={report}\n                        getPendingforAcceptance={getAssignmentData}\n                        dataItem={dataItem}\n                        deleiverAble = \"#7c887c\"\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentData}\n                        headColor=\"#7c887c\"\n                    />\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default CustomerDeclinedPayment;","/home/pooja/MazarsRepo/src/views/AssignmentTab/CompletedAssignment.js",["3498","3499","3500","3501","3502","3503"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl} from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport Records from \"../../components/Records/Records\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport Alerts from \"../../common/Alerts\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport './index.css';\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, { ViewDiscussionIcon, HelpIcon} from \"../../components/Common/MessageIcon\";\nfunction CompleteAssignment() {\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [report, setReport] = useState()\n  const [reportModal, setReportModal] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [openManual, setManual] = useState(false)\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const needHelp = () => {\n      \n      setManual(!openManual)\n  }\n  const ViewReport = (key) => {\n   \n    setReportModal(!reportModal);\n    setReport(key);\n  };\n\n  var clcomp= {\n    color: \"green\"\n  }\n  var clinpro = {\n    color : \"blue\"\n  }\n\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n\n  const getAssignmentData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=2`, myConfig\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAssignmentDisplay(res.data.result);\n         \n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle : () => {\n        return( {\n            width: \"50px\"\n        })\n    }\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      \n       formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      \n      formatter: function nameFormatter(cell, row) {\n       \n          return (\n              <>\n                     <Link\n                          to={{\n                              pathname: `/customer/my-assingment/${row.id}`,\n                              index : 2,\n                              routes: \"assignment\",\n                          }}\n                      >\n                          {row.assign_no}\n                      </Link>\n              </>\n          );\n      },\n  \n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n     \n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n     \n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      \n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span className=\"declined\">Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                {row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                      {row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                     {row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                             {row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                            {row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.created;\n        if (oldDate === null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      \n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.final_date;\n        if (oldDate === null || oldDate === \"0000-00-00\") {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Deliverable\",\n     \n      formatter: function (cell, row) {\n    \n        return (\n          <>\n\n            {\n              row.status === \"Payment decliend\" ? null :\n                <div>\n                  {row.assignment_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                      onClick={() => ViewReport(row.assign_no)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n\n                \n                </div>\n            }\n\n\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Team Leader\",\n      \n      formatter: priceFormatter,\n    },\n    {\n      text: \"Action\",\n      headerStyle : () => {\n        return({width: \"70px\"})\n      },\n      style: {\n        fontSize: \"11px\",\n    },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n              \n                <Link\n                                to={{\n                                  pathname: `/customer/chatting/${row.assign_id}`,\n                                  index : 2,\n                                  routes: \"assignment\",\n                    obj: {\n                      message_type: \"4\",\n                      query_No: row.assign_no,\n                      query_id: row.id,\n                      routes: `/customer/assignment`\n                    }\n                  }}\n                >\n                  <MessageIcon />\n                </Link>\n            \n                <div onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                                  <ViewDiscussionIcon />\n                                </div>\n\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  //accept handler\n  const acceptHandler = (key) => {\n \n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", key.id);\n    formData.append(\"query_no\", key.assign_no);\n    formData.append(\"type\", 1);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/draftAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n\n          var variable = \"Draft accepted successfully \"\n          Alerts.SuccessNormal(variable)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n\n  //tl,phone,email\n  function priceFormatter(cell, row) {\n   \n    if (row) {\n      return (\n        <>\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\n        </>\n      );\n    }\n\n    return null;\n  }\n\n\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n        <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n          <CustomerFilter\n            setData={setAssignmentDisplay}\n            getData={getAssignmentData}\n            id={userId}\n            assignment=\"completeAssignment\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n\n        <CardBody>\n         <Records records={records} />\n         <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"assignProcess\"} />\n                        </ModalBody>\n                    </Modal>\n                    <DataTablepopulated \n         bgColor =\"#7c887c\"\n          bootstrap4\n          keyField=\"id\"\n          data={assignmentDisplay}\n          columns={columns}>\n           </DataTablepopulated>\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n            deleiverAble = \"#7c887c\"\n          />\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n            headColor=\"#7c887c\"\n          />\n\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default CompleteAssignment;","/home/pooja/MazarsRepo/src/views/AssignmentTab/InprogressAssignment.js",["3504","3505","3506","3507","3508"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport RejectedModal from \"./RejectModal\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport Records from \"../../components/Records/Records\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport './index.css';\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport MessageIcon, { ViewDiscussionIcon, HelpIcon} from \"../../components/Common/MessageIcon\";\nfunction InprogressAssignment() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n \n  const [rejectedItem, setRejectedItem] = useState({});\n  const [report, setReport] = useState();\n  const [reportModal, setReportModal] = useState(false);\n\n  const [rejectModal, setRejectModal] = useState(false);\n  const [openManual, setManual] = useState(false)\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const needHelp = () => {\n      \n      setManual(!openManual)\n  }\n  const rejectHandler = (key) => {\n    setRejectModal(!rejectModal);\n    setRejectedItem(key);\n  };\n  var clcomp= {\n    color: \"green\"\n  }\n  var clinpro = {\n    color : \"blue\"\n  }\n\n  \n  const ViewReport = (key) => {\n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n  \n  };\n\n\n  \n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n\n  const getAssignmentData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=1`, myConfig\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAssignmentDisplay(res.data.result);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle : () => {\n        return( {\n            width: \"50px\"\n        })\n    } \n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      \n       formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n     \n      formatter: function nameFormatter(cell, row) {\n       \n          return (\n              <>\n                     <Link\n                          to={{\n                              pathname: `/customer/my-assingment/${row.id}`,\n                              index : 1,\n                              routes: \"assignment\",\n                          }}\n                      >\n                          {row.assign_no}\n                      </Link>\n              </>\n          );\n      },\n  \n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      \n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      \n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n     \n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span className=\"declined\">Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                {row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                      {row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                     {row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                             {row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                            {row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      \n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.created;\n        if (oldDate === null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n    \n        var oldDate = row.final_date;\n        if (oldDate === null || oldDate === \"0000-00-00\") {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Deliverable\",\n      \n      formatter: function (cell, row) {\n       \n        return (\n          <>\n\n        \n{\n  row.status === \"Payment decliend\" || row.paid_status === \"2\" ? null :\n    <div>\n      {row.assignment_draft_report || row.final_report ?\n        <div title=\"View All Report\"\n          style={{ cursor: \"pointer\", textAlign: \"center\" }}\n          onClick={() => ViewReport(row)}\n        >\n          <DescriptionOutlinedIcon color=\"secondary\" />\n        </div>\n        :\n        null\n      }\n    </div>\n}\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Team Leader\",\n      \n      formatter: priceFormatter,\n    },\n    {\n      text: \"Action\",\n      headerStyle : () => {\n        return({width: \"70px\"})\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n          {row.paid_status === \"2\" ? null :\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n            \n                <Link\n                \n                    to={{\n                      pathname: `/customer/chatting/${row.assign_id}`,\n                      index : 1,\n                      routes: \"assignment\",\n                    obj: {\n                      message_type: \"4\",\n                      query_No: row.assign_no,\n                      query_id: row.id,\n                      routes: `/customer/assignment`\n                    }\n                  }}\n                >\n                <MessageIcon />\n                </Link>\n            \n                <div onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                                  <ViewDiscussionIcon />\n                                </div>\n\n            </div> }\n          </>\n        );\n      },\n    },\n  ];\n\n  //accept handler\n \n\n  //tl,phone,email\n  function priceFormatter(cell, row) {\n  \n    if (row) {\n      return (\n        <>\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\n        </>\n      );\n    }\n\n    return null;\n  }\n\n\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n        <span onClick= {(e) => needHelp()}> <HelpIcon /></span>  <CustomerFilter\n            setData={setAssignmentDisplay}\n            getData={getAssignmentData}\n            id={userId}\n            assignment=\"assignmentInprogress\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n\n        <CardBody>\n         <Records records={records} />\n         <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"assignProcess\"} />\n                        </ModalBody>\n                    </Modal>\n                             \n                    <DataTablepopulated \n         bgColor =\"#7c887c\"\n          bootstrap4\n          keyField=\"id\"\n          data={assignmentDisplay}\n          columns={columns}>\n           </DataTablepopulated>\n\n        \n          <RejectedModal\n            rejectHandler={rejectHandler}\n            rejectModal={rejectModal}\n            rejectedItem={rejectedItem}\n            getPendingforAcceptance={getAssignmentData}\n          />\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n            deleiverAble = \"#7c887c\"\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n            headColor=\"#7c887c\"\n          />\n\n\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InprogressAssignment;","/home/pooja/MazarsRepo/src/views/AssignmentTab/AllAssignment.js",["3509","3510","3511"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport Records from \"../../components/Records/Records\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport './index.css'\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport MessageIcon, { ViewDiscussionIcon, HelpIcon} from \"../../components/Common/MessageIcon\";\nfunction AllAssignment() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [report, setReport] = useState();\n  const [dataItem, setDataItem] = useState({});\n  const [reportModal, setReportModal] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [openManual, setManual] = useState(false)\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const needHelp = () => {\n      \n      setManual(!openManual)\n  }\n  const ViewReport = (key) => {\n\n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n  \n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n\n  const getAssignmentData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`, myConfig\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAssignmentDisplay(res.data.result);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle : () => {\n        return( {\n            width: \"50px\"\n        })\n    }\n    },\n   \n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n    \n       formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      \n      formatter: function nameFormatter(cell, row) {\n       \n          return (\n              <>\n                     <Link\n                          to={{\n                              pathname: `/customer/my-assingment/${row.id}`,\n                              index : 0,\n                              routes: \"assignment\",\n                          }}\n                      >\n                          {row.assign_no}\n                      </Link>\n              </>\n          );\n      },\n  },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n    \n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      \n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      headerStyle : () => {\n        return( {\n            width: \"180px\"\n        })\n    },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span className=\"declined\">Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                {row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                      {row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                     {row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                             {row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                            {row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    // {\n    //   dataField: \"Exp_Delivery_Date\",\n    //   text: \"Expected date of delivery\",\n    //   sort: true,\n     \n    //   formatter: function dateFormat(cell, row) {\n\n    //     var oldDate = row.created;\n    //     if (oldDate == null) {\n    //       return null;\n    //     }\n    //     return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    //   },\n    // },\n    {\n      dataField: \"final_date\",\n      text: \"Expected / Actual date of delivery\",\n      sort: true,\n      \n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate1 = row.final_date;\n        if (oldDate1 == null || oldDate1 === \"0000-00-00\") {\n          return null;\n        }\n        let finalDate =  oldDate1.toString().split(\"-\").reverse().join(\"-\");\n        var oldDate2 = row.created;\n        if (oldDate2 == null || oldDate2 === \"0000-00-00\") {\n          return null;\n        }\n        let expectedDate =  oldDate2.toString().split(\"-\").reverse().join(\"-\");\n        return(\n          <>\n          {finalDate ? \n          <p>{finalDate}</p> : <p>{expectedDate}</p>}\n          </>\n        )\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Deliverable\",\n     \n      formatter: function (cell, row) {\n     \n        return (\n          <>\n\n            {\n              row.status === \"Payment decliend\" || row.paid_status === \"2\" ? null :\n                <div>\n                  {row.assignment_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                      onClick={() => ViewReport(row)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Team Leader\",\n     \n      formatter: priceFormatter,\n    },\n    {\n      text: \"Action\",\n      headerStyle : () => {\n        return({width: \"70px\"})\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {row.paid_status === \"2\" ? null :\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n           \n              <Link\n                to={{\n                  pathname: `/customer/chatting/${row.assign_id}`,\n                  index : 0,\n                  routes: \"assignment\",\n                 \n                  obj: {\n                    message_type: \"4\",\n                    query_No: row.assign_no,\n                    query_id: row.id,\n                    routes: `/customer/assignment`\n                  }\n                }}\n              >\n              <MessageIcon />\n              </Link>\n            \n\n              <div onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                                  <ViewDiscussionIcon />\n                                </div>\n\n          </div>}\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  //tl,phone,email\n  function priceFormatter(cell, row) {\n   \n    if (row) {\n      return (\n        <>\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\n        </>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n        <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n           <CustomerFilter\n            setData={setAssignmentDisplay}\n            getData={getAssignmentData}\n            id={userId}\n            assignment=\"assignment\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n\n        <CardBody>\n        \n          <Records records={records} />\n          <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"assignProcess\"} />\n                        </ModalBody>\n                    </Modal>\n          \n         <DataTablepopulated \n         bgColor = \"#5a625a\"\n          bootstrap4\n          keyField=\"id\"\n          data={assignmentDisplay}\n          columns={columns}>\n           </DataTablepopulated>\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n            dataItem={dataItem}\n            deleiverAble = \"#5a625a\"\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n            headColor=\"#5a625a\"\n          />\n\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllAssignment;\n\n","/home/pooja/MazarsRepo/src/views/ProposalTab/AcceptedProposal.js",["3512","3513","3514","3515","3516","3517","3518"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n   \n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport CommonShowProposal from \"../../components/commonShowProposal/CommonShowProposal\";\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, HelpIcon} from \"../../components/Common/MessageIcon\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\n\n\nfunction AcceptedProposal() {\n    const alert = useAlert();\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [proposalDisplay, setProposalDisplay] = useState([]);\n    const [proposalCount, setCountProposal] = useState(\"\");\n    const [records, setRecords] = useState([]);\n\n    const [id, setId] = useState(null);\n    const [reject, setRejected] = useState(true);\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n     const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const [openManual, setManual] = useState(false)\n    const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const needHelp = () => {\n        \n        setManual(!openManual)\n    }\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getProposalData();\n    }, []);\n  const showProposalModal2 = (e) => {\n    console.log(\"eeee\")\n    setViewProposalModal(!viewProposalModal);\n    setProposalId(e)\n  }\n    const getProposalData = () => {\n        axios\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`, myConfig)\n            .then((res) => {\n\n                if (res.data.code === 1) {\n                    setProposalDisplay(res.data.result);\n                    setCountProposal(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n           \n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle : () => {\n                return( {\n                    width: \"50px\"\n                })\n            }\n        },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n           \n            formatter: function (cell, row) {\n              \n                var oldDate = row.created;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/customer/my-assingment/${row.q_id}`,\n                                index: 0,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n           \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div className=\"completed\">\n                            {row.status}\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Proposed Amout\",\n            dataField: \"ProposedAmount\",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 console.log(nfObject.format(x))\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Accepted Amount\",\n            dataField: \"accepted_amount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 console.log(nfObject.format(x))\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            \n            formatter: function (cell, row) {\n                return (\n                    <>\n                        {row.statuscode === \"6\" ? \n                        <>\n                        <span className=\"ml-1\" title=\"Send Message\">\n                      \n                                    <Link\n                                        to={{\n                                            pathname: `/customer/chatting/${row.q_id}&type=2`,\n                                            index: 0,\n                                            routes: \"proposal\",\n                                            obj: {\n                                                message_type: \"3\",\n                                                query_No: row.assign_no,\n                                                query_id: row.q_id,\n                                                routes: `/customer/proposal`\n                                            }\n                                        }}\n                                    >\n                                       <MessageIcon />\n                                    </Link>\n                                    </span>\n                              <span onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                              <ViewDiscussionIcon />\n                              </span>\n\n                               \n\n                        </> : (\n                            <>\n                               \n                               <span className=\"ml-1\" title=\"Send Message\">\n                                   <Link\n                                      to={{\n                                        pathname: `/customer/chatting/${row.q_id}&type=2`,\n                                        index: 0,\n                                        routes: \"proposal\",     \n                                            obj: {\n                                                message_type: \"3\",\n                                                query_No: row.assign_no,\n                                                query_id: row.q_id,\n                                                routes: `/customer/proposal`\n                                            }\n                                        }}\n                                    >\n                                        <MessageIcon />\n                                    </Link>\n                                   </span>\n                            \n\n                                   <span onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                              <ViewDiscussionIcon />\n                              </span>\n\n                               \n                                    {\n                                        row.statuscode > 6 ?\n                                             <>\n                                 <span  onClick={(e) => showProposalModal2(row.q_id)} className=\"ml-1\">\n                                            <EyeIcon  />\n                                           </span>\n                              \n                                </>\n                                            :\n                                            null\n                                    }\n\n                                   \n                               \n\n                            </>\n                        )\n                        }\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n    return (\n       \n            <Card>\n                <CardHeader>\n                <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n                    <CustomerFilter\n                        setData={setProposalDisplay}\n                        getData={getProposalData}\n                        id={userId}\n                        acceptedProposal=\"acceptedProposal\"\n                        records={records}\n                        setRecords={setRecords}\n                    />\n                </CardHeader>\n                <CardBody>\n                \n                    <Records records={records} />\n                    <DataTablepopulated \n                   bgColor=\"#5f7b97\"\n                   keyField= {\"assign_no\"}\n                   data={proposalDisplay}\n                   columns={columns}>\n                    </DataTablepopulated>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalData}\n                        headColor=\"#5f7b97\"\n                    />\n                </CardBody>\n{\n    viewProposalModal === true ?\n    <CommonShowProposal\n    setViewProposalModal = {setViewProposalModal}\n    viewProposalModal = {viewProposalModal}\n    showProposalModal2 = {showProposalModal2}\n    proposalId = {proposalId}/> : \"\"\n}\n          <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"proposalProcessing\"} />\n                        </ModalBody>\n                    </Modal>\n            </Card>\n        \n    );\n}\n\nexport default AcceptedProposal;\n","/home/pooja/MazarsRepo/src/views/ProposalTab/DeclinedProposal.js",["3519","3520","3521","3522","3523","3524","3525","3526","3527","3528"],"import React, { useState, useEffect } from \"react\";import Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n// import ChatComponent from \"./ChatComponent\";\nimport \"./index.css\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../components/Common/MessageIcon\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\n\nfunction DeclinedProposal() {\n    const alert = useAlert();\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [proposalDisplay, setProposalDisplay] = useState([]);\n    const [proposalCount, setCountProposal] = useState(\"\");\n    const [records, setRecords] = useState([]);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [id, setId] = useState(null);\n    const [reject, setRejected] = useState(true);\n    const [openManual, setManual] = useState(false)\n    const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const needHelp = () => {\n        \n        setManual(!openManual)\n    }\n   \n\n    useEffect(() => {\n        getProposalData();\n    }, []);\n\n    const getProposalData = () => {\n        axios\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=3`, myConfig)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposalDisplay(res.data.result);\n                    setCountProposal(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            \n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle : () => {\n                return( {\n                    width: \"50px\"\n                })\n            }\n        },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n           \n            formatter: function (cell, row) {\n              \n                var oldDate = row.created;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/customer/my-assingment/${row.q_id}`,\n                                index: 0,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n           \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of Decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n           \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div className=\"declined\">\n                            {row.status}\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Proposed Amout\",\n            dataField: \"ProposedAmount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 console.log(nfObject.format(x))\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Accepted Amount\",\n            dataField: \"accepted_amount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 console.log(nfObject.format(x))\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            \n            formatter : function formatterFun(cell, row) {\n                return(\n                    <>\n                    <div style={{display : \"flex\", justifyContent : \"flex-start\"}}>\n\n                                    <Link\n to={{\n    pathname: `/customer/chatting/${row.q_id}&type=2`,\n    index: 3,\n    routes: \"proposal\",\n                                            obj: {\n                                                message_type: \"3\",\n                                                query_No: row.assign_no,\n                                                query_id: row.q_id,\n                                                routes: `/customer/proposal`\n                                            }\n                                        }}\n                                    >\n                                        <MessageIcon />\n                                    </Link>\n                               \n\n                                    <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-2\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n\n</div>\n\n                    </>\n                )\n            }\n        }\n    ];\n\n    return (\n      \n            <Card>\n                <CardHeader>\n                <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n                    <CustomerFilter\n                        setData={setProposalDisplay}\n                        getData={getProposalData}\n                        id={userId}\n                        declinedProposal=\"declinedProposal\"\n                        records={records}\n                        setRecords={setRecords}\n                    />\n                </CardHeader>\n                <CardBody>\n                \n                    <Records records={records} />\n                    <DataTablepopulated \n                   bgColor=\"#5f7b97\"\n                   keyField= {\"assign_no\"}\n                   data={proposalDisplay}\n                   columns={columns}>\n                    </DataTablepopulated>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalData}\n                        headColor=\"#5f7b97\"\n                    />\n                    <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"proposalProcessing\"} />\n                        </ModalBody>\n                    </Modal>\n                </CardBody>\n            </Card>\n      \n    );\n}\n\nexport default DeclinedProposal;\n","/home/pooja/MazarsRepo/src/views/ProposalTab/InprogressProposal.js",["3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\n\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport CommonShowProposal from \"../../components/commonShowProposal/CommonShowProposal\";\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../components/Common/MessageIcon\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\n\nfunction InprogressProposal() {\n    const alert = useAlert();\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [proposalDisplay, setProposalDisplay] = useState([]);\n    const [proposalCount, setCountProposal] = useState(\"\");\n    const [records, setRecords] = useState([]);\n\n    const [id, setId] = useState(null);\n    const [reject, setRejected] = useState(true);\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n     const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const [openManual, setManual] = useState(false)\n    const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const needHelp = () => {\n        \n        setManual(!openManual)\n    }\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n     const showProposalModal2 = (e) => {\n    console.log(\"eeee\")\n    setViewProposalModal(!viewProposalModal);\n    setProposalId(e)\n  }\n    useEffect(() => {\n        getProposalData();\n    }, []);\n\n    const getProposalData = () => {\n        axios\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`, myConfig)\n            .then((res) => {\n             \n                if (res.data.code === 1) {\n                    setProposalDisplay(res.data.result);\n                    setCountProposal(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n           \n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle : () => {\n                return( {\n                    width: \"50px\"\n                })\n            }\n        },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n           \n            formatter: function (cell, row) {\n              \n                var oldDate = row.created;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/customer/my-assingment/${row.q_id}`,\n                                index: 1,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <div>\n                                        {row.status}/\n                                        <p className=\"inprogress\">\n                                            {row.statusdescription}\n                                        </p>\n                                    </div>\n                                    :\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        <div>\n                                            {row.status}\n                                            <p className=\"declined\">\n                                                {row.statusdescription}\n                                            </p>\n                                        </div> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <div>\n                                                {row.status}\n                                                <p className=\"completed\">\n                                                    {row.statusdescription}\n                                                </p>\n                                            </div> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Proposed Amout\",\n            dataField: \"ProposedAmount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 console.log(nfObject.format(x))\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Accepted Amount\",\n            dataField: \"accepted_amount\",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 console.log(nfObject.format(x))\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            \n            formatter: function (cell, row) {\n                return (\n                    <>\n                        {row.statuscode === \"6\" ? <div style={{display : \"flex\", justifyContent : \"flex-start\"}}>\n                                    <Link\n                                       \n                                            to={{\n                                                pathname: `/customer/chatting/${row.q_id}&type=2`,\n                                                index: 1,\n                                                routes: \"proposal\",\n                                            obj: {\n                                                message_type: \"3\",\n                                                query_No: row.assign_no,\n                                                query_id: row.q_id,\n                                                routes: `/customer/proposal`\n                                            }\n                                        }}\n                                    >\n                                        <MessageIcon />\n                                    </Link>\n                                \n\n                                <div onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                                  <ViewDiscussionIcon />\n                                </div>\n\n                        </div> : (\n                            <div style={{ display: \"flex\", justifyContent: \"flex-start\"}}>\n                               \n                                    <Link\n to={{\n    pathname: `/customer/chatting/${row.q_id}&type=2`,\n    index: 1,\n    routes: \"proposal\",\n                                            obj: {\n                                                message_type: \"3\",\n                                                query_No: row.assign_no,\n                                                query_id: row.q_id,\n                                                routes: `/customer/proposal`\n                                            }\n                                        }}\n                                    >\n                                       <MessageIcon />\n                                    </Link>\n                                \n\n                                <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-2\">\n                                   <ViewDiscussionIcon />\n                                </div>\n\n                                <div>\n                                    {\n                                        row.statuscode > 6 ?\n                                             <>\n                                 <div  className=\"ml-2\"  onClick={(e) => showProposalModal2(row.q_id)}>\n                \n              <EyeIcon />\n              \n            </div>\n                              \n                                </>\n                                            :\n                                            null\n                                    }\n\n                                    {\n                                        row.statuscode == 4\n                                            ?\n                                            <div style={{ cursor: \"pointer\" }} title=\"Decision on Proposal\" className=\"ml-2\">\n                                                 <Link\n                                      to={{\n                                        pathname: `/customer/proposal_view/${row.q_id}`,\n                                        index: 1,\n                                        routes: \"proposal\",     \n                                            \n                                        }}\n                                    >\n                                          <DiscussProposal titleName =\"Discussion on Proposal\"/>\n                                                </Link>\n                                            </div>\n                                            :\n                                            null\n                                    }\n                                </div>\n\n                            </div>\n                        )\n                        }\n                    </>\n                );\n            },\n        },\n    ];\n\n   \n    return (\n       \n            <Card>\n                <CardHeader>\n                <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n                                  <CustomerFilter\n                        setData={setProposalDisplay}\n                        getData={getProposalData}\n                        id={userId}\n                        inprogressProposal=\"inprogressProposal\"\n                        records={records}\n                        setRecords={setRecords}\n                    />\n                </CardHeader>\n                <CardBody>\n             \n                    <Records records={records} />\n                    <DataTablepopulated \n                   bgColor=\"#5f7b97\"\n                   keyField= {\"assign_no\"}\n                   data={proposalDisplay}\n                   columns={columns}>\n                    </DataTablepopulated>\n                \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalData}\n                        headColor=\"#5f7b97\"\n                    />\n                    <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"proposalProcessing\"} />\n                        </ModalBody>\n                    </Modal>\n                 {\n                     viewProposalModal === true ?\n                     <CommonShowProposal\n                     setViewProposalModal = {setViewProposalModal}\n                     viewProposalModal = {viewProposalModal}\n                     showProposalModal2 = {showProposalModal2}\n                     proposalId = {proposalId}/> : \"\"\n                 }\n                </CardBody>\n            </Card>\n      \n    );\n}\n\nexport default InprogressProposal;\n","/home/pooja/MazarsRepo/src/views/ProposalTab/AllProposal.js",["3540","3541","3542","3543","3544","3545","3546","3547","3548","3549"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../components/Records/Records\";\nimport Swal from \"sweetalert2\";\nimport ViewComponent from \"./ViewComponent\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport CommonShowProposal from \"../../components/commonShowProposal/CommonShowProposal\";\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../components/Common/MessageIcon\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\nfunction ProposalTab() {\n    const alert = useAlert();\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [proposalDisplay, setProposalDisplay] = useState([]);\n    const [proposalCount, setCountProposal] = useState(\"\");\n    const [records, setRecords] = useState([]);\n   \n\n    const [viewData, setViewData] = useState({});\n    const [viewModal, setViewModal] = useState(false);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n     const [viewProposalModal, setViewProposalModal] = useState(false)\n     const [openManual, setManual] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const token = window.localStorage.getItem(\"clientToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const ViewHandler = (key) => {\n\n        setViewModal(!viewModal);\n        setViewData(key);\n    };\n\n\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n const showProposalModal2 = (e) => {\n\n    setViewProposalModal(!viewProposalModal);\n    setProposalId(e)\n  }\n\n    useEffect(() => {\n        getProposalData();\n    }, []);\n\n    const getProposalData = () => {\n        axios\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`, myConfig)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposalDisplay(res.data.result);\n                    setCountProposal(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const needHelp = () => {\n        \n        setManual(!openManual)\n    }\nconst rightAli = {\n    display : \"flex\", \n    justifyContent : \"flex-end\", \n    Border : \"0px\"\n}\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n              return rowIndex + 1;\n            },\n            headerStyle : () => {\n                return( {\n                    width: \"50px\"\n                })\n            }\n          },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n          \n            formatter: function (cell, row) {\n              \n                var oldDate = row.created;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/customer/my-assingment/${row.q_id}`,\n                                index: 0,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n           \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n           \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <div>\n                                        {row.status}/\n                                        <p className=\"inprogress\">\n                                            {row.statusdescription}\n                                        </p>\n                                    </div>\n                                    :\n                                    row.status == \"Declined; Proposal\" ?\n                                        <div>\n                                            <p className=\"declined\">\n                                                {row.status}\n                                            </p>\n                                        </div> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <div>\n                                                <p className=\"completed\">\n                                                    {row.status}\n                                                </p>\n                                            </div> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Proposed Amount\",\n            dataField: \"ProposedAmount\",\n            sort: true,\n          \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Accepted Amount\",\n            dataField: \"accepted_amount\",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n      \n        {\n            text: \"Action\",\n            dataField: \"\",\n            \n            formatter: function (cell, row) {\n                return (\n                    <>\n                        {row.statuscode === \"6\" ? \n                        <>\n                        <span className=\"ml-1\" title=\"Send Message\">\n                      \n                                    <Link\n                                        to={{\n                                            pathname: `/customer/chatting/${row.q_id}&type=2`,\n                                            index: 0,\n                                            routes: \"proposal\",\n                                            obj: {\n                                                message_type: \"3\",\n                                                query_No: row.assign_no,\n                                                query_id: row.q_id,\n                                                routes: `/customer/proposal`\n                                            }\n                                        }}\n                                    >\n                                       <MessageIcon />\n                                    </Link>\n                                    </span>\n                              <span onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                              <ViewDiscussionIcon />\n                              </span>\n\n                               \n\n                        </> : (\n                            <>\n                               \n                               <span className=\"ml-1\" title=\"Send Message\">\n                                   <Link\n                                      to={{\n                                        pathname: `/customer/chatting/${row.q_id}&type=2`,\n                                        index: 0,\n                                        routes: \"proposal\",     \n                                            obj: {\n                                                message_type: \"3\",\n                                                query_No: row.assign_no,\n                                                query_id: row.q_id,\n                                                routes: `/customer/proposal`\n                                            }\n                                        }}\n                                    >\n                                        <MessageIcon />\n                                    </Link>\n                                   </span>\n                            \n\n                                   <span onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                              <ViewDiscussionIcon />\n                              </span>\n\n                               \n                                    {\n                                        row.statuscode > 6 ?\n                                             <>\n                                 <span  onClick={(e) => showProposalModal2(row.q_id)} className=\"ml-1\">\n                                            <EyeIcon  />\n                                           </span>\n                              \n                                </>\n                                            :\n                                            null\n                                    }\n\n                                    {\n                                        row.statuscode == 4\n                                            ?\n                                            <span className=\"ml-1\">\n        \n                                                <Link\n                                      to={{\n                                        pathname: `/customer/proposal_view/${row.q_id}`,\n                                        index: 0,\n                                        routes: \"proposal\",     \n                                            \n                                        }}\n                                    >\n                                           <DiscussProposal titleName =\"Discussion on Proposal\"/>\n                                                </Link>\n                                            </span>\n                                            :\n                                            null\n                                    }\n                               \n\n                            </>\n                        )\n                        }\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n    return (\n     \n            <Card>\n                <CardHeader>\n                <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n                    <CustomerFilter\n                        setData={setProposalDisplay}\n                        getData={getProposalData}\n                        id={userId}\n                        proposal=\"proposal\"\n                        records={records}\n                        setRecords={setRecords}\n                    />\n                </CardHeader>\n                <CardBody>\n              \n                    <Records records={records} />\n\n                  <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   data={proposalDisplay}\n                   columns={columns}>\n                    </DataTablepopulated>\n                    <ViewComponent\n                        ViewHandler={ViewHandler}\n                        viewModal={viewModal}\n                        viewData={viewData}\n                        getProposalData={getProposalData}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalData}\n                        headColor=\"#42566a\"\n                    />\n {\n     viewProposalModal === true ?\n     <CommonShowProposal\n     setViewProposalModal = {setViewProposalModal}\n     viewProposalModal = {viewProposalModal}\n     showProposalModal2 = {showProposalModal2}\n     panel = \"client\"\n     proposalId = {proposalId}/> : \"\"\n }\n             <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"proposalProcessing\"} />\n                        </ModalBody>\n                    </Modal>\n                </CardBody>\n            </Card>\n       \n    );\n}\n\nexport default ProposalTab;\n","/home/pooja/MazarsRepo/src/views/QueriesTab/DeclinedQueries.js",["3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  \n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../components/Records/Records\";\nimport CommonServices from \"../../common/common\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\nimport './index.css';\nimport moment from \"moment\";\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport MessageIcon, { ViewDiscussionIcon, HelpIcon, \n  FeedBackICon} from \"../../components/Common/MessageIcon\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\n\n\nfunction DeclinedQueries() {\n  const alert = useAlert();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [query, setQuery] = useState([]);\n  const [queriesCount, setCountQueries] = useState(null);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [openManual, setManual] = useState(false)\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n  const needHelp = () => {\n        \n    setManual(!openManual)\n}\n\n\n  useEffect(() => {\n    getQueriesData();\n  }, []);\n\n  const getQueriesData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`\n        , myConfig\n      )\n  \n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setQuery(res.data.result);\n          setCountQueries(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle : () => {\n        return( {\n            width: \"50px\"\n        })\n    }\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      \n      formatter: function nameFormatter(cell, row) {\n              \n        return (\n            <>\n                <Link\n                    to={{\n                        pathname: `/customer/my-assingment/${row.id}`,\n                        index: 3,\n                        routes: \"queries\",\n                    }}\n                >\n                    {row.assign_no}\n                </Link>\n            </>\n        );\n    },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n    \n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n     \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected Delivery Date\",\n      dataField: \"exp_delivery_date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n   \n\n        return (\n          <>\n            {\n              row.status == \"Declined Query\"\n                ? null\n                :\n                row.status_code >= \"1\" ?\n                  CommonServices.removeTime(row.exp_delivery_date)\n                  :\n                  null\n            }\n          </>\n        )\n      },\n    },\n    {\n      text: \"Action\",\n     \n    formatter: function (cell, row) {\n          var dateMnsFive = moment(row.exp_delivery_date).add(15, 'day').format(\"YYYY-MM-DD\");\n        \n         \n          var curDate = moment().format(\"YYYY-MM-DD\")\n       \n         \n        \n          \n       \n          return (\n              <>\n                  {   \n                      row.status == \"Declined Query\" ?\n                      <>\n                     <>\n                     {dateMnsFive > curDate === true ?\n                          <span className=\"ml-2\">\n                         \n                          <Link \n                           to={{\n                              pathname: `/customer/feedback/${row.assign_no}`,\n                              index: 3,\n                              routes: \"queries\",\n                          }}>\n                                <FeedBackICon />\n                          </Link>\n                      </span>\n                       : \"\"} \n                      \n                      <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                            <ViewDiscussionIcon />\n                          </span>\n                        \n\n                     </>\n                      </>\n                          :\n                          <>\n              {\n                  row.status_code == \"0\" || row.status_code == \"1\" || row.status_code == \"3\" ?\n                      <>\n\n                          <span className=\"ml-2\">\n                              <Link\n                                  to={{\n                                      pathname: `/customer/chatting/${row.id}&type=4`,\n                                      index: 3,\n                              routes: \"queries\",\n                                      obj: {\n                                          message_type: \"4\",\n                                          query_No: row.assign_no,\n                                          query_id: row.id,\n                                          routes: `/customer/queries`\n                                      }\n                                  }}\n                              >\n                                 <MessageIcon />\n                              </Link>\n                          </span>\n                          <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                            <ViewDiscussionIcon />\n                          </span>\n\n                      </> :\n                      null\n              }\n\n              {\n                  row.status_code == \"4\" || 8 < parseInt(row.status_code) || row.status_code == \"2\" ?\n                      \n                      <>\n\n                          {dateMnsFive > curDate === true ?\n                          <span className = \"ml-2\"\n                         >\n                          <Link \n                           to={{\n                              pathname: `/customer/feedback/${row.assign_no}`,\n                              index: 3,\n                              routes: \"queries\",\n                          }}>\n                                <FeedBackICon />\n                          </Link>\n                      </span> : \"\"}\n                         \n                          {row.status_code == \"10\" ? null \n                          : \n                          <span className=\"ml-2\">\n                           <Link\n                                  to={{\n                                      pathname: `/customer/chatting/${row.id}&type=4`,\n                                      index: 2,\n                              routes: \"queries\",\n                                      obj: {\n                                          message_type: \"4\",\n                                          query_No: row.assign_no,\n                                          query_id: row.id,\n                                          routes: `/customer/queries`\n                                      }\n                                  }}\n                              >\n                              <MessageIcon />\n                          </Link>\n                      </span>\n}\n<span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                            <ViewDiscussionIcon />\n                          </span>\n                      \n                      </>\n                      :\n                      null\n              }\n          </>\n\n  }\n              </>\n          );\n      },\n  },\n];\n\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n        <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n            <CustomerFilter\n            setData={setQuery}\n            getData={getQueriesData}\n            id={userId}\n            DeclinedQuery=\"DeclinedQuery\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <DataTablepopulated \n                   bgColor=\"#6e557b\"\n                   keyField= {\"assign_no\"}\n                   data={query}\n                   columns={columns}>\n                    </DataTablepopulated>\n          <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getQueriesData}\n                        headColor=\"#6e557b\"\n                    />\n                     <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"freshQuery\"} />\n                        </ModalBody>\n                    </Modal>\n                  \n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default DeclinedQueries;","/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressProposal.js",["3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587"],"import React, { useState, useEffect, useMemo } from \"react\";\n\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n \n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../components/Records/Records\";\nimport CommonServices from \"../../common/common\";\nimport moment from \"moment\";\nimport './index.css';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport ModalManual from \"../ModalManual/AllComponentManual\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport MessageIcon, { ViewDiscussionIcon, HelpIcon, \n  FeedBackICon} from \"../../components/Common/MessageIcon\";\nimport DataTablepopulated from \"../../components/DataTablepopulated/DataTabel\";\n\nfunction InprogressProposal() {\n  const alert = useAlert();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [query, setQuery] = useState([]);\n  const [queriesCount, setCountQueries] = useState(null);\n  const [records, setRecords] = useState([]);\n  const [assignNo, setAssignNo] = useState('');\n  const [openManual, setManual] = useState(false)\n  const token = window.localStorage.getItem(\"clientToken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    getQueriesData();\n  }, []);\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n  const needHelp = () => {\n        \n    setManual(!openManual)\n}\n\n  const getQueriesData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`,\n        myConfig\n      )\n\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setQuery(res.data.result);\n          setCountQueries(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n       \n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle : () => {\n        return( {\n            width: \"50px\"\n        })\n    }\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n     \n     formatter : function dateFormatter(cell, row) {\n         return(\n             <>\n             {CommonServices.changeFormateDate(row.created)}\n             </>\n         )\n     }\n  },\n  {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      \n      \n      formatter: function nameFormatter(cell, row) {\n        \n          return (\n              <>\n                  <Link\n                      to={{\n                          pathname: `/customer/my-assingment/${row.id}`,\n                          index: 2,\n                          routes: \"queries\",\n                      }}\n                  >\n                      {row.assign_no}\n                  </Link>\n              </>\n          );\n      },\n  },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n     \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n     \n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n    \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div className=\"completed\">\n              {row.status}\n            \n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Actual Delivery Date\",\n      dataField: \"final_date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n        \n\n        return (\n          <>\n            {\n              row.status == \"Declined Query\"\n                ? null\n                :\n                row.status_code >= \"1\" ?\n                  CommonServices.removeTime(row.final_date)\n                  :\n                  null\n            }\n          </>\n        )\n      },\n    },\n    {\n      text: \"Action\",\n     \n    formatter: function (cell, row) {\n          var dateMnsFive = moment(row.exp_delivery_date).add(15, 'day').format(\"YYYY-MM-DD\");\n        \n         \n          var curDate = moment().format(\"YYYY-MM-DD\")\n       \n         \n        \n          \n       \n          return (\n              <>\n                  {   \n                      row.status == \"Declined Query\" ?\n                      <>\n                     <>\n                     {dateMnsFive > curDate === true ?\n                          <span className=\"ml-2\">\n                         \n                          <Link \n                           to={{\n                              pathname: `/customer/feedback/${row.assign_no}`,\n                              index: 2,\n                              routes: \"queries\",\n                          }}>\n                                <FeedBackICon />\n                          </Link>\n                      </span>\n                       : \"\"} \n                      \n                      <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                            <ViewDiscussionIcon />\n                          </span>\n                        \n\n                     </>\n                      </>\n                          :\n                          <>\n              {\n                  row.status_code == \"0\" || row.status_code == \"1\" || row.status_code == \"3\" ?\n                      <>\n\n                          <span className=\"ml-2\">\n                              <Link\n                                  to={{\n                                      pathname: `/customer/chatting/${row.id}&type=4`,\n                                      index: 2,\n                              routes: \"queries\",\n                                      obj: {\n                                          message_type: \"4\",\n                                          query_No: row.assign_no,\n                                          query_id: row.id,\n                                          routes: `/customer/queries`\n                                      }\n                                  }}\n                              >\n                                 <MessageIcon />\n                              </Link>\n                          </span>\n                          <span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                            <ViewDiscussionIcon />\n                          </span>\n\n                      </> :\n                      null\n              }\n\n              {\n                  row.status_code == \"4\" || 8 < parseInt(row.status_code) || row.status_code == \"2\" ?\n                      \n                      <>\n\n                          {dateMnsFive > curDate === true ?\n                          <span className = \"ml-2\"\n                         >\n                          <Link \n                           to={{\n                              pathname: `/customer/feedback/${row.assign_no}`,\n                              index: 2,\n                              routes: \"queries\",\n                          }}>\n                                <FeedBackICon />\n                          </Link>\n                      </span> : \"\"}\n                         \n                          {row.status_code == \"10\" ? null \n                          : \n                          <span className=\"ml-2\">\n                           <Link\n                                  to={{\n                                      pathname: `/customer/chatting/${row.id}&type=4`,\n                                      index: 2,\n                              routes: \"queries\",\n                                      obj: {\n                                          message_type: \"4\",\n                                          query_No: row.assign_no,\n                                          query_id: row.id,\n                                          routes: `/customer/queries`\n                                      }\n                                  }}\n                              >\n                              <MessageIcon />\n                          </Link>\n                      </span>\n}\n<span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                            <ViewDiscussionIcon />\n                          </span>\n                      \n                      </>\n                      :\n                      null\n              }\n          </>\n\n  }\n              </>\n          );\n      },\n  },\n];\n\n\n\n\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n        <span onClick= {(e) => needHelp()}> <HelpIcon /></span>\n        <CustomerFilter\n            setData={setQuery}\n            getData={getQueriesData}\n            id={userId}\n            InprogressQueryProposal=\"InprogressQueryProposal\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n        <CardBody>\n         <Records records={records} />\n         <DataTablepopulated \n                   bgColor=\"#6e557b\"\n                   keyField= {\"assign_no\"}\n                   data={query}\n                   columns={columns}>\n                    </DataTablepopulated>\n                              <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getQueriesData}\n                        headColor=\"#6e557b\"\n                    />\n       \n          <Modal isOpen={openManual} toggle={needHelp} style={{display : \"block\", position: \"absolute\", left:\"280px\"}} size=\"lg\">\n                        <ModalHeader toggle={needHelp}>Mazars</ModalHeader>\n                        <ModalBody>\n                            <ModalManual tar= {\"freshQuery\"} />\n                        </ModalBody>\n                    </Modal>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default InprogressProposal;\n","/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressAllocation.js",["3588","3589","3590","3591","3592","3593","3594","3595","3596","3597","3598","3599","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612"],"/home/pooja/MazarsRepo/src/views/QueriesTab/AllQueriesData.js",["3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635"],"/home/pooja/MazarsRepo/src/components/CategorySelect/CategorySelect.js",["3636","3637"],"import React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/bootstrap.min.css\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport mazars from \"../../assets/images/mazars-logo.png\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Mandatory from \"../../components/Common/Mandatory\";\n\n\nconst Schema = yup.object().shape({\n  p_tax: yup.string().required(\"\"),\n  p_tax2: yup.string().required(\"\"),\n});\n\n\nfunction CategorySelect({ addfreshbtn, startbtn }, props) {\n  const { handleSubmit, register, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const history = useHistory();\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    if (store2 && store) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n      setModal(!modal);\n    } else {\n      // alert(\"please select category and subcategory\")\n    }\n  };\n  const validation = () => {\n    toggle()\n  }\n  const validation2 = () => {\n    toggle2()\n  }\n\n  const toggle2 = () => {\n    if (store2 && store) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n      history.push(\"/customer/addFresh\");\n    }\n  };\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n      \n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n\n  useEffect(() => {\n    const getSubCategory = () => {\n     if(store.length != -1){\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n     }\n    getSubCategory();\n  }, [store]);\n\n\n  const onSubmit = (value) => {\n\n  };\n\n  return (\n    <>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"15px\" }}\n      >\n        <div className=\"col-sm-3\" style={{ marginTop: \"38px\" }}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <label>Category <span className=\"declined\">*</span></label>\n              <select\n                className=\"form-control\"\n                name=\"p_tax\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_tax,\n                })}\n                ref={register}\n                onChange={(e) => setStore(e.target.value)}\n              >\n                <option value=\"\">--Select Category--</option>\n                {tax.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n              {errors.p_tax && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_tax.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Sub Category <span className=\"declined\">*</span></label>\n              <select\n                name=\"p_tax2\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_tax2,\n                })}\n                ref={register}\n                onChange={(e) => setStore2(e.target.value)}\n              >\n                <option value=\"\">--Select Sub-Category--</option>\n                {tax2.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n              {errors.p_tax2 && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_tax2.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n\n              {startbtn && (\n                <button\n                  type=\"submit\"\n                  className=\"customBtn\"\n                  onClick={e => validation()} //\n                >\n                  Submit\n                </button>\n              )}\n\n              {addfreshbtn && (\n                <button\n                  type=\"submit\"\n                  className=\"customBtn\"\n                  onClick={e => validation2()} //\n                >\n                  Submit\n                </button>\n              )}\n\n            </div>\n\n          </form>\n\n\n          <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>\n              <img\n                src={mazars}\n                style={{ height: \"auto\", width: \"25%\" }}\n                alt=\"\"\n              />\n            </ModalHeader>\n\n            <ModalBody>\n              <div className=\"modal-body\">\n                <h4>Would you like to post a Query ?</h4>\n              </div>\n            </ModalBody>\n\n            <div className=\"modal-footer m-auto\">\n              <Link to=\"/customer/register-yourself\" className=\"btn btn-primary\">\n                Yes\n              </Link>\n              <Link to=\"/customer/signin\" className=\"btn btn-secondary\">\n                No\n              </Link>\n            </div>\n          </Modal>\n\n        </div>\n\n      </div>\n      <Mandatory />\n    </>\n  );\n}\n\nexport default CategorySelect;\n\n","/home/pooja/MazarsRepo/src/views/SignUpForm/ResendOtp.js",["3638","3639","3640"],"\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction ResendOtp({ invalid, wEmail, disabled, indNumError, zipError, passError, email,\n    phone, setDisabled, getTime, setLoad, loading, emailError, phoneError, zipError1, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        if (emailError === true || phoneError === true || zipError1 === true)  {\n           return false\n              }\n              else {\n                setLoading(true)\n                let formData = new FormData();\n                formData.append(\"email\", email);\n                formData.append(\"phone\", phone);\n                formData.append(\"p\", \"registration\");\n        \n                if (invalid || wEmail || indNumError || zipError || passError) {\n                    \n                    setLoad(false)\n                }\n                else {\n                    \n                    axios({\n                        method: \"POST\",\n                        url: `${baseUrl}/customers/forgototp`,\n                        data: formData,\n                    })\n                        .then(function (response) {\n                            \n                            if (response.data.code === 1) {\n                                Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n                                setDisabled(false)\n                                getTime();\n                                setLoad(true)\n                                setLoading(false)\n                            } if (response.data.code === 0) {\n                                setLoading(false)\n                            }\n                        })\n                        .catch((error) => {\n                           \n                        });\n                    }\n                   }\n     \n        \n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n                \n                {\n                      loading ?\n                      <span></span>\n                        :\n                        <div style={{ paddingTop: \"10px\" }}>\n                        <button type=\"submit\" class=\"autoWidthBtn\">SEND OTP</button>\n                    </div>\n                    }\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;\n\n\n","/home/pooja/MazarsRepo/src/views/SignUpForm/data.js",[],"/home/pooja/MazarsRepo/src/views/Login/VerifyOTP.js",["3641"],"/home/pooja/MazarsRepo/src/pages/TP/Invoice/Invoice.js",["3642","3643","3644","3645","3646"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Generated from \"./Generated\";\nconst InvoiceTab = () => {\n    const userid = window.localStorage.getItem(\"tpkey\")\n    const [tabIndex, setTabIndex] = useState(0);\n    const [bgColor, setbgColor] = useState(\"#42566a\")\n    \n    const tableIndex = (index) => {\n        setTabIndex(index)\n        console.log(index)\n        if(index === 0){\n          setbgColor(\"#42566a\")\n        }\n        else if(index === 1){\n          setbgColor(\"#5f7b97\")\n        }\n        else if(index === 2){\n          setbgColor(\"#5f7b97\")\n        }\n        else if(index === 3){\n          setbgColor(\"#5f7b97\")\n        }\n      }\n      const myStyle1 = {\n        margin: \"10px auto\",\n        fontSize : \"14px\"\n      };\n      const myStyle2 = {\n     margin: \"10px auto\",\n     \n     color : \"#42566a\",\n     fontWeight : 1000\n      };\n    \nreturn(\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n     <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n                    <TabList\n                      className=\"fixedTab\"\n                    >\n\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n                           View Invoice\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n                          Create Invoice\n                        </Tab>\n                        \n                    </TabList>\n\n                    <TabPanel>\n                    <Generated />\n                    </TabPanel>\n                    <TabPanel>\n                    <CreateInvoice />\n                      \n                    </TabPanel>\n                    \n                </Tabs>\n                </Layout>\n)\n}\nexport default InvoiceTab;","/home/pooja/MazarsRepo/src/components/LoginForm/LoginForm.js",["3647"],"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Spinner } from \"reactstrap\";\nimport Mandatory from \"../Common/Mandatory\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport { useContext } from \"react\";\nimport { LoginData } from \"./LoginFun\";\nimport { Link } from \"react-router-dom\";\nconst LoginForm = (props) => {\n    const data3 = useContext(LoginData)\n    const Schema = yup.object().shape({\n        p_email: yup.string().email(\"invalid email\").required(\"\"),\n        password: yup\n          .string()\n          .required(\"\")\n         \n      });\n      \n   \n    const { handleSubmit, register, reset, errors } = useForm({\n        resolver: yupResolver(Schema),\n      });\n \nreturn(\n    <div className=\"form\">\n    <div className=\"heading\">\n      <h2>ADMIN LOGIN</h2>\n    </div>\n    <form onSubmit={handleSubmit(data3.onSubmit)} autoComplete=\"off\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n            <input\n              type=\"text\"\n              className={classNames(\"form-control\", {\n                \"is-invalid\": errors.p_email,\n              })}\n              name=\"p_email\"\n              ref={register}\n              placeholder=\"Enter Email\"\n              autocomplete=\"off\"\n              onChange={(e) => data3.handleChange(e)}\n            />\n            {errors.p_email && (\n              <div className=\"invalid-feedback\">\n                {errors.p_email.message}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-md-12\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n            <input\n              type={data3.isPasswordShow ? \"text\" : \"password\"}\n              className={classNames(\"form-control\", {\n                \"is-invalid\": errors.password,\n              })}\n              name=\"password\"\n              placeholder=\"Enter Password\"\n              ref={register}\n              onCopy={(e) => {\n                e.preventDefault();\n                return false\n              }}\n              onPaste={(e) => {\n                e.preventDefault();\n                return false\n              }}\n            />\n            <i\n              className={`fa ${data3.isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n              onClick={data3.togglePasssword}\n            />\n            {errors.password && (\n              <div className=\"invalid-feedback\">\n                {errors.password.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {\n        data3.loading ?\n          <div className=\"col-md-12\">\n            <Spinner color=\"primary\" />\n          </div>\n          :\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n      }\n\n      <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n        <Link\n          to={{\n            pathname: \"/admin/forget-password\",\n            email: `${data3.email}`,\n          }}\n        >\n          Forgot Password\n        </Link>\n      </div>\n\n      <Mandatory />\n    </form>\n  </div>\n\n)\n}\nexport default LoginForm;","/home/pooja/MazarsRepo/src/Service/PublicRouteUser.js",[],"/home/pooja/MazarsRepo/src/Service/PrivateRouteTP.js",[],"/home/pooja/MazarsRepo/src/Service/PrivateRouteTL.js",["3648","3649"],"/home/pooja/MazarsRepo/src/Service/PrivateRouteAdmin.js",["3650","3651"],"/home/pooja/MazarsRepo/src/Service/PrivateRouteUser.js",[],"/home/pooja/MazarsRepo/src/views/SignUpForm/city.js",[],"/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paydetails.js",["3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678"],"/home/pooja/MazarsRepo/src/pages/TP/Report/Report.js",["3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695","3696","3697","3698","3699","3700","3701","3702","3703","3704","3705","3706","3707","3708","3709","3710","3711","3712","3713","3714","3715","3716","3717","3718","3719","3720","3721","3722","3723"],"/home/pooja/MazarsRepo/src/pages/TP/Recording/Recording.js",["3724","3725","3726","3727"],"/home/pooja/MazarsRepo/src/pages/TP/ViewNotification/ViewNotification.js",["3728","3729","3730","3731","3732"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\nfunction ViewNotification() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  console.log(\"data-\", data);\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"autoWidthBtn ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4>Message Details</h4>\n            </Col>\n            <Col md=\"4\"></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n           \n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> Sender</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                  {data.type}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/home/pooja/MazarsRepo/src/pages/TP/MeetingComponent/MeetingComponent.js",["3733","3734","3735","3736"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  \n  return (\n   \n      <Meeting id={props.match.params.id} />\n  \n  );\n}\n\nexport default MeetingComponent;","/home/pooja/MazarsRepo/src/pages/TP/FeedbackTab/FeedbackTab.js",["3737","3738","3739","3740","3741","3742"],"/home/pooja/MazarsRepo/src/views/ProposalTab/ViewComponent.js",["3743","3744","3745","3746","3747","3748"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\n\n  \n  return (\n    <div>\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{viewData.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Name of Team Leader</th>\n                <td>{viewData.tl_name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date of Allocation</th>\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposed Amount</th>\n                <td>{viewData.ProposedAmount}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Status</th>\n                <td>\n                  {\n                    viewData.status == \"Inprogress\" ?\n                      <div>\n                        {viewData.status}/\n                        <p className=\"inprogress\">\n                          {viewData.statusdescription}\n                        </p>\n                      </div>\n                      :\n                      viewData.status == \"Declined; Proposal\" ?\n                        <div>\n                          {viewData.status}\n                          <p className=\"declined\">\n                            {viewData.statusdescription}\n                          </p>\n                        </div> :\n                        viewData.status == \"Accepted; Proposal\" ?\n                          <div>\n                            {viewData.status}\n                            <p className=\"completed\">\n                              {viewData.statusdescription}\n                            </p>\n                          </div> :\n                          null\n                  }\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ViewComponent;\n","/home/pooja/MazarsRepo/src/pages/TP/AddAssingmentStages/AddAssingmentStages.js",["3749","3750","3751","3752","3753","3754","3755","3756","3757","3758","3759","3760","3761","3762","3763","3764","3765","3766"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport {\n\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nfunction AddAssingmentStages() {\n\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [assignmentStages, setAssignmentstages] = useState([]);\n  const [clientDiscussion, setClientDiscussion] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const { id } = useParams();\n  const history = useHistory();\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}&uid=${JSON.parse(userid)}`, myConfig)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setAssignmentstages(res.data.result);\n          reset(res.data.result[0]);\n          setClientDiscussion(res.data.result[0].client_discussion)\n        }\n      });\n  };\n\n  const onSubmit = (value) => {\n \n    if(assignmentStages[0].paid_status=='0' && value.other_stage=='completed')\n    {    \n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Query no- \"+assignmentStages[0].assign_no+\" payment is outstanding. Do you still want to proceed to complete this query?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.value === true) {\n        setLoading(true)\n\n        let formData = new FormData();\n    \n        formData.append(\"q_id\", id);\n        formData.append(\"user_id\", JSON.parse(userid));\n        formData.append(\"stage_1_status\", value.client_discussion);\n        formData.append(\"stage_2_status\", value.draft_report);\n        formData.append(\"stage_3_status\", value.final_discussion);\n        formData.append(\"stage_4_status\", value.delivery_report);\n        formData.append(\"stage_5_status\", value.other_stage);\n    \n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tl/postAssignmentStages`,\n          headers: {\n            uit : token\n          },\n          data: formData,\n        })\n          .then(function (response) {\n          \n            if (response.data.code === 1) {\n              setLoading(false)\n              Alerts.SuccessNormal(\"Assignment status updated successfully.\")\n              getAssignmentList();\n              history.push(\"/taxprofessional/assignment\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n        \n          });\n     \n      }\n      else{\n        history.push(\"/taxprofessional/assignment\");\n        return false\n      }\n    });\n\treturn false;\n    }\n    else{\n      setLoading(true)\n\n      let formData = new FormData();\n \n      formData.append(\"q_id\", id);\n      formData.append(\"user_id\", JSON.parse(userid));\n      formData.append(\"stage_1_status\", value.client_discussion);\n     \n       formData.append(\"stage_2_status\", value.draft_report);\n     \n      formData.append(\"stage_3_status\", value.final_discussion);\n    \n     formData.append(\"stage_4_status\", value.delivery_report);\n     \n       formData.append(\"stage_5_status\", value.other_stage);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/postAssignmentStages`,\n        headers : {\n          uit : token\n        },\n        data: formData,\n      })\n        .then(function (response) {\n       \n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\n            getAssignmentList();\n            history.push(\"/taxprofessional/assignment\");\n          } else if (response.data.code === 0) {\n            setLoading(false)\n          }\n        })\n        .catch((error) => {\n        \n        });\n    \n    }\n     \n    \n  };\n\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"autoWidthBtn ml-3\"\n                onClick={() => history.goBack()}\n              >\n               \n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Assignment Stages</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            {assignmentStages.map((p, i) => (\n              <>\n                {p.client_discussion == \"completed\" &&\n                  p.delivery_report == \"completed\" &&\n                  p.draft_report == \"completed\" &&\n                  p.final_discussion == \"completed\" &&\n                  p.other_stage == \"completed\" ? (\n                  <div class=\"col-md-12\">\n                    <div class=\"col-md-8\">\n                      <br />\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                \n                                }}\n                              >\n                                Client Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.client_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                \n                                }}\n                              >\n                                Draft Report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.draft_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                \n                                }}\n                              >\n                                Final Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.final_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                \n                                }}\n                              >\n                                Delivery of final report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.delivery_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                \n                                }}\n                              >\n                                Awaiting Completion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.other_stage}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <br />\n                        <div class=\"form-group\">\n                          <button\n                            type=\"submit\"\n                            class=\"customBtn\"\n                            disabled\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                ) : (\n                  <div class=\"col-md-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                              \n                              }}\n                            >\n                              Client Discussion\n                            </label>\n                          </div>\n                        </div>\n                       {p.client_discussion === \"completed\" ? \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"client_discussion\"\n                            disabled\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                            \n                          </select>\n                        </div>\n                      </div> : \n                       <div class=\"col-md-4\">\n                       <div class=\"form-group\">\n                         <select\n                           class=\"form-control\"\n                           ref={register}\n                           name=\"client_discussion\"\n                         >\n                           <option value=\"inprogress\">Inprogress</option>\n                           <option value=\"completed\">Completed</option>\n                           \n                         </select>\n                       </div>\n                     </div>}\n\n                       \n\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                              \n                              }}\n                            >\n                              Draft Report\n                            </label>\n                          </div>\n                        </div>\n                        {\n                          p.client_discussion == \"completed\" && p.draft_report === \"inprogress\" ?\n                          <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"draft_report\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              \n                            </select>\n                          </div>\n                        </div> :\n                         <div class=\"col-md-4\">\n                         <div class=\"form-group\">\n                           <select\n                             class=\"form-control\"\n                             ref={register}\n                             disabled\n                             defaultValue = \"inprogress\"\n                             name=\"draft_report\"\n                           >\n                             <option value=\"inprogress\">Inprogress</option>\n                             <option value=\"completed\">Completed</option>\n                             \n                           </select>\n                         </div>\n                       </div>\n                        }\n                       \n                      \n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                              \n                              }}\n                            >\n                              Final Discussion\n                            </label>\n                          </div>\n                        </div>\n                      {p.client_discussion == \"completed\" && p.final_discussion === \"inprogress\" && p.draft_report === \"completed\" ? \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"final_discussion\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                           \n                          </select>\n                        </div>\n                      </div> : \n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"final_discussion\"\n                            disabled\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                           \n                          </select>\n                        </div>\n                      </div> }\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                              \n                              }}\n                            >\n                              Delivery of final report\n                            </label>\n                          </div>\n                        </div>\n                        {p.client_discussion == \"completed\" && p.delivery_report === \"inprogress\" &&    p.draft_report === \"completed\" && p.final_discussion === \"completed\" ?\n                        <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"delivery_report\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                            \n                          </select>\n                        </div>\n                      </div> :\n                      <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <select\n                          class=\"form-control\"\n                          ref={register}\n                          name=\"delivery_report\"\n                          disabled\n                        >\n                          <option value=\"inprogress\">Inprogress</option>\n                          <option value=\"completed\">Completed</option>\n                          \n                        </select>\n                      </div>\n                    </div>}\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                              \n                              }}\n                            >\n                              Awaiting Completion\n                            </label>\n                          </div>\n                        </div>\n                        {p.client_discussion == \"completed\"  && p.draft_report === \"completed\" && p.final_discussion === \"completed\" && p.delivery_report === \"completed\" \n                        ? <div class=\"col-md-4\">\n                        <div class=\"form-group\">\n                          <select\n                            class=\"form-control\"\n                            ref={register}\n                            name=\"other_stage\"\n                          >\n                            <option value=\"inprogress\">Inprogress</option>\n                            <option value=\"completed\">Completed</option>\n                          </select>\n                        </div>\n                      </div>\n                      : <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <select\n                          class=\"form-control\"\n                          ref={register}\n                          name=\"other_stage\"\n                          disabled\n                        >\n                          <option value=\"inprogress\">Inprogress</option>\n                          <option value=\"completed\">Completed</option>\n                        </select>\n                      </div>\n                    </div>}\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <br />\n                      <div class=\"form-group\">\n                        {\n                          loading ?\n                            <Spinner color=\"primary\" />\n                            :\n                            <button type=\"submit\" class=\"customBtn\">\n                              Submit\n                            </button>\n                        }\n                      </div>\n                    </form>\n                  </div>\n                )}\n              </>\n            ))}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddAssingmentStages;\n","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Schedule.js",["3767","3768","3769","3770","3771","3772","3773","3774","3775","3776","3777","3778","3779","3780","3781"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Recording from \"../Recording/Recording\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\nimport \"../../Admin/AdminStyle/style.css\";\nfunction Schedule() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n      backgroundColor: \"grey\",\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n    const myStyle2 = {\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      backgroundColor: \"blue\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n  \n    return (\n      <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n     <Demo />\n    </Layout>\n    );\n}\n\nexport default Schedule;","/home/pooja/MazarsRepo/src/pages/TP/Chatting/Chatting.js",["3782","3783","3784","3785","3786","3787","3788","3789"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nconst Schema = yup.object().shape({\n  msg_type: yup.string().required(\"\"),\n  p_message: yup.string().required(\"\"),\n});\n\n\n\nfunction Chatting(props) {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"tpkey\");\n\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const { message_type, query_id, query_No, routes } = data\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n  useEffect(() => {\n   \n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataTL\");\n\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, []);\n\n\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.msg_type);\n    formData.append(\"message\", value.p_message);\n   \n    formData.append(\"sst\", \"tp\")\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/messageSent`,\n      headers: {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          setLoading(false)\n          var variable = \"Message sent successfully.\"\n          Alerts.SuccessNormal(variable)\n          props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\n       <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/taxprofessional/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"autoWidthBtn ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={query_No}\n                          disabled\n                        />\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message Type</label>\n                        {\n                          item &&\n                          <select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.msg_type,\n                            })}\n                            name=\"msg_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            defaultValue={item}\n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n                        }\n                        {errors.msg_type && (\n                          <div className=\"invalid-feedback\">\n                            {errors.msg_type.message}\n                          </div>\n                        )}\n\n                      </div>\n                     \n\n                      <div class=\"form-group\">\n                        <label>Message<span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          placeholder=\"Message text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_message\"\n                        ></textarea>\n                        {errors.p_message && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_message.message}\n                          </div>\n                        )}\n                      </div>\n                      <button type=\"submit\" className=\"customBtn\">\n                        Send\n                      </button>\n                    </div>\n                  </div>\n                </form>\n                <Mandatory />\n              </>\n          }\n        </CardBody>\n\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Chatting;\n","/home/pooja/MazarsRepo/src/pages/TP/Message/Message.js",["3790","3791","3792","3793","3794","3795","3796","3797","3798"],"/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AssignmentTab.js",["3799","3800","3801","3802","3803"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\n\nimport AllAssignment from \"./AllAssignment\";\nimport DraftReportTab from \"./DraftReportTab\";\nimport DeliveryFinalTab from \"./DeliveryFinalTab\";\n\n\n\nfunction QueriesTab(props) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n\n  const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\n  const [draft, setDraft] = useState(\"\");\n  const [final, setFinal] = useState();\n  const [bgColor, setbgColor] = useState(\"#615339\")\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const tableIndex = (index) => {\n    setTabIndex(index)\n    console.log(index)\n    if(index === 0){\n      setbgColor(\"#615339\")\n    }\n    else if(index === 1){\n      setbgColor(\"#907b56\")\n    }\n    else if(index === 2){\n      setbgColor(\"#907b56\")\n    }\n    else if(index === 3){\n      setbgColor(\"#907b56\")\n    }\n  }\n    \n  const myStyle1 = {\n    margin: \"10px auto\"\n  };\n  const myStyle2 = {\n    margin: \"10px auto\",\n \n    color : \"#5a625a\",\n    fontWeight : 1000\n     };\n  \n  \n\n\n\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n\n  useEffect(() => {\n\n    const AllAssignment = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}`, myConfig)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setAllAssignmentCount(res.data.result.length);\n          }\n        });\n    };\n\n    const getDraftReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`, myConfig)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setDraft(res.data.result.length);\n          }\n        });\n    };\n\n    const getFinalReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`, myConfig)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setFinal(res.data.result.length);\n          }\n        });\n    };\n\n    AllAssignment();\n    getDraftReports();\n    getFinalReports();\n  }, []);\n\n\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n              <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n      <TabList\n          className=\"fixedTab\"\n          >\n             \n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n              All Assignments ({allAssignmentCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Inprogress; Draft Reports ({draft})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Inprogress; Delivery of Final Report ({final})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <DraftReportTab />\n          </TabPanel>\n\n          <TabPanel>\n            <DeliveryFinalTab />\n          </TabPanel>\n        </Tabs>\n \n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Generated.js",["3804","3805","3806","3807","3808","3809","3810","3811","3812","3813","3814","3815","3816","3817","3818","3819","3820","3821","3822","3823","3824","3825","3826","3827"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\nimport moment from \"moment\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nconst Generated = () => {\n    var rowStyle2 = {}\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n \n    const addTdsToggle = (key) => {\n   \n      setGstinNo(key.gstin_no);\n        setTdsForm(!tdsForm)\n        setAssignNo(key.assign_no)\n        setPaidAmount(key.paid_amount)\n        setId(key.id)\n        setInstallmentNo(key.installment_no)\n        setBillNo(key.billno);\n        setId2(key.id)\n    }\n \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=1`, myConfig)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n    \n    const downloadpdf = (qno, id, installmentNumber) => {\n        const myConfig2 = {\n            headers : {\n             \"uit\" : token\n            },\n            responseType: 'blob'\n          }\n        axios.get(`${baseUrl}/tl/viewinvoicepdf?assign_no=${qno}&invoice_id=${id}` , myConfig2)\n      .then((res) => {\n        console.log(\"res\", res)\n        if(res.status === 200){\n        //    window.open(URL.createObjectURL(res.data));\n           console.log(URL.createObjectURL(res.data))\n           window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           a.download = `invoice_${qno}_${installmentNumber}.pdf`\n        //    a.download = \"invoice\"+{qno}+{installmentNumber}+'.pdf';\n           a.target = '_blank';\n           a.click();\n        }\n      })\n      }\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"100px\"};\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"tpinvoice\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            \n            headerStyle: () => {\n                return {  width :\"50px\"};\n            },\n        },\n        {\n            text: \"Invoice No\",\n            dataField: \"billno\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fwidth : \"150px\"};\n            },\n        },\n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n           \n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Invoice amount\",\n            dataField: \"invoice_amount\",\n            sort: true,\n            \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.invoice_amount;\n               \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Tds Deducted\",\n            dataField: \"tds_amount\",\n            sort: true,\n          \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.tds_amount;\n               \n                 return(\n                     <>\n                     {row.is_paid == \"0\" ?\n                     <p className=\"rightAli\">0</p> :   <p className=\"rightAli\">{nfObject.format(x)}</p>}\n                     </>\n                 \n                 )\n               }\n        },  \n        {\n            text: \"Status\",\n            dataField: \"is_paid\",\n            sort: true,\n          \n            formatter : function(cell, row) {\n                return(\n                    <>\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \n                    <>\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p style={{color : \"red\", fontSize: \"11px\"}}>Declined</p>}\n                    </>}\n                    </>\n                )\n            }\n        }, \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n             \n                return (\n                    <>\n                       <div style={{ display: \"flex\", justifyContent : \"flex-start\", alignItems:\"center\" }}>\n                       <span onClick={() => downloadpdf(row.assign_no, row.id, row.installment_no)} style={{cursor : \"pointer\"}} title=\"Download Invoice\">\n                         <DescriptionOutlinedIcon color=\"secondary\" />\n                         </span>\n                              {row.is_paid == \"0\" ? \n                        <i\n                        class=\"fa fa-edit\"\n                        style={{\n                            fontSize: \"16px\",\n                            margin: \"0 5px\",\n                            cursor: \"pointer\",\n                            color : \"blue\",\n                        }}\n                       onClick = {() => addTdsToggle(row)} \n                    ></i> : \"\"\n                        }\n                         {row.is_paid == \"0\" \n                ?   \n                 <span title={row.paymenturl}>\n                 <FileCopyIcon onClick={() => {copyFun(row.paymenturl)}} style={noPointer}/>\n                   </span>  \n                   \n              \n                    : \"\" }\n                        </div>\n                      \n                    </>\n                );\n            },\n        },\n    ];\n    const noPointer = {cursor: 'pointer', color : \"blue\"};\n    const copyFun = (e)  =>{\n   \n        navigator.clipboard.writeText(e)\n       \n      }\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n         var cc = moment(row.due_date).toDate();\n         if(row.is_paid === \"2\"){\n            style.backgroundColor = \"#fff\";\n            style.color = \"#000\"\n        }\n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n            style.backgroundColor = \"#bfdfd2\";\n          style.color = \"#000111\"\n        }\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n       \n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n  \n    return (\n\n        <>\n            <Card>\n              \n             <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice=\"tpgenerated\" \n                     panel = \"taxprofessional\"\n                     setRec={setRecords}\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                {/* <div className=\"tableFixHead\">\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        rowStyle={ rowStyle2 }\n                        classes=\"table-responsive\"\n                    />\n                    </div> */}\n  <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField='id'\n                   data={proposal}\n                   columns={columns}>\n                    </DataTablepopulated>\n                   \n                  \n                  {\n                      tdsForm === true ?\n                      <Tds \n                      tdsForm = {tdsForm}\n                      addTdsToggle = {addTdsToggle}\n                      id={id}\n                      paidAmount={paidAmount}\n                      report = {assignNo}\n                      installmentNo = {installmentNo}\n                      billNo = {billNo}\n                      id = {id2}\n                      generated = {\"edited\"}\n                      gstNo = {gstNo}\n                      /> : \"\"\n                  }\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Generated;","/home/pooja/MazarsRepo/src/pages/TP/Invoice/CreateInvoice.js",["3828","3829","3830","3831","3832","3833","3834","3835","3836","3837","3838"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nconst CreateInvoice = () => {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n\n\n    const [id, setId] = useState();\n  \n    const [tds, setTds] = useState(false)\n  \n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n   const addTdsToggle = (key) => {\n      \n     setGstinNo(key.gstin_no);\n       setTdsForm(!tdsForm)\n       setAssignNo(key.assign_no)\n       setPaidAmount(key.paid_amount)\n       setId(key.id)\n       setInstallmentNo(key.installment_no)\n       setBillNo(key.billno);\n       setId2(key.id)\n   }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=0`, myConfig)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"200px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"tpinvoice\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                textAlign : \"center\"\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width :\"200px\"};\n            },\n        }, \n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width : \"200px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Amount\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" , width : \"200px\"};\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n             \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        }, \n        \n       \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n\n                return (\n                    \n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                                color : \"blue\",\n                                            }}\n                                            onClick = {() => addTdsToggle(row)} \n                                        ></i>\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n       \n    ];\n\n    return (\n\n        <>\n            <Card>\n              \n                <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice = \"tpcreate\" \n                     setRec={setRecords}\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n           bgColor=\"#42566a\"\n          keyField= {\"assign_no\"}\n          data={proposal}\n          \n          columns={columns}>\n\n              </DataTablepopulated>\n                   \n\n                    {\n                        tdsForm === true ?\n                        <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    gstNo = {gstNo}\n                    /> : \"\"\n                    }\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default CreateInvoice;","/home/pooja/MazarsRepo/src/pages/TP/Recording/RecordingEdit.js",["3839","3840"],"import React from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport { baseUrl } from '../../../config/config';\nimport Swal from 'sweetalert2';\nconst RecordingEdit = ({isOpen, recordingHandler, participants, message, assignid, editId, recList}) => {\n   const userid = localStorage.getItem(\"tpkey\")\n    const { handleSubmit, register, errors } = useForm();\n    const onSubmit = (value) => {\n       let formData = new FormData();\n       formData.append(\"uid\", JSON.parse(userid))\n       formData.append(\"message\", value.p_message);\n       formData.append(\"message_type\", value.msg_type)\n        formData.append(\"assign_id\", assignid);\n        formData.append(\"participants\", value.p_participants);\n        formData.append(\"id\", editId)\n        axios({\n            method : \"POST\",\n            url : `${baseUrl}/tl/callRecordingPostEdit`,\n            data: formData,\n        })\n        .then((res) => {\n            if(res.data.code === 1){\n                recordingHandler()\n                Swal.fire({\n                    title : \"success\",\n                    html : \"Message edited successfully\",\n                    icon : \"success\"\n                })\n                recList()\n            }\n        })\n    }\n   \nreturn (\n \n    <>\n    <Modal isOpen = {isOpen} toggle={recordingHandler}>\n        <ModalHeader toggle={recordingHandler}>\n        <h1>Recording Edit</h1>\n        </ModalHeader>\n        <ModalBody>\n       <form onSubmit = {handleSubmit(onSubmit)}>\n<div className=\"row\">\n    <div className=\"col-md-12\">\n        <label>Participants Name</label>\n        <input \n        className=\"form-control\"\n        name=\"p_participants\"\n        ref = {register}\n        defaultValue = {participants}/>\n        </div>\n        \n</div>\n<div className = \"row\">\n<div className=\"col-md-12\">\n    <label>Message Type</label>\n<select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.msg_type,\n                            })}\n                            name=\"msg_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            required\n                            \n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n    </div>\n    </div>\n    <div className=\"row\">\n    <div className=\"col-md-12\">\n        <label>Message</label>\n        <textarea \n        className=\"form-control\"\n        style={{height : \"100px\"}}\n        name=\"p_message\"\n        ref = {register}\n        defaultValue = {message}/>\n        </div>\n</div>\n<button className=\"btn btn-primary my-2\">\n    Submit\n</button>\n       </form>\n        </ModalBody>\n    </Modal>\n    \n    </>\n)\n}\nexport default RecordingEdit;","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DeliveryFinalTab.js",["3841","3842","3843","3844","3845","3846","3847","3848","3849","3850","3851","3852","3853","3854","3855","3856","3857","3858","3859","3860","3861","3862","3863","3864","3865","3866","3867","3868"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, { ViewDiscussionIcon, DraftReportUploadIcon, FinalReportUploadIcon} from \"../../../components/Common/MessageIcon\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tpkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [finalId, setFinalId] = useState(\"\");\n\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n    const [hide, setHide] = useState();\n    const [fianlModal, setFianlModal] = useState(false);\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n    const [item] = useState(current_date);\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [report, setReport] = useState();\n    const [reportModal, setReportModal] = useState(false);\n    const [dataItem, setDataItem] = useState({});\n    const [loading, setLoading] = useState(false);\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n  let des = false;\n  var clcomp= {\n    color: \"green\"\n  }\n  var clinpro = {\n    color : \"blue\"\n  }\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n   \n    const uploadFinalReport = (id) => {\n        if(id && id.id === undefined){\n            \n          let des = true;\n          setLoading(false)\n          setFianlModal(!fianlModal);\n        }\n        else{\n          setFianlModal(!fianlModal);\n              setFinalId(id);\n        }\n            \n            };\n        \n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`, myConfig)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n          if(selectedData.length > 0){\n            axios\n            .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setTax2(res.data.result);\n                }\n            });\n          }\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n      \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n      \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n     \n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n       \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n    const assingmentStatus = (value) => {\n      \n        setStatus(value);\n    };\n// view Report\nconst ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return {  width: \"50px\" };\n            },\n          \n        },\n        {\n            text: \"Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.q_id}`,\n                                index : 2,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n           \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n          \n        },\n        {\n            dataField: \"status\",\n            text: \"Status\",\n           \n            headerStyle: () => {\n              return { fontSize: \"11px\", width: \"200px\" };\n            },\n      \n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div>\n                  {row.paid_status == \"2\" &&\n                      <p>\n                        <span className=\"declined\">Payment Declined</span>\n                      </p>\n                    }\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                     <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                      {row.client_discussion}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                      <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                            {row.draft_report}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                      <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                           {row.final_discussion}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                      <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                   {row.delivery_report}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                      <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                  {row.other_stage}\n                       </span>\n                    </p>\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n            \n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n            \n            formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n          {\n            text: \"Assignment Stage\",\n          \n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                      {\n                 row.paid_status == \"2\" ? null :\n                    <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\n                      <i class=\"fa fa-tasks\"></i>\n                    </Link>\n            }\n                  </div>\n                </>\n              );\n            },\n          },\n          {\n            text: \"Action\",\n            \n            formatter: function (cell, row) {\n              return (\n                <>\n              <div style={{display: \"flex\"}}>\n              <Link\n                  to={{\n                    pathname: `/taxprofessional/chatting/${row.q_id}`,\n                    index : 2,\n                    routes: \"assignment\",\n                       obj: {\n                         message_type: \"3\",\n                         query_No: row.assign_no,\n                         query_id: row.q_id,\n                         routes: `/taxprofessional/assignment`\n                       }\n                     }}\n                   >\n                    <MessageIcon />\n                   </Link>\n                   <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                        \n                                        <ViewDiscussionIcon />\n                                </div>\n               {\n                 row.paid_status == \"2\" ? \n                null : \n                 <>\n                 \n                 \n      {\n       row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n      \n      \n       <p\n         style={{  display: \"flex\", flexDirection: \"column\" , cursor: \"pointer\", color: \"red\" }}\n         onClick={() => uploadFinalReport(row)}\n       >\n       \n            \n              <FinalReportUploadIcon />\n               final\n             \n          \n       </p>\n       : null\n      }\n                \n      \n                \n                \n               </>\n               }\n       \n              </div>\n                \n                         </>\n              );\n            },\n          },\n        ];\n\n    const onSubmit = (data) => {\n      \n        axios\n        .get(\n            `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=Delivery_of_report&stages_status=1&pcat_id=${selectedData}`)\n        .then((res) => {\n          \n               \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"customBtn mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n\nconst rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n    else if(row.paid_status != \"2\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n                                    {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btnSearch mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"customBtn mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   rowStyle2={rowStyle2}\n                   data={assignment}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n  <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n           <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentList}\n                        headColor=\"#42566a\"\n                    />\n                    \n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AllAssignment.js",["3869","3870","3871","3872","3873","3874","3875","3876","3877","3878","3879","3880","3881","3882","3883","3884","3885","3886","3887","3888","3889","3890","3891","3892","3893","3894","3895","3896","3897","3898"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, { ViewDiscussionIcon, DraftReportUploadIcon, FinalReportUploadIcon} from \"../../../components/Common/MessageIcon\";\n\n\nfunction AssignmentTab() {\n\n  const history = useHistory();\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [count, setCount] = useState(\"\");\n  const [assignment, setAssignment] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [finalId, setFinalId] = useState(\"\");\n\n  const [records, setRecords] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [hide, setHide] = useState();\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n  const [dataItem, setDataItem] = useState({});\n  const [report, setReport] = useState();\n  const [reportModal, setReportModal] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [draftModal, setDraftModal] = useState(false);\n  const [fianlModal, setFianlModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false)\n  let des = false;\n  var rowStyle2 = {}\n  var clcomp= {\n    color: \"green\"\n  }\n  var clinpro = {\n    color : \"blue\"\n  }\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n  \n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}`, myConfig)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setAssignment(res.data.result);\n          setCount(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      if(selectedData.length > 0){\n        axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n      }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n   setError(false)\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n   setError(false)\n    setStore2(value);\n  };\n\n  //reset category\n   const resetCategory = () => {\n    console.log(error)\n  \n    setSelectedData([]);\n    setStore2([]);\n   getAssignmentList()\n    setError(false)\n    setTax2([])\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n     setTax2([])\n    setError(false)\n    setHide(\"\")\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n   getAssignmentList()\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n   setError(false)\n    setStatus(value);\n  };\n\n\n  //columns\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return {  width: \"50px\" };\n      },\n    \n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n    \n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n     \n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.q_id}`,\n                index : 0,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      \n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n     \n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"200px\" };\n      },\n\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span className=\"declined\">Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n               <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                {row.client_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                      {row.draft_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                     {row.final_discussion}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                             {row.delivery_report}\n                 </span>\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                            {row.other_stage}\n                 </span>\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected date of delivery\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Actual date of delivery\",\n      dataField: \"final_date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n    \n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => ViewReport(row)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"Assignment Stage\",\n     \n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              title=\"Add Assignment stages\"\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\n            >\n                {\n           row.paid_status == \"2\" ? null :\n              <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\n                <i class=\"fa fa-tasks\"></i>\n              </Link>\n      }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      \n      formatter: function (cell, row) {\n        return (\n          <>\n        <div style={{display: \"flex\"}}>\n        <Link\n            to={{\n              pathname: `/taxprofessional/chatting/${row.q_id}`,\n              index : 0,\n              routes: \"assignment\",\n                 obj: {\n                   message_type: \"3\",\n                   query_No: row.assign_no,\n                   query_id: row.q_id,\n                   routes: `/taxprofessional/assignment`\n                 }\n               }}\n             >\n              <MessageIcon />\n             </Link>\n             <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n         {\n           row.paid_status == \"2\" ? \n          null : \n           <>\n           \n            {\n              row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.final_discussion == \"inprogress\" &&  row.paid_status !=2  ?\n             \n              <p\n                style={{ display: \"flex\", flexDirection: \"column\" , cursor: \"pointer\", color: \"green\" }}\n                onClick={() => uploadDraftReport(row.id)}\n              >\n               <DraftReportUploadIcon />\n                draft\n              </p>\n             : null\n           }\n{\n row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n\n\n <p\n   style={{  display: \"flex\", flexDirection: \"column\" , cursor: \"pointer\", color: \"red\" }}\n   onClick={() => uploadFinalReport(row)}\n >\n \n      \n        <FinalReportUploadIcon />\n         final\n       \n    \n </p>\n : null\n}\n          \n\n          \n          \n         </>\n         }\n \n        </div>\n          \n                   </>\n        );\n      },\n    },\n  ];\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n  \n    return style;\n  }\n\n  // draft modal\n  const uploadDraftReport = (id) => {\n    if(typeof(id) == \"object\"){\n      \n      let des = true;\n      setLoading(false)\n      setDraftModal(!draftModal);\n    }\n    else{\n      setDraftModal(!draftModal);\n      setId(id);\n    }\n  \n  };\n\n\n  // final modal\n  \n    const uploadFinalReport = (id) => {\nif(id && id.id === undefined){\n    \n  let des = true;\n  setLoading(false)\n  setFianlModal(!fianlModal);\n}\nelse{\n  setFianlModal(!fianlModal);\n      setFinalId(id);\n}\n    \n    };\n\n \n  const onSubmit = (data) => {\n   \n    if(hide == 1 || hide == 2){\nif(status.length > 0){\n  axios\n      .get(\n        `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&assignment_status=${status}&stages_status=${data.p_status\n        }&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignment(res.data.result);\n            setRecords(res.data.result.length);\n\n          }\n        }\n      });\n}\nelse{\n  setError(true);\n  return false\n}\n    }\n    else{\n      axios\n      .get(\n        `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&assignment_status=${status}&stages_status=${data.p_status\n        }&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignment(res.data.result);\n            setRecords(res.data.result.length);\n\n        }\n      }\n      });\n    }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"customBtn mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n  const disabledHandler = (e) => {\n    setStatus([])\n    setError(false)\n    setHide(e.target.value);\n  };\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={(e) => handleSubCategory(e)}\n                  value={store2}\n                  allowClear\n                >\n                  {/* {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))} */}\n                  {\n                     tax2.length > 0 ?\n                     <>\n                      {tax2?.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                     </> : \"\"\n                   }\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btnSearch mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <select\n                  className=\"form-select form-control\"\n                  name=\"p_status\"\n                  ref={register}\n                  style={{ height: \"33px\" }}\n                  onChange={(e) => disabledHandler(e)}\n                >\n                  <option value=\"\">--select--</option>\n                  <option value=\"1\">Inprogress</option>\n                  <option value=\"2\">Completed</option>\n                  <option value=\"3\">Payment Declined</option>\n                </select>\n              </div>\n\n              {\n                hide == \"1\" || hide == \"2\" ?\n                 \n                  <div className=\"form-group mx-sm-1  mb-2\">\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: 210 }}\n                      placeholder=\"Select stages\"\n                      defaultValue={[]}\n                      onChange={assingmentStatus}\n                      value={status}\n                      allowClear\n                      className={error ? \"customError\" : \"\"}\n                    >\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Client Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Draft reports\n                        </div>\n                      </Option>\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Final Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Delivery of Final Reports\n                        </div>\n                      </Option>\n                      <Option value=\"Completed\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">Awaiting Completion</div>\n                      </Option>\n                    </Select>\n                  </div> : \"\"\n\n              }\n\n\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">Total Records : {records}</label>\n              </div>\n              <button type=\"submit\" class=\"customBtn mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n        <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   data={assignment}\n                   rowStyle2 = {rowStyle2}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n          <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n\n          <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          \n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            headColor=\"#42566a\"\n            getData={getAssignmentList}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AssignmentTab;\n\n\n\n\n\n\n\n\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportTab.js",["3899","3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3920","3921","3922","3923","3924","3925"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, { ViewDiscussionIcon, DraftReportUploadIcon, FinalReportUploadIcon} from \"../../../components/Common/MessageIcon\";\nimport moment from \"moment\";\n\n\n\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tpkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [finalId, setFinalId] = useState(\"\");\n\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n    const [hide, setHide] = useState();\n\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2);\n    const [item] = useState(current_date);\n    const [dataItem, setDataItem] = useState({});\n    const [draftModal, setDraftModal] = useState(false);\n    const [assignNo, setAssignNo] = useState('');\n    const [report, setReport] = useState();\n  const [reportModal, setReportModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  var clcomp= {\n    color: \"green\"\n  }\n  var clinpro = {\n    color : \"blue\"\n  }\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  let des = false;\n    const ViewReport = (key) => {\n       \n        setReportModal(!reportModal);\n        setReport(key.assign_no);\n        setDataItem(key)\n      };\n // draft modal\n const uploadDraftReport = (id) => {\n    if(typeof(id) == \"object\"){\n      \n      let des = true;\n      setLoading(false)\n      setDraftModal(!draftModal);\n    }\n    else{\n      setDraftModal(!draftModal);\n      setId(id);\n    }\n  \n  };\n\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`, myConfig)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n            if(selectedData.length > 0){\n                axios\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n                .then((res) => {\n                  \n                    if (res.data.code === 1) {\n                        setTax2(res.data.result);\n                    }\n                });\n            }\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n       \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n       \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n     \n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n     \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n   \n\n\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return {  width: \"50px\" };\n            },\n            \n        },\n        {\n            text: \"Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.q_id}`,\n                                index : 1,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n           \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n           \n        },\n        {\n            dataField: \"status\",\n            text: \"Status\",\n           \n            headerStyle: () => {\n              return { fontSize: \"11px\", width: \"200px\" };\n            },\n      \n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div>\n                  {row.paid_status == \"2\" &&\n                      <p>\n                        <span className=\"declined\">Payment Declined</span>\n                      </p>\n                    }\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                     <span className={row.client_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                      {row.client_discussion}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                      <span className={row.draft_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                            {row.draft_report}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                      <span className={row.final_discussion === \"completed\" ? \"completed\" : \"inprogress\"}>\n                           {row.final_discussion}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                      <span className={row.delivery_report === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                   {row.delivery_report}\n                       </span>\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Awaiting Completion:</span>\n                      <span className={row.other_stage === \"completed\" ? \"completed\" : \"inprogress\"}>\n                                  {row.other_stage}\n                       </span>\n                    </p>\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n           \n            formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n          {\n            text: \"Assignment Stage\",\n           \n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                      {\n                 row.paid_status == \"2\" ? null :\n                    <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\n                      <i class=\"fa fa-tasks\"></i>\n                    </Link>\n            }\n                  </div>\n                </>\n              );\n            },\n          },\n          {\n            text: \"Action\",\n            \n            formatter: function (cell, row) {\n              return (\n                <>\n              <div style={{display: \"flex\"}}>\n              <Link\n                  to={{\n                    pathname: `/taxprofessional/chatting/${row.q_id}`,\n                    index : 1,\n                    routes: \"assignment\",\n                       obj: {\n                         message_type: \"3\",\n                         query_No: row.assign_no,\n                         query_id: row.q_id,\n                         routes: `/taxprofessional/assignment`\n                       }\n                     }}\n                   >\n                    <MessageIcon />\n                   </Link>\n                   <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                        \n                                        <ViewDiscussionIcon />\n                                </div>\n               {\n                 row.paid_status == \"2\" ? \n                null : \n                 <>\n                 \n                  {\n                    row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.final_discussion == \"inprogress\" &&  row.paid_status !=2  ?\n                   \n                    <p\n                      style={{ display: \"flex\", flexDirection: \"column\" , cursor: \"pointer\", color: \"green\" }}\n                      onClick={() => uploadDraftReport(row.id)}\n                    >\n                     <DraftReportUploadIcon />\n                      draft\n                    </p>\n                   : null\n                 }\n     \n                \n      \n                \n                \n               </>\n               }\n       \n              </div>\n                \n                         </>\n              );\n            },\n          },\n        ];\n    const onSubmit = (data) => {\n       \n        axios\n            .get(\n                `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=Draft_Report&stages_status=1&pcat_id=${selectedData}`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"customBtn mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n    const rowStyle2 = (row, index) => {\n      const style = {}\n      var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n      // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n      var aa = moment().toDate();\n     \n  \n      if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n        style.backgroundColor = \"#c1d8f2\";\n        style.color = \"#000111\"\n      }\n      else if(row.paid_status != \"2\" && warningDate > aa){\n        style.backgroundColor = \"#fff\";\n        style.color = \"#000\"\n      }\n    \n      return style;\n    }\n  \n  \n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n                                    {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btnSearch mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"customBtn mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   rowStyle2={rowStyle2}\n                   keyField= {\"assign_no\"}\n                   data={assignment}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n\n<DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n            loading = {loading}\n            setLoading = {setLoading}\n            des = {des}\n          />\n           <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentList}\n                        headColor=\"#42566a\"\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;","/home/pooja/MazarsRepo/src/pages/TP/Message/PaymentModal.js",["3926","3927","3928","3929"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  data,\n  // getProposalData,\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"tpkey\");\n\n\n  const onSubmit = (value) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", id);\n    formData.append(\"message_type\",\"information\");\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          alert.success(\" message successfully send!\");\n          paymentHandler()\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Demo.js",["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939","3940","3941","3942"],"/home/pooja/MazarsRepo/src/pages/TP/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/views/QueriesTab/RejectedModal.js",["3943","3944","3945","3946","3947"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport Swal from \"sweetalert2\";\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n    showRejectedBox,\n    rejectedBox,\n    deleteCliente,\n    getQueriesData,\n    assignNo\n}) {\n  const token = window.localStorage.getItem(\"clientToken\")\n  const userId = window.localStorage.getItem(\"userid\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n \n    setLoading(true)\n\n   let formData = new FormData();\n   formData.append(\"uid\", JSON.parse(userId));\n   formData.append(\"id\", assignNo);\n   formData.append(\"notes\" , value.p_chat);\n\n   axios({\n       method: \"POST\",\n       url: `${baseUrl}/customers/deleteQuery`,\n       headers: {\n         uit : token\n       },\n       data: formData,\n   })\n       .then(function (response) {\n         \n           if (response.data.code === 1) {\n            deleteCliente()\n               setLoading(false)\n               Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\n               getQueriesData();\n           } else if (response.data.code === 0) {\n               setLoading(false)\n               Swal.fire(\"Oops...\", \"Query not deleted \", \"error\");\n           }\n       })\n       .catch((error) => {\n          \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={rejectedBox} toggle={deleteCliente} size=\"md\">\n        <ModalHeader toggle={deleteCliente}>Please provide the reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/views/QueriesTab/AdditionalQueryModal.js",["3948","3949","3950"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nfunction AdditionalQueryModal({\n  additionalQuery,\n  additionalHandler,\n  assignNo,\n  getQueriesData,\n  setLoading2,\n  loading2,\n  \n  des\n}) {\n  const { handleSubmit, register } = useForm();\n  const token = window.localStorage.getItem(\"clientToken\")\n // const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n des = false\n    setLoading2(true)\n\n    let formData = new FormData();\n    var uploadImg = value.p_upload;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"upload[]\", file);\n      }\n    }\n    formData.append(\"assign_no\", assignNo);\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\n      headers: {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n    \n        if (response.data.code === 1 && des === false) {\n          des = true\n          setLoading2(false)\n          var message = response.data.message\n          if (message.invalid) {\n            Swal.fire({\n              title: 'Error !',\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\n            })\n          } else if (message.faill && message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n              icon: 'success',\n            })\n          } else if (message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p>${message.success}</p>`,\n              icon: 'success',\n            })\n          }\n          else if (message.faill) {\n            Swal.fire({\n              title: 'Success !',\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\n              icon: 'success',\n            })\n          }\n          additionalHandler();\n          getQueriesData();\n        } else if (response.data.code === 0) {\n          setLoading2(false)\n        }\n      })\n      .catch((error) => {\n        ShowError.LoadingError(setLoading2)\n       });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={additionalQuery} toggle={additionalHandler} size=\"md\">\n        <ModalHeader toggle={additionalHandler}>UPLOAD DOCUMENTS</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Upload Your Document</label>\n              <input\n                type=\"file\"\n                name=\"p_upload\"\n                ref={register}\n                className=\"form-control-file\"\n                multiple\n              />\n            </div>\n\n            <div class=\"modal-footer\">\n              {\n                loading2 ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    className=\"customBtn\"\n                  >\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AdditionalQueryModal;\n","/home/pooja/MazarsRepo/src/views/ModalManual/ModalManual.js",[],"/home/pooja/MazarsRepo/src/views/AssignmentTab/ViewAllReport.js",["3951","3952","3953","3954"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../config/config\";\nimport CommonServices from \"../../common/common\";\nimport RejectedModal from \"./RejectModal\";\nimport DiscardReport from \"./DiscardReport\";\nimport Assignmodal from \"./Assignmodal\";\nimport PublishIcon from '@material-ui/icons/Publish';\nimport {Typography} from \"@material-ui/core\";\nimport MessageIcon from \"../../components/Common/MessageIcon\";\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  getPendingforAcceptance,\n  dataItem,\n  deleiverAble\n}) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const [data, setData] = useState([]);\n  const [docData, setDocData] = useState({});\n  const [additionalQuery, setAdditionalQuery] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  const [nestedModal, setNestedModal] = useState(false);\n  const [modaldoc, setModaldoc] = useState({})\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const token = window.localStorage.getItem(\"clientToken\")\n  const toggleNested = (key) => {\n    setNestedModal(!nestedModal);\n    setDocData(key)\n  }\n\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n  }\n\n  useEffect(() => {\n    getData();\n  }, [report]);\n\n  const downloadpdf = (qid, name) => {\n    let userId, token;\n  \n    userId = window.localStorage.getItem(\"userid\");\n    token = window.localStorage.getItem(\"clientToken\")\n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/customers/viewreportdocument?assign_no=${report}&id=${qid}` , myConfig2)\n    .then((res) => {\n     \n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           console.log(res.headers)\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    })\n   }\n   const downloadpdfclient = (qid, name) => {\n    let userId, token;\n  \n    userId = window.localStorage.getItem(\"userid\");\n    token = window.localStorage.getItem(\"clientToken\")\n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/customers/viewreportdocument?assign_no=${report}&id=${qid}&document=2` , myConfig2)\n    .then((res) => {\n     \n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           console.log(res.headers)\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    })\n   }\n  const getData = () => {\n   if(report === undefined){\n\n   }\n   else{\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/getstagesinfo`,\n      headers: {\n        uit: token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n      \n      });\n   }\n  }\n  const additionalHandler = (p) => {\n setModaldoc(p.docid)\n    setAdditionalQuery(!additionalQuery);\n    setAssignNo(userId)\n};\n\n\n  //accept handler\n  const acceptHandler = (key) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"type\", 1);\n    formData.append(\"docid\", key.docid);\n\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/draftAccept`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n   \n        if (response.data.code === 1) {\n          getData();\n         \n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\nconsole.log(\"data\", data)\n\n  return (\n    <div>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewReport}>\n          \n           <Typography variant=\"h6\">\n           View All Report \n           </Typography>\n           <button class=\"autoWidthBtn\" onClick={() => ViewDiscussionToggel()}>\n                View Discussion\n              </button>\n           \n        </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\" style={{border: `1px solid ${deleiverAble}`, color: \"#fff\", backgroundColor: `${deleiverAble}` , width: \"50px\"}}>S.No</th>\n                <th scope=\"row\" style={{border: `1px solid ${deleiverAble}`, color: \"#fff\", backgroundColor: `${deleiverAble}`, width: \"150px\"}}>Date</th>\n                <th scope=\"row\" style={{border: `1px solid ${deleiverAble}`, color: \"#fff\", backgroundColor: `${deleiverAble}`}}>Document</th>\n              \n                {/* {\n                  dataItem ?\n                    dataItem.customer_file === null ? \"\" : <th scope=\"row\">File Upload</th>\n                    :\n                    null\n                } */}\n                <th scope=\"row\" style={{border: `1px solid ${deleiverAble}`, color: \"#fff\", backgroundColor: `${deleiverAble}`}}>Uploaded file\n                </th>\n               \n                {\n                  dataItem ?\n                    dataItem.final_report ? null : <th scope=\"row\" style={{border: `1px solid ${deleiverAble}`, color: \"#fff\", width: \"100px\", backgroundColor: `${deleiverAble}`}}>Action</th>\n                    :\n                    null\n                }\n              \n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                      <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                          <span onClick={() => downloadpdf(p.docid, p.document)} style={{display: \"flex\", cursor : \"pointer\"}}>\n                     <i className=\"fa fa-photo\"></i>\n                      \n                         \n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </span>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                        <span onClick={() => downloadpdfclient(p.docid, p.customer_files)} style={{display : \"flex\"}}>\n                     <i className=\"fa fa-photo\"></i>\n                     \n                          &nbsp; &nbsp; &nbsp;{p.customer_files}\n                          </span>\n                    \n                    </tr> }\n                    </td>\n                  \n                    <td>\n                   {p.stages_type === \"2\" ?\n                   <p>Draft Report</p> : null}\n                   {p.stages_type === \"3\" ?\n                   <p>Final Report</p> : null}\n                 <br></br> \n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> }\n                </td>\n               \n  {p.stages_type === \"2\" ?\n <div className=\"px-2\">\n    <>\n   {\n        p.status === \"1\" ?\n          <div style={{ cursor: \"pointer\" }} title=\"Client Accepted\">\n            <i\n              class=\"fa fa-check\"\n              style={{\n                color: \"blue\",\n                fontSize: \"16px\",\n              \n              }}\n            ></i>\n          </div> :\"\"}\n\n          {p.status === \"2\" && p.customer_files !== null ?\n          <p className=\"declined\">Pending </p> : \"\"}\n\n\n\n\n         { p.status === \"2\" || p.status === \"0\" ?\n              <>\n              <div style={{display : \"flex\", flexDirection: \"row\"}}>\n               {p.status === \"2\" ? null :\n               <>\n             \n              {p.tlstatus ===  \"0\" ?\n              <div style={{ cursor: \"pointer\" }} title=\"Accept\">\n<i\n  class=\"fa fa-check\"\n  style={{\n    color: \"green\",\n    fontSize: \"16px\",\n  }}\n  onClick={() => acceptHandler(p)}\n></i>\n</div> : null}\n                <div title=\"Discussion\" onClick={() => toggleNested(p)} className=\"ml-2\">\n                \n             <MessageIcon />\n              </div>\n              \n              </> }\n                {p.customer_files === null ?\n<div title=\"Upload Additional Documents\"\n        style={{ cursor: \"pointer\", display : \"inline-flex\" }}\n        onClick={() => additionalHandler(p)}\n       \n    >\n        <PublishIcon color=\"secondary\" />\n    </div> : \"\"}\n    </div>\n    </> :\"\"}</>\n   </div> : null}\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <RejectedModal\n        toggleNested={toggleNested}\n        nestedModal={nestedModal}\n        dataItem={dataItem}\n        docData={docData}\n        getData={getData}\n      />\n     <Assignmodal\n                        additionalHandler={additionalHandler}\n                        additionalQuery={additionalQuery}\n                        assignNo={assignNo}\n                        modaldoc = {modaldoc}\n                        getData = {getData}\n                        // getQueriesData={getQueriesData}\n                    />\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        headColor={deleiverAble}\n        getData={getData}\n      />\n    </div>\n  );\n}\n\nexport default ViewReport;","/home/pooja/MazarsRepo/src/views/AssignmentTab/RejectModal.js",["3955"],"import React, { useState } from \"react\";\nimport { Modal, ModalHeader, ModalBody , Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction RejectedModal({\n  nestedModal,\n  toggleNested,\n  dataItem,\n  docData,\n  getData\n}) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const token = window.localStorage.getItem(\"clientToken\")\n  const { handleSubmit, register, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.assign_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"message\", value.p_chat);\n    formData.append(\"type\", 2);\n    formData.append(\"docid\", docData.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/draftAccept`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n    \n        if (response.data.code === 1) {\n          setLoading(false)\n          toggleNested();\n          getData();\n          var variable = \"Submitted Successfully \"\n          Alerts.SuccessNormal(variable)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\n        <ModalHeader>Discussion</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here\"\n              ></textarea>\n\n              {errors.p_chat && (\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <div>\n                    <button type=\"submit\" className=\"customBtn\">\n                      Submit\n                    </button>\n                    <button className=\"dangerBtn ml-2\" onClick={toggleNested}>Cancel</button>\n                  </div>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default RejectedModal;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Tds.js",["3956","3957","3958","3959","3960","3961","3962","3963","3964","3965","3966","3967","3968"]," import React, { useEffect } from \"react\";\n import axios from \"axios\";\n import { baseUrl } from \"../../../config/config\";\n import { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n import { useForm } from \"react-hook-form\";\n import { useRef } from \"react\";\n import { useState } from \"react\";\n import classNames from \"classnames\";\n import { useHistory } from \"react-router\";\n import { parseInt } from \"lodash\";\n import Swal from \"sweetalert2\";\n import {Spinner} from \"reactstrap\";\n import './porposalStyle.css';\n\nfunction Tds (props)  {\n  const history = useHistory();\n    const userid = window.localStorage.getItem(\"tpkey\")\n    const f2 = useRef(null);\n    const [sac33, setSac] = useState([])\n    const [services2, setServices2] = useState();\n    const [services, setServices] = useState();\n    const [cgetTotal, setCgstTotal] = useState()\n    const [sgetTotal, setSgstTotal] = useState()\n    const [igetTotal, setIgstTotal] = useState()\n    const [gst, setGst] = useState()\n    const [tds2, setTds] = useState()\n    const [grandTotal, setgrandTotal] = useState();\n   const [total, setTotal] = useState(0)\n   const [pocketExp, setPocketExp] = useState()\n   const [cgetRate, setCgetRate] = useState()\n   const [igetRate, setIgetRate] = useState();\n   const [sgetRate, setSgetRate] = useState();\n   const [basicAmount, setBasicAmount] = useState()\n   const [billNo, setBillNo] = useState();\n   const [gstNum , setGstNum] = useState();\n   const [tdsR, setTdsR] = useState();\n   const [disabled, setDisabled] = useState(false)\n  const [description, setDiscription] = useState()\nconst [loading, setLoading] = useState(false);\nvar tdsRate = 10;\nconst percent = {\n  display : \"flex\", \n  justifyContent : \"space-between\",\n  flexDirection : \"row\",\n  alignItems : \"center\"\n}\nconst token = window.localStorage.getItem(\"tptoken\")\nconst myConfig = {\n    headers : {\n     \"uit\" : token\n    }\n  }\n\nconst getServices = () => {\n      axios.get(`${baseUrl}/tl/getServices`, myConfig)\n      .then((res) => {\n  \n        if(res.data.code === 1){\n          setServices(res.data.result);\n        }\n      })\n    }\n  useEffect(() => {\n    getServices();\n  }, [])\n  useEffect(() => {\n    if(props.generated == \"edited\"){\n    getDataild();\n    }\n    else {\n     \n      setTdsR(10)\n      setCgetRate(0);\n      setIgetRate(0);\n      setSgetRate(0)\n      setGstNum(props.gstNo);\n    setBillNo(props.billNo)\n    setBasicAmount(props.paidAmount)\n    setPocketExp(0)\n    setCgstTotal(parseInt(props.paidAmount * 0 / 100).toFixed(2))\n    setIgstTotal(parseInt(0));\n    setSgstTotal(parseInt(0))\n    setGst(parseInt(props.paidAmount * 0 / 100))\n    setTds(parseInt(props.paidAmount * tdsRate / 100))\n    let tot = Number(props.paidAmount) + Number(props.paidAmount * cgetRate / 100)\n    setTotal(tot)\n    // setTotal(Number(parseInt(props.paidAmount) + parseInt(props.paidAmount * cgetRate / 100)))\n    setgrandTotal(parseInt(parseInt(props.paidAmount) + parseInt(props.paidAmount * 0 / 100)) - parseInt(props.paidAmount * tdsRate / 100))\n    }\n  }, [props.paidAmount])\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\nconsole.log(\"propAmount\", total)\nconst getDataild = () => {\n  axios\n  .get(`${baseUrl}/tl/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=1&invoice_id=${props.id}`, myConfig)\n.then((res) => {\n\nif(res.data.payment_detail){\n  res.data.payment_detail.map((i) => {\n    setSac(i.serviceCode)\n     setGstNum(i.gstin_no)\n setBillNo(i.billno)\n setDiscription(i.description)\nsetTdsR(i.tds_rate)\n setBasicAmount(parseInt(i.paid_amount))\n setPocketExp(parseFloat(i.opt_expenses));\n setCgstTotal(parseFloat(i.cgst_amount));\n setIgstTotal(parseFloat(i.igst_amount));\n setSgstTotal(parseFloat(i.sgst_amount));\n setCgetRate(parseFloat(i.cgst_rate));\n setIgetRate(parseFloat(i.igst_rate));\n setSgetRate(parseFloat(i.sgst_rate));\nsetTds(parseFloat(i.tds_amount))\n setgrandTotal(parseFloat(i.payable_amount))\n setTotal(parseFloat(i.invoice_amount))\n setGst(parseFloat(i.gst));\n setDisabled(true);\n  })\n}\n\n})\n}\n  // Cgst Tax function\nconst cgstFun = (e) => {\n \n \n  let kkk = e.target.value.split(\".\")[1]\n   if(kkk)\n    if(kkk.length < 3){\n      let a = 0;\n    \n     setCgetRate(e.target.value);\n     if(pocketExp.length === 0){\n       a = parseInt(basicAmount) + parseInt(0);\n     }\n     else{\n       a = parseInt(basicAmount) + parseInt(pocketExp);\n     }\n      let cget = parseFloat(a * e.target.value / 100)\n      let total = Number(cget) + Number(igetTotal) + Number(sgetTotal)\n      setCgstTotal(parseFloat(cget).toFixed(2));\n      setGst(Math.round(total))\n     \n   \n      setTotal(parseInt(a) + Math.round(total))\n      setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n    \n    }\n    else{\n      return false;\n    }\n  else{\n   setCgetRate(e.target.value);\n   \n   let a = 0\n   if(pocketExp.length === 0){\n     a = parseInt(basicAmount) + parseInt(0);\n   }\n   else{\n     a = parseInt(basicAmount) + parseInt(pocketExp);\n   }\n   \n    let cget = parseFloat(a * e.target.value / 100)\n    let total = Number(cget) + Number(igetTotal) + Number(sgetTotal)\n    setCgstTotal(parseFloat(cget).toFixed(2));\n   \n    setGst(parseInt(Math.round(total)))\n   \n    setTotal(parseInt(a) + Math.round(total))\n   //  setTotal(parseInt(cget) + parseInt(igetTotal) + parseInt(sgetTotal + parseInt(a)))\n   setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n   \n  }\n }\n // Sgst tax function\n const sgstFun = (e) => {\n   let kkk = e.target.value.split(\".\")[1]\n   if(kkk){\n     if(kkk.length < 3){\n       let a = 0\n   if(pocketExp.length === 0){\n     a = parseInt(basicAmount) + parseInt(0);\n   }\n   else{\n     a = parseInt(basicAmount) + parseInt(pocketExp);\n   }\n       setSgetRate(e.target.value)\n      \n             let cget = parseFloat(a * e.target.value / 100)\n             let total = Number(cget) + Number(igetTotal) + Number(cgetTotal)\n             setSgstTotal(parseFloat(cget).toFixed(2))\n             setGst(Math.round(total))\n          \n             setTotal(parseInt(a) + Math.round(total))\n             setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n     }\n     else{\n       return false;\n     }\n   }\n else{\n   setSgetRate(e.target.value)\n   let a = 0\n   if(pocketExp.length === 0){\n     a = parseInt(basicAmount) + parseInt(0);\n   }\n   else{\n     a = parseInt(basicAmount) + parseInt(pocketExp);\n   }\n         let cget = parseFloat(a * e.target.value / 100)\n         let total = Number(cget) + Number(igetTotal) + Number(cgetTotal)\n         setGst(Math.round(total))\n         setSgstTotal(parseFloat(cget).toFixed(2))\n        \n         setTotal(parseInt(a) + Math.round(total))\n         setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n }\n    \n    }\n   \n  \n // Igst tax function\n  const igstFun = (e) => {\n  \n   let kkk = e.target.value.split(\".\")[1]\n   if(kkk){\n if(kkk.length < 3){\n   setIgetRate(e.target.value)\n   let a = 0\n   if(pocketExp.length === 0){\n     a = parseInt(basicAmount) + parseInt(0);\n   }\n   else{\n     a = parseInt(basicAmount) + parseInt(pocketExp);\n   }\n       let cget = parseFloat(a * e.target.value / 100) \n          setIgstTotal(parseFloat(cget).toFixed(2)) \n          let total = Number(cget) + Number(cgetTotal) + Number(sgetTotal)\n          setGst(Math.round(total));\n     \n          setTotal(parseInt(a) + Math.round(total))\n          setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n }\n else{\n   return false;\n }\n   }\n    else{\n     setIgetRate(e.target.value)\n     let a = 0\n   if(pocketExp.length === 0){\n     a = parseInt(basicAmount) + parseInt(0);\n   }\n   else{\n     a = parseInt(basicAmount) + parseInt(pocketExp);\n   }\n         let cget = parseFloat(a * e.target.value / 100) \n            setIgstTotal(parseFloat(cget).toFixed(2)) \n            let total = Number(cget) + Number(cgetTotal) + Number(sgetTotal)\n            setGst(parseInt(Math.round(total)));\n           \n            setTotal(parseInt(a) + Math.round(total))\n            setgrandTotal(parseInt(a) + Math.round(total) - parseInt(tds2))\n    }\n       \n  }\n  \n // Tds function\n const tdsFun = (e) => {\n  let kkk = e.target.value.split(\".\")[1]\n if(kkk){\n   if(kkk.length < 3){\n    if(e.target.value > 100){\n      setTdsR(100);\n     let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n      let cget = Math.round((a * 100 / 100))\n         setTds(cget)\n       setgrandTotal(parseInt(total) - parseInt(cget))\n     \n    }  \n    else{\n     setTdsR(e.target.value)\n    let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n      let cget = Math.round((a * e.target.value / 100))\n         setTds(cget)\n       setgrandTotal(parseInt(total) - parseInt(cget))  \n    }\n   }\n   else{\n     return false\n   }\n }\n else{\n  if(e.target.value > 100){\n    setTdsR(100);\n   let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n    let cget = Math.round((a * 100 / 100))\n       setTds(cget)\n     setgrandTotal(parseInt(total) - parseInt(cget))\n   \n  }  \n  else{\n   setTdsR(e.target.value)\n  let a = 0\n  if(pocketExp.length === 0){\n    a = parseInt(basicAmount) + parseInt(0);\n  }\n  else{\n    a = parseInt(basicAmount) + parseInt(pocketExp);\n  }\n    let cget = Math.round((a * e.target.value / 100))\n       setTds(cget)\n     setgrandTotal(parseInt(total) - parseInt(cget))  \n  }\n }\n }\n \n const pocketExpFun = (e) => {\n if(e.target.value === \"\"){\n   setPocketExp('')\n }\n else{\n   setPocketExp(parseInt(e.target.value).toString())\n }\n//setPocketExp(e.target.value)\n  let a;\n  if(e.target.value){\n    if(basicAmount.length == \"0\"){\n       a = Math.round(e.target.value) + parseInt(0);\n    }\n    else{\n      a = Math.round(e.target.value) + parseInt(basicAmount);\n    }\n   \n  \n \n  let cget1 = parseFloat((a * cgetRate / 100))\n  let sget1 = parseFloat((a * sgetRate / 100))\n  let iget1 = parseFloat((a * igetRate / 100))\n  let tdsamount = parseInt(Math.round(a * tdsR / 100))\n    setCgstTotal(parseFloat(a * cgetRate / 100).toFixed(2));\n   setSgstTotal(parseFloat(a * sgetRate / 100).toFixed(2));\n   setIgstTotal(parseFloat(a * igetRate / 100).toFixed(2));\n   \n\n let total = Number(cget1) + Number(iget1) + Number(sget1)\n setTotal(parseInt(a) + Math.round(total))\nsetGst(total)\n\n  setTds((oldData) => {\n    return(parseInt(tdsamount))\n  })\n  setgrandTotal((oldData) => {\n    return((parseInt(cget1) + parseInt(iget1) + parseInt(sget1) + parseInt(a)) - parseInt(tdsamount))\n  })\n \n}\n}\n\nconst basicFun = (e) => {\n \n  let a = parseFloat((e.target.value) + (pocketExp));\n  let tdsamount = parseInt(Math.round(a * tdsR / 100))\n  setBasicAmount(e.target.value);\n  if(e.target.value > 0){\n    setCgstTotal(parseFloat(a * cgetRate / 100).toFixed(2));\n   setSgstTotal(parseFloat(a * sgetRate / 100).toFixed(2));\n   setIgstTotal(parseFloat(a * igetRate / 100).toFixed(2));\n   setGst((oldData) => {\n    return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)))\n   })\n  setTotal((oldData) => {\n    return(parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a))\n  })\n  setTds((oldData) => {\n    return(parseInt(tdsamount))\n  })\n  setgrandTotal((oldData) => {\n    return((parseInt(Math.round(a * cgetRate / 100)) + parseInt(Math.round(a * igetRate / 100)) + parseInt(Math.round(a * sgetRate / 100)) + parseInt(a)) - parseInt(tdsamount))\n  })\n \n}\n}\nconst onSubmit= (value) => {\n       setLoading(true);\n       let formData = new FormData();\n      formData.append(\"tp_id\", JSON.parse(userid));\n        formData.append(\"id\", props.id)\n        formData.append(\"qno\", props.report)\n        formData.append(\"description\", description);\n        formData.append(\"serviceCode\", sac33);\n       formData.append(\"basic_amount\", basicAmount);\n       formData.append(\"cgst_rate\", cgetRate);\n       formData.append(\"opt_expenses\", pocketExp);\n       formData.append(\"cgst_total\", cgetTotal)\n       formData.append(\"sgst_rate\", sgetRate);\n         \n       formData.append(\"sgst_total\", sgetTotal)\n       formData.append(\"igst_rate\", igetRate);\n        \n       formData.append(\"igst_total\", igetTotal)\n       formData.append(\"total\", total);\n       formData.append(\"tds_rate\", tdsR);\n       formData.append(\"gst\", gst);\n       formData.append(\"tds_total\", tds2)\n       formData.append(\"netpaid_amount\", grandTotal)\n       formData.append(\"gstin_no\", gstNum);\n       formData.append(\"bill_no\", billNo)\n       formData.append(\"invoice_by\", JSON.parse(userid))\n       {props.generated == \"edited\" ? formData.append(\"generate_status\", 1) :\n       formData.append(\"generate_status\" , 0)}\n       axios({\n           method : \"POST\",\n           data : formData,\n           headers : {\n             uit : token\n           },\n           url : `${baseUrl}/tl/generateInvoive`\n       })\n       .then((res) => {\n           setLoading(false);\n           if(res.data.code === 1){\n             Swal.fire({\n               title : \"success\", \n               html : \"Invoice generated successfully\",\n               icon : \"success\"\n             })\n               \n               history.push(\"/taxprofessional/tpinvoice\")\n           }\n          else{\n                Swal.fire({\n               title : \"error\", \n               html : `${res.data.result}`,\n               icon : \"error\"\n             })\n                 \n             }\n       })\n        \n   }\n  const serviceFun = (e) => {\n    setDiscription(e)\n   services.map((k) => {\n    \nif(k.service == e) {\nsetSac(k.sac)\nsetServices2(k.service)\n}\n   })\n     \n  }\n\n  \n    return(\n      \n        <Modal isOpen={props.tdsForm} toggle={props.addTdsToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\n        <ModalHeader toggle={props.addTdsToggle}> Generate Invoice - \n        \n        </ModalHeader>\n        <ModalBody>\n    \n    <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\" ref={f2}>\n    <div className=\"container gutter-3\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>GSTIN</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         maxLength=\"24\"\n         ref={register}\n         name=\"gst_in\"\n         value={gstNum}\n         onChange= {(e) => setGstNum(e.target.value)}\n         className=\"form-control\"\n          />\n            </div>\n          </div>\n          </div>\n          <div className=\"col-md-6\">\n          <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>Invoice No</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         ref={register}\n         name=\"bill_no\"\n         value={billNo}\n         disabled \n         className=\"form-control\"\n       //  onChange= {(e) => (setBillNo(e.target.value))}\n          />\n            </div>\n          </div>\n            </div>\n        </div>\n            <div className=\"row my-2\">\n              {services === undefined ? \"\" : \n              <div className=\"col-md-6\">\n              <label>Description <span className=\"declined\">*</span></label>\n          <select \n      \n       value={description}\n           ref={register({ required: true })}\n\n           name=\"description\"\n        style={{height : \"33.5px\"}}\n          onChange = {(e) => serviceFun(e.target.value)}\n          className={classNames(\"form-control\", {\n            \"is-invalid\": errors.description,\n          })}>\n              <option value=\"\">please select value</option>\n          {services.map((i) => (\n               <option value={i.services} key={i.id} className=\"form-control\"> {i.service}</option>\n          ))}\n            </select>\n              </div>}\n                  <div className=\"col-md-6\">\n                  <label>Basic Amount</label>\n                    <input \n                    type=\"number\"\n\n                    name=\"basic_amount\"\n                    ref={register({required : true})}\n                    className=\"form-control\"\n                    placeholder=\"Amount\" \n                    disabled\n                    onChange= {(e) => basicFun(e)}\n                  value={basicAmount}/>\n                    </div> \n            </div>\n           <div className=\"row my-2\">\n             <div className=\"col-md-6 headCenter\">\n               <label>Out of Pocket Expenses</label>\n               </div>\n               <div className=\"col-md-6\">\n               <input \n                    type=\"number\"\n                    name=\"pocket_amount\"\n                  \n                    ref={register}\n                    className=\"form-control\"\n                    onChange={(e) => pocketExpFun(e)}\n                    value={pocketExp}\n                    placeholder=\"Pocket Amount\"  />\n               </div>\n             </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-4\">\n              <label>CGST</label>\n             <div className=\"row\">\n             <div className=\"col-md-6\" style={percent}>\n              <input \n                    type=\"number\"\n                    ref={register}\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    value={cgetRate}\n                    name=\"cgst_rate\"\n                    onChange= {(e) => cgstFun(e)} /> %\n                \n                  </div>\n                  <div className=\"col-md-6\">\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    placeholder=\"0\" \n                    disabled \n                    name=\"cgst_total\"\n                    value = {cgetTotal}/>\n                  </div>\n                 </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                  <label>SGST/UTGST </label>\n              <div className=\"row\">\n                  <div className=\"col-md-6\" style={percent}>\n                  <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    ref={register}\n                    step=\"0.00001\"\n                    name=\"sgst_rate\"\n                    placeholder=\"Rate\" \n                   value = {sgetRate}\n                    onChange= {(e) => sgstFun(e)}/> %\n                      </div>\n                      <div className=\"col-md-6\">\n                      <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    \n                    name=\"sgst_total\" \n                    disabled\n                    value={sgetTotal}/>\n                          </div>\n                  </div>\n            \n                  </div>\n                  <div className=\"col-md-4\">\n              <label>IGST</label>\n              <div className=\"row\">\n              <div className=\"col-md-6\" style={percent}>\n                <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    ref={register}\n                    name=\"igst_rate\"\n                   value={igetRate}\n                    onChange= {(e) => igstFun(e)} /> %\n                    </div>\n                   \n                    <div className=\"col-md-6\">\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                  \n                    name=\"igst_total\"\n                    disabled\n                    ref={register}\n                    value={igetTotal} />\n                    </div>\n                  </div>\n                  </div>\n                  </div>\n                \n          <hr/>\n          \n            <div className=\"row my-2\">\n                <div className=\"col-md-4 headCenter\">\n                  <label>Total GST</label>\n                    </div>\n                    <div className=\"col-md-4\">\n                        </div>\n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"total\"\n                    disabled\n                   \n                    ref={register}\n                   value={Math.round(gst)} />\n                            </div>\n                </div>\n                <hr/>\n                <div className=\"row my-2\">\n                <div className=\"col-md-8 headCenter\">\n                  <label>Total Invoice Amount</label>\n                    </div>\n                   \n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"totalAmount\"\n                    disabled\n                   \n                    ref={register}\n                   value={Math.round(total)} />\n                            </div>\n                </div>\n           \n            <div className=\"row my-2\">\n              <div className=\"col-md-4 my-1 headCenter\">\n              <label>TDS </label>\n                  </div>\n                <div className=\"col-md-4 my-1\">\n               <div className = \"row\">\n                \n                   <div className=\"col-md-8\"  style={percent}>\n                   <input \n                    type=\"number\"\n                    className=\"form-control\"\n                    step=\"0.00001\"\n                    placeholder=\"Rate\"\n                    name=\"tds_rate\"\n                    value={tdsR}\n                    ref={register}\n                    onChange= {(e) => tdsFun(e)} /> %\n                     </div>\n                     <div className=\"col-md-4\">\n                   </div>\n                 </div>\n                    </div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                    value={Math.round(tds2)} />\n                    </div>\n                   \n            </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-6 my-1 headCenter\">\n              <label>Net Payable Amount</label>\n                  </div>\n                  <div className=\"col-md-2 my-1\"></div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                  value={Math.round(grandTotal)} />\n                    </div>\n                   \n            </div>\n        <ModalFooter>\n       \n             <>\n             {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                 <>\n                  <button  type=\"submit\" className=\"customBtn\">submit</button>\n          \n             <button  type=\"button\" className=\"customBtn mx-3\" onClick={props.addTdsToggle}>Cancel</button>\n                 </>\n              }\n             \n             </>\n        </ModalFooter>\n          </div>\n        </form>\n       \n           \n      \n        </ModalBody>\n      </Modal>\n    )\n}\nexport default Tds;","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/PaymentStatus.js",["3969","3970","3971","3972","3973"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllPayment from \"./AllPayment\";\nimport Unpaid from \"./Unpaid\";\nimport Paid from \"./Paid\";\n\n\n\nfunction QueriesTab(props) {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n  const [bgColor, setbgColor] = useState(\"#2b5f55\")\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n\n\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}`, myConfig)\n      .then((res) => {\n        \n        setAllPayment(res.data.result.length);\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}&status=1`, myConfig)\n      .then((res) => {\n        \n        setPaid(res.data.result.length);\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}&status=2`, myConfig)\n      .then((res) => {\n        \n        setUnpaid(res.data.result.length);\n      });\n  };\n\n  const tableIndex = (index) => {\n    setTabIndex(index)\n    console.log(index)\n    if(index === 0){\n      setbgColor(\"#2b5f55\")\n    }\n    else if(index === 1){\n      setbgColor(\"#3e8678\")\n    }\n    else if(index === 2){\n      setbgColor(\"#3e8678\")\n    }\n    else if(index === 3){\n      setbgColor(\"#3e8678\")\n    }\n  }\n    \n  const myStyle1 = {\n    margin: \"10px auto\",\n    fontSize : \"14px\"\n  };\n  const myStyle2 = {\n margin: \"10px auto\",\n\n color : \"#2b5f55\",\n fontWeight : 1000\n  };\n\n\n\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n        <TabList\n           className=\"fixedTab\"\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n              Paid ({unpaid})\n            </Tab>\n\n          </TabList>\n\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n        </Tabs>\n     \n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/ForgetPassword/ForgetPassword.js",["3974","3975","3976","3977","3978"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n// import NewPassword from \"../NewPassword/NewPassword\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\n\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const onSubmit = (value) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          Swal.fire({\n            \"title\" : \"success\", \n            \"html\" : \"otp send your email !\",\n            \"icon\" : \"success\"\n          })\n        \n          props.history.push(`/taxprofessional/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n         \n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"null\") {\n    \n    } else {\n      return item\n    }\n  }\n\n  return (\n    <>\n      <Header mtp=\"mtp\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"text\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_email,\n                })}\n                name=\"p_email\"\n                ref={register}\n                placeholder=\"Enter Email\"\n                defaultValue={valueHandler()}\n              />\n              {errors.p_email && (\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n\n          </form>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/home/pooja/MazarsRepo/src/pages/TP/NewPassword/NewPassword.js",["3979","3980","3981","3982","3983","3984"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport { localeData } from \"moment\";\n\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [load, setLoad] = useState(true);\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n\n  const getTime = () => {\n    var timerOn = true;\n    function timer(remaining) {\n      var s = remaining % 60;\n      s = s < 10 ? '0' + s : s;\n      setTime(remaining)\n      remaining -= 1;\n      if (remaining >= 0 && timerOn) {\n        setTimeout(function () {\n          timer(remaining);\n        }, 1000);\n        return;\n      }\n      setDisabled(true)\n    }\n    setLoad(false)\n    timer(180);\n  }\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_code);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/taxprofessional/login\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Please enter correct details\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address.\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    autocomplete=\"off\"\n                    ref={register({ required: true })}\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                </div>\n              </div>\n            </div>\n\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"customBtn\" >\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id}  setLoad={setLoad} setDisabled={setDisabled} getTime={getTime} setLoading={setLoading} />\n              :\n              null\n          }\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default NewPassword;\n\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/teamleader/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"customBtn\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}","/home/pooja/MazarsRepo/src/pages/TP/Dashboard/Dashboard.js",["3985","3986","3987"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {useHistory} from \"react-router-dom\";\nimport {Container} from '@material-ui/core';\n\nfunction Dashboard() {\n  const userid = window.localStorage.getItem(\"tpkey\");\nconst sessionTpid = window.sessionStorage.getItem(\"sessionTpid\")\nlet history = useHistory()\n  const [allQueries, setAllQueries] = useState({\n    total: '',\n    inprogress_queries: '',\n    inprogress_allocation: '',\n    inprogress_proposal: '',\n    inprogress_assignment: '',\n    complete_query: '',\n    declined_queries: '',\n    admin_declined_query: '',\n    customer_declined_Query: '',\n    customer_declined_proposal: '',\n    Customer_declined_payment: '',\n\n    allproposal: '',\n    accepted_proposals: '',\n    InProgress: '',\n    inprogress_preparation: '',\n    inprogress_acceptance: '',\n    declined: '',\n  });\n\n\n  const [assignment, setAssignment] = useState({\n    inprogress: '',\n    complete: '',\n    client_discussion: '',\n    draft_report: '',\n    final_discussion: '',\n    final_report: '',\n    complete_inprocess: '',\n    customer_declined_payment: ''\n  });\n\n  const [payment, setPayment] = useState({\n    paid: '',\n    unpaid: '',\n    totalpayment: '',\n  });\n\n  const { total, inprogress_queries,\n    inprogress_allocation, inprogress_proposal,\n    inprogress_assignment, complete_query,\n    declined_queries, admin_declined_query,\n    customer_declined_Query, customer_declined_proposal,\n    Customer_declined_payment,\n    allproposal,\n    inprogress_preparation,\n    declined, inprogress_acceptance,\n    accepted_proposals, InProgress } = allQueries;\n\n\n  const {\n    inprogress,\n    complete, client_discussion, draft_report, final_discussion,\n    final_report, complete_inprocess,\n    customer_declined_payment } = assignment;\n\n  const {\n    paid,\n    unpaid,\n    totalpayment } = payment;\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n\n  useEffect(() => {\n\n    const getAllQueries = () => {\n      axios\n        .get(`${baseUrl}/tp/totalComplete?tp_id=${JSON.parse(userid)}`, myConfig)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setAllQueries({\n              total: response.data.result.total,\n              inprogress_queries: response.data.result.inprogress_queries,\n              inprogress_allocation: response.data.result.inprogress_allocation,\n              inprogress_proposal: response.data.result.inprogress_proposal,\n              inprogress_assignment: response.data.result.inprogress_assignment,\n              complete_query: response.data.result.complete_query,\n              declined_queries: response.data.result.declined_queries,\n              admin_declined_query: response.data.result.admin_declined_query,\n              customer_declined_Query: response.data.result.customer_declined_Query,\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\n\n              allproposal: response.data.result.proposal.allproposal,\n              InProgress: response.data.result.proposal.InProgress,\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\n            })\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n\n    const getAssignment = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignmentsCount?tp_id=${JSON.parse(userid)}`, myConfig)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setAssignment({\n              inprogress: response.data.result.inprogress,\n              complete: response.data.result.complete,\n              client_discussion: response.data.result.client_discussion,\n              draft_report: response.data.result.draft_report,\n              final_discussion: response.data.result.final_discussion,\n              final_report: response.data.result.final_report,\n              complete_inprocess: response.data.result.complete_inprocess,\n              customer_declined_payment: response.data.result.customer_declined_payment,\n            })\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n\n    const getPayment = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignmentsPaymentCount?tp_id=${JSON.parse(userid)}`, myConfig)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setPayment({\n              paid: response.data.result.paid,\n              unpaid: response.data.result.unpaid,\n              totalpayment: response.data.result.totalpayment,\n            })\n          }\n        })\n        .catch((error) => {\n         \n        });\n    };\n\n    getAllQueries();\n    getPayment();\n    getAssignment();\n  }, []);\n\n\n\n const logout = () => {\n   localStorage.removeItem(\"tpkey\")\n   localStorage.removeItem(\"tpEmail\")\n   history.push(\"/taxprofessional/login\")\n }\n  \n\n  return (\n  <>\n  {sessionTpid ?\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n<Container maxWidth=\"xl\">\n\n<div className=\"row\">\n\n\n<div className=\"col-md-3 content_header\">\n  <table className=\"table table-striped first main_table\">\n    <thead className=\"query_thead\">\n      <tr>\n        <th className=\"left_side\">All Queries</th>\n        <th>{total}</th>\n      </tr>\n    </thead>\n  </table>\n  <table className=\"table table-striped second main_table\">\n    <thead className=\"query_thead\">\n      <tr>\n        <th className=\"left_side\">Inprogress; Queries</th>\n        <th>{inprogress_queries}</th>\n      </tr>\n    </thead>\n\n    <tbody className=\"table_body\">\n      <tr>\n        <td className=\"left_side\">Inprogress; Allocation</td>\n        <td>{inprogress_allocation}</td>\n      </tr>\n      <tr>\n        <td className=\"left_side\">Inprogress; Proposals</td>\n        <td>{inprogress_proposal}</td>\n      </tr>\n      <tr>\n        <td className=\"left_side\">Inprogress; Assignments</td>\n        <td>{inprogress_assignment}</td>\n      </tr>\n    </tbody>\n  </table>\n\n\n  <table className=\"table table-striped third main_table\">\n    <thead className=\"query_thead\">\n      <tr>\n        <th className=\"left_side\">Completed; Queries</th>\n        <th>{complete_query}</th>\n      </tr>\n    </thead>\n    <tbody className=\"table_body\">\n      <tr>\n        <td className=\"left_side\">Completed; Assignments</td>\n        <td>{complete_query}</td>\n      </tr>\n    </tbody>\n  </table>\n\n\n  <table className=\"table table-striped forth main_table\">\n    <thead className=\"query_thead\">\n      <tr>\n        <th className=\"left_side\">Declined; Queries</th>\n        <th>{declined_queries}</th>\n      </tr>\n    </thead>\n\n    <tbody className=\"table_body\">\n     \n      <tr>\n        <td className=\"left_side\">Client Declined; Proposals</td>\n        <td>{customer_declined_proposal}</td>\n      </tr>\n      <tr>\n        <td className=\"left_side\">Client Declined; Payment</td>\n        <td>{Customer_declined_payment}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<div className=\"col-md-3 content_header\">\n\n  <table className=\"table table-striped fifth main_table\">\n    <thead className=\"proposal_thead\">\n      <tr>\n        <th className=\"left_side\">All Proposals</th>\n        <th>{allproposal}</th>\n\n      </tr>\n    </thead>\n  </table>\n\n  <table className=\"table table-striped sixth main_table\">\n    <thead className=\"proposal_thead\">\n      <tr>\n        <th className=\"left_side\">Inprogress; Proposals</th>\n        <th>{InProgress}</th>\n      </tr>\n    </thead>\n    <tbody classNameName=\"table_body\">\n      <tr>\n        <td className=\"left_side\">Inprogress; Preparation</td>\n        <td>{inprogress_preparation}</td>\n      </tr>\n      <tr>\n        <td className=\"left_side\">Inprogress; Acceptance</td>\n        <td>{inprogress_acceptance}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <table className=\"table table-striped seventh main_table\">\n    <thead className=\"proposal_thead\">\n      <tr>\n        <th className=\"left_side\">Accepted; Proposals </th>\n        <th>{accepted_proposals}</th>\n      </tr>\n    </thead>\n  </table>\n\n  <table className=\"table table-striped eight main_table\">\n    <thead className=\"proposal_thead\">\n      <tr>\n        <th className=\"left_side\">Client Declined; Proposals</th>\n        <th>{declined}</th>\n      </tr>\n    </thead>\n  </table>\n\n\n</div>\n\n<div className=\"col-md-3 content_header\">\n  <table className=\"table table-striped ninth main_table\">\n    <thead className=\"assignment_thead\">\n      <tr>\n        <th className=\"left_side\">All Assignments</th>\n        <th>{inprogress + complete + +(customer_declined_payment)}</th>\n      </tr>\n    </thead>\n  </table>\n\n  <table className=\"table table-striped tenth main_table\">\n    <thead className=\"assignment_thead\">\n\n      <tr>\n        <th className=\"left_side\">Inprogress; Assignments</th>\n        <th>{inprogress}</th>\n      </tr>\n    </thead>\n\n    <tbody classNameName=\"table_body\">\n      <tr>\n        <td className=\"left_side\">Client Discussion</td>\n        <td>{client_discussion}</td>\n      </tr>\n      <tr>\n        <td className=\"left_side\">Draft Reports</td>\n        <td>{draft_report}</td>\n      </tr>\n      <tr>\n        <td className=\"left_side\">Final Discussion</td>\n        <td>{final_discussion}</td>\n      </tr>\n      <tr>\n        <td className=\"left_side\">Delivery of Final Reports</td>\n        <td>{final_report}</td>\n      </tr>\n      <tr>\n        <td className=\"left_side\">Awaiting Completion</td>\n        <td>{complete_inprocess}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <table className=\"table table-striped tenth main_table\">\n    <thead className=\"assignment_thead\">\n\n      <tr>\n        <th className=\"left_side\">Completed; Assignments</th>\n        <th>{complete}</th>\n      </tr>\n    </thead>\n  </table>\n\n  <table className=\"table table-striped tenth main_table\">\n    <thead className=\"assignment_thead\">\n\n      <tr>\n        <th className=\"left_side\">Client Declined; Payment</th>\n        <th>{customer_declined_payment}</th>\n      </tr>\n    </thead>\n  </table>\n</div>\n\n\n<div className=\"col-md-3 content_header\">\n\n  <table className=\"table table-striped twelvth main_table\">\n    <thead className=\"payment_thead\">\n      <tr>\n        <th className=\"left_side\">All Payments</th>\n        <th>{totalpayment}</th>\n      </tr>\n    </thead>\n  </table>\n  <table className=\"table table-striped thirteen main_table\">\n    <thead className=\"payment_thead2\">\n      <tr>\n        <th className=\"left_side\">Paid</th>\n        <th>{paid}</th>\n      </tr>\n    </thead>\n  </table>\n\n  <table className=\"table table-striped thirteen main_table\">\n    <thead className=\"payment_thead2\">\n      <tr>\n        <th className=\"left_side\">Unpaid</th>\n        <th>{unpaid}</th>\n      </tr>\n    </thead>\n  </table>\n</div>\n</div>\n</Container>\n\n\n  </Layout> : \n  <>\n  {logout()}\n  </>}\n  </>\n  );\n}\n\nexport default Dashboard;","/home/pooja/MazarsRepo/src/pages/TP/ChangePassword/ChangePassword.js",["3988","3989","3990","3991","3992","3993","3994","3995"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\n// import \"../../assets/css/style.css\";\n// import \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_password: yup.string().required(\"required password\"),\n//   p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n\nfunction ChangePassword(props) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const alert = useAlert();\n  // const { handleSubmit, register, reset, errors } = useForm({\n  //   resolver: yupResolver(Schema),\n  // });\n\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const [error, setError] = useState(\"\");\n  const onSubmit = (value) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"rpassword\", value.confirm_password);\n\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/customers/passChange`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //   \n    //     if (response.data.code === 1) {\n    //       alert.success(\"change password successfully!\");\n    //       reset();\n    //     } else if (response.data.code === 0) {\n    //       \n\n    //       Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n    //       reset();\n    //     }\n    //   })\n    //   .catch((error) => {\n    //    \n    //   });\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Change Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email </label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email,\n                  })}\n                  name=\"p_email\"\n                  placeholder=\"Enter email id\"\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\",\n                    },\n                  })}\n                />\n                {errors.p_email && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_email.message}{\" \"}\n                  </div>\n                )}\n              </div>\n\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_password,\n                })}\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                    message:\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                  },\n                })}\n              />\n              {errors.p_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_password.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_confirm_password,\n                })}\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  validate: (value) =>\n                    value === getValues(\"p_password\") ||\n                    \"password doesn 't match\",\n                })}\n              />\n              {errors.p_confirm_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_confirm_password.message}\n                </div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"customBtn\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n","/home/pooja/MazarsRepo/src/pages/TP/EditProposal/EditProposal.js",["3996","3997","3998","3999","4000","4001","4002","4003","4004","4005","4006","4007","4008","4009","4010","4011","4012","4013","4014","4015","4016","4017","4018","4019","4020","4021","4022"],"\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Payment from \"./Payment\";\nimport Select from \"react-select\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from 'reactstrap';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {Link} from 'react-router-dom';\n\nfunction EditComponent(props) {\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset, errors } = useForm();\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [custId, setCustId] = useState(\"\");\n  const [store, setStore] = useState(null);\n  const [amount, setAmount] = useState();\n  const [date, setDate] = useState();\n  const [load, setLoad] = useState(true);\n\n  const[clearValue, setClearValue] = useState(true)\n  const [payment, setPayment] = useState([]);\n  const [installment, setInstallment] = useState([]);\n  const [value2, setValue2] = useState('');\n  const [diserror, setdiserror] = useState(\"\")\n  const [company2, setCompany2] = useState(\"\")\n  const [companyName, setCompanyName] = useState([])\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [dateError, setDateError] = useState(false)\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n  const [proposal, setProposal] = useState({\n    query: \"\",\n    name: \"\",\n    fixed_amount: \"\",\n    payable: \"\",\n    description: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n    payment : \"\"\n  });\n\n\n  const { query, name, description, fixed_amount,\n    due_date, installment_amount } = proposal;\n\n  useEffect(() => {\n    getQuery();\n    getCompany()\n  }, []);\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const getCompany = () => {\n    axios.get(\n      `${baseUrl}/tl/getcompany`, myConfig\n    )\n    .then((res) => {\n      console.log(\"response\", res)\n      setCompanyName(res.data.result)\n    })\n  }\n  const getQuery = () => {\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`, myConfig).then((res) => {\n      if (res.data.code === 1) {\n        setCompany2(res.data.result.company)\n        setProposal({\n          name: res.data.result.name,\n          query: res.data.result.assign_no,\n          fixed_amount: res.data.result.amount,\n          description: res.data.result.description,\n          installment_amount: res.data.result.installment_amount,\n          due_date: res.data.result.due_date,\n          payment : res.data.result.installment_amount\n        });\nsetValue2(res.data.result.description)\n        var payment_terms = res.data.result.payment_terms\n        var no_of_installment = res.data.result.no_of_installment\n\n        const data1 = {\n          label: payment_terms,\n          value: payment_terms,\n        }\n\n        const data2 = {\n          label: no_of_installment,\n          value: no_of_installment,\n        }\n\n        setPayment(data1);\n        setInstallment(data2);\n      }\n    });\n  };\n\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`, myConfig);\n      setCustId(res.data.id);\n    };\n    getUser();\n  }, [id]);\n\n\n\n\n  const onSubmit = (value) => {\n \nif(diserror.length > 0){\n  return false\n}\nelse if(dateError === true){\n  Alerts.ErrorNormal(\"Date must be unique\")\n }\n else if(value2.length == 0){\n  return false\n }\nelse{\n  var lumsum = value.p_inst_date\n    if (payment.label == \"lumpsum\") {\n      setDate(lumsum)\n    }\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", query);\n    formData.append(\"name\", name);\n    formData.append(\"type\", \"tl\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"assign_id\", id);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"description\", value2);\n    formData.append(\"amount_type\", \"fixed\");\n    formData.append(\"amount\", value.p_fixed);\n    formData.append(\"installment_amount\", amount);\n    formData.append(\"company\", value.p_company)\n    formData.append(\"payment_terms\", payment.value);\n    formData.append(\"no_of_installment\", installment.value);\n\n    payment.label == \"lumpsum\" ?\n      formData.append(\"due_date\", lumsum) :\n      payment.label == \"installment\" ?\n        formData.append(\"due_date\", date) :\n        formData.append(\"due_date\", \"\")\n\n\n    if (payment.length < 1) {\n     \n    } else\n      if (payment.value == \"installment\") {\n        if (installment == \"\") {\n          Alerts.ErrorNormal(`Please select no of installment .`)\n        } else\n          if (!amount || !date) {\n            Alerts.ErrorNormal(`Please enter all fields.`)\n          } else if (amount && date) {\n\n            if (installment.value > 0) {\n              var a = Number(installment.value)\n             \n              for (let i = 0; i < a; i++) {\n\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\n                  Alerts.ErrorNormal(`Please enter amount`)\n                  return false\n                }\n                if (date[i] == \"\" || date[i] == undefined) {\n                  Alerts.ErrorNormal(`Please enter date`)\n                  return false\n                }\n              }\n              var sum = amount.reduce(myFunction)\n              function myFunction(total, value) {\n                return Number(total) + Number(value);\n              }\n              if (value.p_fixed != sum) {\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n\n              } else {\n               \n                setLoading(true)\n                axios({\n                  method: \"POST\",\n                  url: `${baseUrl}/tp/updateProposal`,\n                  headers : {\n                    uit : token\n                  },\n                  data: formData,\n                })\n                  .then(function (response) {\n\n                    if (response.data.code === 1) {\n                      setLoading(false)\n                      var variable = \"Proposal updated successfully\"\n                      Alerts.SuccessNormal(variable)\n                      history.push(\"/taxprofessional/proposal\");\n                    } else if (response.data.code === 0) {\n                      setLoading(false)\n                    }\n                  })\n                  .catch((error) => {\n                  \n                  });\n              }\n            }\n          }\n      } else if (payment.label == \"lumpsum\") {\n\n        setLoading(true)\n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tp/updateProposal`,\n          headers: {\n            uit : token\n          },\n          data: formData,\n        })\n          .then(function (response) {\n         \n            if (response.data.code === 1) {\n              setLoading(false)\n              var variable = \"Proposal Updated Successfully \"\n              Alerts.SuccessNormal(variable)\n              history.push(\"/taxprofessional/proposal\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n          \n          });\n      }\n}\n    \n  };\n\n\n  const handleChange = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setdiserror(\"Please enter number only\");\n    }\n    else if(e.target.value == \"0\"){\n      setdiserror(\"Amount should be greater than zero\")\n    }\n    else {\n      setdiserror(\"\");\n    }\n  };\n\n\n  const paymentAmount = (data) => {\n   \n\n    var array1 = []\n    Object.entries(data).map(([key, value]) => {\n      array1.push(value)\n    });\n    setAmount(array1.slice(0, installment.value));\n  };\n\n  const paymentDate = (data) => {\n   \n\n    var array2 = []\n    Object.entries(data).map(([key, value]) => {\n      array2.push(value)\n    });\n\n    setDate(array2.slice(0, installment.value));\n    if(new Set(array2).size !== array2.length){\n      setDateError(true)\n     Alerts.ErrorNormal(\"Date must be unique\")\n    }\n    else{\n      setDateError(false)\n    }\n  };\n\n  const installmentHandler = (key) => {\n\n    setInstallment(key)\n    setClearValue(false)\n  }\n\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n            <Link\n                  to={{\n                    pathname: `/taxprofessional/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"autoWidthBtn ml-3\">Go Back</button>\n                </Link>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Edit Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div style={{ display: \"flex\" }}>\n              <div class=\"col-md-6\">\n\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    disabled\n                    value={query}\n                    ref={register}\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <label>Company</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_company\"\n                   value={company2}\n                   onChange= {(e) => setCompany2(e.target.value)}\n                  >\n{\n  companyName.map((i) => (\n    <option value={i.company_prefix}>{i.name}</option>\n  ))\n}\n                  </select>\n                </div>\n                <div class=\"form-group\">\n                  <label>Fee</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_type\"\n                    onChange={(e) => setStore(e.target.value)}\n                  >\n                    <option value=\"fixed\">Fixed Price</option>\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"p_fixed\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fixed || diserror,\n                    })}\n                    ref={register({ required: true })}\n                    placeholder=\"Enter Fixed Price\"\n                    defaultValue={fixed_amount}\n                    onChange={handleChange}\n                  />\n                </div>\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\n\n                <div class=\"form-group\">\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\n                  <CKEditor\n                     editor={ ClassicEditor }\n                     config = {{\n\n                      highlight: {\n                        options: [\n                            {\n                                model: 'greenMarker',\n                                class: 'marker-green',\n                                title: 'Green marker',\n                                color: 'var(--ck-highlight-marker-green)',\n                                type: 'marker'\n                            },\n                            {\n                                model: 'redPen',\n                                class: 'pen-red',\n                                title: 'Red pen',\n                                color: 'var(--ck-highlight-pen-red)',\n                                type: 'pen'\n                            }\n                        ]\n                    },\n                      fontFamily: {\n                        options: [\n                            'default',\n                            'Ubuntu, Arial, sans-serif',\n                            'Ubuntu Mono, Courier New, Courier, monospace'\n                        ]\n                    },\n                    fontColor: {\n                      colors: [\n                          {\n                              color: 'hsl(0, 0%, 0%)',\n                              label: 'Black'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 30%)',\n                              label: 'Dim grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 60%)',\n                              label: 'Grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 90%)',\n                              label: 'Light grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 100%)',\n                              label: 'White',\n                              hasBorder: true\n                          },\n\n                          // ...\n                      ]\n                  },\n                    toolbar: [\n                   ' highlight', 'heading',  'bold', 'fontColor', 'italic',  'bulletedList', 'numberedList', 'undo', 'redo'\n                    ],\n                  \n                    }}\n                    \n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    data={description}\n                    onChange={ ( event, editor ) => {\n                      setValue2(editor.getData())\n                      // setcustError(\"\")\n                    \n                  } }\n                    //ref={register({ required: true })}\n                >\n                  \n                  </CKEditor>\n                  {/* <textarea\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    defaultValue={description}\n                    ref={register({ required: true })}\n                  ></textarea> */}\n                </div>\n              </div>\n\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Client Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    disabled\n                    value={name}\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\n                  <Select\n                    closeMenuOnSelect={true}\n                    onChange={setPayment}\n                    value={payment}\n                    options={paymentsTerms}\n                  />\n                </div>\n\n                {payment.label == \"lumpsum\" ? (\n                  <div class=\"form-group\">\n                    <label>Due Dates</label>\n                    <input\n                      type=\"date\"\n                      name=\"p_inst_date\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_inst_date,\n                      })}\n                      ref={register({ required: true })}\n                      placeholder=\"Enter Hourly basis\"\n                      defaultValue={due_date}\n                    />\n                  </div>\n                ) :\n                  payment.label == \"installment\" ? (\n                    <div class=\"form-group\">\n                      <label>No of Installments</label>\n                      <Select\n                        closeMenuOnSelect={true}\n                        onChange={(e => installmentHandler(e))}\n                        value={installment}\n                        options={noInstallments}\n                      />\n                    </div>\n                  )\n                    : \"\"\n                }\n                {\n                  payment.label == \"lumpsum\"\n                    ?\n                    \"\"\n                    :\n                    installment_amount && due_date &&\n                    <Payment\n                      installment={installment.label}\n                      paymentAmount={paymentAmount}\n                      paymentDate={paymentDate}\n                      installment_amount={installment_amount}\n                      due_date={due_date}\n                      getQuery={getQuery}\n                      item={item}\n                      clearValue={clearValue}\n                    />\n                }\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-6\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" class=\"customBtn\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n\n          <Mandatory />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditComponent;\n\nconst paymentsTerms = [\n  {\n    value: \"lumpsum\",\n    label: \"lumpsum\",\n  },\n  {\n    value: \"installment\",\n    label: \"installment\",\n  },\n];\n\nconst noInstallments = [\n  {\n    value: \"2\",\n    label: \"2\",\n  },\n  {\n    value: \"3\",\n    label: \"3\",\n  },\n  {\n    value: \"4\",\n    label: \"4\",\n  },\n];\n\n","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/SendProposal.js",["4023","4024"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {  useParams } from \"react-router-dom\";\nimport ProposalComponent from \"./ProposalComponent\";\n\n\nfunction SendProposal() {\n    const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tpkey\");\n  console.log(\"userid\", userid)\n  return (\n    <>\n   <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n        <ProposalComponent id={id}/>\n      </Layout>\n    </>\n  );\n}\n\nexport default SendProposal;\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ProposalTab.js",["4025","4026","4027","4028","4029","4030"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllProposal from \"./AllProposal\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport AcceptedProposal from \"./AcceptedProposal\";\nimport DeclinedProposal from \"./DeclinedProposal\";\n\n\n\n\nfunction ProposalTab(props) {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n\n\n    const [allProposal, setAllProposal] = useState(\"\");\n    const [inprogressProposal, setInprogressProposal] = useState(\"\");\n    const [acceptedProposal, setAcceptedProposal] = useState(\"\");\n    const [declinedProposal, setDeclinedProposal] = useState(\"\");\n    const [bgColor, setbgColor] = useState(\"#42566a\")\n\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n\n\n    const tableIndex = (index) => {\n        setTabIndex(index)\n        console.log(index)\n        if(index === 0){\n          setbgColor(\"#42566a\")\n        }\n        else if(index === 1){\n          setbgColor(\"#5f7b97\")\n        }\n        else if(index === 2){\n          setbgColor(\"#5f7b97\")\n        }\n        else if(index === 3){\n          setbgColor(\"#5f7b97\")\n        }\n      }\n      const myStyle1 = {\n        margin: \"10px auto\",\n        fontSize : \"14px\"\n      };\n      const myStyle2 = {\n     margin: \"10px auto\",\n     \n     color : \"#42566a\",\n     fontWeight : 1000\n      };\n    \n\n    useLayoutEffect(() => {\n        setTabIndex(props.location.index || 0);\n    }, [props.location.index]);\n\n\n\n    useEffect(() => {\n\n        const AllProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}`, myConfig)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAllProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const InprogressProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=1`, myConfig)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setInprogressProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const AcceptedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=2`, myConfig)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAcceptedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const DeclinedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=3`, myConfig)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setDeclinedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        AllProposal();\n        InprogressProposal();\n        AcceptedProposal();\n        DeclinedProposal();\n    }, []);\n\n\n\n    return (\n        <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n                       <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n          <TabList\nclassName=\"fixedTab\">\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n                            All Proposals ({allProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n                            Inprogress; Proposals ({inprogressProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n                            Accepted; Proposals ({acceptedProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 3 ? myStyle2 : myStyle1} className=\"tabHover\">\n                            Client Declined; Proposals ({declinedProposal})\n                        </Tab>\n                    </TabList>\n\n                    <TabPanel>\n                        <AllProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <InprogressProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <AcceptedProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <DeclinedProposal />\n                    </TabPanel>\n                </Tabs>\n         \n        </Layout>\n    );\n}\n\nexport default ProposalTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/QueriesRecevied/QueriesRecevied.js",["4031","4032","4033","4034"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\nimport moment from 'moment';\nimport {CardHeader, Row, Col} from 'reactstrap'\nfunction QueriesRecevied(props) {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [tlName2, setTlname] = useState();\n  const[tp22, setTp22] = useState();\n  const [tpStatus, setTpstatus] = useState();\n  const [accept, setAccept] = useState();\n  const [overDue, setOverDue] = useState(\"\")\n  const [finalDate, setFinalDate] = useState()\n  const [qstatus, setqStatus] = useState();\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n    proposal_reactive_dates: \"\",\n    proposal_reactive_notes: \"\"\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tpname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n  const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`, myConfig).then((res) => {\n\n        if (res.data.code === 1) {\n          setqStatus(res.data.result[0].query_status)\n          setTpstatus(res.data.result[0].tp_status);\n          setAccept(res.data.result[0].query_status)\n          setTlname(res.data.result[0].tlname);\n          setTp22(res.data.result[0].tpname);\n          if(res.data.history_queries[0] === undefined){\n\n          }\n          else{\n            setDisplayHistory({\n              tlname: res.data.proposal_queries,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          \n          }\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setPaymentDetails(res.data.payment_detail);\n          setAssingmentNo(res.data.result[0].assign_no);\n          setFeedback(res.data.feedback_detail);\n          setReports(res.data.reports);\n\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n        \n          \n          try {\n           \n            var myYear = JSON.parse(assementItem);\n           \n            setYear(myYear);\n          } catch (e) {\n           \n          }\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            \n            setPurpose(myPurpose);\n           \n          } catch (e) {\n           \n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setOverDue(res.data.result[0].overdueamount)\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n              proposal_reactive_dates : res.data.proposal_queries[0].re_active_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"),\n              proposal_reactive_notes : res.data.proposal_queries[0].notes\n            });\n            let a = moment(res.data.result[0].final_date);\n            let b = moment(res.data.proposal_queries[0].cust_accept_date)\n            let c = a.diff(b)\n            let d = moment.duration(c)\n            let finalDate = d.days() + 1;\n           setFinalDate(finalDate)\n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          // if (res.data.history_queries.length > 0) {\n          //   setDisplayHistory({\n          //     tlname: res.data.history_queries[0].tname,\n          //     date_of_allocation:\n          //       res.data.history_queries[0].date_of_allocation,\n          //   });\n          // }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n  console.log(\"done\")\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n     <div class=\"row mt-3\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n          <CardHeader>\n          <Row>\n            <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/taxprofessional/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"autoWidthBtn ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4>Query Details</h4>\n            </Col>\n            <Col md=\"4\" align = \"center\">\n            \n            </Col>\n          </Row>\n        </CardHeader>    {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n              \n                getQuery={getQuery}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n                accept = {accept}\n                tpStatus={tpStatus}\n                tlName2={tlName2}\n                tp22 = {tp22}\n                finalDate={finalDate}\n                qstatus={qstatus}\n                overDue={overDue}\n                panel = \"taxprofessional\"\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n","/home/pooja/MazarsRepo/src/pages/TP/Start/Start.js",["4035"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\n\n\nfunction Start() {\n  return (\n    <>\n      <Header mtp=\"mtp\"/>\n      <div class=\"content_register\">\n        <Link to=\"/taxprofessional/login\">\n          <h1 style={{color: \"#2b345f\"}}>TAX PROFESSIONAL LOGIN</h1>\n          </Link>\n      </div>\n    \n    </>\n  );\n}\n\nexport default Start;\n","/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/QueriesTab.js",["4036","4037","4038","4039","4040","4041","4042","4043","4044","4045"],"/home/pooja/MazarsRepo/src/pages/TP/Login/Login.js",["4046","4047","4048","4049"],"/home/pooja/MazarsRepo/src/pages/TL/Proposal/Invoice.js",["4050","4051","4052","4053","4054","4055","4056","4057","4058","4059","4060","4061","4062","4063","4064","4065","4066","4067","4068","4069"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport Tds from \"./Tds\";\nimport OutlinedInputIcons from \"@mui/material/OutlinedInput\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, EditQuery, ActionIcon} from \"../../../components/Common/MessageIcon\";\n\nconst Invoice = () => {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n\n\n    const [id, setId] = useState();\n  \n    const [tds, setTds] = useState(false)\n  \n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n \n   const addTdsToggle = (key) => {\n      \n     setGstinNo(key.gstin_no);\n       setTdsForm(!tdsForm)\n       setAssignNo(key.assign_no)\n       setPaidAmount(key.paid_amount)\n       setId(key.id)\n       setInstallmentNo(key.installment_no)\n       setBillNo(key.billno);\n       setId2(key.id)\n   }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=0`, myConfig)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                  \n                  setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n           \n            headerStyle: () => {\n                return { width: \"50px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            \n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"tlinvoice\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n           \n        }, \n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n           \n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Amount\",\n            dataField: \"paid_amount\",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-IN')\n                 var x = row.paid_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        }, \n        \n       \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n            \n            formatter: function (cell, row) {\n\n                return (\n                    \n                    <>\n                        <div style={{ display: \"flex\"}}   onClick = {() => addTdsToggle(row)}>\n<ActionIcon  titleName=\"Create Invoice\" />\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n       \n    ];\n\n    return (\n\n        <>\n            <Card>\n              \n                <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     setRec={setRecords}\n                     records={records}\n                     invoice = \"tlcreate\" \n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   data={proposal}\n                   columns={columns}>\n                    </DataTablepopulated>\n                   \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    gstNo = {gstNo}\n                    tabIndex22 = {1}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Invoice;","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InvoiceTab.js",["4070","4071","4072","4073","4074","4075","4076"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Invoice from \"./Invoice\";\nimport Generated from \"./Generated\";\nconst InvoiceTab = () => {\n    const userid = window.localStorage.getItem(\"tlkey\")\n    const [tabIndex, setTabIndex] = useState(0);\n    const [bgColor, setbgColor] = useState(\"#42566a\")\n    const tableIndex = (index) => {\n        setTabIndex(index)\n        console.log(index)\n        if(index === 0){\n          setbgColor(\"#42566a\")\n        }\n        else if(index === 1){\n          setbgColor(\"#5f7b97\")\n        }\n        else if(index === 2){\n          setbgColor(\"#5f7b97\")\n        }\n        else if(index === 3){\n          setbgColor(\"#5f7b97\")\n        }\n      }\n      const myStyle1 = {\n        margin: \"10px auto\",\n        fontSize : \"14px\"\n      };\n      const myStyle2 = {\n     margin: \"10px auto\",\n     \n     color : \"#42566a\",\n     fontWeight : 1000\n      };\n    \n     \nreturn(\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n  <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n                    <TabList\n                      className=\"fixedTab\"\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n                           View Invoice\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n                          Create Invoice\n                        </Tab>\n                        \n                    </TabList>\n\n                    <TabPanel>\n                    <Generated />\n                    </TabPanel>\n                    <TabPanel>\n                    <Invoice />\n                      \n                    </TabPanel>\n                    \n                </Tabs>\n                </Layout>\n)\n}\nexport default InvoiceTab;","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paydetails.js",["4077","4078","4079","4080","4081","4082","4083","4084","4085","4086","4087","4088","4089","4090","4091","4092","4093","4094","4095","4096","4097","4098","4099","4100","4101","4102","4103"],"/home/pooja/MazarsRepo/src/pages/TL/Recording/Recording.js",["4104","4105","4106","4107"],"/home/pooja/MazarsRepo/src/pages/TL/MeetingComponent/MeetingComponent.js",["4108","4109","4110","4111"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const tlEmail = window.localStorage.getItem(\"tlkey\");\n\n  return (\n   \n      <Meeting id={props.match.params.id} \n      tlEmail = {tlEmail}/>\n \n  );\n}\n\nexport default MeetingComponent;","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Schedule.js",["4112","4113","4114","4115","4116","4117","4118","4119","4120","4121","4122","4123","4124","4125","4126"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Recording from \"../Recording/Recording\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\nimport \"../../Admin/AdminStyle/style.css\";\nfunction Schedule() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n      backgroundColor: \"grey\",\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n    const myStyle2 = {\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      backgroundColor: \"blue\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n  \n    return (\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n     <Demo />\n    </Layout>\n    );\n}\n\nexport default Schedule;","/home/pooja/MazarsRepo/src/pages/TL/Message/Message.js",["4127","4128","4129","4130","4131","4132","4133","4134","4135"],"/home/pooja/MazarsRepo/src/pages/TL/Chatting/Chatting.js",["4136","4137","4138","4139","4140","4141","4142","4143","4144","4145"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\n\nconst Schema = yup.object().shape({\n  msg_type: yup.string().required(\"\"),\n  p_message: yup.string().required(\"\"),\n});\n\n\n\nfunction Chatting(props) {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const { message_type, query_id, query_No, routes } = data\nconst [showTl, setShowTl] = useState(false)\nconst token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n  useEffect(() => {\n   \n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataTL\");\n\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, []);\n\n  useEffect(() => {\n    checkAssigned();\n  }, [item]);\n\n  const checkAssigned = () => {\n    if(query_No === undefined){\n\n    }\n    else{\n      axios\n    .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${query_No}`, myConfig).then((res) => {\n           if(res.data.code === 0){\n                setShowTl(false)\n           }\n           else{\n             setShowTl(true)\n           }\n         })\n    }\n  };\n\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.msg_type);\n    formData.append(\"message\", value.p_message);\n\n    {\n      value.p_to != undefined ?\n    \n    formData.append(\"to\", value.p_to)\n  : formData.append(\"to\", \"customer\") }\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/messageSent`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          reset();\n          setLoading(false)\n          var variable = \"Message sent successfully.\"\n          Alerts.SuccessNormal(variable)\n          props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n          <Col md=\"4\">\n            <Link\n                  to={{\n                    pathname: `/teamleader/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"customBtn ml-3\">Go Back</button>\n                </Link>\n              \n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={query_No}\n                          disabled\n                        />\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message Type</label>\n                        {\n                          item &&\n                          <select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.msg_type,\n                            })}\n                            name=\"msg_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            defaultValue={item}\n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n                        }\n                        {errors.msg_type && (\n                          <div className=\"invalid-feedback\">\n                            {errors.msg_type.message}\n                          </div>\n                        )}\n\n                      </div>\n                      {showTl === true ?\n                      <div class=\"form-group\">\n                        <label>To<span className=\"declined\">*</span></label>\n                        <select\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_to,\n                          })}\n                          name=\"p_to\"\n                          ref={register}\n                          style={{ height: \"33px\" }}\n                        >\n                          <option value=\"\">--select--</option>\n                          <option value=\"customer\">Client</option>\n                        \n                          <>\n                          <option value=\"tp\">Tax Professional</option>\n                          <option value=\"both\">Both</option> \n                          </>\n                        </select>\n                        {errors.p_to && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_to.message}\n                          </div>\n                        )}\n                      </div>\n: \n<div class=\"form-group\">\n\n<input \ntype=\"text\"\n  className={classNames(\"form-control\", {\n    \"is-invalid\": errors.p_to,\n  })}\n  disabled\n  hidden\n  value=\"customer\"\n  name=\"pcustomer_to\"\n  ref={register}\n  style={{ height: \"33px\" }}/>\n  \n\n</div> }\n                      <div class=\"form-group\">\n                        <label>Message<span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          placeholder=\"Message text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_message\"\n                        ></textarea>\n                        {errors.p_message && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_message.message}\n                          </div>\n                        )}\n                      </div>\n                      <button type=\"submit\" className=\"customBtn\">\n                        Send\n                      </button>\n                    </div>\n                  </div>\n                </form>\n                <Mandatory />\n              </>\n          }\n        </CardBody>\n\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Chatting;\n","/home/pooja/MazarsRepo/src/pages/TL/ViewNotification/ViewNotification.js",["4146","4147","4148","4149","4150"],"/home/pooja/MazarsRepo/src/pages/TL/Report/Report.js",["4151","4152","4153","4154","4155","4156","4157","4158","4159","4160","4161","4162","4163","4164","4165","4166","4167","4168","4169","4170","4171","4172","4173","4174","4175","4176","4177","4178","4179","4180","4181","4182","4183","4184","4185","4186","4187","4188","4189"],"/home/pooja/MazarsRepo/src/pages/TL/NewPassword/NewPassword.js",["4190","4191","4192","4193","4194","4195"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\n\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    getTime()\n  }, []);\n\n\n  const getTime = () => {\n    var timerOn = true;\n    function timer(remaining) {\n      var s = remaining % 60;\n      s = s < 10 ? '0' + s : s;\n      setTime(remaining)\n      remaining -= 1;\n      if (remaining >= 0 && timerOn) {\n        setTimeout(function () {\n          timer(remaining);\n        }, 1000);\n        return;\n      }\n      setDisabled(true)\n    }\n    timer(180);\n  }\n\n\n  const onSubmit = (value) => {\n\n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_code);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/teamleader/login\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Please enter correct details\")\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address.\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    autocomplete=\"off\"\n                    ref={register({ required: true })}\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                </div>\n              </div>\n            </div>\n\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"customBtn\">\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id} setDisabled={setDisabled} getTime={getTime} setLoading={setLoading} />\n              :\n              null\n          }\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n  \n    </>\n  )\n}\n\nexport default NewPassword;\n\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/teamleader/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"customBtn\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}","/home/pooja/MazarsRepo/src/pages/TL/ForgetPassword/ForgetPassword.js",["4196","4197","4198","4199"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Link } from \"react-router-dom\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\n\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n});\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n          props.history.push(`/teamleader/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n          Alerts.ErrorNormal(\"Please enter correct email address.\")\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"null\") {\n     \n    } else {\n      return item\n    }\n\n  }\n\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n          {\n            loading ?\n              <div class=\"col-md-12\">\n                <Spinner color=\"primary\" />\n              </div>\n              :\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    defaultValue={valueHandler()}\n\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"autoWidthBtn\">\n                  Get OTP\n                </button>\n                <Link to=\"/teamleader/login\" style={{ \"margin\": \"10px\" }}>\n                  <button type=\"submit\" className=\"customBtn\">\n                    Cancel\n                  </button>\n                </Link>\n\n                <Mandatory />\n              </form>\n          }\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/home/pooja/MazarsRepo/src/pages/TL/ViewReport/ViewReport.js",["4200","4201","4202","4203","4204","4205"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nfunction ViewReport() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { id } = useParams();\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const token = window.localStorage.getItem(\"tlToken\")\n\n  useEffect(() => {\n    getReport();\n  }, []);\n\n  const getReport = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      headers : {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          setData(response.data.result);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>ViewReport</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <div class=\"my-3\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"row\">S.No</th>\n                  <th scope=\"row\">Report</th>\n                </tr>\n              </thead>\n              {data.length > 0\n                ? data.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>\n                        {p.document && (\n                          <p style={{ display: \"flex\" }}>\n                            <a\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\n                              target=\"_blank\"\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))\n                : null}\n            </table>\n          </div>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentForm/AssignmentForm.js",["4206","4207","4208","4209","4210","4211","4212","4213","4214","4215","4216","4217"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl,ReportUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\n\nfunction AssignmentForm(props) {\n\n\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset, setValue } = useForm();\n  const history = useHistory();\n  const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [assignNo, setAssignNo] = useState(null);\n  const [data, setData] = useState([]);\n  const [store, setStore] = useState(null);\n  const [item, setItem] = useState(null);\n  const token = window.localStorage.getItem(\"tlToken\")\n  const myConfig = {\n    headers : {\n     \"uit\" : token\n    }\n  }\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}`, myConfig)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setAssignNo(res.data.result[0].assign_no);\n        }\n      });\n  };\n\n  useEffect(() => {\n    getDetails();\n  }, [assignNo]);\n\n  const getDetails = (value) => {\n  \n    let formData = new FormData();\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", \"client_discussion\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      headers: {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  const onSubmit = (value) => {\n   \n    let formData = new FormData();\n    formData.append(\"assign_id\", id);\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", \"client_discussion\");\n    formData.append(\"notes\", value.p_notes);\n    formData.append(\"receive_sent_date\", value.p_date);\n    formData.append(\"notes_type\", value.p_type);\n    formData.append(\"type_info\", value.p_info);\n    formData.append(\"upload\", value.p_upload[0]);\n    formData.append(\"send_received\", item);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/addAssignmentStages`,\n      headers: {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          alert.success(<Msg />);\n          getDetails();\n          reset();\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>success</p>\n      </>\n    );\n  };\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Client Discussion Information</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          {props.location.clients == \"completed\" ? (\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Titles</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"2\"\n                        name=\"p_notes\"\n                        ref={register}\n                        disabled\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Date</label>\n                      <input\n                        type=\"date\"\n                        name=\"p_date\"\n                        className=\"form-control\"\n                        ref={register}\n                        disabled\n                      />\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Upload Documents</label>\n                      <input\n                        type=\"file\"\n                        name=\"p_upload\"\n                        ref={register}\n                        className=\"form-control-file\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Send/Received</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setItem(e.target.value)}\n                        disabled\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"send\">Send</option>\n                        <option value=\"received\">Received</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Notes Type</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setStore(e.target.value)}\n                        disabled\n                      >\n                        <option value=\"\">--select type--</option>\n                        <option value=\"email\">Email</option>\n                        <option value=\"phone\">Phone</option>\n                        <option value=\"other\">Other</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-2\">\n                    <div class=\"form-group\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block\"\n                        disabled\n                      >\n                        submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          ) : (\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Titles</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"2\"\n                        name=\"p_notes\"\n                        ref={register}\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Date</label>\n                      <input\n                        type=\"date\"\n                        name=\"p_date\"\n                        className=\"form-control\"\n                        ref={register}\n                      />\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Upload Documents</label>\n                      <input\n                        type=\"file\"\n                        name=\"p_upload\"\n                        ref={register}\n                        className=\"form-control-file\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Send/Received</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setItem(e.target.value)}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"send\">Send</option>\n                        <option value=\"received\">Received</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Notes Type</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--select type--</option>\n                        <option value=\"email\">Email</option>\n                        <option value=\"phone\">Phone</option>\n                        <option value=\"other\">Other</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  {store == \"email\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  {store == \"phone\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Phone</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n                  {store == \"other\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Notes info</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-2\">\n                    <div class=\"form-group\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block\"\n                      >\n                        submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          )}\n        </CardHeader>\n\n        <CardBody>\n          <CardHeader>\n            <Row>\n              <Col md=\"4\">\n                <h4>List</h4>\n              </Col>\n            </Row>\n          </CardHeader>\n          <div class=\"my-3\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"row\">S.No</th>\n                  <th scope=\"row\">Documents</th>\n                  <th scope=\"row\">Titles</th>\n                  <th scope=\"row\">Notes type</th>\n                  <th scope=\"row\">Notes Info</th>\n                  <th scope=\"row\">Date</th>\n                  <th scope=\"row\">send/Received</th>\n                </tr>\n              </thead>\n              {data.length > 0\n                ? data.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>\n                        {p.document && (\n                          <p style={{ display: \"flex\" }}>\n\n                            <a\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\n                              target=\"_blank\"\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </p>\n                        )}\n                      </td>\n                      <td>{p.notes}</td>\n                      <td>{p.notes_type}</td>\n                      <td>{p.type_info}</td>\n                      <td>{p.receive_sent_date}</td>\n                      <td>{p.send_received}</td>\n                    </tr>\n                  </tbody>\n                ))\n                : null}\n            </table>\n          </div>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentForm;\n","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/FinalReportUpload.js",["4218","4219","4220","4221","4222","4223"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction DraftReport({ des, loading, setLoading, fianlModal, uploadFinalReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n\n\n  const onSubmit = (value) => {\n    des = false;\n    setLoading(true)\n\n    let formData = new FormData();\n\n    var uploadImg = value.p_final;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"final_report[]\", file);\n      }\n    }\n\n\n    formData.append(\"id\", id.id);\n    formData.append(\"q_id\", id.q_id);\n    axios\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          uit : token\n        },\n      })\n      .then((response) => {\n      \n        if (response.data.code === 1  && des === false) {\n          setLoading(false)\n\n          var message = response.data.message\n          if (message.invalid) {\n            Swal.fire({\n              title: 'Error !',\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\n            })\n          } else if (message.faill && message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n              icon: 'success',\n            })\n          } else if (message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p>${message.success}</p>`,\n              icon: 'success',\n            })\n          }\n          else if (message.faill) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\n              icon: 'success',\n            })\n          }\n          getAssignmentList();\n          uploadFinalReport();\n          \n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_final\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"customBtn\">\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n // formData.append(\"final_report\", value.p_final[0]);","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportUpload.js",["4224","4225","4226","4227","4228","4229"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\n\n\nfunction DraftReport({ loading, setLoading, draftModal, uploadDraftReport, id, getAssignmentList , des}) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n  \n\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n\n\n  const onSubmit = (value) => {\n    des = false;\n    setLoading(true)\n\n    let formData = new FormData();\n    var uploadImg = value.p_draft;\n   \n\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"draft_report[]\", file);\n      }\n    }\n\n    formData.append(\"id\", id);\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n      headers: {\n        'content-type': 'multipart/form-data',\n        uit: token\n      }\n    }).then(response => {\n    \n      if (response.data.code === 1 && des === false) {\n        des = true\n        setLoading(false)\n        var message = response.data.message\n        if (message.invalid) {\n          Swal.fire({\n            title: 'Error !',\n            html: `<p class=\"text-danger\">${message.invalid}</p>`,\n          })\n        } else if (message.faill && message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n            icon: 'success',\n          })\n        } else if (message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p>${message.success}</p>`,\n            icon: 'success',\n          })\n        }\n        else if (message.faill) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p>`,\n            icon: 'success',\n          })\n        }\n        getAssignmentList();\n        uploadDraftReport();\n      } else if (response.data.code === 0) {\n        setLoading(false)\n      }\n\n    });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_draft\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    className=\"customBtn\"\n                  >\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/ViewAllReport.js",["4230","4231","4232","4233","4234","4235","4236","4237","4238","4239","4240","4241","4242","4243","4244"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport * as yup from \"yup\";\nimport CommonServices from \"../../../common/common\";\nimport RejectedModal from \"./RejectModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport Swal from \"sweetalert2\";\nimport DiscardReport from \"./DiscardReport\";\nimport {Typography} from \"@material-ui/core\";\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  dataItem,\n  headColor\n}) {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const [data, setData] = useState([]);\n  const [docData, setDocData] = useState({});\n\n\n  const [nestedModal, setNestedModal] = useState(false);\n  const toggleNested = (key) => {\n    setNestedModal(!nestedModal);\n    setDocData(key)\n  }\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    // setDocData(report)\n  }\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n\n\n\n  //check\n  const toggleDiscard = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to discard ?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, discard it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  const deleteCliente = (id) => {\n    \n    let formData = new FormData();\n    formData.append(\"tp_id\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"type\", 2);\n    formData.append(\"docid\", id.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      headers: {\n        uit : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          getData()\n          Alerts.SuccessNormal(\"Discarded Successfully\")\n          ViewReport()\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  useEffect(() => {\n    getData();\n  }, [report]);\n\n  const getData = () => {\n   if(report === undefined){\n\n   }\n   else {\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      headers: {\n        uit  : token\n      },\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n       \n      });\n   }\n  }\n  const downloadpdf = (qid, name) => {\n    let userId, token;\n  \n    userId = window.localStorage.getItem(\"tpkey\");\n    token = window.localStorage.getItem(\"tptoken\")\n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/tl/viewreportdocument?assign_no=${report}&id=${qid}` , myConfig2)\n    .then((res) => {\n     \n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           console.log(res.headers)\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    \n    })\n   }\n   const downloadpdfclient = (qid, name) => {\n    let userId, token;\n  \n    userId = window.localStorage.getItem(\"tpkey\");\n    token = window.localStorage.getItem(\"tptoken\")\n    const myConfig2 = {\n      headers : {\n       \"uit\" : token\n      },\n      responseType: 'blob'\n    }\n    axios.get(`${baseUrl}/tl/viewreportdocument?assign_no=${report}&id=${qid}&document=2` , myConfig2)\n    .then((res) => {\n     \n      if(res.status === 200){\n        window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           console.log(res.headers)\n           a.style = \"display: none\";\n           a.href = url;\n           a.download = name;\n           a.target = '_blank';\n           a.click();\n      }\n    })\n   }\n  return (\n    <div>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewReport}>\n            <Typography variant=\"h6\">\n           View All Report \n           </Typography>\n           <button class=\"autoWidthBtn\" onClick={() => ViewDiscussionToggel()}>\n                View Discussion\n              </button>\n        </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th style={{border: `1px solid ${headColor}`,  color: \"#000\", backgroundColor: `${headColor}`}}>S.No</th>\n                <th style={{border: `1px solid ${headColor}`, color: \"#000\", backgroundColor: `${headColor}` , width: \"120px\"}}>Date</th>\n                <th style={{border: `1px solid ${headColor}`, color: \"#000\", backgroundColor: `${headColor}`}}>Document</th>\n                <th style={{border: `1px solid ${headColor}`, color: \"#000\", backgroundColor: `${headColor}` , width: \"150px\"}}>Report Type</th>\n                <th style={{border: `1px solid ${headColor}`, color: \"#000\", backgroundColor: `${headColor}` , width: \"100px\"}}>Action</th>\n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                    <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                           <span onClick={() => downloadpdf(p.docid, p.document)} style={{display: \"flex\", cursor : \"pointer\"}}>\n                     <i className=\"fa fa-photo\"></i>\n                     \n                       \n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </span>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                     \n                     <span onClick={() => downloadpdfclient(p.docid, p.customer_files)} style={{display: \"flex\", cursor : \"pointer\"}}>\n                     <i className=\"fa fa-photo\"></i>\n                      \n                        &nbsp; &nbsp; &nbsp;{p.customer_files}\n                        </span>\n                    </tr> }\n                    </td>\n                  \n                    <td>\n                     <p> {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\n                 <br></br> \n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> } </td>\n                 <td>\n                  {p.stages_type === \"2\" ?\n                  <>\n                   {p.status === \"3\" ? \n                   <p className=\"declined\"> Discarded</p> : \n                   null}\n                   {\n                     p.status === \"1\" ?\n                     <div style={{ cursor: \"pointer\" }} title=\"Client Accepted\">\n                     <i\n                       class=\"fa fa-check\"\n                       style={{\n                         color: \"blue\",\n                         fontSize: \"16px\",\n                         marginLeft: \"10px\"\n                       }}\n                     ></i>\n                   </div> : null\n                   }\n                   {p.status === \"0\" || p.status === \"2\" ?\n                   <>\n                   {p.tlstatus === \"0\" ?\n                   <p className=\"declined\">Pending</p> :\n                   <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                    <div title=\"Discussion\">\n                      <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"green\"\n                        }}\n                      onClick = {() => toggleNested(p)}\n                      ></i>\n                    </div>\n                    <div title=\"Discard\">\n                      <i\n                        class=\"fa fa-times\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                          color: \"red\"\n                        }}\n                       onClick={() => toggleDiscard(p)}\n                      ></i>\n                    </div>\n                  </div>}\n                   </> : null}</> : null}\n                 </td>   \n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <RejectedModal\n        toggleNested={toggleNested}\n        nestedModal={nestedModal}\n        dataItem={dataItem}\n        docData={docData}\n        getData={getData}\n      />\n\n\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        getData={getData} \n        headColor ={headColor}\n      />\n\n    </div>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/components/Search-Filter/tpfilter.js",["4245","4246","4247","4248","4249","4250","4251","4252","4253","4254","4255","4256","4257","4258","4259","4260","4261","4262","4263"],"\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction TaxProfessionalFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    records,\n    setRecords,\n    setData,\n    getData,\n    AllQuery,\n    pendingForAcceptence,\n    InprogressQuery,\n    DeclinedQuery,\n\n    completeAssignment,\n    proposal,\n    AllProposal,\n    InprogressProposal,\n    assignment,\n    AllPayment,\n    Unpaid,\n    Paid\n  } = props;\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [status1, setStatus1] = useState(1);\n\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n  const [item] = useState(current_date);\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    const getSubCategory = () => {\n      if(selectedData.length > 0){\n        axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n      }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n  \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n  \n    setSelectedData([]);\n    setStore2([]);\n    setTax2([])\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    setStatus1(1)\n    setTax2([])\n    getData();\n  };\n\n  const onSubmit = (data) => {\n  \n    if (AllQuery == \"AllQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n          , myConfig\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              console.log(\"done\")\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n\n    if (pendingForAcceptence == \"pendingForAcceptence\") {\n      axios\n        .get(\n          `${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n    if (InprogressQuery == \"InprogressQuery\") {\n\n  \n      axios\n        .get(\n          `${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=${status1}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (DeclinedQuery == \"DeclinedQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (completeAssignment == \"completeAssignment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getCompleteQues?tp_id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n    if (AllProposal == \"AllProposal\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (InprogressProposal == \"InprogressProposal\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if(proposal == \"proposal\"){\n      axios\n      .get(\n        `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&status=2&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setData(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n    }\n    if (AllPayment == \"AllPayment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (Unpaid == \"Unpaid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?&tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (Paid == \"Paid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          className=\"customBtn mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-inline\">\n                <div className=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={(e) => handleSubCategory(e)}\n                    value={store2}\n                    allowClear\n                  >\n                   {\n                     tax2.length > 0 ?\n                     <>\n                      {tax2?.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                     </> : \"\"\n                   }\n                  </Select>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    className=\"btnSearch mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    max={item}\n                  />\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    defaultValue={item}\n                    max={item}\n                  />\n                </div>\n\n                <div className=\"form-group mx-sm-1  mb-2\">\n\n                  {AllQuery == \"AllQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress; Queries</option>\n                      <option value=\"2\">Completed; Queries</option>\n                      <option value=\"3\">Declined; Queries</option>\n                    </select>\n                  )}\n\n                  {InprogressQuery == \"InprogressQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                      onChange={(e) => setStatus1(e.target.value)}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Allocation</option>\n                      <option value=\"5\">Inprogress; Proposals</option>\n                      <option value=\"6\">Inprogress; Assignments</option>\n                    </select>\n                  )}\n\n\n                  {DeclinedQuery == \"DeclinedQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"3\">Client Declined; Proposals</option>\n                      <option value=\"4\">Client Declined; Payment</option>\n                    </select>\n                  )}\n\n                  {AllProposal == \"AllProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress; Proposals</option>\n                      <option value=\"2\">Accepted; Proposals</option>\n                      <option value=\"3\">Client Declined; Proposals</option>\n                    </select>\n                  )}\n\n                  {InprogressProposal == \"InprogressProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Preparation</option>\n                      <option value=\"5\">Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {AllPayment == \"AllPayment\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Unpaid</option>\n                      <option value=\"2\">Paid</option>\n                      <option value=\"3\">Declined</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"customBtn mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n                <div className=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TaxProfessionalFilter;\n\n","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DiscardReport.js",["4264","4265","4266","4267","4268","4269","4270"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CommonServices from \"../../../common/common\";\nimport Alerts from \"../../../common/Alerts\";\n\n\nfunction DiscardReport({\n  ViewDiscussion,\n  ViewDiscussionToggel,\n  report,\n  getData,\n  headColor\n}) {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const [data, setData] = useState([]);\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  useEffect(() => {\n    getHistory();\n  }, [report]);\n  // mazarapi/v1/tl/getMessage?id=128&q_no=Q-24-72\n\n  const getHistory = () => {\n   if(report != undefined && report.length > 0){\n    axios.get(`${baseUrl}/tp/getMessage?id=${JSON.parse(userId)}&q_no=${report}`, myConfig).then((res) => {\n    \n      if (res.data.code === 1) {\n        setData(res.data.result);\n      }\n    });\n   }\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={ViewDiscussion} toggle={ViewDiscussionToggel} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewDiscussionToggel}>Discussion History </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr style={{backgroundColor: `${headColor}`,  color: \"#fff\"}}>\n                <th style={{border: `1px solid ${headColor}`}}>S.No</th>\n                <th style={{border: `1px solid ${headColor}`}}>Date</th>\n                <th style={{border: `1px solid ${headColor}`}}>Name</th>\n                <th style={{border: `1px solid ${headColor}`}}>Message</th>\n              </tr>\n            </thead>\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr className={p.type == \"sent\" ? \"send\" : \"received\"}>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.setdate)}</td>\n                    <td>{p.sender}</td>\n                    <td style={{width : \"460px\", overflow : \"wrap\"}}>\n                      {\n                        p.type == \"sent\" ?\n                          <i class=\"fa fa-mail-forward\" style={{ color: \"red\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                          :\n                          <i class=\"fa fa-mail-reply\" style={{ color: \"green\", marginLeft: \"10px\", marginRight: \"10px\" }}></i>\n                      }\n                      {p.message}\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <div>\n            <button className =\"customBtn\" onClick={ViewDiscussionToggel}>Cancel</button>\n          </div>\n        </ModalFooter>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default DiscardReport;\n\n","/home/pooja/MazarsRepo/src/views/ModalManual/RegistrationInfo.js",["4271","4272","4273"],"import React from 'react';\nimport {Paper, Box, Container, Typography, Button, Card, CardActionArea, CardHeader, CardMedia, CardContent, CardActions }from \"@mui/material\";\nimport style from \"./manula.module.css\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport regImg from \"../ManualImg/registrationImage.png\";\nconst useStyle = makeStyles(theme => ({\n    root : {\n        backgroundColor : \"green\", \n        color : \"white\",\n        margin : \"10px 0px\",\n        outline : \"none\",\n        '&:hover': {\n            backgroundColor : \"green\",\n            color : \"white\",\n            outline : \"none\"\n        },\n        '&:focus': {\n            backgroundColor : \"green\",\n            color : \"white\",\n            outline : \"none\"\n        }\n    },\n    root2: {\n        backgroundColor: \"blue\",\n        color: \"white\",\n        margin: \"10px 0px\",\n        outline: \"none\",\n        '&:hover': {\n            backgroundColor: \"blue\",\n            color: \"white\",\n            outline: \"none\"\n        },\n        '&:focus': {\n            backgroundColor: \"blue\",\n            color: \"white\",\n            outline: \"none\"\n        }\n    },\n}))\nconst RegistrationInfo = () => {\n    const classes = useStyle() \n    return (\n        <>\n         <Box id=\"signUp2\">\n         <Paper>\n           <Card>\n               \n                \n<CardActions>\n    <Container>\n    <ul className={style.registrationTable}>\n   <div>\n   <li>\n       <Typography variant=\"body2\">\n       After filling the above information, click on the <Button variant=\"contained\" className={classes.root}>Send Otp</Button> icon.\n           </Typography>\n           </li>\n    <li>\n        <Typography variant='body2'>\n        An OTP will be sent to the above provided email address, valid for 180 seconds.\n            </Typography> </li>\n    <li> \n        <Typography variant='body2'>\n        On entering the OTP, click on <Button variant=\"contained\" className={classes.root}>Submit</Button>  icon to complete the registration\n        </Typography>\n    </li>\n   </div>\n</ul>\n    </Container>\n    </CardActions>\n    <CardMedia component=\"img\" src={regImg}/>\n\n            </Card>\n           </Paper>\n           <Typography variant=\"h6\" align=\"right\">\n                       03\n                   </Typography>\n         </Box>\n        </>\n    )\n}\nexport default RegistrationInfo;","/home/pooja/MazarsRepo/src/views/ModalManual/RegError.js",["4274","4275"],"import React from 'react';\nimport {Box, Container, Typography, Button, Card, CardActionArea, CardHeader, CardMedia, CardContent, CardActions } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport style from  './manula.module.css';\nimport errorImg from \"../ManualImg/errorMsg.png\";\nimport loginImage from '../ManualImg/Login22.png';\nimport loginError from '../ManualImg/loginError.png';\nimport freshLogin from '../ManualImg/freshLogin.png';\nimport forgetImg from '../ManualImg/forget.png';\nimport forgetotpImg from '../ManualImg/forgetOtpImg.png';\nimport forgetFreshImg from '../ManualImg/forgetFresh.png';\nimport successLoginImg from '../ManualImg/successLoginImg.png';    \nimport errorLoginImg from '../ManualImg/errorLoginImg.png';\nimport errorLoginImg2 from '../ManualImg/errorLoginImg2.png';\nconst useStyle = makeStyles(theme => ({\n    root : {\n        backgroundColor : \"green\", \n        color : \"white\",\n        margin : \"10px 0px\",\n        outline : \"none\",\n        '&:hover': {\n            backgroundColor : \"green\",\n            color : \"white\",\n            outline : \"none\"\n        },\n        '&:focus': {\n            backgroundColor : \"green\",\n            color : \"white\",\n            outline : \"none\"\n        }\n    },\n    root2 : {\n        backgroundColor : \"blue\", \n        color : \"white\",\n        margin : \"10px 0px\",\n        outline : \"none\",\n        '&:hover': {\n            backgroundColor : \"blue\",\n            color : \"white\",\n            outline : \"none\"\n        },\n        '&:focus': {\n            backgroundColor : \"blue\",\n            color : \"white\",\n            outline : \"none\"\n        }\n    },\n   \n}))\nconst RegError = () => {\n    const classes = useStyle()\nreturn (\n   <>\n   <Box>\n       <Container maxWidth= \"xl\">\n           <Card>\n               <CardContent>\n                   <CardMedia  src={errorImg} component=\"img\"/>\n                   \n<Typography variant='h5' variantMapping={{\n    h5 : 'span'\n}} id=\"existing\">\nFor Existing Client: Login with your registered Email id & Password. \n    </Typography>\n    <ul className={style.registrationTable}>\n  \n   <li>\n       <Typography variant=\"body2\" color=\"primary\">\n       \tEnter your registered email id and password, under “For existing client” and click on \n           <Button variant=\"contained\" className={classes.root}>Send Otp</Button>     </Typography>\n           </li>\n    <li>\n        <Typography variant='body2' color=\"primary\">\n         The OTP will be sent to your registered email id, valid for 180 Seconds\n            </Typography> </li>\n    <li> \n        <Typography variant='body2' color=\"primary\">\n        Enter the OTP so received and click on <Button variant=\"contained\" className={classes.root}>Login</Button>   \n        </Typography>\n    </li>\n    <li> \n        <Typography variant='body2' color=\"primary\">\n        Upon login, ‘Login successfully’ message will be displayed.\n        </Typography>\n    </li>\n    <li> \n        <Typography variant='body2' color=\"primary\">\n        In case incorrect OTP has been entered, error message window of “Incorrect OTP” will appear.\n\n        </Typography>\n    </li>\n \n</ul>\n<CardMedia src={loginImage} component=\"img\" />\n<Typography variant=\"body1\">\nAfter clicking <Button variant=\"contained\" className={classes.root}>Send Otp</Button> on Success message will appear. Click ok and enter the OTP received on your \n<Button variant=\"contained\" className={classes.root}>Send Otp</Button> email id & click on \n\n</Typography>\n<Typography variant=\"body1\">\nIf the OTP entered is incorrect then Error message window will appear showing “Incorrect OTP”\n</Typography>\n\n               </CardContent>\n           </Card>\n       </Container>\n       <Typography variant=\"h6\" align=\"center\">\n                       05\n                   </Typography>\n   </Box>\n <Box>\n     <Container maxWidth= \"xl\">\n         <Card>\n         <CardMedia component=\"img\" src={loginError} />\n             <CardHeader title={\n                <Typography variant=\"h5\" id=\"forgetPassword\">\nForgot Password: If the client forgets the Password, then click on “Forgot Password” under “For existing client”\n</Typography>\n             }/>\n             <CardContent>\n                 <CardMedia component=\"img\" src={freshLogin}/>\n\n             </CardContent>\n         </Card>\n     </Container>\n     <Typography variant=\"h6\" align=\"center\">\n                       06\n                   </Typography>\n     </Box>\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <Typography variant=\"body1\">\nForgot Password: Enter your email id and click on <Button variant=\"contained\" className={classes.root2}>Get OTP</Button>\n</Typography>\n<CardMedia src={forgetImg} component=\"img\" />\n<Typography variant=\"body1\">\nForgot Password: After clicking on  <Button variant=\"contained\" className={classes.root2}> Get OTP</Button>, success message window will appear & then click on OK.\n</Typography>\n<CardMedia src={forgetotpImg} component=\"img\" />\n\n<Typography variant=\"body1\">\nForgot Password: Enter new password that should be minimum of eight characters, including at least \none upper case, lower case, special character and number along with the OTP\n received on the email id & click on Submit.\n</Typography>\n\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align=\"center\">\n                       07\n                   </Typography>\n    </Box>\n\n\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardMedia src={forgetFreshImg} component=\"img\" />\n            <CardContent>\n            <Typography variant=\"body1\">\nPassword Forgot: After clicking on <Button className={classes.root2}> Submit </Button> Success message window will appear, showing password reset \nsuccessfully. Now login with the new password.\n</Typography>\n<CardMedia src={successLoginImg} component=\"img\" />\n\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align=\"center\">\n                       08\n                   </Typography>\n    </Box>\n\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <Typography variant=\"body1\">\nIncorrect Email Id: At the login page, if the email id entered is incorrect then Error message window will appear showing “Please register before sign-in”.\n Click Ok & login with the correct credentials.\n</Typography>\n<CardMedia src={errorLoginImg} component=\"img\" />\n<Typography variant=\"body1\">\nIncorrect password: At the login page, if the password entered is incorrect then Error message window will appear showing “Incorrect email or password”. \nClick Ok & login with the correct credentials.\n</Typography>\n<CardMedia src={errorLoginImg2} component=\"img\" />\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align=\"center\">\n                       09\n                   </Typography>\n    </Box>\n\n\n\n\n\n\n\n  \n   </>\n)\n}\nexport default RegError;","/home/pooja/MazarsRepo/src/views/AssignmentTab/Assignmodal.js",[],"/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/AllPayment.js",["4276","4277","4278","4279","4280","4281","4282","4283","4284","4285","4286","4287","4288","4289","4290","4291","4292","4293","4294"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from 'moment';\nimport MessageIcon, {PaymentDecline, Payment, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\n\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    // End UseSatate \n    // Global Veriable\n    var rowStyle2 = {}\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n   \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}`, myConfig).then((res) => {\n          \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n      \n        setModal(!modal);\n\n       if(typeof(key) == \"object\"){\n\n       }\n       else{\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n               \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n       }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n  \n    return style;\n  }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n           \n            headerStyle: () => {\n                return { width: \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n           \n           \n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n           \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            \n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            \n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n           \n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p style={{color : \"red\"}}>{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n          \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n          \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n         \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n        \n            formatter: function (cell, row) {\n                return (\n                    <>\n                    <div style={{display: \"flex\"}}>\n\n<Link\n                             to={{\n                                pathname: `/taxprofessional/chatting/${row.id}`,\n                                index: 0,\n                                routes: \"paymentstatus\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/taxprofessional/paymentstatus`\n                              }\n                          }}\n                      >\n                          <MessageIcon />\n                      </Link>\n<div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                          <Link\n              to={{\n                  pathname: `/taxprofessional/paydetails/${row.assign_id}`,\n                  index : 0,\n                  routes: \"paymentstatus\",\n              }}\n            >\n                          <Payment />\n                            </Link>\n\n                         \n                       \n                   </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        AllPayment=\"AllPayment\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n                   bgColor=\"#2b5f55\"\n                   keyField= {\"assign_no\"}\n                   rowStyle2 = {rowStyle2}\n                   data={payment}\n                   columns={columns}>\n                    </DataTablepopulated>  <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                        headColor=\"#2b5f55\"\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Unpaid.js",["4295","4296","4297","4298","4299","4300","4301","4302","4303","4304","4305","4306","4307","4308","4309","4310","4311","4312","4313"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {PaymentDecline, Payment, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\n\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n\n   \n    var rowStyle2 = {}\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&status=1`, myConfig).then((res) => {\n           \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    const toggle = (key) => {\n      \n        setModal(!modal);\n\n       if(typeof(key) == \"object\"){\n\n       }\n       else{\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n               \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n       }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n  \n    return style;\n  }\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n           \n            headerStyle: () => {\n                return { width: \"50px\"};\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n           \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                 \n                 <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n           \n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n           \n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            \n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p style={{color : \"red\"}}>{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.accepted_amount;\n               \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n          \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.paid_amount;\n               \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n          \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.amount_outstanding;\n               \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },     {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n        \n            formatter: function (cell, row) {\n                return (\n                    <>\n                    <div style={{display: \"flex\"}}>\n\n<Link\n                             to={{\n                                pathname: `/taxprofessional/chatting/${row.id}`,\n                                index: 1,\n                                routes: \"paymentstatus\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/taxprofessional/paymentstatus`\n                              }\n                          }}\n                      >\n                          <MessageIcon />\n                      </Link>\n<div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                          <Link\n              to={{\n                  pathname: `/taxprofessional/paydetails/${row.assign_id}`,\n                  index : 1,\n                  routes: \"paymentstatus\",\n              }}\n            >\n                          <Payment />\n                            </Link>\n\n                         \n                       \n                   </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n    return (\n        <>\n            <Card>\n\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Unpaid=\"Unpaid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n                                  bgColor=\"#3e8678\"\n                   keyField= {\"assign_no\"}\n                   rowStyle2 = {rowStyle2}\n                   data={payment}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n<DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                        bgColor=\"#3e8678\"\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paid.js",["4314","4315","4316","4317","4318","4319","4320","4321","4322","4323","4324","4325","4326","4327","4328","4329","4330"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {PaymentDecline, Payment, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\nimport moment from \"moment\";\n\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n\n    const [assignNo, setAssignNo] = useState(\"\");\n\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const rejectHandler = (key) => {\n   \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&status=2`, myConfig).then((res) => {\n          \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n     \n        setModal(!modal);\n\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n              \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n    };\n\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n         \n            headerStyle: () => {\n                return { width: \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n           \n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                   \n\n                   <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                index : 2,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n           \n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n         \n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"status\",\n           \n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n          \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.accepted_amount;\n\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.paid_amount;\n\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n           \n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.amount_outstanding;\n\n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n        \n            formatter: function (cell, row) {\n                return (\n                    <>\n                    <div style={{display: \"flex\"}}>\n\n<Link\n                             to={{\n                                pathname: `/taxprofessional/chatting/${row.id}`,\n                                index: 2,\n                                routes: \"paymentstatus\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/taxprofessional/paymentstatus`\n                              }\n                          }}\n                      >\n                          <MessageIcon />\n                      </Link>\n<div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                          <Link\n              to={{\n                  pathname: `/taxprofessional/paydetails/${row.assign_id}`,\n                  index : 2,\n                  routes: \"paymentstatus\",\n              }}\n            >\n                          <Payment />\n                            </Link>\n\n                         \n                       \n                   </div>\n                    </>\n                );\n            },\n        },\n    ];\nconst rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n  \n    return style;\n  }\n\n    return (\n        <>\n            <Card>             \n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Paid=\"Paid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <DataTablepopulated \n                                   bgColor=\"#3e8678\"\n                   keyField= {\"assign_no\"}\n                   data={payment}\n                   rowStyle2 = {rowStyle2}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                        headColor=\"#3e8678\"\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date</th>\n                                        <th scope=\"row\">Amount</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;\n","/home/pooja/MazarsRepo/src/pages/TP/NewPassword/ResendOtp.js",["4331","4332"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Alerts from \"../../../common/Alerts\";\n\n\n\nfunction ResendOtp({ id, setLoad, setDisabled, getTime, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"email\", id);\n        formData.append(\"p\", \"forgot\");\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n                \n                if (response.data.code === 1) {\n                    setLoad(true)\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime();\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n                }\n            })\n            .catch((error) => {\n              \n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/index.jsx",["4333","4334","4335","4336","4337","4338","4339","4340","4341","4342","4343","4344","4345","4346","4347","4348","4349","4350","4351","4352","4353","4354","4355","4356","4357"],"/home/pooja/MazarsRepo/src/pages/TP/EditProposal/Payment.js",["4358","4359","4360","4361"],"/home/pooja/MazarsRepo/src/pages/TP/Proposal/InprogressProposal.js",["4362","4363","4364","4365","4366","4367","4368","4369","4370","4371","4372","4373","4374","4375"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, EditQuery, ActionIcon } from \"../../../components/Common/MessageIcon\";\n\n\n\nfunction InprogressProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const [proposalId, setProposalId] = useState()\n    const chatHandler = (key) => {\n     \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n   \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n  \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=1`, myConfig)\n            .then((res) => {\n            \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return {  width: \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n          \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                index : 1,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n\n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n              \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n              \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                       <div style={{ display: \"flex\"}}>\n                        <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 1,\n    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                              <MessageIcon />\n                                            </Link>\n                                     \n                                            <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                       \n                                           \n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/taxprofessional/edit-proposal/${row.id}`,\n                                        index : 1,\n                                        routes: \"proposal\" }}>\n                                           <EditQuery titleName=\"Edit Proposal\" />\n                                    </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/taxprofessional/sendproposal/${row.id}`,\n                                        index : 1,\n                                        routes: \"proposal\" }}>\n                                         <ActionIcon titleName=\"Dicision on propsal\"/>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                               <div   onClick={(e) => showProposalModal2(row.id)} title=\"View Proposal\">\n                \n                <EyeIcon />\n               </div>    \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        InprogressProposal=\"InprogressProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <DataTablepopulated \n                   bgColor=\"#5f7b97\"\n                   keyField= {\"assign_no\"}\n                   data={proposal}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n                    <ChatHistory\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        qno={id}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                        headColor=\"#5f7b97\"\n                    />\n  {\n      viewProposalModal === true ?\n      <CommonShowProposal\n          setViewProposalModal = {setViewProposalModal}\n          viewProposalModal = {viewProposalModal}\n          showProposalModal2 = {showProposalModal2}\n          proposalId = {proposalId}/> : \"\"\n  }\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default InprogressProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AllProposal.js",["4376","4377","4378","4379","4380","4381","4382","4383","4384","4385","4386","4387","4388","4389","4390","4391","4392"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChatHistory from \"./ChatHistory\";\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\n import CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\n import DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\n import MessageIcon, {EyeIcon, ViewDiscussionIcon, EditQuery, ActionIcon} from \"../../../components/Common/MessageIcon\";\n \n\n\n\nfunction AllProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const chatHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n    const showProposalModal2 = (e) => {\n      \n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n   \n\n\n   \n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}`, myConfig)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n          \n            headerStyle: () => {\n                return { width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n           \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                index : 0,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n      \n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n          \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n           \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <div>\n                                        {row.status}/\n                                        <p className=\"inprogress\">\n                                            {row.statusdescription}\n                                        </p>\n                                    </div>\n                                    :\n                                    row.status == \"Client Declined; Proposal\" ?\n                                        <p className=\"declined\">\n                                            {row.status}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.status}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n          \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n           \n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\"}}>\n                        <Link\n to={{\n    pathname: `/taxprofessional/chatting/${row.id}`,\n    index : 0,\n    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                              <MessageIcon />\n                                            </Link>\n                                     \n                                            <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                       \n                                           \n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/taxprofessional/edit-proposal/${row.id}`,\n                                        index : 0,\n                                        routes: \"proposal\" }}>\n                                        <EditQuery titleName=\"Edit Proposal\" />\n                                    </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link \n                                    to={{\n                                        pathname: `/taxprofessional/sendproposal/${row.id}`,\n                                        index : 0,\n                                        routes: \"proposal\" }}>\n                                                                             <ActionIcon titleName=\"Dicision on propsal\"/>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                               <div   onClick={(e) => showProposalModal2(row.id)} title=\"View Proposal\">\n                \n                <EyeIcon />\n               </div>    \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        AllProposal=\"AllProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <DataTablepopulated \n           bgColor=\"#42566a\"\n          keyField= {\"assign_no\"}\n          data={proposal}\n          \n          columns={columns}>\n           </DataTablepopulated> \n                 \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                        headColor=\"#42566a\"\n                    />\n                   {\n                       viewProposalModal === true ?\n                       <CommonShowProposal\n                       setViewProposalModal = {setViewProposalModal}\n                       viewProposalModal = {viewProposalModal}\n                       showProposalModal2 = {showProposalModal2}\n                       panel = \"taxprofessional\"\n                       proposalId = {proposalId}/> : \"\"\n                   }\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllProposal;\n\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/ProposalComponent.js",["4393","4394","4395","4396","4397","4398","4399","4400","4401","4402","4403","4404","4405","4406","4407","4408","4409","4410","4411","4412","4413","4414","4415","4416","4417","4418","4419"],"import React, { useState, useEffect } from \"react\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Alert,\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport Payment from \"./Payment\";\nimport Select from \"react-select\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from 'reactstrap';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\n\n\nfunction ProposalComponent(props) {\n  const { id } = props;\n  const history = useHistory();\n  const { handleSubmit, register, errors } = useForm();\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n  const [store, setStore] = useState(null);\n  const [diserror, setdiserror] = useState(\"\")\n  const [payment, setPayment] = useState([]);\n  const [installment, setInstallment] = useState([]);\n  const [error, setError] = useState('');\n  const [totalAmount, setTotalAmount] = useState(null);\n  const [paymentError, setpaymentError] = useState();\n  const [det, addDet] = useState()\n  const [date, setDate] = useState();\n  const [amount, setAmount] = useState();\n  const [companyName, setCompanyName] = useState([])\n  const [company2, setCompany2] = useState(\"\")\n  const [dateError, setDateError] = useState(false)\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  const getQuery = () => {\n    axios\n      .get(\n        `${baseUrl}/tl/pendingTlProposal?tp_id=${JSON.parse(\n          userid\n        )}&assign_id=${id}`, myConfig\n      )\n      .then((res) => {\n        if (res.data.code === 1) {\n          if (res.data.result.length > 0) {\n            setAssingNo(res.data.result[0].assign_no);\n            setAssignID(res.data.result[0].id);\n          }\n        }\n      });\n  };\n  const getCompany = () => {\n    axios.get(\n      `${baseUrl}/tl/getcompany`, myConfig\n    )\n    .then((res) => {\n      console.log(\"response\", res)\n      setCompanyName(res.data.result)\n    })\n  }\n\n  useEffect(() => {\n   getCompany()\n    getQuery();\n  }, []);\n\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`, myConfig);\n      setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n\n    getUser();\n  }, [id]);\n\n\n  const onSubmit = (value) => {\n    if(diserror.length > 0 ){\n      return false\n    }\n    else if(dateError === true){\n     Alerts.ErrorNormal(\"Date must be unique\")\n    }\n    else if(det.length == 0){\n      return false\n     }\n    else{\n    var lumsum = value.p_inst_date\n    if (payment.label == \"lumpsum\") {\n      setDate(lumsum)\n    }\n    \n    // var arrAmount = []\n    // var arrDate = []\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tp\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"assign_id\", assignId);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"description\", det);\n    formData.append(\"amount_type\", \"fixed\");\n    formData.append(\"amount\", value.p_fixed);\n    formData.append(\"installment_amount\", amount);\n    formData.append(\"company\", value.p_company)\n    formData.append(\"payment_terms\", payment.value);\n    formData.append(\"no_of_installment\", installment.value);\n\n    payment.label == \"lumpsum\" ?\n      formData.append(\"due_date\", lumsum) :\n      payment.label == \"installment\" ?\n        formData.append(\"due_date\", date) :\n        formData.append(\"due_date\", \"\")\n\n    if (payment.length < 1) {\n     \n      setpaymentError(\"Please select at lease one\")\n    } else\n      if (payment.value == \"installment\") {\n        if (installment == \"\") {\n          Alerts.ErrorNormal(`Please select no of installment .`)\n          console.log(\"Please select no of installment --\", installment)\n        } else\n          if (!amount || !date) {\n            Alerts.ErrorNormal(`Please enter all fields.`)\n            console.log(\"Please enter all fields\")\n          } else if (amount && date) {\n            console.log(\"all deatils ** here --\")\n\n            console.log(\"installment.value -\", installment.value)\n\n            if (installment.value > 0) {\n              var a = Number(installment.value)\n              for (let i = 0; i < a; i++) {\n                // arrAmount.push(amount[i])\n                // arrDate.push(date[i])\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\n                  Alerts.ErrorNormal(`Please enter amount`)\n                  console.log(\"Please enter amount\")\n                  return false\n                }\n                if (date[i] == \"\" || date[i] == undefined) {\n                  Alerts.ErrorNormal(`Please enter date`)\n                  console.log(\"Please enter date\")\n                  return false\n                }\n              }\n              var sum = amount.reduce(myFunction)\n              function myFunction(total, value) {\n                return Number(total) + Number(value);\n              }\n              if (value.p_fixed != sum) {\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n                console.log(`Sum of all installments should be equal to ${value.p_fixed}.`)\n              } else {\n                console.log(\"call else fine api for installment\")\n                setLoading(true)\n                axios({\n                  method: \"POST\",\n                  url: `${baseUrl}/tp/uploadProposal`,\n                  headers : {\n                    uit : token\n                  },\n                  data: formData,\n                })\n                  .then(function (response) {\n                    console.log(\"res-\", response);\n                    if (response.data.code === 1) {\n                      setLoading(false)\n                      Alerts.SuccessNormal(\"Proposal created successfully\")\n                      history.push(\"/taxprofessional/proposal\");\n                    } else if (response.data.code === 0) {\n                      setLoading(false)\n                      Alerts.ErrorNormal(`${response.data.result}`)\n                      \n                    }\n                  })\n                  .catch((error) => {\n                    console.log(\"erroror - \", error);\n                  });\n              }\n            }\n          }\n      } else if (payment.label == \"lumpsum\") {\n        console.log(\"call api for lumshum\",)\n        setLoading(true)\n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tp/uploadProposal`,\n          headers : {\n            uit : token\n          },\n          data: formData,\n        })\n          .then(function (response) {\n            console.log(\"res-\", response);\n            if (response.data.code === 1) {\n              setLoading(false)\n              var variable = \"Proposal sent successfully. \"\n              Alerts.SuccessNormal(variable)\n              history.push(\"/taxprofessional/proposal\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n            console.log(\"erroror - \", error);\n          });\n      }\n    }\n\n\n  };\n\n\n\n  const paymentAmount = (data) => {\n    console.log(\"paymentAmount\", data)\n\n    var array1 = []\n    Object.entries(data).map(([key, value]) => {\n      array1.push(value)\n    });\n    setAmount(array1);\n  };\n\n  const paymentDate = (data) => {\n    console.log(\"paymentDate\", data)\n\n    var array2 = []\n    Object.entries(data).map(([key, value]) => {\n      array2.push(value)\n    });\n    setDate(array2);\n    if(new Set(array2).size !== array2.length){\n      setDateError(true)\n     Alerts.ErrorNormal(\"Date must be unique\")\n    }\n    else{\n      setDateError(false)\n    }\n  };\n\n\n  const handleChange = (e) => {\n    console.log(\"val-\", e.target.value);\n    if (isNaN(e.target.value)) {\n      setdiserror(\"Please enter number only\");\n    }\n    else if(e.target.value == \"0\"){\n      setdiserror(\"Amount should be greater than zero\")\n    }\n    else {\n      setdiserror(\"\");\n    }\n    setTotalAmount(e.target.value);\n  };\n\n  const installmentHandler = (key) => {\n    console.log(\"key\", key)\n    setInstallment(key)\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"autoWidthBtn ml-3\"\n                onClick={() => history.goBack()}\n              >\n                \n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div>\n                <h4>Prepare Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <p style={{ color: \"red\" }}>{error}</p>\n            <div style={{ display: \"flex\" }}>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    className=\"form-control\"\n                    value={assingNo}\n                    ref={register}\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <label>Company</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_company\"\n                   \n                   onChange= {(e) => setCompany2(e.target.value)}\n                  >\n{\n  companyName.map((i) => (\n    <option value={i.company_prefix}>{i.name}</option>\n  ))\n}\n                  </select>\n                </div>\n                <div class=\"form-group\">\n                  <label>Fee</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_type\"\n                    onChange={(e) => setStore(e.target.value)}\n                  >\n                    <option value=\"fixed\">Fixed Price</option>\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"p_fixed\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fixed,\n                    })}\n                    ref={register({ required: true })}\n                    placeholder=\"Enter Fixed Price\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </div>\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\n                <div class=\"form-group\">\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\n                  <CKEditor\n                     editor={ ClassicEditor }\n                     config = {{\n\n                      highlight: {\n                        options: [\n                            {\n                                model: 'greenMarker',\n                                class: 'marker-green',\n                                title: 'Green marker',\n                                color: 'var(--ck-highlight-marker-green)',\n                                type: 'marker'\n                            },\n                            {\n                                model: 'redPen',\n                                class: 'pen-red',\n                                title: 'Red pen',\n                                color: 'var(--ck-highlight-pen-red)',\n                                type: 'pen'\n                            }\n                        ]\n                    },\n                      fontFamily: {\n                        options: [\n                            'default',\n                            'Ubuntu, Arial, sans-serif',\n                            'Ubuntu Mono, Courier New, Courier, monospace'\n                        ]\n                    },\n                    fontColor: {\n                      colors: [\n                          {\n                              color: 'hsl(0, 0%, 0%)',\n                              label: 'Black'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 30%)',\n                              label: 'Dim grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 60%)',\n                              label: 'Grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 90%)',\n                              label: 'Light grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 100%)',\n                              label: 'White',\n                              hasBorder: true\n                          },\n\n                          // ...\n                      ]\n                  },\n                    toolbar: [\n                   ' highlight', 'heading',  'bold', 'fontColor', 'italic',  'bulletedList', 'numberedList', 'undo', 'redo'\n                    ],\n                  \n                    }}\n                    \n                    \n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fact,\n                    })}\n                    id=\"textarea22\"\n                    rows=\"6\"\n                   \n                \n                    onChange={ ( event, editor ) => {\n                      addDet(editor.getData());\n                     \n\n                    \n                  } }\n\n                ></CKEditor>\n                   \n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Client Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    className=\"form-control\"\n                    value={custname}\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\n                  <Select\n                    className={paymentError ? \"customError\" : \"\"}\n                    onChange={(e) => {\n                      setPayment(e)\n                      setpaymentError(\"\")\n                    }}\n                    options={payment_terms}\n                  />\n\n                </div>\n\n                {payment.label == \"lumpsum\" ? (\n                  <div class=\"form-group\">\n                    <label>Due Dates</label>\n                    <input\n                      type=\"date\"\n                      name=\"p_inst_date\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_inst_date\n                      })}\n                      ref={register({ required: true })}\n                      placeholder=\"Enter Hourly basis\"\n                      min={item}\n                    />\n                  </div>\n                ) :\n                  payment.label == \"installment\" ? (\n                    <div class=\"form-group\">\n                      <label>No of Installments</label>\n                      <Select\n                        onChange={(e => installmentHandler(e))}\n                        options={no_installments}\n                      />\n                    </div>\n                  )\n                    : \"\"\n                }\n\n                {\n                  payment.label == \"lumpsum\"\n                    ?\n                    \"\"\n                    :\n                    <Payment\n                      installment={installment.label}\n                      paymentAmount={paymentAmount}\n                      paymentDate={paymentDate}\n                      totalAmount={totalAmount}\n                      min={item}\n                      item={item}\n                    />\n                }\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group col-md-6\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"customBtn\">\n                    Submit\n                  </button>\n              }\n            </div>\n\n          </form>\n          <Mandatory />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default ProposalComponent;\n\n\nconst payment_terms = [\n  {\n    value: \"lumpsum\",\n    label: \"lumpsum\",\n  },\n  {\n    value: \"installment\",\n    label: \"installment\",\n  },\n];\n\nconst no_installments = [\n  {\n    value: \"2\",\n    label: \"2\",\n  },\n  {\n    value: \"3\",\n    label: \"3\",\n  },\n  {\n    value: \"4\",\n    label: \"4\",\n  },\n];\n\n\n    // if (amount) {\n        //   var sum = amount.reduce(myFunction)\n        //   function myFunction(total, value) {\n        //     return Number(total) + Number(value);\n        //   }\n        // }\n        // if (value.p_fixed != sum) {\n        //   Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n        // } else if (!date) {\n        //   console.log(\"call date\")\n        //   Alerts.ErrorNormal(`Please date should be enter`)\n        // }\n\n // var lumsum = value.p_inst_date\n    // setDate(lumsum)\n\n    // if (payment.length < 1) {\n    //   setpaymentError(\"Please select at lease one\")\n    // }\n    // else {\n    //   setpaymentError(\"\")\n    //   let formData = new FormData();\n\n    // formData.append(\"assign_no\", assingNo);\n    // formData.append(\"name\", value.p_name);\n    // formData.append(\"type\", \"tl\");\n    // formData.append(\"id\", JSON.parse(userid));\n    // formData.append(\"assign_id\", assignId);\n    // formData.append(\"customer_id\", custId);\n    // formData.append(\"description\", value.description);\n\n    // formData.append(\"amount_type\", \"fixed\");\n    // formData.append(\"amount\", value.p_fixed);\n    // formData.append(\"installment_amount\", amount);\n\n    // formData.append(\"payment_terms\", payment.value);\n    // formData.append(\"no_of_installment\", installment.value);\n\n    // payment.label == \"lumpsum\" ?\n    //   formData.append(\"due_date\", lumsum) :\n    //   payment.label == \"installment\" ?\n    //     formData.append(\"due_date\", date) :\n    //     formData.append(\"due_date\", \"\")\n\n    //   console.log(\"payment -\", payment.label)\n\n    //   if (payment.value == \"installment\") {\n    //     console.log(\"amount --\", amount)\n    //     console.log(\"date --\", date)\n\n    // if (!amount || !date) {\n    //   Alerts.ErrorNormal(`please enter all fields`)\n    // } else\n    // if (amount && date) {\n    //   if (installment.value > 0) {\n    //     console.log(\"installment** --\")\n\n    //     var a = Number(installment.value)\n    //     for (let i = 0; i < a; i++) {\n    //       // console.log(\"call for loop\", i, amount[i])\n    //       if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\n    //         console.log(\"amount --1\", amount[i])\n    //         Alerts.ErrorNormal(`please insert all fields.`)\n    //         return false\n    //       }\n    //     }\n    //     var sum = amount.reduce(myFunction)\n    //     function myFunction(total, value) {\n    //       return Number(total) + Number(value);\n    //     }\n    //     if (value.p_fixed != sum) {\n    //       Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n    //     } else {\n    //       console.log(\"calll else fine api\")\n    //     }\n    //   }\n    //       }\n    //       else {\n    //         console.log(\"call else\")\n    //         return false\n    //         setLoading(true)\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/tl/uploadProposal`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //     console.log(\"res-\", response);\n    //     if (response.data.code === 1) {\n    //       setLoading(false)\n    //       Alerts.SuccessNormal(\"Proposal sent successfully.\")\n    //       history.push(\"/teamleader/proposal\");\n    //     } else if (response.data.code === 0) {\n    //       setLoading(false)\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n    //       }\n    //   }\n    //   else {\n    // setLoading(true)\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/tl/uploadProposal`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //     console.log(\"res-\", response);\n    //     if (response.data.code === 1) {\n    //       setLoading(false)\n\n    //       var variable = \"Proposal sent successfully. \"\n    //       Alerts.SuccessNormal(variable)\n    //       history.push(\"/teamleader/proposal\");\n    //     } else if (response.data.code === 0) {\n    //       setLoading(false)\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n    //   }\n    // }\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/DeclinedProposal.js",["4420","4421","4422","4423","4424","4425","4426","4427","4428","4429","4430","4431","4432","4433","4434","4435"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\n import CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\n import DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\n import MessageIcon, {EyeIcon, ViewDiscussionIcon, DiscussProposal, HelpIcon} from \"../../../components/Common/MessageIcon\";\n \n\n\nfunction DeclinedProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const chatHandler = (key) => {\n      \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n  \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=3`, myConfig)\n            .then((res) => {\n             \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n           \n            headerStyle: () => {\n                return {  width: \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n           \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                index : 3,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n          \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n          \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n         \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Client Declined; Proposal\" ?\n                                    <p className=\"declined\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n              \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n              \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n           \n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\"}}>\n                       \n                       \n                                            <Link\n                                                to={{\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\n                                                    index : 3,\n                                                    routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                               <MessageIcon />\n                                            </Link>\n                                            <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                           \n                                \n                            <div className=\"ml-2\">\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                             <div  onClick={(e) => showProposalModal2(row.id)} title=\"View Proposal\">\n             <EyeIcon />\n              \n            </div>\n\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"proposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <DataTablepopulated \n                   bgColor=\"#5f7b97\"\n                   keyField= {\"assign_no\"}\n                   data={proposal}\n                   columns={columns}>\n                    </DataTablepopulated>\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                        headColor=\"#5f7b97\"\n                    />\n{\n    viewProposalModal === true ?\n    <CommonShowProposal\n    setViewProposalModal = {setViewProposalModal}\n    viewProposalModal = {viewProposalModal}\n    showProposalModal2 = {showProposalModal2}\n    proposalId = {proposalId}/> : \"\"\n}\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default DeclinedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AcceptedProposal.js",["4436","4437","4438","4439","4440","4441","4442","4443","4444","4445","4446","4447","4448"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport CommonShowProposal from \"../../../components/commonShowProposal/CommonShowProposal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon} from \"../../../components/Common/MessageIcon\";\n\n\n\nfunction AcceptedProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [viewProposalModal, setViewProposalModal] = useState(false)\n    const [proposalId, setProposalId] = useState()\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [assignNo, setAssignNo] = useState('');\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const showProposalModal2 = (e) => {\n        console.log(\"eeee\")\n        setViewProposalModal(!viewProposalModal);\n        setProposalId(e)\n      }\n   \n      const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=2`, myConfig)\n            .then((res) => {\n            \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n          \n            headerStyle: () => {\n                return {  width: \"50px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Query Date\",\n            sort: true,\n       \n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                index : 2,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n         \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n\n                            {\n                                row.status == \"Accepted; Proposal\" ?\n                                    <p className=\"completed\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n              \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n           \n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n           \n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\"}}>\n                        \n                       \n                                            <Link\n                                              to={{\n                                                pathname: `/taxprofessional/chatting/${row.id}`,\n                                                index : 2,\n                                                routes: \"proposal\",\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                               <MessageIcon />\n                                            </Link>\n                                      \n                                        <div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n                           \n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                                 <div style={{ cursor: \"pointer\", marginLeft : \"2px\" }}   onClick={(e) => showProposalModal2(row.id)} title=\"View Proposal\">\n             <EyeIcon />\n              \n            </div>\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                          \n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"proposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <DataTablepopulated \n                    bgColor=\"#5f7b97\"\n                   keyField= {\"assign_no\"}\n                   data={proposal}\n                   columns={columns}>\n                    </DataTablepopulated>\n                   {\n                       viewProposalModal === true ?\n                       <CommonShowProposal\n                       setViewProposalModal = {setViewProposalModal}\n                       viewProposalModal = {viewProposalModal}\n                       showProposalModal2 = {showProposalModal2}\n                       proposalId = {proposalId}/> : \"\"\n                   }\n           <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                        headColor=\"#5f7b97\"\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AcceptedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Login/VerifyOtpLogin.js",["4449"],"/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/AllQuery.js",["4450","4451","4452","4453","4454","4455","4456","4457","4458","4459","4460","4461"],"import React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DataTablepopulated from '../../../components/DataTablepopulated/DataTabel';\nimport MessageIcon, { ViewDiscussionIcon} from \"../../../components/Common/MessageIcon\";\n\n\n\nfunction AllQuery(props) {\n\n    const userid = window.localStorage.getItem(\"tpkey\");\n\n    const [incompleteData, setInCompleteData] = useState([]);\n    const [records, setRecords] = useState([]);\n\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const token = window.localStorage.getItem(\"tptoken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    // useEffect(() => {\n    //     getInCompleteAssingment();\n    // }, []);\n\n    const getInCompleteAssingment = () => {\n        axios\n            .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}`, myConfig)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setInCompleteData(res.data.result);\n                    setRecords(res.data.result.length);\n                    props.getAllCount(res.data.result.length)\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return {  width: \"50px\" };\n            },\n           \n        },\n        {\n            text: \"Query Date\",\n            dataField: \"created\",\n            sort: true,\n          \n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n           \n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                     \n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                index: 0,\n                                routes: \"queriestab\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n          \n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            \n        },\n        {\n            text: \"Client Name\",\n            dataField: \"name\",\n            sort: true,\n           \n        },\n        {\n            text: \"Delivery due date / Actual Delivery date\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n           \n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n           \n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress Query\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Declined Query\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Completed Query\" ?\n                                            <p className=\"completed\">\n\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            \n            formatter: function (cell, row) {\n              \n                return (\n                    <>\n                      {row.status_code == \"1\" ? null :\n                      \n                      <div\n                      style={{\n                          display: \"flex\",\n                          \n                      }}\n                  >\n                     \n\n                      {row.status == \"Declined Query\" ? null :\n                   \n                      <Link\n                             to={{\n                                pathname: `/taxprofessional/chatting/${row.id}`,\n                                index: 0,\n                                routes: \"queriestab\",\n                        \n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/taxprofessional/queriestab`\n                              }\n                          }}\n                      >\n                          <MessageIcon />\n                      </Link>\n                 }\n\n<span onClick={() => ViewDiscussionToggel(row.assign_no)}  className=\"ml-2\">\n                                  <ViewDiscussionIcon />\n                                </span>\n                  </div>\n}                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={props.setAllQdata}\n                        getData={props.allQuery}\n                        AllQuery=\"AllQuery\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                <DataTablepopulated \n          bgColor=\"#55425f\"\n          keyField= {\"assign_no\"}\n          data={props.data}\n          \n          columns={columns}>\n           </DataTablepopulated> \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getInCompleteAssingment}\n                        headColor=\"#55425f\"\n                    />\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllQuery;\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Generated.js",["4462","4463","4464","4465","4466","4467","4468","4469","4470","4471","4472","4473","4474","4475","4476","4477","4478","4479","4480","4481","4482","4483","4484","4485","4486","4487","4488","4489","4490","4491","4492"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\nimport moment from \"moment\";\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {EyeIcon, ViewDiscussionIcon, DiscussProposal, HelpIcon, EditQuery, ActionIcon} from \"../../../components/Common/MessageIcon\";\n\nconst Generated = () => {\n    var rowStyle2 = {}\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    \n \n    const addTdsToggle = (key) => {\n   \n      setGstinNo(key.gstin_no);\n        setTdsForm(!tdsForm)\n        setAssignNo(key.assign_no)\n        setPaidAmount(key.paid_amount)\n        setId(key.id)\n        setInstallmentNo(key.installment_no)\n        setBillNo(key.billno);\n        setId2(key.id)\n    }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n    const token = window.localStorage.getItem(\"tlToken\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1`, myConfig)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                   \n                }\n            });\n    };\n\n\n  \n    const downloadpdf = (qno, id, installmentNumber) => {\n        const myConfig2 = {\n            headers : {\n             \"uit\" : token\n            },\n            responseType: 'blob'\n          }\n        axios.get(`${baseUrl}/tl/viewinvoicepdf?assign_no=${qno}&invoice_id=${id}` , myConfig2)\n      .then((res) => {\n        console.log(\"res\", res)\n        if(res.status === 200){\n        //    window.open(URL.createObjectURL(res.data));\n           console.log(URL.createObjectURL(res.data))\n           window.URL = window.URL || window.webkitURL;\n           var url = window.URL.createObjectURL(res.data);\n           var a = document.createElement(\"a\");\n           document.body.appendChild(a);\n           a.style = \"display: none\";\n           a.href = url;\n           a.download = `invoice_${qno}_${installmentNumber}.pdf`\n        //    a.download = \"invoice\"+{qno}+{installmentNumber}+'.pdf';\n           a.target = '_blank';\n           a.click();\n        }\n      })\n      }\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { width: \"50px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            \n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"tlinvoice\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            \n        },\n        {\n            text: \"Invoice No\",\n            dataField: \"billno\",\n            sort: true,\n           \n        },\n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n           \n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Invoice amount\",\n            dataField: \"invoice_amount\",\n            sort: true,\n            \n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-IN')\n                 var x = row.invoice_amount;\n                 \n                 return(\n                   <p className=\"rightAli\">{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Tds Deducted\",\n            dataField: \"tds_amount\",\n            sort: true,\n\n            sortFunc: (a, b, order, dataField) => {\n                if (order === 'asc') {\n                  return b - a;\n                }\n                return a - b; // desc\n              },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-IN')\n                 var x = row.tds_amount;\n                 \n                 return(\n                     <>\n                     {row.is_paid == \"0\" ?\n                     <p className=\"rightAli\"></p> :   <p className=\"rightAli\">{nfObject.format(x)}</p>}\n                     </>\n                 \n                 )\n               }\n        }, \n        \n        {\n            text: \"Status\",\n            dataField: \"is_paid\",\n            sort: true,\n           \n            formatter : function(cell, row) {\n                return(\n                    <>\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \n                    <>\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p className=\"declined\">Declined</p>}\n                    </>}\n                    </>\n                )\n            }\n        }, \n        \n        {\n            text: \"Action\",\n            dataField: \"\",\n           \n            formatter: function (cell, row) {\n                return (\n                    <>\n                       <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems : \"center\" }}>\n                      \n                                <span onClick={() => downloadpdf(row.assign_no, row.id, row.installment_no)} style={{cursor : \"pointer\"}} title=\"Download Invoice\">\n                         <DescriptionOutlinedIcon color=\"secondary\" />\n                         </span>\n                              {row.is_paid == \"0\" ? \n                      \n                      <div  className=\"mx-1\" onClick = {() => addTdsToggle(row)}>\n                  <EditQuery title=\"Edit Invoice\"/> \n                  </div> : \"\"\n                        }\n                          {row.is_paid == \"0\" \n                ?   \n                <span title={row.paymenturl}>\n                 <FileCopyIcon onClick={() => {copyFun(row.paymenturl)}} style={noPointer}/>\n                   </span>\n              \n                    : \"\" }\n                        </div>\n                      \n                    </>\n                );\n            },\n        },\n    ];\n    const noPointer = {cursor: 'pointer', color : \"blue\"};\n    const copyFun = (e)  =>{\n   \n        navigator.clipboard.writeText(e)\n       \n      }\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n         var cc = moment(row.due_date).toDate();\n         if(row.is_paid === \"2\"){\n            style.backgroundColor = \"#fff\";\n            style.color = \"#000\"\n        }\n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n            style.backgroundColor = \"#bfdfd2\";\n          style.color = \"#000111\"\n        }\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n       \n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n  \n    \n    return (\n\n        <>\n            <Card>\n              \n             <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice=\"generated\" \n                     setRec={setRecords}\n                     panel = \"teamleader\"\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                    \n                    \n                <DataTablepopulated \n                   bgColor=\"#42566a\"\n                   keyField= {\"assign_no\"}\n                   rowStyle2= {rowStyle2}\n                   data={proposal}\n                   columns={columns}>\n                    </DataTablepopulated>\n\n\n                   \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    generated = {\"edited\"}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Generated;","/home/pooja/MazarsRepo/src/pages/TL/Recording/RecordingEdit.js",["4493","4494"],"import React from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport { baseUrl } from '../../../config/config';\nimport Swal from 'sweetalert2';\nconst RecordingEdit = ({isOpen, recordingHandler, participants, message, assignid, editId, recList}) => {\n   const userid = localStorage.getItem(\"tlkey\")\n    const { handleSubmit, register, errors } = useForm();\n    const onSubmit = (value) => {\n       let formData = new FormData();\n       formData.append(\"uid\", JSON.parse(userid))\n       formData.append(\"message\", value.p_message);\n       formData.append(\"message_type\", value.msg_type)\n        formData.append(\"assign_id\", assignid);\n        formData.append(\"participants\", value.p_participants);\n        formData.append(\"id\", editId)\n        axios({\n            method : \"POST\",\n            url : `${baseUrl}/tl/callRecordingPostEdit`,\n            data: formData,\n        })\n        .then((res) => {\n            if(res.data.code === 1){\n                recordingHandler()\n                Swal.fire({\n                    title : \"success\",\n                    html : \"Message edited successfully\",\n                    icon : \"success\"\n                })\n                recList()\n            }\n        })\n    }\n   \nreturn (\n \n    <>\n    <Modal isOpen = {isOpen} toggle={recordingHandler}>\n        <ModalHeader toggle={recordingHandler}>\n        <h1>Recording Edit</h1>\n        </ModalHeader>\n        <ModalBody>\n       <form onSubmit = {handleSubmit(onSubmit)}>\n<div className=\"row\">\n    <div className=\"col-md-12\">\n        <label>Participants Name</label>\n        <input \n        className=\"form-control\"\n        name=\"p_participants\"\n        ref = {register}\n        defaultValue = {participants}/>\n        </div>\n        \n</div>\n<div className = \"row\">\n<div className=\"col-md-12\">\n    <label>Message Type</label>\n<select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.msg_type,\n                            })}\n                            name=\"msg_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            required\n                            \n                          >\n                            <option value=\"\">--select--</option>\n                                        <option value=\"Query Discussion\">Query Discussion</option>\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\n                                        <option value=\"Client Discussion\">Client Discussion</option>\n                                        <option value=\"Draft Reports\">Draft Reports</option>\n                                        <option value=\"Final Discussion\">Final Discussion</option>\n                                        <option value=\"Others\">Others</option>\n                          </select>\n    </div>\n    </div>\n    <div className=\"row\">\n    <div className=\"col-md-12\">\n        <label>Message</label>\n        <textarea \n           style={{height : \"100px\"}}\n        className=\"form-control\"\n        name=\"p_message\"\n        ref = {register}\n        defaultValue = {message}/>\n        </div>\n</div>\n<button className=\"btn btn-primary my-2\">\n    Submit\n</button>\n       </form>\n        </ModalBody>\n    </Modal>\n    \n    </>\n)\n}\nexport default RecordingEdit;","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Demo.js",["4495","4496","4497","4498","4499","4500","4501","4502","4503","4504","4505","4506","4507","4508"],"/home/pooja/MazarsRepo/src/pages/TL/Message/PaymentModal.js",["4509","4510","4511","4512"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  data,\n  // getProposalData,\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n\n  const onSubmit = (value) => {\n\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", id);\n    formData.append(\"message_type\",\"information\");\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          alert.success(\" message successfully send!\");\n          paymentHandler()\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/PendingForAcceptence.js",["4513","4514","4515"],"import React, { useState} from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport RejectedModal from \"./RejectedModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport { useHistory } from \"react-router\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, { Accept, Reject} from \"../../../components/Common/MessageIcon\";\n\n\nfunction PendingForAcceptence(props) {\n  let history = useHistory();\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [pendingData, setPendingData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [pay, setPay] = useState({\n    id: \"\",\n    allocation_id: \"\",\n  });\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const rejectHandler = (key) => {\n   \n    setPaymentModal(!addPaymentModal);\n    setPay({\n      id: key.id,\n      allocation_id: key.allocation_id,\n    });\n  };\nconsole.log(\"props123\", props.data)\n \n\n  const getPendingforAcceptance = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(userid)}`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setPendingData(res.data.result);\n          setRecords(res.data.result.length);\n          props.pendingQueryNumber(res.data.result.length)\n          // CountPendingForAcceptence(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n   \n      headerStyle: () => {\n        return { width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_created\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.query_created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      \n      formatter: function nameFormatter(cell, row) {\n\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n     \n    },\n    {\n      text: \"Delivery due date / Actual Delivery date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n     \n    },\n    {\n      text: \"Accept / Reject\",\n      dataField: \"\",\n     \n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n              \n              }}\n              id=\"div1\"\n            >\n              <div\n             \n               \n                onClick={() => acceptHandler(row)}\n              >\n                <Accept titleNme= \"Accept Assignment\" />\n              </div>\n              <div\n               \n                onClick={() => rejectHandler(row)}\n              >\n              <Reject titleNme= \"Accept Assignment\" />\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  const acceptHandler = (key) => {\n\n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tp_id\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n   \n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n    \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query accepted successfully.\")\n          \n          getPendingforAcceptance();\n         // updateTab(1);\n         history.push(\"/taxprofessional/proposal\")\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setPendingData}\n            getData={getPendingforAcceptance}\n            pendingForAcceptence=\"pendingForAcceptence\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Spinner color=\"primary\" />\n              :\n              <DataTablepopulated \n              bgColor=\"#55425f\"\n              keyField= {\"assign_no\"}\n              data={props.data}\n              \n              columns={columns}>\n               </DataTablepopulated> \n          }\n          <RejectedModal\n            rejectHandler={rejectHandler}\n            addPaymentModal={addPaymentModal}\n            pay={pay}\n            getPendingforAcceptance={getPendingforAcceptance}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForAcceptence;\n\n","/home/pooja/MazarsRepo/src/pages/TP/InCompleteData/InCompleteData.js",["4516","4517","4518","4519","4520","4521","4522","4523","4524","4525","4526","4527"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport MessageIcon, {ViewDiscussionIcon, } from \"../../../components/Common/MessageIcon\";\n\nfunction InCompleteData({ CountIncomplete , data}) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n  const token = window.localStorage.getItem(\"tptoken\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n  // useEffect(() => {\n  //   getInCompleteAssingment();\n  // }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=1`, myConfig)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n    \n      headerStyle: () => {\n        return {  width: \"50px\" };\n      },\n      \n    },\n    {\n      text: \"Query Date\",\n      dataField: \"created\",\n      sort: true,\n     \n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n     \n      formatter: function nameFormatter(cell, row) {\n\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 2,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      \n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      \n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n     \n    },\n    {\n      text: \"Delivery due date / Actual Delivery date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n     \n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      \n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}{row.statusdescription && \"/\"}\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n     \n      formatter: function (cell, row) {\n        \n          return (\n              <>\n               {row.tp_status == \"1\" ? null : \n                \n                <div\n                style={{\n                    display: \"flex\",\n                   \n                }}\n            >\n               \n\n                {row.status == \"Declined Query\" ? null :\n \n  <Link\nto={{\npathname: `/taxprofessional/chatting/${row.id}`,\nindex : 2,\nroutes: \"queriestab\",\n          obj: {\n              message_type: \"4\",\n              query_No: row.assign_no,\n              query_id: row.id,\n              routes: `/taxprofessional/queriestab`\n          }\n      }}\n  >\n     <MessageIcon />\n  </Link>\n}\n\n<div  onClick={() => ViewDiscussionToggel(row.assign_no)} className=\"ml-1\">\n                                  \n                                  <ViewDiscussionIcon />\n                          </div>\n            </div>}\n              </>\n          );\n      },\n  },\n];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            InprogressQuery=\"InprogressQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n        <DataTablepopulated \n              bgColor=\"#55425f\"\n              keyField= {\"assign_no\"}\n              data={data}\n              \n              columns={columns}>\n               </DataTablepopulated> \n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getInCompleteAssingment}\n            headColor=\"#55425f\"\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InCompleteData;\n","/home/pooja/MazarsRepo/src/pages/TP/CompleteData/CompleteData.js",["4528","4529","4530","4531","4532","4533","4534","4535"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\n\n\n\nfunction CompletedQuery() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=2`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}{row.statusdescription && \"/\"}\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            inCompleteQuery=\"inCompleteQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default CompletedQuery;\n","/home/pooja/MazarsRepo/src/pages/TP/DeclinedQuery/DeclinedQuery.js",["4536","4537","4538","4539","4540","4541"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\n\nfunction DeclinedQuery({ CountIncomplete }) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Client Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status} /\n              {\n                row.status == \"Declined Query\" ?\n                  <p className=\"declined\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            DeclinedQuery=\"DeclinedQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedQuery;\n","/home/pooja/MazarsRepo/src/pages/TL/NewPassword/ResendOtp.js",["4542","4543"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Alerts from \"../../../common/Alerts\";\n\n\n\nfunction ResendOtp({ id, setDisabled, getTime, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"email\", id);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime();\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n                }\n            })\n            .catch((error) => {\n              \n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" class=\"autoWidthBtn\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/RejectModal.js",["4544","4545","4546"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction RejectedModal({\n  nestedModal,\n  toggleNested,\n  dataItem,\n  docData,\n  getData\n}) {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const [loading, setLoading] = useState(false);\n \n\n  const onSubmit = (value) => {\n   console.log(value)\n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"tp_id\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"message\", value.p_chat);\n    formData.append(\"type\", 1);\n    formData.append(\"docid\", docData.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      data: formData,\n    })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          setLoading(false)\n          toggleNested();\n          getData();\n          var variable = \"Submitted Successfully \"\n          Alerts.SuccessNormal(variable)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\n        <ModalHeader>Discussion</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here\"\n              ></textarea>\n\n              {errors.p_chat && (\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <div>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                    <Button color=\"primary\"className=\"btn btn-danger ml-2\" onClick={toggleNested}>Cancel</Button>\n                  </div>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default RejectedModal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/RejectedModal.js",["4547","4548","4549","4550"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  assignNo,\n  getPaymentStatus,\n}) {\n\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"notes\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/declinePayment`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Marked as client declined payment.\")\n          getPaymentStatus();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Decline Payment</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/RecordingModal.js",["4551","4552","4553","4554","4555","4556","4557","4558","4559","4560"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CommonServices from \"../../../common/common\";\nimport Alerts from \"../../../common/Alerts\";\nimport { useHistory } from \"react-router\";\nimport Swal from \"sweetalert2\";\nfunction RecordingModal({\n    isOpen,\n    toggle,\n    data,\n    item, \n    allrecording,\n    schId,\n    uid,\n    ownerId\n}) {\n   \n    const history = useHistory();\n    const { handleSubmit, register, errors } = useForm();\n    const userId = window.localStorage.getItem(\"tpkey\");\n\n   \n\n    const { assign_no, id, username, start } = item\n  \n    const onSubmit = (value) => {\n        var serverResponse = data.serverResponse.fileList\n        var completeRecording;\n        if(allrecording === undefined || allrecording.length === 0){\n            completeRecording =  serverResponse;\n        }\n        else if(allrecording != undefined || allrecording.length > 0){\n            completeRecording = allrecording + \",\" + serverResponse;\n        }\n        else{\n            completeRecording = serverResponse;\n        }\n                const { fileList } = serverResponse\n             \n        let formData = new FormData();\n        formData.append(\"uid\", JSON.parse(userId));\n        formData.append(\"fileList\", completeRecording);\n        formData.append(\"message_type\", value.msg_type);\n        formData.append(\"message\", value.p_message);\n        formData.append(\"assign_id\", assign_no);\n        formData.append(\"participants\", username);\n        formData.append(\"schedule_id\", id);\n\n        axios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/callRecordingPost`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    toggle();\n                    history.push(\"/taxprofessional/schedule\")\n                   \n                }\n            })\n            .catch((error) => {\n               \n            });\n    };\n  \n    return (\n        <div>\n            <Modal isOpen={isOpen}  size=\"md\">\n                <ModalHeader>\n                Minutes of meeting\n                </ModalHeader>\n                <ModalBody>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                            <div class=\"col-md-10\">\n                                <div class=\"form-group\">\n\n                                    <div class=\"form-group\">\n                                        <label>Query No.</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_query\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            value={assign_no}\n                                            disabled\n                                        />\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <label>Participants</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_participants\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            defaultValue={username}\n                                        />\n                                    </div>\n\n                                    <label>Discussion Type</label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"msg_type\"\n                                        ref={register}\n                                        style={{ height: \"33px\" }}\n                                    >\n                                        <option value=\"\">--select--</option>\n                                        <option value=\"Query Discussion\">Query Discussion</option>\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\n                                        <option value=\"Client Discussion\">Client Discussion</option>\n                                        <option value=\"Draft Reports\">Draft Reports</option>\n                                        <option value=\"Final Discussion\">Final Discussion</option>\n                                        <option value=\"Others\">Others</option>\n                                    </select>\n\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        placeholder=\"Message text here\"\n                                        rows=\"5\"\n                                        ref={register}\n                                        name=\"p_message\"\n                                    ></textarea>\n                                </div>\n                             \n                                <button type=\"submit\" className=\"btn btn-primary\">\n                                    Submit\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n\n                </ModalFooter>\n            </Modal>\n        </div >\n    );\n}\n\nexport default RecordingModal;","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ChatHistory.js",["4561","4562"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\n  const [notification, setNotification] = useState([]);\n  const userId = window.localStorage.getItem(\"tpkey\");\n\n  useEffect(() => {\n    getNotification();\n  }, [qno]);\n\n  const getNotification = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/getNotification?id=${JSON.parse(\n          userId\n        )}&type=2&q_no=${qno}`\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setNotification(res.data.result);\n        }\n      });\n  };\n\n \n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Message</th>\n                <th scope=\"row\">Date</th>\n              </tr>\n            </thead>\n            {notification.length > 0\n              ? notification.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.message}</td>\n                      <td>{p.setdate}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ChatHistory;\n","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/Payment.js",["4563","4564"],"import { values } from \"lodash\";\nimport React from \"react\";\nimport { Spinner } from 'reactstrap';\n\nexport default class Payment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n        };\n    }\n\n    handleChange1(i, e) {\n        if (isNaN(e.target.value)) {\n            this.setState({ error: \"Please insert only digit\" })\n        }\n        else {\n            this.setState({ error: \"\" })\n        }\n        this.setState({\n            values: { ...this.state.values, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n\n    }\n\n    handleChange2(i, e) {\n        this.setState({\n            dates: { ...this.state.dates, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n    render() {\n        var fieldsArray = [];\n\n        for (var i = 1; i <= this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    <div class=\"col-md-6 my-2\">\n                       \n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name={this.state.values[i]}\n                            onChange={this.handleChange1.bind(this, i)}\n                        />\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n                    </div>\n\n                    <div class=\"col-md-6 my-2\">\n                      \n                        <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            name={this.state.dates[i]}\n                            onChange={this.handleChange2.bind(this, i)}\n                            min={this.props.item}\n                        />\n                    </div>\n                </div >\n            );\n        }\n\n        return (\n            <>\n           \n            <div className=\"inputs\">\n                {this.props.installment > 0 ?\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\n              <td>Payment</td>\n              <td>Due Dates</td>\n          </tr> : \"\"}\n          {fieldsArray}\n      </div>\n      </>\n        );\n    }\n}\n\n\n// import React from \"react\";\n\n// export default class Payment extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             values: [],\n//             dates: [],\n//         };\n//     }\n\n//     handleChange1(i, e) {\n//         if (isNaN(e.target.value)) {\n//             this.setState({ error: \"Please insert only digit\" })\n//         }\n//         else {\n//             this.setState({ error: \"\" })\n//         }\n//         this.setState({\n//             values: { ...this.state.values, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentAmount(this.state.values)\n//             })\n\n//     }\n\n//     handleChange2(i, e) {\n//         this.setState({\n//             dates: { ...this.state.dates, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentDate(this.state.dates)\n//             })\n\n//     }\n\n//     render() {\n//         var fieldsArray = [];\n\n//         for (var i = 1; i <= this.props.installment; i++) {\n//             fieldsArray.push(\n//                 <div className=\"row\">\n//                     <div class=\"col-md-6\">\n//                         <label>Amount</label>\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             name={this.state.values[i]}\n//                             onChange={this.handleChange1.bind(this, i)}\n//                         />\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n//                     </div>\n\n//                     <div class=\"col-md-6\">\n//                         <label>Due Dates</label>\n//                         <input\n//                             type=\"date\"\n//                             className=\"form-control\"\n//                             name={this.state.dates[i]}\n//                             onChange={this.handleChange2.bind(this, i)}\n//                             min={this.props.item}\n//                         />\n//                     </div>\n//                 </div >\n//             );\n//         }\n//         return (\n//             <div className=\"inputs\">\n//                 {fieldsArray}\n//             </div>\n//         );\n//     }\n// }\n","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/RejectedModal.js",["4565","4566","4567"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  pay,\n  getPendingforAcceptance,\n}) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n  const { id, allocation_id } = pay;\n\n  \n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tp_id\", JSON.parse(userid));\n    formData.append(\"assignment_id\", id);\n    formData.append(\"allocation_id\", allocation_id);\n    formData.append(\"reject_reason\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query rejected successfully.\")\n          getPendingforAcceptance();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here...\"\n              ></textarea>\n            </div>\n\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/index.jsx",["4568","4569","4570","4571","4572","4573","4574","4575","4576","4577","4578","4579","4580","4581","4582","4583","4584","4585","4586","4587","4588","4589","4590","4591","4592"],"/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/RecordingModal.js",["4593","4594","4595","4596","4597","4598","4599","4600"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useHistory } from \"react-router\";\nimport Swal from \"sweetalert2\";\nfunction RecordingModal({\n    isOpen,\n    toggle,\n    data,\n    item, \n    allrecording,\n    schId,\n    uid,\n    ownerId\n}) {\n    const history = useHistory();\n    const { handleSubmit, register, errors } = useForm();\n    const userId = window.localStorage.getItem(\"tlkey\");\n\n    \n    const { assign_no, id, username, start } = item\n   \n\n\n    //submit\n    const onSubmit = (value) => {\n      \n\nvar serverResponse = data.serverResponse.fileList\nvar completeRecording;\nif(allrecording === undefined || allrecording.length === 0){\n    completeRecording =  serverResponse;\n}\nelse if(allrecording != undefined || allrecording.length > 0){\n    completeRecording = allrecording + \",\" + serverResponse;\n}\nelse{\n    completeRecording = serverResponse;\n}\n        const { fileList } = serverResponse\n        \n\n        let formData = new FormData();\n        formData.append(\"uid\", JSON.parse(userId));\n        formData.append(\"fileList\", completeRecording);\n        formData.append(\"message_type\", value.msg_type);\n        formData.append(\"message\", value.p_message);\n        formData.append(\"assign_id\", assign_no);\n        formData.append(\"participants\", username);\n        formData.append(\"schedule_id\", id);\n\n        axios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/callRecordingPost`,\n            data: formData,\n        })\n            .then(function (response) {\n                        if (response.data.code === 1) {\n                    toggle()\n                history.push(\"/teamleader/schedule\")\n                }\n               \n            })\n            .catch((error) => {\n                       });\n    };\n  \n    return (\n        <div>\n            <Modal isOpen={isOpen} size=\"md\">\n                <ModalHeader >\n                Minutes of meeting\n                </ModalHeader>\n                <ModalBody>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                            <div class=\"col-md-10\">\n                                <div class=\"form-group\">\n\n                                    <div class=\"form-group\">\n                                        <label>Query No.</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_query\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            value={assign_no}\n                                            disabled\n                                        />\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <label>Participants</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_participants\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            defaultValue={username}\n                                        />\n                                    </div>\n\n                                    <label>Discussion Type</label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"msg_type\"\n                                        ref={register}\n                                        style={{ height: \"33px\" }}\n                                    >\n                                        <option value=\"\">--select--</option>\n                                        <option value=\"Query Discussion\">Query Discussion</option>\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\n                                        <option value=\"Client Discussion\">Client Discussion</option>\n                                        <option value=\"Draft Reports\">Draft Reports</option>\n                                        <option value=\"Final Discussion\">Final Discussion</option>\n                                        <option value=\"Others\">Others</option>\n                                    </select>\n\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        placeholder=\"Message text here\"\n                                        rows=\"5\"\n                                        ref={register}\n                                        name=\"p_message\"\n                                    ></textarea>\n                                </div>\n                                {/* <button type=\"button\" className=\"btn btn-danger\" onClick={() => exitBtn2()}>Cancel </button> */}\n                                <button type=\"submit\" className=\"btn btn-primary mx-2\">\n                                    Submit\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n\n                </ModalFooter>\n            </Modal>\n        </div >\n    );\n}\n\nexport default RecordingModal;","/home/pooja/MazarsRepo/src/views/ModalManual/Query.js",["4601","4602"],"import { makeStyles, Box, Button, Typography, Card, Container, CardHeader, CardActionArea, CardActions, CardMedia, CardContent } from '@material-ui/core';\nimport React from 'react';\nimport imgQuery from '../ManualImg/queryImage.png';\nimport changePasswordImg from '../ManualImg/changePass.png';\nimport changePass from '../ManualImg/changePassform.png';\nimport querySuccess from '../ManualImg/querySuccess.png';\nimport querySuccess22 from '../ManualImg/queryuccess22.png';\nimport queryNew from '../ManualImg/queryNew.png';\nimport newOne2 from '../ManualImg/newOne2.png';\nimport addFreshQuery from '../ManualImg/addFreshQuery.png';\nimport success2 from \"../ManualImg/success2.png\";\nimport queryList from \"../ManualImg/queryList.png\";\nimport queryList22 from \"../ManualImg/queryList22.png\";\nimport img1234 from \"../ManualImg/one1234.png\";\nimport delImg from '../ManualImg/del.png';\nimport message from '../ManualImg/message.png';\nimport messageHistory from '../ManualImg/messageHistory.png';\nimport nextImg from '../ManualImg/nextImage.png';\nimport queryList222 from '../ManualImg/queryList222.png';\nimport updateQuery from '../ManualImg/updateQuery.png';\nimport deleteImg from '../ManualImg/deleteImg.png';\nimport rejectQuery from '../ManualImg/rejectQuery.png';\nimport queImgae from '../ManualImg/que.png';\nimport showMessageHistory22 from '../ManualImg/showMessageHistory.png';\nimport showQuery22 from '../ManualImg/showQuery22.png';\nimport queryDetails from '../ManualImg/queryDetails.png';\nimport basicDetails from '../ManualImg/basicDetails.png';\nimport proposalDetails from '../ManualImg/proposalDetails.png';\nconst Query = () => {\n    const useStyle = makeStyles(theme => ({\n        root: {\n            backgroundColor: \"green\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"green\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"green\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n        root2: {\n            backgroundColor: \"blue\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n        root3: {\n            backgroundColor: \"red\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n\n    }))\n    const classes = useStyle()\n    return (\n\n        <>\n         <section id=\"query\">\n            <Box>\n            <Container maxWidth= \"xl\">\n                <Card>\n                   \n                   \n                        <CardContent>\n                        <Typography variant=\"body1\">\n                                After successful login by an existing client or registration\n                                of a new client, following screen/window will open\n                            </Typography>\n                            <Typography variant=\"body1\">\n                                Change password: To change the password, click on icon located at top right\n                                side of the screen\n                            </Typography>\n                            <CardMedia component=\"img\" src={imgQuery} />\n                            <Typography variant=\"body1\">\n                                Change password window will appear, enter the registered email id along with the new password that\n                                client wants to register for the account & click on\n                                <Button variant=\"contained\" className={classes.root}>Get OTP</Button>\n                            </Typography>\n                            <Typography variant=\"body1\">\n                                Change password: Success message window will appear showing OTP has been\n                                sent to your registered email address. Click Ok.\n                            </Typography>\n                            <CardMedia component=\"img\" src={changePasswordImg} />\n                        </CardContent>\n                    \n                </Card>\n            </Container>\n\n            <Typography variant=\"h6\" align=\"center\" id=\"changePassword\">\n                       10\n                   </Typography>\n               \n                </Box>\n\n            \n           <Box>\n           <Container maxWidth= \"xl\">\n                <Card>\n                    \n                  \n                        <CardContent>\n                            \n                        <Typography variant=\"h5\">\n                                Change password: Enter the OTP received on your registered email address & click on\n                                <Button variant=\"contained\" className={classes.root2}>Submit</Button>\n                            </Typography>\n                            <CardMedia component=\"img\" src={changePass} />\n                        </CardContent>\n                   \n                </Card>\n            </Container>\n            <Typography variant=\"h6\" align=\"center\">\n                       11\n                   </Typography>\n               </Box>\n          <Box>\n                  \n            <Container maxWidth= \"xl\">\n                <Card>\n                        <CardContent>\n                        <Typography variant=\"body1\">\n                                Change password: Success message window will appear showing “Password changed successfully”. Click ok & continue.\n                            </Typography>\n                            <CardMedia component=\"img\" src={querySuccess} />\n                            <Typography variant=\"body1\">\n                         The new password should be used for future login.\n                            </Typography>\n                            <Typography variant=\"body1\">\n                            After logging in, Mazars dashboard will appear as below\n                                </Typography>\n                            <CardMedia component=\"img\" src={querySuccess22} />\n                        </CardContent>\n                   \n                </Card>\n            </Container>\n            <Typography variant=\"h6\" align=\"center\">\n                       12\n                   </Typography>\n              </Box>\n         \n            \n          <Box>\n              <Container maxWidth= \"xl\">\n                  <Card>\n<CardContent>\n<Typography variant=\"h6\">\n                         To register a new query, click on ‘Queries’ tab & then\n                         <Button variant=\"contained\" className={classes.root2}>Fresh Query</Button> button\n                            </Typography>\n                            <CardMedia component=\"img\" src={queryNew} />\n                            <Typography variant=\"h6\">\n                         Select the category and sub-category from drop down list as per nature of your query & click on    \n                         <Button variant=\"contained\" className={classes.root2}>Submit</Button>          \n                          . Category & Sub Category should be carefully selected as these cannot be edited later on.\n                         \n                            </Typography>\n                            <CardMedia component=\"img\" src={newOne2} />\n</CardContent>\n                  </Card>\n              </Container>\n              <Typography variant=\"h6\" align=\"center\">\n                       13\n                   </Typography>\n              </Box>\n           \n\n           <Box>\n               <Container maxWidth= \"xl\">\n                   <Card>\n                       <CardContent>\n                       <Typography variant=\"h6\">\n                         Category and Sub-Category Classificati\n                            </Typography>\n                            <table className=\"table table-bordered p-2\">\n\n<tbody>\n    <tr>\n        <th>Category<sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n                <li><Typography variant='body2'>\n                Compliance\n                </Typography></li>\n                <li>\n                    <Typography variant='body2'>\n                    Assessment\n                    </Typography>\n                </li>\n                <li>\n                    <Typography variant='body2'>\n                    Appeal\n                    </Typography>\n                </li>\n                <li>\n                    <Typography variant='body2'>\n                    Advisory/Opinion\n                    </Typography>\n                </li>\n                <li>\n                    <Typography variant='body2'>\n                    Transfer Pricing\n                    </Typography>\n                </li>\n                <li>\n                    <Typography variant='body2'>\n                    Other\n                    </Typography>\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>Indirect Tax<sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n                <li><Typography variant='body2'>\n                Compliance\n                </Typography></li>\n                <li>\n                    <Typography variant='body2'>\n                    Assessment\n                    </Typography>\n                </li>\n                <li>\n                    <Typography variant='body2'>\n                    Appeal\n                    </Typography>\n                </li>\n                <li>\n                    <Typography variant='body2'>\n                    Advisory/Opinion\n                    </Typography>\n                </li>\n              \n                <li>\n                    <Typography variant='body2'>\n                    Other\n                    </Typography>\n                </li>\n            </ul>\n        </td>\n    </tr>\n    </tbody>\n    </table>\n    <Typography variant=\"h6\">\n                         Enter the complete information about your query and upload all necessary documents & click on .\n                         <Button variant=\"contained\" className={classes.root}>Submit</Button> \n                           (please see instructions below for adding fresh query) \n                                  \n                         \n                         \n                            </Typography>\n                            <CardMedia component=\"img\" src={addFreshQuery} />\n                       </CardContent>\n                   </Card>\n               </Container>\n               <Typography variant=\"h6\" align=\"center\" id=\"freshQuery\">\n                       14\n                   </Typography>\n               </Box>\n\n           \n\n<Box>\n\n<Container maxWidth= \"xl\">\n                <Card>\n                    <CardHeader \n                    title={\n                        <>\n                         <Typography variant=\"h5\">\n                         Instructions for adding Fresh Query:\n                            </Typography>\n                           \n                        </>\n                    }/>\n                   \n                        <CardContent>\n                           \n                        <table className=\"table table-bordered p-2\">\n\n<tbody>\n    <tr>\n        <th>Brief facts of the case <sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n                <li><Typography variant='body2'>\n                Enter information briefly explaining the facts of the case.\n                </Typography></li>\n               \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>Specific questions for advisory <sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Enter the specific question(s) for which you need reply/assistance/advice.\n                </Typography>\n                </li>\n                <li>\n                    <Typography variant='body2'>\n                    Multiple questions can be added by clicking \n                    <Button variant=\"contained\" className={classes.root2}>+</Button> button\n                </Typography></li>\n               \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>Case name</th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    If required, enter the name of the case\n                </Typography>\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>Assessment year</th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    From the drop-down list, select the relevant Assessment Year(s)\n                </Typography>\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>Upload your document(s)</th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Click on the Red Upward facing arrow () & \n                    select the relevant files to be uploaded. Multiple files can be selected & uploaded together.\n                </Typography>\n                </li>\n                <li>\n                    <Typography variant='body2'>\n                    Following file extensions are acceptable:\n(DOCX, gif, jpg, jpeg, png, docx, doc, pdf, xls, xlsx, odt, ods,\n msg, zip, rtf, tif, xml, xlsb, xmlb, mp3, ppt, pptx, mp4, json, wma, wav, avi, wmv)\n                </Typography>\n                </li>\n                <li>\n                    <Typography variant='body2'>\n                    Uploading document(s) is not mandatory.\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n\n    <tr>\n        <th>Format in which opinion is required <sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Click on the checkbox for the \n                    format in which opinion is required. Multiple formats can be selected.\n                </Typography>\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>Timeline within which opinion is required <sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Select the timeline within which the reply/assistance/advice is required.\n                </Typography>\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>Purpose of the query<sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    From the drop-down list, select the purpose for which the query has been made.\n                     If the option is not listed, select others. Multiple selection can be made.\n                </Typography>\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n    <th>\n        <Typography variant=\"body2\">\n        (Click on\n        <Button variant=\"contained\" className={classes.root}>Submit</Button>\n          after entering all necessary information.)\n        </Typography>\n    </th>\n    </tr>\n    </tbody>\n    </table>\n                        </CardContent>\n                   \n                </Card>\n            </Container> \n\n    <Typography variant=\"h6\" align=\"center\">\n           15\n    </Typography>\n    </Box>  \n    <Box>\n        <Container maxWidth= \"xl\">\n            <Card>\n                <CardContent>\n                <Typography variant=\"body1\">\n                         After submitting the query, Success message window will appear showing \n                         the system generated unique query number. Click Ok. Client will also receive \n                         an email message informing successful submission of the query.\n                            </Typography>\n                            <CardMedia component=\"img\" src={success2} />\n                            <Typography variant=\"body1\">\n                         After clicking on Ok, the query will be reflected under queries Tab\n                            </Typography> \n                            <CardMedia component=\"img\" src={queryList} />\n                </CardContent>\n            </Card>\n        </Container>\n        <Typography variant=\"h6\" align=\"center\">\n            16\n        </Typography>\n        </Box>            \n           \n\n         <Box>\n             <Container maxWidth= \"xl\">\n                 <Card>\n                     <CardContent>\n                     <Typography variant=\"body1\">\n                         Query Tab will show the brief status of the query,\n                          Under Action column, icons are available for different actions as below:\n                            </Typography>              \n                            <CardMedia component=\"img\" src={queryList22} />\n                            <Typography variant=\"body1\">\n                         Query Tab: Action Buttons:\n                            </Typography>\n                            <table className=\"table table-bordered p-2\">\n\n<tbody>\n    \n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={img1234} style={{height: \"30px\",  width : \"30px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Click to edit the query details\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={delImg} style={{height: \"30px\",  width : \"30px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Click to withdraw/delete the query\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={message} style={{height: \"30px\",  width : \"30px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Click to send message to Mazars Team\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={messageHistory} style={{height: \"30px\",  width : \"30px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Click to view history of messages exchanged between the client\n                     & Mazars team in respect of the query\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    </tbody>\n    </table>          \n                     </CardContent>\n                 </Card>\n             </Container>\n             <Typography variant=\"h6\" align=\"center\">\n                 17\n             </Typography>\n             </Box>  \n\n           \n           <Box>\n               <Container maxWidth= \"xl\">\n                   <Card>\n                   \n                    <CardContent>\n                    <Typography variant=\"body1\">\n                         Action Button: Edit\n                         <Button variant=\"contained\" className={classes.root2}>\n                             <CardMedia component=\"img\" src={img1234}/>\n                         </Button>\n                            </Typography>\n                           <Typography variant=\"body1\" gutterBottom color=\"primary\">\n                           Click the edit icon to edit query details.\n                            Category & Sub-category can’t be edited.\n                           </Typography>\n                           <Typography variant=\"body1\" color=\"primary\">\n                           Additional documents can also be uploaded by clicking  icon. Documents once uploaded cannot be deleted/withdrawal.\n                            Documents, therefore, should be selected carefully before being uploaded.\n                           </Typography>\n                           <CardMedia component=\"img\" src={nextImg} />\n                           <Typography variant=\"body1\">\n                         After editing the query details, click on \n                         <Button variant=\"contained\" className={classes.root}> Update </Button>\n                         . Success message window will appear showing\n                          “Query updated successfully”. Click ok\n                         \n                            </Typography>\n                            <CardMedia component=\"img\" src={queryList222} />\n                            <Typography variant=\"body1\">\n                         In case of any attempt to upload any document/file \n                         already uploaded, following message will be displayed upon clicking on\n                         <Button variant=\"contained\" className={classes.root}> Update </Button>\n                            </Typography>  \n                         </CardContent>\n                   </Card>\n               </Container>\n               <Typography variant=\"h6\" align = \"center\">\n                      18\n               </Typography>\n\n               </Box> \n           \n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <CardMedia component=\"img\" src={updateQuery} />\n            <Typography variant=\"body1\">\n                         Action Button: Delete\n                         <Button variant=\"contained\"> \n                         <CardMedia src={delImg} component=\"img\"/></Button>\n                            </Typography>\n                            <Typography variant=\"h6\" color=\"primary\">\n                            Click delete icon to delete the query.\n                            </Typography>\n                            <Typography variant=\"body1\">\n                        Delete message window will appear showing “Are you sure? Want to delete query?”. \n                        Click   <Button variant=\"contained\" className={classes.root2}> Yes, delete it </Button> if the client wants to delete the query. Otherwise click the \n                        <Button variant=\"contained\" className={classes.root3}> Cancle </Button> button </Typography>\n                          <CardMedia component=\"img\" src={deleteImg} />\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align = \"center\">\n        19\n    </Typography>\n    </Box>\n\n       <Box>\n           <Container maxWidth= \"xl\">\n               <Card>\n                   <CardContent>\n                   <Typography variant=\"body1\">\n                         After clicking on    \n                         <Button variant=\"contained\" className={classes.root3}> Yes, delete it</Button>  following window will appear showing \n                         “Please provide the reason”, enter the reason(s) \n                         for deleting the query and click\n                         <Button variant=\"contained\" className={classes.root3}> Submit</Button>\n                            </Typography>\n                            <CardMedia component=\"img\" src={rejectQuery} />\n                            <Typography variant=\"body1\">\n                         After clicking on  \n                           <Button variant=\"contained\" className={classes.root2}> Submit</Button> , the query will be deleted & message window will appear showing “Query deleted successfully”.   \n                                                  </Typography> \n                                                  <Typography variant=\"body1\">\n  Action Button: Send message\n                         <Button variant=\"contained\"> \n                         <CardMedia component=\"img\" src={message} style={{width: \"30px\", height: \"30px\"}}/></Button>\n                            </Typography>\n                          <Typography variant=\"body1\" color=\"primary\">\n                          Click send message icon to send a message to Mazars Team\n                          </Typography>\n                          <Typography variant=\"body1\" color=\"primary\">\n                          From the drop-down list, select the message type depending on the nature of message.\n                          </Typography>\n                          <Typography variant=\"body1\">\n                          Enter the message & click  \n                           <Button variant=\"contained\" className={classes.root2}> Send</Button> \n                                                  </Typography>\n                                                  <table className=\"table table-bordered p-2\">\n\n<tbody>\n    \n    <tr>\n        <th> <Typography variant=\"h6\">\n        Query No.\n            </Typography></th>\n        <td className='px-5'>\n            <Typography variant=\"h6\">\n            Concerned query number\n            </Typography>\n        </td>\n    </tr>\n    <tr>\n        <th> <Typography variant=\"h6\">\n        Message Type\n            </Typography></th>\n        <td className='px-5'>\n            <Typography variant=\"h6\">\n            Query discussion/Proposal discussion/Assignment discussion/Payment discussion for \n            messages sent during these stages of processing of query & ‘others’ for remaining type of messages\n            </Typography>\n        </td>\n    </tr>\n    <tr>\n        <th> <Typography variant=\"h6\">\n        Message\n            </Typography></th>\n        <td className='px-5'>\n            <Typography variant=\"h6\">\n            Contents of message\n            </Typography>\n        </td>\n    </tr>\n    </tbody>\n    </table>\n                   </CardContent>\n               </Card>\n           </Container>\n           <Typography variant=\"h6\" align = \"center\">\n        20\n    </Typography>\n           </Box>       \n\n            <Box>\n                <Container maxWidth= \"xl\">\n                    <Card>\n                        <CardContent>\n                        <Typography variant=\"body1\">\n                         After clicking on  <Button variant=\"contained\" className={classes.root}> Send </Button>      \n                          Success message window will appear, showing “Message sent successfully”. Click ok.\n                        \n                            </Typography> \n                            <CardMedia component=\"img\" src={queImgae} />\n                        </CardContent>\n                    </Card>\n                </Container>\n                <Typography variant=\"h6\" align = \"center\">\n                    21\n                </Typography>\n                </Box>\n           \n         <Box>\n             <Container maxWidth= \"xl\">\n                 <Card>\n                     <CardContent>\n                     <Typography variant=\"body1\">\n                         Action Button: View discussion message  <Button variant=\"contained\" className={classes.root}> <CardMedia src={messageHistory} component=\"img\"/> </Button>      \n                       \n                            </Typography> \n                            <Typography variant=\"h6\" color=\"primary\">\n                        Click view discussion message icon to view history of\n                         messages exchanged between the client & the Mazars team in respect of the query.\n                            </Typography>\n                            <Typography variant=\"h6\" color=\"primary\">\n                            Name column specifies the sender/recipient of message.\n                            </Typography>\n                            <Typography variant=\"h6\" color=\"primary\">\n                            Red right arrow indicates that the client sent the message &\n                             the recipient is as per name column\n                            </Typography>\n                            <Typography variant=\"h6\" color=\"primary\">\n                            Green left arrow indicates that the client received message \n                            from the sender mentioned in name column.</Typography>\n                            <CardMedia component=\"img\" src={showMessageHistory22} />\n                     </CardContent>\n                 </Card>\n             </Container>\n             <Typography variant=\"h6\" align = \"center\">\n                 22\n             </Typography>\n             </Box>  \n         <Box>\n             <Container maxWidth= \"xl\">\n                 <Card>\n                     <CardContent>\n                     <Typography variant=\"body1\">\n                         To view the details of query submitted, click on the query number \n                         in the queries tab or in the Proposal, Payment Status or Assignments tab.\n                            </Typography>   \n                            <CardMedia component=\"img\" src={showQuery22} />\n                            <Typography variant=\"body1\">\n                         After clicking on the query number, \n                         following details will be displayed in basic query information tab.\n                         </Typography> \n                         <CardMedia component=\"img\" src={queryDetails} />\n                     </CardContent>\n                 </Card>\n             </Container>\n             <Typography variant=\"h6\" align=\"center\">\n                 23\n                        </Typography> \n             </Box>\n\n<Box>\n\n<Container maxWidth= \"xl\">\n                <Card>\n                   \n                  \n                        <CardContent>\n                           \n                        \n                         \n                          <CardMedia component=\"img\" src={basicDetails} />\n                          <CardMedia component=\"img\" src={proposalDetails} />\n                        </CardContent>\n                   \n                </Card>\n            </Container>\n            <Typography variant=\"h6\" align = \"center\">\n                24\n            </Typography>\n    </Box>           \n          \n\n\n\n</section>\n        </>\n    )\n}\nexport default Query;","/home/pooja/MazarsRepo/src/views/ModalManual/QueryProcessing.js",["4603","4604","4605"],"import React from 'react';\nimport {Box, Container, Button, Typography,  Card, CardHeader, CardActionArea, CardContent, CardActions, CardMedia} from \"@mui/material\";\nimport processImg from \"../ManualImg/processImg.png\";\nimport img1234 from '../ManualImg/feedback.png';\nimport downloadImg from '../ManualImg/downloadImg.png';\nimport message from '../ManualImg/message.png';\nimport messageHistory from '../ManualImg/messageHistory.png';\nimport uploadMedia from '../ManualImg/uploadMedia.png';\nimport customerQuery from '../ManualImg/customerQuery.png';\nimport uploadedImg from \"../ManualImg/uploadedImg.png\";\nimport feedbackImg from '../ManualImg/feedback.png';\nimport feedbackImage from '../ManualImg/feedbackImage.png';\nimport successFeedback from '../ManualImg/successFeedback.png';\nimport { makeStyles } from '@material-ui/styles';\nconst QueryProcessing = () => {\n    const useStyle = makeStyles(theme => ({\n        root: {\n            backgroundColor: \"green\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"green\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"green\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n        root2: {\n            backgroundColor: \"blue\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n      \n\n    }))\n    const classes = useStyle()\n    return (\n        \n        <>\n        <section id=\"queryProcessing\">\n       <Box>\n       <Container maxWidth= \"xl\">\n     \n     <Card>\n         <CardHeader title={\n             <>\n               <Typography variant=\"h5\" align=\"center\">\n     Processing of query by Mazars Team.\n     </Typography>\n             <Typography variant=\"body1\">\n             Mazars Team will as quickly as possible allocate the query to a Team Leader for processing. \n             Before any query is allocated to Team Leader, following status and action buttons\n              will be visible in the query tab (S.No. 1 of the list in the screenshot)\n             </Typography>\n             <Typography variant=\"body1\">\n             Once query is allocated to a Team leader, following status & action buttons will be visible \n             for the query in the query tab (S.No. 2 of the list in the screenshot)\n                 </Typography>\n              \n             </>\n         }/>\n         <CardContent>\n         <CardMedia component=\"img\" src={processImg}/>\n         <Typography variant=\"body1\">\n                        Query Tab: Action Buttons:\n                        </Typography>\n                        <table className=\"table table-bordered p-2\">\n\n<tbody>\n    \n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={img1234} style={{height: \"30px\",  width : \"30px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Click to send feedback to Mazars Team\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={downloadImg} style={{height: \"30px\",  width : \"30px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Click to upload additional documents\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={message} style={{height: \"30px\",  width : \"30px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Click to send message to the Mazars Team\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={messageHistory} style={{height: \"30px\",  width : \"30px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Click to view history of messages exchanged with the Mazars Team\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    </tbody>\n    </table>          \n\n         </CardContent>\n     </Card>\n      </Container>\n      <Typography variant=\"h6\" align = \"center  \">\n          25\n      </Typography>\n           </Box>\n      <Box>\n          <Container maxWidth= \"xl\">\n              <Card>\n                  <CardContent>\n                  <Typography variant=\"body1\">\n                   Action Button: Upload Additional Documents\n                    <Button variant=\"contained\">\n                    <CardMedia src={downloadImg} component=\"img\" />\n                    </Button>\n                       </Typography>\n                       <Typography variant=\"body1\">\n                        After clicking on upload additional documents icon,\n                         upload documents message window will appear, click on ,\n                         <Button variant=\"contained\">Choose Files </Button> \n                         select the file(s) to be uploaded & click on\n                         <Button variant=\"contained\">Submit </Button> \n                            </Typography>\n                        <CardMedia src={uploadMedia} component=\"img\"  />\n                        <Typography variant=\"body1\">\n                        After clicking on  <Button variant=\"contained\">Submit </Button>  success message window\n                         will appear, showing name of the file(s) & uploaded successfully message. Click ok\n                        </Typography>\n                  </CardContent>\n              </Card>\n          </Container>\n          <Typography variant=\"h6\" align = \"center\">\n              26\n          </Typography>\n          </Box>\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <CardMedia src={customerQuery} component=\"img\"/>\n            <Typography variant=\"body1\">\n                        In case of any attempt to upload any document/file,\n                         already uploaded, following message will be displayed upon clicking \n                         on <Button variant=\"contained\">Submit </Button> \n                      </Typography> \n                      <CardMedia src={uploadedImg} component=\"img\"/>\n                      <Typography variant=\"body1\">\n                   Action Button: Send Feedback\n                    <Button variant=\"contained\">\n                    <CardMedia src={feedbackImg} component=\"img\" />\n                    </Button>\n                       </Typography>\n                       <Typography variant=\"body1\">\n                        After clicking on Feedback icon, Feedback message window will appear.\n                         Provide your feedback and click on   <Button variant=\"contained\">Submit </Button> \n                          . Feedback will be sent to the Mazars Team\n                       \n                            </Typography>\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align = \"center\">\n              27\n          </Typography>\n    </Box>\n\n    <Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <CardMedia src={customerQuery} component=\"img\"/>\n           \n                            <Typography variant=\"body1\">\n                            The client can send feedback from different tabs/windows where\n                             feedback icon is available.\n                                </Typography>\n                        <CardMedia src={feedbackImage} component=\"img\"  />\n                        <Typography varinat=\"body1\">\n              After clicking on <Button variant=\"contained\">Submit </Button>  success message window will\n               appear showing “Feedback sent successfully”. Click ok.\n              </Typography>\n              <CardMedia src={successFeedback} component=\"img\"  /> \n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align = \"center\" id=\"proposalProcessing\">\n              28\n          </Typography>\n    </Box>\n        </section>\n        \n        </>\n    )\n}\nexport default QueryProcessing;","/home/pooja/MazarsRepo/src/views/ModalManual/Proposal.js",["4606","4607"],"import {  Typography, Button, Card, Container, CardHeader, CardActionArea, CardActions, CardMedia, CardContent , Box} from \"@material-ui/core\";\nimport React from \"react\";\nimport rightArrow from '../ManualImg/rightArrow.png';\nimport proposalView from '../ManualImg/proposalView.png';\nimport showProposal from '../ManualImg/showProposal.png';\nimport proposalView2 from '../ManualImg/proposalView2.png';\nimport message from '../ManualImg/message.png';\nimport messageHistory from '../ManualImg/messageHistory.png';\nimport viewProposalsign from '../ManualImg/viewProposalsign.png';\nimport showProposal22 from '../ManualImg/showProposal22.png';\nimport proposalSeen from '../ManualImg/proposalSeen.png';\nimport proposalSeen2 from '../ManualImg/proposalSeen2.png';\nimport acceptProposal from '../ManualImg/acceptProposal.png';\nimport acceptProposal22 from '../ManualImg/acceptProposal22.png';\nimport proposalConfirm from '../ManualImg/proposalConfirm.png';\nimport rejectProposal from '../ManualImg/rejectProposal.png';\nimport proposal221 from '../ManualImg/proposal221.png';\nimport rejectProposalView from '../ManualImg/rejectProposalView.png';\nimport restoredProposalView from '../ManualImg/restoredProposalView.png';\nimport restoredQueryView2 from '../ManualImg/restoredQueryView2.png';\nimport restoredQueryView3 from '../ManualImg/restoredQueryView3.png';\nimport restoredQueryView from '../ManualImg/restoredQueryView.png'\nimport {makeStyles } from '@material-ui/core/styles';\nconst Proposal = () => {\n    const useStyle = makeStyles(theme => ({\n        root: {\n            backgroundColor: \"green\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"green\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"green\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n        root2: {\n            backgroundColor: \"blue\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n        root3: {\n            backgroundColor: \"red\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n\n    }))\n    const classes = useStyle()\n    return (\n        <>\n         <section id=\"proposal\">\n             <Box>\n                 <Container maxWidth= \"xl\">\n                     <Card>\n                     <CardHeader title={\n                    <Typography variant=\"h5\" align=\"center\">\n                    Processing of Proposal\n                            </Typography>\n        }/>\n                        <CardContent>\n                <Typography variant=\"body1\">\n                Mazars Team, after examining the query, will prepare a proposal & provide it to the client.\n                 An email will also be sent to the client informing about the proposal sent\n                </Typography>\n                <Typography variant=\"body1\">\n                By selecting the Proposal Tab, on the left-hand side of the following screen, the client can \n                view the proposal, by clicking on the blue arrow facing rightwards\n                <Button><CardMedia src={rightArrow} component=\"img\" style={{width: \"30px\", height: \"30px\"}} /></Button>\n                </Typography>\n                <CardMedia src={proposalView} component=\"img\" />\n                <Typography variant=\"body1\">\n                After clicking on blue arrow facing rightwards (   <Button><CardMedia src={rightArrow} component=\"img\" style={{width: \"30px\", height: \"30px\"}} /></Button>), \n                following window will appear:\n             \n                </Typography>\n                <CardMedia src={showProposal} component=\"img\" />\n              \n            </CardContent>\n                     </Card>\n                 </Container>\n                 <Typography variant=\"h6\" align=\"center\">\n                     29\n                 </Typography>\n                 </Box>\n                 \n\n                 <Box>\n                     <Container maxWidth= \"xl\">\n                         <Card>\n                             <CardContent>\n                             <Typography variant=\"body1\">\n                Engagement letter box should be checked to view the engagement letter before accepting \n                or rejecting the proposal by pressing the    \n                      <Button varinat=\"contained\" className={classes.root}>Accept</Button>   or    \n                      <Button varinat=\"contained\" className={classes.root3}>Reject</Button>        \n                       button respectively. The client can also take no action on the proposal by clicking on  \n                       <Button varinat=\"contained\" className={classes.root2}>Go Back</Button> button.\n                </Typography>\n                <Typography variant=\"body1\">\n                Upon checking the engagement letter box,\n                 proposed engagement letter will be displayed.\n                </Typography>\n                <Typography variant=\"body1\">\n                Acceptance of proposal by the client will amount to acceptance\n                 of Engagement letter.\n                </Typography>\n                <Typography variant=\"body1\">\n                Before deciding about the proposal, the client can send message to the Mazars Team for any discussion about the proposal and may accept or reject the proposal after such discussion. Conference can also be done by the Mazars Team with the client for any discussion. The Mazars \n                Team may amend the proposal and submit fresh proposal after such discussion/conference.\n                </Typography>\n                <Typography variant = \"body1\">\n                Under Proposal Tab, various action buttons will appear as per the screen below:\n                </Typography>\n                <CardMedia src={proposalView2} component=\"img\"/>\n                <table className=\"table table-bordered p-2\">\n\n<tbody>\n    \n    \n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={message} style={{height: \"20px\",  width : \"20px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    By clicking on this icon, the client can send\n                     message to the Mazars Team regarding any query\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={messageHistory} style={{height: \"20px\",  width : \"20px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    By clicking in this icon, the client can view the messages\n                     history with the Mazars Team\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={rightArrow} style={{height: \"20px\",  width : \"20px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    By clicking on this icon, the client can view proposal and its details\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={viewProposalsign} style={{height: \"20px\",  width : \"20px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    By clicking on this icon, the client can view the Engagement letter\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    </tbody>\n    </table>    \n                             </CardContent>\n                         </Card>\n                     </Container>\n                     <Typography variant=\"h6\" align=\"center\">\n                         30\n                     </Typography>\n                     </Box>\n        \n        <Box>\n            <Container maxWidth= \"xl\">\n                <Card>\n                    <CardContent>\n                   \n           \n           <table className=\"table table-bordered p-2\">\n       \n       <tbody>\n           \n           \n           <tr>\n               <th>Status</th>\n               <th>Interpretation</th>\n               <th>Screenshot listing</th>\n           </tr>\n           <tr>\n              <td>In-progress; Preparation</td>\n              <td>Mazars Team is preparing the proposal</td>\n              <td>At S.No. 1</td>\n           </tr>\n           <tr>\n              <td>In-progress; Acceptance</td>\n              <td>Mazars Team has sent the proposal to the client which is\n                   awaiting acceptance.</td>\n                   <td>At S.No.2</td>\n           </tr>\n           <tr>\n               <td>Declined; Proposal</td>\n               <td>Client has rejected the Proposal</td>\n               <td>At S.No.3</td>\n           </tr>\n           <tr>\n               <td>Accepted; Proposal</td>\n               <td>Client has accepted the proposal.</td>\n               <td>At S.No.4</td>\n           </tr>\n           </tbody>\n           </table>        \n           <CardMedia component=\"img\" src={showProposal22}/>   \n                    </CardContent>\n                </Card>\n            </Container>\n            <Typography variant=\"h6\" align=\"center\">\n                         31\n                     </Typography>\n            </Box>\n\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <Typography variant=\"body1\">\n            By selecting the Engagement Letter checkbox, the proposal can be viewed and on\nthe basis of terms and conditions mentioned in the proposal, the client can make the decision by clicking on \n           <Button variant=\"container\" className={classes.root}>Accept</Button>             or            \n           <Button variant=\"contained\" className={classes.root3}>Reject</Button>\n                </Typography>\n                <CardMedia  src={proposalSeen} component=\"img\"/>\n                <CardMedia src={proposalSeen2} component=\"img\" />\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align=\"center\">\n                         32\n                     </Typography>\n    </Box>\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n           <CardContent>\n           <Typography variant=\"body1\">\n            If the proposal is acceptable, click  <Button variant=\"container\" className={classes.root}>Accept</Button>                 button. Upon acceptance,\n             following success message window will appear showing “Proposal accepted successfully”.\n                  or            \n         \n                </Typography>\n                <CardMedia  src={acceptProposal} component=\"img\"/>\n                <Typography variant=\"body1\">\n            fter acceptance of proposal, action button right arrow (<CardMedia  component=\"img\"\n        src={rightArrow} style={{height: \"20px\",  width : \"20px\"}} />)\n             will disappear & new eye button (<CardMedia  component=\"img\"\n        src={viewProposalsign} style={{height: \"20px\",  width : \"20px\"}} />) will appear to view the accepted proposal as below:\n                </Typography>\n                <CardMedia  src={acceptProposal22} component=\"img\"/>\n               </CardContent> \n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align=\"center\">\n                         33\n                     </Typography>\n    </Box>\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <table className=\"table table-bordered p-2\">\n            <tr>\n        <th><CardMedia  component=\"img\"\n        src={viewProposalsign} style={{height: \"20px\",  width : \"20px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    By clicking on this icon, the client can view the Engagement letter as accepted \n                    by him. His acceptance is also recorded on such engagement letter electronically.\n                </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n            </table>\n            <Typography variant=\"body1\">\n            If the proposal is not acceptable, click          \n            <Button variant=\"contained\" className={classes.root3}>Reject</Button>   button. Rejection message window will appear showing “Are you sure to reject Proposal?”    </Typography>\n            <CardMedia  src={proposalConfirm} component=\"img\"/>\n            <Typography variant=\"body1\">\n            The client can still review the proposal & go back by clicking \n            <Button className={classes.root3}>Cancel</Button>         button. If sure to reject, click \n            <Button variant=\"contained\" className={classes.root}>Yes Reject it</Button>  \n                            . Upon such rejection following message will appear. Click ok  \n                            </Typography>\n                            <CardMedia  src={rejectProposal} component=\"img\"/>\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align=\"center\">\n                         34\n                     </Typography>\n    </Box>\n\n\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <Typography variant=\"body1\">\n            Upon rejection of proposal, following screen will be visible in the Proposal tab details.  \n                            </Typography> \n                            <CardMedia  src={proposal221} component=\"img\"/>\n                            <Typography variant=\"body1\">\n            In case of client inadvertently rejecting the proposal,\n             he may send message to the Mazars Team for restoring the pending proposal status by clicking on \n             <Button> <CardMedia src={message}component=\"img\"/></Button> icon.\n(S.No. 1)   </Typography>\n<CardMedia  src={rejectProposalView} component=\"img\"/>\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align=\"center\">\n                         35\n                     </Typography>\n    </Box>\n\n\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <Typography variant=\"body1\">\n            After examining the request, Mazars Team may quickly restore the pending proposal status & \n            it will be visible to the client. An email will also be sent to the client .4\n              </Typography>\n              <CardMedia  src={restoredProposalView} component=\"img\"/>\n              <Typography variant=\"body1\">\n            After the acceptance of Proposal, Proposal tab under the Query Details will show the following information.\n             The client can also download the proposal by clicking download button \n             <Button className={classes.root}>Download</Button></Typography>\n             <CardMedia  src={restoredQueryView} component=\"img\"/>\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align = \"center\">\n         36\n    </Typography>\n    </Box>\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <CardMedia src={restoredQueryView2} component=\"img\" />\n                <CardMedia src={restoredQueryView3} component=\"img\" />\n             \n            </CardContent>\n        </Card>\n    </Container>\n    </Box>\n\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <Typography variant=\"body1\">\n          Query Detail Page: Proposal\n              </Typography>\n          <table className=\"table table-bordered p-2\">\n              <tr>\n                  <td>Date of allocation</td>\n                  <td>Date of allocation of the query to a Team Leader.</td>\n              </tr>\n              <tr>\n                  <td>Name of Team Leader</td>\n                  <td>Shows the Post & Name of the Team Leader.</td>\n              </tr>\n              <tr>\n                  <td>Date of Proposal</td>\n                  <td>Date of online sending of proposal to the client by Mazars Team.</td>\n              </tr>\n              <tr>\n                  <td>Scope of Work</td>\n                  <td>Scope of work arising from the query.</td>\n              </tr>\n              <tr>\n                  <td>Amount </td>\n                  <td>Payment terms maybe fixed or monthly recurring payments.</td>\n              </tr>\n              <tr>\n                  <td>Payment Terms</td>\n                  <td>Shows the payment terms, instalment(s) amount(s) & their due dates, if any.</td>\n              </tr>\n              <tr>\n                  <td>Proposed Amount</td>\n                  <td>Amount proposed by the Mazars Team for execution of the query.</td>\n              </tr>\n              <tr>\n                  <td>Proposal Status</td>\n                  <td>After the proposal is sent to the client, status is shown as in progress & the status changes to accepted or\n                       rejected upon acceptance or rejection of the proposal by the client.</td>\n              </tr>\n              <tr>\n                  <td>Amount accepted</td>\n                  <td>Amount accepted by the client for execution of the query.</td>\n              </tr>\n              <tr>\n                  <td>Date of Acceptance / Decline</td>\n                  <td>Date of acceptance or decline of the proposal by the client.</td>\n              </tr>\n              <tr>\n                  <td>Payment History</td>\n                  <td>Shows the details of payment made by the client.</td>\n              </tr>\n              <tr>\n                  <td>Payment Received</td>\n                  <td>Shows the total amount paid by the client.</td>\n                  </tr>\n                  <tr>\n                      <td>Payment Outstanding</td>\n                      <td>Shows the outstanding amount payable by the client.</td>\n                  </tr>\n                  <tr>\n                      <td>Payment decline reason</td>\n                      <td>In case client declines to make payment of outstanding amount, Team Leader can mark the query as payment declined by the client. In this situation, \n                          reasons recorded by the Team Leader for such marking are displayed here.</td>\n                  </tr>\n                  <tr>\n                      <td>\n                          <Typography variant=\"body1\" color=\"primary\">\n                          (After accepting the proposal, the client can view progress of the query under the assignment tab)\n                          </Typography>\n                      </td>\n                  </tr>\n          </table>\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography align=\"center\" variant=\"h6\" id=\"assignProcess\">\n         38\n    </Typography>\n</Box>\n</section>\n</>\n    )\n}\nexport default Proposal;","/home/pooja/MazarsRepo/src/views/ModalManual/Assignment.js",["4608","4609","4610"],"import React from 'react';\nimport {Box, Container, Card, CardHeader, CardActionArea, CardMedia, CardContent, CardActions, Typography, Button} from '@material-ui/core';\nimport { makeStyles } from '@mui/material/styles';\nimport assignmentImage from '../ManualImg/assignmentImage.png';\nimport assignmentImage2 from '../ManualImg/assignment2.png'\nimport pdfIconImage from '../ManualImg/pdfIcon.png';\nimport assignmentImage21 from '../ManualImg/assignmentImage21.png';\nimport assignmentImage31 from '../ManualImg/assignmentImage31.png';\nimport rightClickIcon from '../ManualImg/rightClick.png';\nimport downloadIcon from '../ManualImg/downloadIcon.png';\nimport finalAssignment from '../ManualImg/finalAssignment.png';\nimport pdfAssignmentImg from '../ManualImg/pdfAssignmentImg.png';\nimport fileProcessImg from '../ManualImg/fileProcessImg.png';\nimport assignment3 from '../ManualImg/assignment3.png';\nimport assignment4 from '../ManualImg/assignment4.png';\nimport assignmentQuery from '../ManualImg/assignmentQuery.png';\nimport seeProposal from '../ManualImg/seeProposal.png';\nimport paymentHistory from \"../ManualImg/paymentHistory.png\";\nimport message from '../ManualImg/message.png';\nimport messageHistory from '../ManualImg/messageHistory.png';\n\nconst Assignment = () => {\n    return(\n        <>\n         <section id=\"assignment\">\n             <Box>\n             <Container maxWidth= \"xl\">\n            <Card>\n                <CardHeader title={\n                    <Typography variant=\"h5\">\n                        Under Assignments Tab, the client can view the processing progress of the query.\n                        </Typography>\n                }/>\n               \n                    <CardContent>\n                        <CardMedia src={assignmentImage} component=\"img\" />\n                        <Typography variant=\"body1\">\n                       After the Mazars Team has sent online draft reports for discussion with the client, following screen will be visible to the client.\n                        An email will also be sent to the client every time any draft report is uploaded\n                        </Typography>\n                        <CardMedia src={assignmentImage2} component=\"img\" />\n                    </CardContent>\n                \n            </Card>\n        </Container>\n        <Typography variant=\"h6\" align = \"center\">\n            39\n        </Typography>\n                 </Box>\n       \n       <Box>\n       <Container maxWidth= \"xl\">\n            <Card>\n                    <CardContent>\n                        <Typography variant=\"body1\">\n                      Under the Deliverable, by clicking on the view all report icon  \n                      <Button><CardMedia src={pdfIconImage} component=\"img\" style={{width: \"20px\", height: \"20px\" }}/></Button>   the draft reports can be viewed & \n                      downloaded by the client. Following screen will be visible to the client.\n                        </Typography>\n                        <CardMedia src={assignmentImage21} component=\"img\" />\n                        <Typography variant=\"body1\">\n                    After clicking on  <Button><CardMedia src={pdfIconImage} component=\"img\" style={{width: \"20px\", height: \"20px\" }}/></Button>    following screen will be visible\n                        </Typography>\n                        <CardMedia src={assignmentImage31} component=\"img\" />\n                    </CardContent>\n               \n            </Card>\n        </Container>\n        <Typography variant=\"h6\" align = \"center\">\n            40\n        </Typography>\n           </Box>\n        \n        <Box>\n            <Container maxWidth= \"xl\">\n                <Card>\n                    <CardContent>\n                    <table className=\"table table-bordered p-2\">\n                <tr>\n        <th><CardMedia  component=\"img\"\n        src={rightClickIcon} style={{height: \"20px\",  width : \"20px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Client can accept the draft report by clicking on this icon. </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n            <tr>\n        <th><CardMedia  component=\"img\"\n        src={message} style={{height: \"20px\",  width : \"20px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    In case client wants amendment in the draft report, he can send his suggestion(s) by clicking this icon. The client can also seek meeting\n                     with the Mazars Team for discussion on the draft report by sending the message. \n                      </Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th><CardMedia  component=\"img\"\n        src={downloadIcon} style={{height: \"20px\",  width : \"20px\"}} /></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    The client can also himself make changes in the draft report incorporating his suggestion & upload it for review by\n                     the Mazars Team. Only one file can be uploaded against each draft report.</Typography>\n                </li>\n                \n            </ul>\n        </td>\n    </tr>\n            </table>\n            <Typography variant=\"body1\">\n                      After the discussion on draft report(s) is completed, Mazars Team will mark the progress status of assignment as draft report completed & will move on to finalization of the report. \n                      At this stage, further discussion with the client may take place, if required.</Typography>\n                      <CardMedia src={finalAssignment} component=\"img\" />\n                    </CardContent>\n                </Card>\n            </Container>\n            <Typography variant=\"h6\" align = \"center\">\n                41\n            </Typography>\n            </Box>\n\n\n\n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <Typography variant=\"body1\">\n                        After such discussion, final reports are uploaded by the Mazars Team & are visible to the client under the deliverable’s icon   \n                        <CardMedia src={pdfIconImage} component=\"img\" style={{width: \"30px\", height: \"30px\" }}/>  as below. An email alert will also\n                         be sent to the client confirming such uploading of final reports\n                      </Typography>\n                      <CardMedia src={pdfAssignmentImg} component=\"img\" />\n                      <Typography variant=\"body1\">\nAfter clicking on   \n<Button>\n<CardMedia src={pdfIconImage} component=\"img\" style={{widht: \"30px\", height: \"30px\" }} />\n    </Button>     following screen will be visible showing final report.\n                       \n                      </Typography>\n                      <CardMedia src={fileProcessImg} component=\"img\" />\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align = \"center\">\n                42\n            </Typography>\n    </Box>\n     \n    <Box>\n        <Container maxWidth= \"xl\">\n            <Card>\n                <CardContent>\n                <Typography variant=\"body1\">\n                    After delivery of final reports, Mazars Team will mark the progress status of \n                    assignment as delivery of final report completed, below screen will be visible\n                        </Typography>\n                        <CardMedia src={assignment3} component=\"img\"/>\n                        <Typography variant=\"body1\">\n                    On receipt of full payment from the client, Mazars Team will mark \n                    awaiting completion as completed & following screen will be visible to the client\n                   </Typography>\n                   <CardMedia src={assignment4} component=\"img\"/>\n                </CardContent>\n            </Card>\n        </Container>\n        <Typography variant=\"h6\" align = \"center\">\n                43\n            </Typography>\n        </Box>   \n       \n        \n       <Box>\n           <Container maxWidth= \"xl\">\n               <Card>\n                   <CardContent>\n                   <Typography variant=\"body1\">\n                    The Assignment tab under the query details will show following information.\n                     </Typography>\n                     <CardMedia src={assignmentQuery} component=\"img\"/>\n                     <Typography variant=\"body1\">\n                 Query Detail Page: Assignment\n                 </Typography>\n                 <table className=\"table table-bordered p-2\">\n                     <tr>\n                         <td>Assignment Number</td>\n                         <td>Shows the unique assignment number allotted to the query for ease of tracking.</td>\n                     </tr>\n                     <tr>\n                         <td>Assignment date</td>\n                         <td>Shows the date on which the assignment has been created, i.e., date of acceptance of proposal. </td>\n                     </tr>\n                     <tr>\n                         <td>Proposed date of completion</td>\n                         <td>Shows the expected date of completion of assignment.</td>\n                     </tr>\n                     <tr>\n                         <td>Assignment Status</td>\n                         <td>Shows different stages of progress of the assignment.</td>\n                     </tr>\n                     <tr>\n                         <td>Time taken to complete the assignment </td>\n                         <td>Shows the number of days taken to complete the assignment.</td>\n                     </tr>\n                     </table>\n                   </CardContent>\n               </Card>\n           </Container>\n           <Typography variant=\"h6\" align = \"center\">\n                44\n            </Typography>\n           </Box>\n        <Box>\n            <Container maxWidth= \"xl\">\n                <Card>\n                    <CardContent>\n                    <Typography variant=\"body1\">\n                    Under Payment Status tab, following screen will be visible after acceptance of proposal.  </Typography>\n                    <CardMedia src={seeProposal} component=\"img\"/>\n                    <Typography variant=\"body1\">\n                 Under Payment Status tab, following action buttons are visible\n                 </Typography>\n                    </CardContent>\n                    <table className=\"table table-bordered p-2\">\n                     <tr>\n                         <td><CardMedia component=\"img\" src={paymentHistory} style={{width: \"20px\", height: \"20px\" }}/></td>\n                         <td>By clicking on this icon, the client can view the invoice and make the payment.</td>\n                     </tr>\n                     <tr>\n                     <td><CardMedia component=\"img\" src={message} style={{width: \"20px\", height: \"20px\" }}/></td>\n                         <td>Shows the date on which the assignment has been created, i.e., date of acceptance of proposal. </td>\n                     </tr>\n                     <tr>\n                     <td><CardMedia component=\"img\" src={messageHistory} style={{width: \"20px\", height: \"20px\" }}/></td>\n                         <td>By clicking on this icon, the client can view the history of messages exchanged with the Mazars Team.</td>\n                     </tr>\n                   \n                     </table>\n                     <Typography variant=\"body1\">\n                    TL name column displays the name of Team Leader.\n                    </Typography>\n                </Card>\n            </Container>\n            <Typography variant=\"h6\" align = \"center\" id=\"paymentProcess\">\n                45\n            </Typography>\n            </Box>\n       \n        \n        </section>\n        </>\n    )\n}\nexport default Assignment","/home/pooja/MazarsRepo/src/views/ModalManual/Payment.js",["4611","4612","4613"],"import React from 'react';\nimport {Box , makeStyles, Button, Typography, Card, Container, CardHeader, CardActionArea, CardActions, CardMedia, CardContent } from '@material-ui/core';\nimport paymentHistory from \"../ManualImg/paymentHistory.png\";\nimport mazars from '../ManualImg/mazars.png';\nimport pdfIconImage from '../ManualImg/pdfIcon.png';\nimport paymentView from '../ManualImg/paymentView.png';\nimport paymentWeek from '../ManualImg/paymentWeek.png';\nimport invoiceOne from '../ManualImg/invoiceOne.png';\nimport invoiceTwo from '../ManualImg/invoiceTwo.png';\nimport paymentModal from '../ManualImg/paymentModal.png';\nimport payReceiptImage from '../ManualImg/payReceiptImg.png'\nimport rightClickIcon from '../ManualImg/rightClick.png';\nimport uipReceipt from '../ManualImg/upiReceiptImg.png';\nimport successPaymentReceipt from '../ManualImg/successPaymentReceipt.png';\nimport successPaymentReceipt2 from '../ManualImg/payReceipt2.png';\nimport successPayment from '../ManualImg/successPayment.png';\nimport { Link } from '@mui/material';\nimport WhatsappRoundedIcon from '@mui/icons-material/WhatsappRounded';\nimport paymentDashboard from '../ManualImg/paymentDashboard.png';\nimport inboxDesign from '../ManualImg/inboxDesign.png';\nimport inboxDetails from '../ManualImg/inboxDetails.png';\nconst Payment = () => {\n    const useStyle = makeStyles(theme => ({\n        root : {\n            backgroundColor : \"green\", \n            color : \"white\",\n            margin : \"10px 0px\",\n            outline : \"none\",\n            '&:hover': {\n                backgroundColor : \"green\",\n                color : \"white\",\n                outline : \"none\"\n            },\n            '&:focus': {\n                backgroundColor : \"green\",\n                color : \"white\",\n                outline : \"none\"\n            }\n        },\n        root2: {\n            backgroundColor: \"blue\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n        root3: {\n            backgroundColor: \"blue\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n        root3: {\n            backgroundColor: \"black\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n    }))\n    const classes = useStyle()\n    return(\n        <>\n          <section id=\"payment\">\n              <Box id=\"paymentProcess\">\n                  <Container maxWidth= \"xl\">\n                     <Card>\n                         <CardHeader title={\n                              <Typography variant=\"h5\">\n                              Under Payment Status tab, click on pay amount icon   \n                              <Button>\n                                  <CardMedia src={paymentHistory} component=\"img\" style={{widht: \"20px\", height:\"20px\" }}/></Button>     to view invoice and make the payment.\n                                  </Typography>\n                         } />\n                             \n                         <CardContent>\n\n                     \n                   \n                        <CardMedia src={mazars} component=\"img\"/>\n                        <Typography variant=\"body1\">\n                    To view Invoice, click on icon\n                    <Button>\n                        <CardMedia src={pdfIconImage} component=\"img\" style={{widht: \"20px\", height:\"20px\" }}/></Button> \n                        appearing in the Invoice/pay column.\n                     </Typography>\n                     <CardMedia src={paymentView} component=\"img\"/>\n                         </CardContent>\n                     </Card>\n                     \n                  </Container>\n                  <Typography variant=\"h6\" align = \"center\">\n                      46\n                  </Typography>\n                  </Box>\n         \n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <CardMedia src={invoiceOne} component=\"img\" />\n                 <CardMedia src={invoiceTwo} component=\"img\"/>\n                 <Typography variant=\"body1\">\n                 The Invoice can be downloaded/printed by the client.\n                 </Typography>\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align = \"center\">\n                      47\n                  </Typography>\n    </Box>\n       \n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <Typography variant=\"body1\">\n                    For making payment, click on   \n                    <Button>\n                        <CardMedia src={rightClickIcon} component=\"img\" style={{widht: \"20px\", height:\"20px\" }}/></Button> \n    icon in the invoice/pay column.\n                                         \n                     </Typography>\n                     <CardMedia src={paymentWeek} component=\"img\"/>\n               \n               <Typography variant=\"body1\">\n               After clicking on   <Button>\n                      <CardMedia src={rightClickIcon} component=\"img\" style={{widht: \"20px\", height:\"20px\" }}/></Button>    following window opens.\n                                      \n                   </Typography>\n                   <CardMedia src={paymentModal} component=\"img\"/>\n                   <Typography variant=\"body1\">\n              The rate of TDS is indicated in the invoice and the payment window. However, the client may choose the rate of TDS,\n               the tax will be appropriately deducted & balance amount will be payable.\n                  </Typography>\n                    <Typography variant=\"body1\">\n                    After Clicking on ,<Button variant=\"contained\" className={classes.root}>\n                        Pay Now\n                        </Button> following screen will\n                     appear enabling payment of the payable amount. To make payment, click on Pay.                       \n                     </Typography>\n\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography align=\"center\" variant=\"h6\">\n        48\n    </Typography>\n    </Box>\n\n       <Box>\n           <Container maxWidth= \"xl\">\n               <Card>\n                   <CardContent>\n                   <Typography variant=\"body1\">\n                     In case, client desires to make the payment later on, \n                     he may close the “Mobilpay Bill Payment” tab.\n                         </Typography>\n                 <CardMedia src={payReceiptImage} component=\"img\"/>\n               \n                   </CardContent>\n               </Card>\n           </Container>\n           <Typography align=\"center\" variant=\"h6\">\n        49\n    </Typography>\n           </Box>\n        \n\n        <Box>\n            <Container maxWidth= \"xl\">\n                <Card>\n                    <CardContent>\n                    <Typography variant=\"body1\">\n              After clicking pay button, several payment methods become available for making the payment.\n               Select the preferred method and proceed to pay by following the instructions.\n               </Typography>\n               <CardMedia src={uipReceipt} component=\"img\"/>\n               <Typography variant=\"h5\">\n               Following payment methods are available to make payment:\n               </Typography>\n               <ol className=\"ml-2\">\n                    <li>\n                        <Typography variant=\"body1\">\n                        UPI \n                        </Typography>\n                    </li>\n                    <li>\n                        <Typography variant=\"body1\">\n                        Net Banking\n                        </Typography>\n                    </li>\n                    <li>\n                        <Typography variant=\"body1\">\n                        Wallet: Paytm, Amazon Pay, Phone Pe, Mobi Kwik, Ola Money & Jio Money\n                        </Typography>\n                    </li>\n                    <li>\n                        <Typography variant=\"body1\">\n                        Credit Card\n                        </Typography>\n                    </li>\n                    <li>\n                        <Typography variant=\"body1\">\n                        Debit Card\n                        </Typography>\n                    </li>\n                </ol>\n                    </CardContent>\n                </Card>\n            </Container>\n            <Typography variant=\"h6\" align = \"center\">\n                50\n            </Typography>\n            </Box>\n       \n\n       <Box>\n           <Container maxWidth= \"xl\">\n               <Card>\n                   <CardContent>\n                   <Typography variant=\"body1\">\n                    After successful payment, following payment receipt page will open.\n                    </Typography>\n                    <CardMedia src={successPaymentReceipt} component=\"img\"/>\n                 <CardMedia src={successPaymentReceipt2} component=\"img\"/>\n                 <Typography variant=\"body1\">\n                 An email will be sent to the client confirming successful payment\n                 </Typography>\n                 <Typography variant=\"body1\">\n                 To take a printout of the receipt, click on \n                 <Button variant=\"contained\" className={classes.root2}>Print </Button>             icon. Receipt can also be saved in the pdf format.\n                 </Typography>\n                 <Typography variant=\"body1\">\n                 URL link of the receipt can also be sent as a Whatsapp message by clicking on\n                \n                 </Typography>\n                 <Link to = \"\" style={{ color: \"skyblue\", weight: \"1000\" }}>\n                     SendToSelf\n                     <WhatsappRoundedIcon />\n                 </Link>\n                   </CardContent>\n               </Card>\n               </Container>\n       <Typography variant=\"h6\" align = \"center\">\n                51\n            </Typography>\n           </Box>\n           \n\n\n           <Box>\n           <Container maxWidth= \"xl\">\n               <Card>\n                   <CardContent>\n                   <Typography variant=\"body1\">\n                   \n                  \n                   After successful payment of any Invoice, payment status tab will immediately display the updated position of the payments made in respect of the query.\n                    The client can verify such payment by clicking on           and thereafter, clicking on\n                    </Typography>\n                    <CardMedia src={successPayment} component=\"img\"/>\n                 <Typography variant=\"body1\">\n                 In case, the client desires to make payment without logging in to the Mazars\n                  facility, he may request the Mazars team to provide URL for making payment. The Mazars team will provide the URL via email or Whatsapp message. \n                   </Typography>\n                   </CardContent>\n               </Card>\n               </Container>\n           <Typography variant=\"h6\" align = \"center\" id= \"mazarDashboard\">\n                52\n            </Typography>    \n               </Box>\n     \n       <Box>\n           <Container maxWidth= \"xl\">\n               <Card>\n                   <CardHeader title={\n                        <Typography variant=\"h5\">\n                        Dashboard: By clicking dashboard icon, the client may see the summary of processing progress\n                         of all queries raised him. Such summary is organized in four parts namely, All Queries, All Proposals, All Assignments &\n                         All Payments. Their further sub categorization is displayed below such heads.\n                      \n                       </Typography>\n                   }/>\n                   <CardContent>\n                  \n                   <CardMedia src={paymentDashboard} component=\"img\"/>\n                   </CardContent>\n               </Card>\n               </Container>\n       <Typography variant=\"h6\" align = \"center\" id=\"showMessage\">\n                53\n            </Typography> \n           </Box>\n\n       \n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardHeader title={\n                 <Typography variant=\"h5\">\n                 Dashboard: At the right-hand side of the window, Inbox icon \n                 <Button variant=\"contained\" className={classes.root4}>Inbox</Button>                will show the messages received.\n\n                </Typography>\n            }/>\n            <CardContent>\n           \n                   <CardMedia src={paymentDashboard} component=\"img\"/>\n                   <Typography variant=\"body1\">\n                    By clicking on inbox icon, following screen will\n                     appear displaying all the messages received chronologically.\n                                    </Typography>\n                                    <CardMedia src={inboxDesign} component=\"img\"/>\n            </CardContent>\n        </Card>\n        </Container>\n<Typography variant=\"h6\" align = \"center\">\n                54\n            </Typography>\n    </Box>\n  <Box>\n  <Container maxWidth= \"xl\">\n    <Card>\n        <CardContent>\n        <Typography variant=\"body1\">\n                    After clicking on any specific message, \n                    full details of such message will be displayed as below\n                                     </Typography> \n                                     <CardMedia src={inboxDetails} component=\"img\"/>\n                <table className=\"table table-bordered p-2\">\n<tr>\n    <th>Query No.</th>\n    <td>Concerned query number</td>\n</tr>\n<tr>\n    <th>Sender</th>\n    <td>Sender of message, namely: Admin, Team Leader, Tax Professional \n        or system generated for automatic messages</td>\n    </tr>\n<tr>\n    <th>Date</th>\n    <td>Date of message</td>\n</tr>\n<tr>\n    <th>Message</th>\n    <td>Contents of message</td>\n</tr>\n<tr>\n    <th>Type</th>\n    <td>Query discussion/Proposal discussion/Assignment discussion/Payment discussion\n         for messages sent during these stages  of processing of query & \n        ‘others’ for remaining type of messages.</td>\n</tr>\n                </table>  \n        </CardContent>\n    </Card>\n    </Container>\n    \n\n    \n          <Typography variant=\"h6\" align=\"center\" id=\"seceduler\">\n              55\n          </Typography>\n          </Box>\n       \n        \n        </section>\n        </>\n        \n    )\n}\nexport default Payment;","/home/pooja/MazarsRepo/src/views/ModalManual/Scheduler.js",["4614","4615","4616"],"import React from 'react';\nimport {Box, makeStyles, Button, Typography, Card, Container, CardHeader, CardActionArea, CardActions, CardMedia, CardContent } from '@material-ui/core';\nimport scheduleImg from '../ManualImg/schedulerImg.png'\nimport schFormImg from '../ManualImg/schFormImg.png';\nimport schForm2 from '../ManualImg/schForm2.png';\nimport videoCallIcon from '../ManualImg/videoCallIcon.png';\nimport message from '../ManualImg/message.png';\nconst Scheduler = () => {\n    const useStyle = makeStyles(theme => ({\n        root : {\n            backgroundColor : \"green\", \n            color : \"white\",\n            margin : \"10px 0px\",\n            outline : \"none\",\n            '&:hover': {\n                backgroundColor : \"green\",\n                color : \"white\",\n                outline : \"none\"\n            },\n            '&:focus': {\n                backgroundColor : \"green\",\n                color : \"white\",\n                outline : \"none\"\n            }\n        },\n        root2: {\n            backgroundColor: \"blue\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n        root3: {\n            backgroundColor: \"blue\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n        root3: {\n            backgroundColor: \"black\",\n            color: \"white\",\n            margin: \"10px 0px\",\n            outline: \"none\",\n            '&:hover': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            },\n            '&:focus': {\n                backgroundColor: \"blue\",\n                color: \"white\",\n                outline: \"none\"\n            }\n        },\n    }))\n    const classes = useStyle()\n    return(\n        <>\n           <section>\n               <Box>\n                   <Container maxWidth= \"xl\">\n                       <Card>\n                           <CardHeader  title={\n                                 <Typography variant=\"h5\">\n                                 For organizing Video conferences or meetings with the client & the Mazars Team members,\n                                  schedule facility may be used. Whenever, any meeting is organized by the Mazars Team \n                                  on the request of client or otherwise, it will be visible to the client as below.\n                                  An email alert will also be sent to the client informing scheduling of the meeting.\n                                 </Typography>\n                           }/>\n                           <CardContent>\n                         \n                     <CardMedia src={scheduleImg} component=\"img\"/>\n                     <Typography variant=\"body1\">\n                  Schedule: By double clicking on the meeting schedule other than \n                  the camera icon the client can view full details of the meeting\n                   including the <Button variant=\"contained\" className={classes.root}> Discussion on </Button>\n                 participants as per the below screen. \n                      </Typography>\n                      <CardMedia src={schFormImg} component=\"img\"/>\n                           </CardContent>\n                       </Card>\n                   </Container>\n                   <Typography variant=\"h6\" align = \"center\">\n                       56\n                   </Typography>\n                   </Box>\n    \n    \n<Box id= \"schMeeting\">\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <Typography variant=\"body1\">\n                  The client may join the meeting by clicking on \n                  <Button variant=\"contained\" className={classes.root}> <CardMedia src={videoCallIcon} component=\"img\" style={{width: \"20px\", height: \"20px\" }}/></Button>     , at the scheduled date & time.\n</Typography>\n<CardMedia src={schForm2} component=\"img\"/>\n \n<Typography variant=\"body1\">\n                    The client can make request for meeting with the Mazars Team by \n                    sending message after clicking message icon  \n                    <Button><CardMedia component=\"img\" src={message} /></Button>    \n                    available in different tabs. During such meeting the client will \n                    be able to discuss and present documents for discussion in the meeting.\n\n                    </Typography>\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align = \"center\" id = \"feedbackProcess\">\n                       57\n                   </Typography>\n    </Box>\n\n   \n     </section>\n        </>\n    )\n}\nexport default Scheduler;","/home/pooja/MazarsRepo/src/views/ModalManual/Feedback.js",["4617","4618","4619"],"import React from 'react';\nimport {Box, makeStyles, Button, Typography,  Card, Container, CardHeader, CardActionArea, CardActions, CardMedia, CardContent } from '@material-ui/core';\nimport feedbackImageDetails from '../ManualImg/feedbackImageDetails.png'\nimport feedBackIcon from '../ManualImg/feedback.png';\nimport feedbackQueryDetails from '../ManualImg/feedbackQueryDetails.png';\nconst Feedback = () => {\n    return(\n        <>\n          <section id= \"feedback\">\n              <Box>\n                  <Container maxWidth= \"xl\">\n                      <Card>\n                          <CardHeader title={\n  <Typography variant=\"h5\">\n  Feedback: On clicking feedback   <Button variant=\"contained\"> <CardMedia src={feedBackIcon} component=\"img\" style={{width: \"20px\", height: \"20px\" }}/></Button>    \n      following screen will display all the feedback messages sent chronologically.\n      </Typography>\n                          }/>\n                          <CardContent>\n                        \n                      <CardMedia src={feedbackImageDetails} component=\"img\"/>\n                          </CardContent>\n                      </Card>\n                  </Container>\n                  <Typography variant=\"h6\" align =\"center\">\n                      58\n                  </Typography>\n                  </Box>\n            \n<Box>\n    <Container maxWidth= \"xl\">\n        <Card>\n            <CardContent>\n            <Typography variant=\"body1\">\n                  Individual feedback message of any query will also\n                   be visible under the feedback tab in query details\n                      </Typography>\n                      <CardMedia src={feedbackQueryDetails} component=\"img\"/>\n            </CardContent>\n        </Card>\n    </Container>\n    <Typography variant=\"h6\" align =\"center\">\n                      59\n                  </Typography>\n    </Box>\n\n   \n     </section>\n        </>\n    )\n}\nexport default Feedback;","/home/pooja/MazarsRepo/src/views/ModalManual/Content.js",["4620","4621","4622","4623","4624","4625","4626","4627","4628"],"import React from 'react';\nimport { makeStyles, Button, Typography, Card, Container, CardHeader, CardActionArea, CardActions, CardMedia, CardContent } from '@material-ui/core';\n// import { Link} from \"react-scroll\";\nimport {Link} from 'react-router-dom';\nimport {mainScroll as scroll} from 'react-scroll';\nimport MyPDF from '../ManualImg/manual.pdf';\nconst Content  = () => {\n    const goToRow = (e) => {\n        console.log(\"e3\", e)\n            const anchor = document.querySelector(e)\n            console.log(\"an\", anchor)\n            anchor.scrollIntoView({ behavior: 'smooth', block: 'center' })\n         \n    }\n    return (\n        <>\n         <Container maxWidth= \"xl\">\n         <Card>\n            \n             <div className=\"row mx-1 my-2\">\n                 <div className=\"col-md-6\">\n                 <Typography variant=\"h4\" style={{color: \"#0071ce\", fontSize: \"22px\", fontWeight: 700}}>\n                Contents\n               \n                      </Typography>\n                 </div>\n                 <div className=\"col-md-6\" style={{display: \"flex\", justifyContent : \"flex-end\"}}>\n                 <a href={MyPDF} className=\"btn btn-secondary\" target=\"_blank\"> \n                 Download Manual</a>\n                \n                     </div>\n                 \n                 </div>\n            \n                 <CardContent>\n                   \n<table style={{display : \"flex\", flexDirection : \"column\", width: \"100vw\"}}>\n    <tr onClick = {() => goToRow(\"#onlyLogin\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n            For New Client Registration\t\n        </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            02\n        </td>\n    </tr>\n    <tr onClick = {() => goToRow(\"#existing\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n        For Existing Client\n        </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            05\n        </td>\n    </tr>\n\n    <tr onClick = {() => goToRow(\"#forgetPassword\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n        Forgot Password \n        </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            06\n        </td>\n    </tr>\n    <tr onClick = {() => goToRow(\"#changePassword\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n        Change Password\t \n        </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            11\n        </td>\n    </tr>\n    <tr onClick = {() => goToRow(\"#freshQuery\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n        Register Fresh Query\n        </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            15\n        </td>\n    </tr>\n   \n    <tr onClick = {() => goToRow(\"#proposalProcessing\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n        Proposal processing  </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            29\n        </td>\n    </tr>\n    <tr onClick = {() => goToRow(\"#assignProcess\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n        Assignment process\n          </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            39\n        </td>\n    </tr>\n    <tr onClick = {() => goToRow(\"#paymentProcess\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n        Making Payment\n          </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            46\n        </td>\n    </tr>\n    <tr onClick = {() => goToRow(\"#mazarDashboard\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n        Mazars Dashboard\n          </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            53\n        </td>\n    </tr>\n    <tr onClick = {() => goToRow(\"#showMessage\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n        Message Inbox\n          </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            55\n        </td>\n    </tr>\n    <tr onClick = {() => goToRow(\"#seceduler\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n        Scheduling a meeting\n          </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            56\n        </td>\n    </tr>\n    <tr onClick = {() => goToRow(\"#feedbackProcess\")} style={{display : 'flex'}}>\n        <td className=\"modalManualTable\"> \n        Sending feedback\n          </td>\n        <td className=\"modalManualTable\">\n          \n            </td>\n        <td className=\"modalManualTablePage\">\n            57\n        </td>\n    </tr>\n  \n                       \n                       </table>\n      \n                 </CardContent>\n           \n         </Card>\n     </Container>\n        </>\n    )\n}\nexport default Content;","/home/pooja/MazarsRepo/src/views/ModalManual/Login.js",["4629","4630","4631","4632"],"import React from 'react';\nimport {Paper, Box, Container, Typography, Button, Card, CardActionArea, CardHeader, CardMedia, CardContent, CardActions } from '@material-ui/core';\nimport {makeStyles} from \"@material-ui/styles\";\nimport RegistrationInfo from \"./RegistrationInfo\";\nimport RegError from './RegError';\nimport loginImg from \"../ManualImg/loginImg.png\";\nimport IgnologinImg from \"../ManualImg/ignologinImg.png\";\nimport successregImg from \"../ManualImg/successReg.png\";\nimport style from './manula.module.css';\nconst useStyle = makeStyles(theme => ({\n    root : {\n        backgroundColor : \"#0071ce\", \n        color : \"white\",\n        margin : \"10px\",\n        outline : \"none\",\n        '&:hover': {\n            backgroundColor : \"green\",\n            color : \"white\",\n            outline : \"none\"\n        },\n        '&:focus': {\n            backgroundColor : \"green\",\n            color : \"white\",\n            outline : \"none\"\n        }\n    },\n   \n   \n}))\nconst Login = () => {\n    const classes = useStyle()\n    const goToRow = (e) => {\n        console.log(\"e3\", e)\n            const anchor = document.querySelector(e)\n            console.log(\"an\", anchor)\n            anchor.scrollIntoView({ behavior: 'smooth', block: 'center' })\n         \n    }\n    return(\n        <>\n       \n             <secton id=\"login\">\n           <Box id=\"onlyLogin\">\n           <Container maxWidth= \"xl\">\n            <Card> \n           <CardHeader  title={\n               <>\n             <span className=\"modalTextHeading\"> visit :  </span>\n               <a href=\"https://masindia.live/#/\" target=\"_blank\">https://masindia.live/#/\n               </a>\n               </>\n           } subheader= \"(To post a query, visit Mazar’s portal by clicking above link.)\"/>\n                <CardActionArea>\n                   \n               <CardContent>\n               <CardMedia component=\"img\" src={loginImg}/>\n               </CardContent>\n                </CardActionArea>\n                </Card>\n                </Container>\n              \n              \n                <Container maxWidth= \"xl\">\n                <Card>\n                    <CardHeader  title={\n                        <>\n                        <span className=\"modalTextHeading\">\n                        For New Client: Click on \n                        </span>\n                        <Button variant=\"secondary\"\n                        onClick = {() => goToRow(\"#signUp2\")}\n                         className={classes.root}>Sign Up</Button>\n                       \n    \n                            \n                        </>\n                    } subheader=\"(Click on sign up icon, mentioned below “For new client” to register.)\"/>\n                   <CardActionArea>\n                   \n                   <CardContent>\n                   <CardMedia component=\"img\" src={IgnologinImg}/>\n                   </CardContent>\n               </CardActionArea>\n                    </Card>\n        \n                    </Container>\n                   <Typography variant=\"h6\" align=\"center\">\n                       02\n                   </Typography>\n               </Box>\n        <Box>\n        <Container maxWidth= \"xl\">\n                <Card>\n                    <CardHeader  title={\n                        <>\n                        \n                        </>\n                    }  subheader=\"\"/>\n                 \n                   \n                <CardContent>\n                <span className=\"modalTextHeading\">\n                        Provide your basic information to complete the registration.\n                       \n                            </span>\n                            <Typography variant=\"body2\">\n                            (On clicking sign up for registration, \n                    following screen will open to enter basic information.)\n                                </Typography>\n                <table className=\"table table-bordered p-2\">\n\n<tbody>\n    <tr>\n        <th>Name <sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n                <li><Typography variant='body2'>\n                Enter full name or any chosen name\n                </Typography></li>\n                <li>\n                    <Typography variant='body2'>\n                    For registration of business/entity, enter the legal name of the business/entity\n                    </Typography>\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>Email Address <sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    Enter personal email address or the email address of any representative or authorized signatory of the business/entity\n                    </Typography>\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>Occupation/Profession <sup className='declined'>*</sup></th>\n       <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant=\"body2\">\n                    From drop down list, select your occupation/profession\n                    </Typography>\n                </li>\n                <li>\n                    <Typography variant='body2'>\n                    In case of business/entity, select the occupation/ profession of the representative or authorized signatory, who is registering for query\n                    </Typography>\n                </li>\n            </ul>\n        </td> \n    </tr>\n    <tr>\n        <th>Country/State/City <sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n                <li>\n                    <Typography variant='body2'>\n                    From drop down list, select the Country/State/City. City or State may also be entered/typed\n                    </Typography>\n                </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>Mobile Number <sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n               <li>\n                   <Typography variant='body2'>\n                   Enter the valid numeric mobile number\n                   </Typography>\n               </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>Zip Code <sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n               <li>\n                   <Typography variant='body2'>\n                   Enter the valid Zip Code or Pin Code\n                   </Typography>\n               </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n        <th>GST IN</th>\n        <td className='px-5'>\n            <ul>\n               <li>\n                   <Typography variant='body2'>\n                   Enter the valid 15-digit, PAN based Alpha Numeric GST IN number of the business/entity, if applicable\n                   </Typography>\n               </li>\n            </ul>\n        </td>\n    </tr>\n    <tr>\n    <th>Password <sup className='declined'>*</sup></th>\n        <td className='px-5'>\n            <ul>\n               <li>\n                   <Typography variant='body2'>\n                   Choose a password that should be minimum of eight characters, including at least one upper case, lower case, special character and number\n                   </Typography>\n               </li>\n            </ul>\n        </td>\n    </tr>\n   \n</tbody>\n</table>\n                <RegistrationInfo />\n                </CardContent>\n              \n                    </Card>\n        \n                    </Container>\n        </Box>\n       \n        <Box>\n           <Container maxWidth= \"xl\" id=\"onlyLogin\">\n            <Card> \n         \n                   \n               <CardContent>\n       \n        <Typography variant='h5' variantMapping={{\n        h5 : \"span\"\n    }}>\n    After clicking on  <Button variant=\"contained\" className={classes.root}>Send Otp</Button> Success message will appear.\n     Click ok and enter the OTP to register & click on  <Button variant=\"contained\" className={classes.root}>Submit</Button>\n    </Typography>\n   \n<CardMedia component=\"img\"  src={successregImg}/>\n<Typography variant='h5'>\nIf the OTP entered is incorrect then Error message window will appear showing “Incorrect OTP, please try again\n</Typography>\n       \n               </CardContent>\n             \n                </Card>\n                </Container>\n              \n                <Typography variant=\"h6\" align=\"center\">\n                       04\n                   </Typography>\n               \n               </Box>\n               <RegError />\n             </secton>\n        \n     \n           \n    </>\n    )\n}\nexport default Login;","/home/pooja/MazarsRepo/src/views/About/About.js",["4633","4634","4635"],"import React from 'react';\nimport Layout from \"../../components/Layout/Layout\";\nimport { Card, CardBody, CardTitle, CardHeader, Row, Col } from 'reactstrap';\nimport { Typography } from '@material-ui/core';\nconst About = () => {\n    const userId = window.localStorage.getItem(\"userid\")\n    return (\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n\n            <Card style={{margin: \"10px\"}}>\n\n                <CardHeader>\n                    <h4 style={{ textAlign: \"center\" }} className=\"contentTitle\">About Us</h4>\n                </CardHeader>\n                <CardBody style={{ display: \"flex\", flexDirection: \"column\", textAlign: \"justify\" }}>\n                <Typography variant=\"h5\" align=\"center\">\n    Mazars\n    </Typography>\n    <Typography variant=\"subtitle\">\n    Mazars is an internationally integrated partnership, specialising in audit, accountancy, advisory and tax services. Operating in over 90 countries and territories around the world, we draw on the expertise of more than 44,000 professionals – 28,000+ in Mazars’ integrated partnership and 16,000+ via the Mazars North America \n    Alliance – to assist clients of all sizes at every stage in their development\n         </Typography>\n         <Typography variant=\"h5\" align=\"center\">\n         Mazars in India\n    </Typography>\n    <Typography variant=\"subtitle\">\n    In India, Mazars has an ambitious growth plan and already has a national presence with a strong team of over 1,000 professionals with 7 offices located in Bangalore, Chennai, Delhi (and Delhi NCR), Hyderabad, Kolkata, Mumbai and Pune. Our professionals have in-depth experience in sectors like Energy, Telecom, BFSI, Automobiles,\n     Technology, Real Estate, Shipping, Services, Manufacturing and Retail\n        </Typography>\n  \n</CardBody>\n            </Card>\n        </Layout>\n    )\n}\nexport default About;","/home/pooja/MazarsRepo/src/views/About/AboutOuter.js",["4636","4637","4638","4639"],"import React from 'react';\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer';\nimport { styled } from '@material-ui/core';\nimport {Box} from \"@material-ui/core\"\nimport { Card, CardBody, CardTitle, CardHeader, Row, Col } from 'reactstrap';\nimport { Button, Typography } from \"@material-ui/core\";\nimport { OuterloginContainer } from '../../components/Common/OuterloginContainer';\nimport classes from './design.module.css';\n\nconst AboutOuter = () => {\n    return(\n        <>\n<OuterloginContainer>\n<Header noSign=\"noSign\"/>\n<div className={classes.articleContent}>\n<div className={classes.articlesDetails}>\n          <Card style={{display : \"flex\", width: \"100%\", boxShadow: \"none\", border: \"1px solid #fff\"}}>\n\n<CardHeader>\n<h3 style={{textAlign: \"center\", width: \"100%\"}}>About Us</h3>    \n        </CardHeader>\n<CardBody style={{textAlign: \"center\"}}>\n<Row>\n          <Col md=\"12\">\n          <Typography variant=\"h4\" py={2} align=\"left\">\n    Mazars\n    </Typography>    \n\n   <p style={{textAlign : \"left\"}}> \n    Mazars is an internationally integrated partnership, specialising in audit, accountancy, advisory and tax services. Operating in over 90 countries and territories around the world, we draw on the expertise of more than 44,000 professionals – 28,000+ in Mazars’ integrated partnership and 16,000+ via the Mazars North America \n    Alliance – to assist clients of all sizes at every stage in their development.\n         </p>\n         <Typography variant=\"h4\" py={2} align=\"left\">\n         Mazars in India\n    </Typography>\n   <p style={{textAlign : \"left\"}}>\n    In India, Mazars has an ambitious growth plan and already has a national presence with a strong team of over 1,000 professionals with 7 offices located in Bangalore, Chennai, Delhi (and Delhi NCR), Hyderabad, Kolkata, Mumbai and Pune. Our professionals have in-depth experience in sectors like Energy, Telecom, BFSI, Automobiles,\n     Technology, Real Estate, Shipping, Services, Manufacturing and Retail.\n        </p>\n            </Col>\n           \n          </Row>\n</CardBody>\n</Card>\n  \n          </div>\n        </div>\n        <Footer />\n</OuterloginContainer>\n      </>\n    );\n  }\nexport default AboutOuter;","/home/pooja/MazarsRepo/src/views/Contact/ContactOuter.js",["4640"],"import React from 'react';\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer';\nimport { Card, CardBody, CardTitle, CardHeader, Row, Col } from 'reactstrap';\nimport { OuterloginContainer } from '../../components/Common/OuterloginContainer';\nimport classes from './../About/design.module.css';\nconst ContactOuter = () => {\n    return(\n        <>\n<OuterloginContainer>\n<Header noSign=\"noSign\"/>\n        \n        \n<div className={classes.articleContent}>\n<div className={classes.articlesDetails}>\n                 <Card style={{display : \"flex\", width: \"100%\", border : \"1px solid #fff\",\n               boxShadow : \"none\"}}>\n       \n       <CardHeader>\n       <h3 style={{textAlign: \"center\", width: \"100%\"}}>Contact Us</h3>    \n               </CardHeader>\n       <CardBody style={{textAlign: \"center\"}}>\n       <Row>\n                 <Col md=\"12\">\n                   \n                   \n                 <h4>106-107, Mercantile House</h4>\n           <h4>Kasturba Gandhi Marg, Connaught Place</h4>\n       \n           <h4>New Delhi-110001, India</h4>\n       \n       <div>\n           {/* Email : <a href=\"mailto: support@masindia.live\">support@masindia.live</a> */}\n           Email : <a href=\"mailto: support@masindia.live\">support@masindia.live</a>\n           </div>\n       <div>\n       Tel:<a href=\"tel:+496170961709\"> +91 11-43684444</a>\n       </div>\n                   </Col>\n                  \n                 </Row>\n       </CardBody>\n       </Card>\n         \n                 </div>\n               </div>\n         \n         \n               <Footer />\n</OuterloginContainer>\n      </>\n    );\n  }\nexport default ContactOuter;","/home/pooja/MazarsRepo/src/views/ModalManual/AllComponentManual.js",["4641","4642"],"import React from 'react';\nimport Query from './Query';\nimport QueryProcessing  from './QueryProcessing';\nimport Proposal from './Proposal';\nimport Assignment from './Assignment';\nimport Payment from './Payment';\nimport Scheduler from './Scheduler';\nimport Feedback from './Feedback';\nimport Content from './Content';\nimport Login from './Login';\nimport { Container } from '@material-ui/core';\nimport { useEffect } from 'react';\nconst AllComponentManual = (tar) => {\n   \n    const goToRow = (e) => {\n     \nconst anchor = document.getElementById(e.tar)\n      console.log(anchor)\n     if(anchor){\n        anchor.scrollIntoView({ behavior: 'smooth', block: 'center' })\n     }\n     \n}\n\nuseEffect(() => {\n    goToRow(tar)\n}, [])\nreturn(\n    <>\n\n<div style={{display : \"flex\", height : \"80vh\", overflow : \"scroll\", fontSize : \"#fff\"}}>\n<Container maxWidth = \"xl\">\n<Login />\n<Query />\n <QueryProcessing />\n <Proposal />\n <Assignment />\n <Payment />\n<Scheduler />\n <Feedback />\n</Container>\n</div>\n\n</>\n)\n}\nexport default AllComponentManual;","/home/pooja/MazarsRepo/src/components/Common/MessageIcon.js",[],"/home/pooja/MazarsRepo/src/views/QueryContact/QueryContact.js",["4643"],"import React, {useState} from 'react';\nimport { Grid, Box, Container} from '@material-ui/core';\nimport {useForm} from 'react-hook-form';\nimport { useHistory} from 'react-router-dom';\nimport mazars from \"../../assets/images/mazars-logo.png\";\nimport style from './QueryStyle.module.css';\nimport Header from \"../../components/Header/Header\";\nimport axios from 'axios';\nimport { baseUrl } from \"../../config/config\";\nimport Swal from 'sweetalert2';\nimport classNames from 'classnames';\nimport Footer from './../../components/Footer/Footer';\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { OuterloginContainer } from '../../components/Common/OuterloginContainer';\nimport * as yup from \"yup\";\nconst Schema = yup.object().shape({\n    p_email: yup.string().email(\"invalid email\").required(\"\"),\n    p_name: yup.string().required(\"\"),\n    p_message: yup.string().required(\"\"),\n    p_info: yup.string().required(\"\"),\n    acceptTerms: yup.bool()\n    .oneOf([true], 'Accept Ts & Cs is required')\n  });\nconst QueryContact = () => {\n    const [check, setCheck] = useState(true)\n    let history = useHistory()\n    const { handleSubmit, register, errors } = useForm(\n        {\n            resolver: yupResolver(Schema),\n        }\n    );\n    \n    const onSubmit = (value) => {\n        console.log(\"data\", value.p_info)\n        let formData = new FormData();\n        formData.append(\"enquiry_type\", value.p_info);\n        formData.append(\"name\", value.p_name);\n        formData.append(\"email\", value.p_email);\n        formData.append(\"message\", value.p_message);\n     axios({\n         method :\"POST\",\n         url : `${baseUrl}/customers/enquirysubmit`,\n         data : formData\n     })   \n     .then((res) => {\n         console.log(\"response\", res)\n         if(res.data.code === 1){\n             Swal.fire({\n                 title : \"success\",\n                 html : \"Your enquiry submitted successfully, our team will contact you soon\",\n                 icon : \"success\"\n             })\n             history.push(\"/\")\n         }\n         else{\n             Swal.fire({\n                 title : \"error\",\n                 html :\"Something went wrong, please try again\",\n                 icon : \"error\"\n             })\n         }\n     })\n    }\n    return (\n        <>\n\n<OuterloginContainer>\n<Header noSign=\"noSign\"/>\n\n                       \n<Container maxWidth=\"md\">\n    <Grid container justify=\"center\">\n        <Grid item lg={12} sm={12}>\n\n       \n             <form onSubmit={handleSubmit(onSubmit)}>\n             <Grid item lg={12}>\n                   <Box className={style.myFormBox}>\n                   <label className = {style.formFieldLegend}>\n                   MAS Enquiry Form\n                   </label>\n                  \n                  <select \n                     ref={register}\n                     name=\"p_info\"\n                     className={classNames(`form-control ${style.mySelectBox}`, {\n                        \"is-invalid\": errors.p_info,\n                      })}>\n                         \n                      <option value=\"General enquiries - MAS\">General enquiries - MAS </option>\n                      <option value=\"Business Advisory Services - MAS\">Business Advisory Services - MAS </option>\n                  </select>\n                   </Box>\n                  </Grid> \n                  <Grid item lg={12}>\n                  <Box className={style.myFormBox}>\n                  <input \n                    type = \"text\" \n                    name = \"p_name\"\n                     ref={register}\n                 placeholder = \"Type here your name\"\n                 className={classNames(`form-control ${style.myNameBox}`, {\n                    \"is-invalid\": errors.p_name,\n                  })}\n               />\n                      </Box>\n                \n                  </Grid> \n                  <Grid item lg={12}>\n                  <Box className={style.myFormBox}>\n                  <input \n                     ref={register}\n                     name = \"p_email\"\n                 placeholder = \"Type here your e-mail address\"\n                 className={classNames(`form-control ${style.myNameBox}`, {\n                     \"is-invalid\" : errors.p_email\n                 })}\n                 type = \"text\" />\n                      </Box>\n                \n                  </Grid>  \n                  <Grid item lg={12}>\n                   <Box className={style.myFormBox}>\n                   <label className = {style.formFieldLegend}>\n                Your message*\n\n                   </label>\n                 <textarea \n                    ref={register}\n                    name = \"p_message\"\n                 placeholder=\"Type your message here\"\n                 className={classNames(`form-control ${style.formTextArea}`,\n                 {\n                     \"is-invalid\" : errors.p_message\n                 })}>\n\n                 </textarea>\n                   </Box>\n                  </Grid> \n                  <Grid item lg={12}>\n                   <Box className={style.myFormBox}>\n                   <div className=\"form-check\">\n<input  \ntype=\"checkbox\"\nid=\"flexCheckDefault\"\nref={register}\nname=\"acceptTerms\" \nonChange={(e) => setCheck(!check)}\nclassName={classNames(`form-check-input`,\n                 {\n                     \"mainCheckBox\" : errors.acceptTerms \n                 })} />\n<label className = {style.formChoice} for=\"flexCheckDefault\">\nI accept that MAS will process my personal data for the purpose of handling my request.\n</label>\n</div>\n                   </Box>\n                  </Grid>\n                  <Grid item lg={12}>\n                   <Box className={style.myFormBox}>\n              <button type=\"submit\" className={style.formButton}>Send</button>\n                   </Box>\n                  </Grid> \n             </form>\n           \n        </Grid>\n        \n    </Grid>\n   \n</Container>\n<Footer />\n</OuterloginContainer>\n        </>\n    )\n}\nexport default QueryContact;","/home/pooja/MazarsRepo/src/components/DataTablepopulated/DataTabel.js",["4644","4645"],"import React from \"react\";\nimport { Container , Paper} from  \"@material-ui/core\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { styled } from \"@material-ui/styles\";\n\n\nconst DataTablepopulated = (props) => {\n    const colorCode = props.bgColor;\n\nconst MyContainer = styled(Container)({\n    display: 'flex',\n    height : \"65vh\",\n    maxWidth: \"1920px\", \n    width: \"100%\",\n   \n    overflowY : 'auto',\n    \"& thead\": {\n        position :\"sticky\",\n        top : \"0\",\n        zIndex : 1,\n        border : \"0px\",\n        color : \"#fff\",\n        backgroundColor : `${props.bgColor}`\n     \n      \n    }, \n    \"& thead tr th\" : {\n     border : \"0px\",\n     fontSize : \"0.9rem\",\n     padding: \"5px\"\n    },\n\n    \"& tbody tr td\" : {\n       padding : \"0.50rem\",\n        fontSize : \"0.77rem\",\n    }\n   \n })\n    return(\n        <>\n{\n    props.data ?\n    <MyContainer disableGutters>\n \n <BootstrapTable \n  keyField = {props.keyField}\n  data = {props.data}\n  columns = {props.columns}\n  rowStyle = {props.rowStyle2}\n  rowIndex/>\n\n</MyContainer> : \"\"\n}\n        </>\n    )\n\n}\nexport default DataTablepopulated;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/CMS.js",["4646","4647","4648","4649","4650","4651"],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/CmsContent.js",["4652","4653","4654","4655","4656","4657","4658","4659","4660","4661","4662","4663"],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/FlashMessage.js",["4664","4665","4666","4667","4668","4669","4670","4671","4672"],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/MessageModal.js",["4673","4674","4675","4676","4677","4678","4679","4680","4681"],"import React, {useState, useEffect} from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport axios from 'axios';\nimport { baseUrl } from '../../../config/config';\nimport Swal from 'sweetalert2';\nimport classNames from \"classnames\";\nimport { useForm } from \"react-hook-form\";\nconst MessageModal = (\n    {\n       messageBox,\n       messageFun,\n       edit, \n       editData,\n       getList,\n       isEdit,\n       setMessageBox\n      }\n      \n) => {\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\n    const [news , setNews] = useState(\"\")\n    const [heading, setHeading] = useState(\"\")\n    const [stats, setStats] = useState(false)\n    const userId = localStorage.getItem(\"adminkey\")\n    useEffect(() => {\n        getEditData()\n    }, [edit])\n\n    const getEditData = (e) => {\n       console.log(\"editData\", editData)\n       if(editData && editData.id !== undefined && edit === true){\n        axios.get(`${baseUrl}/admin/getallnews?uid=${JSON.parse(userId)}&id=${editData.id}`)\n        .then((res) => {\n           console.log(\"res\",editData)\n           res.data.result.map((i) => {\n               setHeading(i.heading)\n               setNews(i.news)\n               if(i.status == \"1\"){\n                   setStats(true)\n               }\n               else{\n                   setStats(false)\n               }\n           })\n        })\n       }\n      \n     \n    }\n    const onSubmit = (value) => {\n        let formData = new FormData()\n       if(edit === false){\n        formData.append(\"news\", news);\n       {\n      stats === true ?\n      formData.append(\"status\", 1):\n      formData.append(\"status\", 0)\n    }\n        formData.append(\"heading\", value.p_heading)\n       }\n       else{\n        formData.append(\"news\", news);\n        formData.append(\"heading\", value.p_heading)\n       {\n      stats === true ?\n      formData.append(\"status\", 1):\n      formData.append(\"status\", 0)\n    }\n        formData.append(\"id\", editData.id)\n       }\n     axios({\n\n         method : \"POST\",\n         url : `${baseUrl}/admin/setnews`,\n         data : formData\n     })\n     .then((res) => {\n         console.log(\"response\", res)\n         if(res.data.code === 1){\n           setHeading(\"\")\n           setNews(\"\")\n           setStats(false)\n             Swal.fire({\n                 message : \"success\", \n                 html : \"Message added successfully\",\n                 icon : \"success\"\n             })\n        setMessageBox(false)\n         getList()\n         isEdit(false)\n     \n        \n         }\n         else{\n             Swal.fire({\n                 message : \"error\",\n                 html : \"Something went wrong, please try again\",\n                 icon : \"error\"\n             })\n           \n         }\n     })\n    }\n    const myLabel = (e) => {\n        console.log(\"eee\", e.target.value)\n        setStats(!stats)\n    }\n    return(\n      <>\n\n        <Modal isOpen={messageBox} toggle={messageFun} size=\"md\">\n            <ModalHeader toggle={messageFun}> News </ModalHeader>\n            <ModalBody>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <div className=\"row\">\n<div className=\"col-md-12\">\n    <label>Heading </label>\n    <input \n    type=\"text\"\n    name=\"p_heading\"\n    value={heading}\n    onChange={(e) => setHeading(e.target.value)}\n    className={classNames(\"form-control\", {\n        \"is-invalid\" : errors.p_heading\n    })}\n     ref={register({required : true})} />\n    </div>\n<div className=\"col-md-12\">\n    <label>Message </label>\n<textarea\n                        className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          ref={register({ required: true })}\n                          name=\"p_message\"\nonChange = {(e) => setNews(e.target.value)}\nvalue = {news}\nstyle={{height: \"200px\"}}\n>\n\n</textarea>\n    </div>\n    <div className=\"col-md-3\">\n \n<span style={{margin : \"10px 0\"}}>\n<input type=\"checkbox\" style={{margin : \"10px 0px\"}} name=\"hide\" checked = {stats} id=\"hide\" onChange= {(e) => myLabel(e)}></input>\n<label htmlFor=\"hide\" style={{margin : \"10px\"}}> Visible</label>\n</span>\n         </div>\n         <div className=\"col-md-12\">\n<button type=\"submit\" className=\"customBtn my-2\">Submit</button> </div>\n\n</div>\n\n</form>\n \n            </ModalBody>\n        </Modal>\n      </>\n    )\n}\nexport default MessageModal;","/home/pooja/MazarsRepo/src/views/Login/Updates.js",["4682","4683","4684","4685","4686","4687","4688","4689","4690"],"import { useState, useEffect } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer';\nimport './style.css';\nimport {Box} from \"@material-ui/core\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { Markup } from \"interweave\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { baseUrl, baseUrl3 } from '../../config/config';\nimport ima from \"../../mazars_logo.png\";\nimport classesCustom from './design.module.css';\nimport CommonServices from '../../common/common.js';\nimport {  VscFilePdf} from \"react-icons/vsc\";\nimport { OuterloginContainer } from \"../../components/Common/OuterloginContainer\";\nimport {Typography, Breadcrumbs, Table, TableContainer, \n  TableHead, TablePagination, TableBody, TableRow, TableCell} from \"@material-ui/core\";\n\nconst ArticleWrapper = styled(Box)({\n  display: \"flex\", \n  flexDirection: \"column\",\n \n  padding: \"5px\"\n})\nconst MyContainer = styled(Box)({\n  display : \"flex\", \n  justifyContent : \"center\", \n  alignItems : \"center\", \n  width: \"100%\",\n  flexDirection : \"column\"\n})\nconst ArticleHeader = styled(Box)({\n  display : \"flex\",\n  width: \"100%\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  backgroundColor: \"#e4f0fa\",\n\n  padding: \"10px 5px\",\n  margin: \"8px 0px\"\n})\nconst MyLogo = styled(Box)({\n  display : \"flex\",\n  width: \"100%\",\n  height: \"auto\",\n  maxWidth: \"100px\",\n  objectFit: \"contain\"\n})\nconst MyHeading = styled(Box)({\n  display : \"flex\",\n  justifyContent: \"space-between\"\n})\nconst RightContent = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\"\n})\nconst useStyle = makeStyles({\n  imgResponsive : {\n    display : \"flex\",\n    maxWidth: \"25%\",\n    height : \"50px\", \n    cursor : \"pointer\",\n   alignItems : \"space-between\",\n    justifyContent: \"center\",\n    textAlign : \"justify\"\n  }\n})\n\nfunction Updates() {\n \n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [linkData, setLinkData] = useState([])\n  const [showData, setShowData] = useState(false)\n  const [updates, isUpdates] = useState(false)\n  const [myData, setMyData] = useState()\n  const [ description, setDescription] = useState(false)\n  const [linkData22, showLinkData22] = useState(false)\n  let history = useHistory()\n  let id = useParams()\n  const getId = history.location.index;\nuseEffect(() => {\n  showLinkData()\n}, [])\nconst showLinkData = () => {\n \n  \n    if(getId === 3){\n    axios.get(`${baseUrl}/customers/getimportantlink`)\n    .then((res) => {\n     console.log(\"res\", res)\n      setLinkData(res.data.result)\n      showLinkData22(true)\n      isUpdates(false)\n    })\n   }\n   else if (getId === 4){\n    axios.get(`${baseUrl}/customers/getpage?page=${getId}`)\n    .then((res) => {\n      console.log(\"res\", res)\n      setLinkData([res.data.result])\n      isUpdates(false)\n    })\n   }\n   else{\n    axios.get(`${baseUrl}/customers/getupdated`)\n    .then((res) => {\n     isUpdates(true)\n      setLinkData(res.data.result)\n    })\n   }\n  }\n  \n  \n  \n  if(window.location.origin === \"http://masindia.live\" && window.location.protocol == 'http:'){\n    window.location.href = window.location.href.replace('http:', 'https:')\n  }\n  \n  \n\n const getData = (e) => {\nsetDescription(true);\nsetMyData(e)\n }\n const onChangePage = (event, nextPage) => {\n  setPage(nextPage)\n}\nconst onChangeRowsPerPage = (e) => {\n  setRowsPerPage(e.target.value)\n}\n  \nconst classes = useStyle()\n\n  return (\n    <>\n    <OuterloginContainer>\n      <Header noSign=\"noSign\" getData = {setShowData} />\n     <MyContainer>\n   \n  \n   {\n     description === false ? \n     <div className={classesCustom.articleContent}>\n     <div className={classesCustom.articlesDetails}>\n\n  <>\n {\n   updates === true ?\n  <TableContainer>\n       <Breadcrumbs separator=\"<\" maxItems={3} aria-label=\"breadcrumb\">\n  <Link underline=\"hover\" color=\"inherit\" to={{\n    pathname : \"/customer/updates\",\n    index : 2\n  }}>\n   Updates\n  </Link>\n  \n \n  </Breadcrumbs>\n    <Table>\n      <TableBody>\n      {\n  linkData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((i, e) => (\n        <TableRow>\n          <TableCell  onClick={(p) => getData(i)}className=\"tableCellStyle\">\n         <span>\n         <span style={{color: \"rgb(61, 71, 117\"}}>\n           {`${e + 1} .`}\n           </span> <span className=\"tabHover updatesLink\">\n     {` ${i.heading} -    ${i.publish_date.split(\"-\").reverse().join(\"-\")}`}\n      </span>\n  </span>\n          </TableCell>\n        </TableRow>\n         ))\n        }\n      </TableBody>\n    </Table>\n   {\n     linkData.length > 10 ?\n     <TablePagination \n     rowsPerPageOptions = {[5, 10, 15, 20, 25]}\n     count = {linkData.length}\n     rowsPerPage = {rowsPerPage}\n     page = {page}\n     onChangePage = {onChangePage}\n     onChangeRowsPerPage = {onChangeRowsPerPage}\n      /> : \"\"\n   }\n  </TableContainer>\n   : \n   <>\n   \n    <TableContainer>\n    {linkData22 === true ? <>\n    <Breadcrumbs separator=\"<\" maxItems={3} aria-label=\"breadcrumb\">\n  <Link underline=\"hover\" color=\"inherit\" to={{\n    pathname : \"/customer/updates\",\n    index : 3\n  }}>\n  Important Links\n  </Link>\n  \n\n  </Breadcrumbs>\n    <Table>\n    <TableHead>\n   <TableRow>\n     <TableCell style= {{width : \"50px\"}}>S.No</TableCell>\n     <TableCell style={{width : \"400px\"}}>Website</TableCell>\n     <TableCell>Url</TableCell>\n   </TableRow>\n   </TableHead>\n      <TableBody>\n      {\n  linkData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((i, e) => (\n \n <>\n\n  \n    <TableRow>\n      <TableCell style={{padding: \"8px 16px\"}} className=\"tableCellStyle\">\n     \n        {e + 1}\n      </TableCell>\n      <TableCell>\n        {i.heading}\n      </TableCell>\n      <TableCell>\n        <a href={i.url} target=\"_blank\">{i.url}</a>\n      </TableCell>\n    </TableRow>\n \n </>\n         ))\n        }\n      </TableBody>\n    </Table>\n    </> : \"\" }\n    {linkData22 === false ? <>\n {\n   linkData.length > 0 ?\n   <Breadcrumbs separator=\"<\" maxItems={3} aria-label=\"breadcrumb\">\n   <Link underline=\"hover\" color=\"inherit\" to={{\n    pathname : \"/customer/updates\",\n    index : 4\n  }}>\n   FAQs\n   </Link>\n   \n   \n   </Breadcrumbs> : \"\"\n }\n   {\n     linkData.map((i) => (\n      <Markup className=\"myFaq\" content = {i.content} />\n     ))\n   }\n    </> : \"\" }\n    {\n      linkData.length > 10 ?\n      <TablePagination \n        rowsPerPageOptions = {[5, 10, 15, 20, 25]}\n        count = {linkData.length}\n        rowsPerPage = {rowsPerPage}\n        page = {page}\n        onChangePage = {onChangePage}\n        onChangeRowsPerPage = {onChangeRowsPerPage}\n         /> : \"\"\n    }\n  </TableContainer>\n   </>\n }\n  </>\n \n   </div>\n\n </div> : \n   <div className={classesCustom.articleContent}>\n   <div className={classesCustom.articlesDetails}>\n   <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n  \n  <Link underline=\"hover\" color=\"inherit\" to = {{\n  pathname : \"/customer/updates\",\n  index : 2\n}}>\n   Updates\n  </Link>\n \n  </Breadcrumbs>\n  <div style={{margin: \"20px 0 10px 0\"}}>\n    <ArticleWrapper>\n  <ArticleHeader>\n  <MyLogo>\n<Link to = \"/\">\n<img className={classesCustom.myLogo} src={`${ima}`}/>\n</Link>\n</MyLogo>\n<RightContent>\n<h4 style={{color: \"#081f8f\", fontWeight: 600, letterSpacing: \"0.1rem\"}}>Mazars Advisory Solutions (MAS)</h4>\n<span style={{color: \"#0071ce\", fontSize: \"18px\"}}>Building Lasting Relationships</span>\n<a href=\"https://www.masindia.live\" target=\"_blank\">www.masindia.live.com</a>\n</RightContent>\n  </ArticleHeader>\n  \n  <div>\n           <MyHeading>\n           <h5>  {CommonServices.capitalizeFirstLetter(myData.heading)}</h5>\n           <a href={`${baseUrl3}/${myData.file}`} target=\"_blank\" \n    className={classes.myLink}>\n\n    <button className=\"downloadBtnPdf\"> Download  <VscFilePdf style={{display: \"flex\",\n     margin: \"0 10px\", color: \"#e4f0fa\", width: \"20px\", height: \"20px\"}} /></button>\n    </a> \n         \n           </MyHeading>\n\n           <h6>Date -   {myData.publish_date.split(\"-\").reverse().join(\"-\")} </h6>\n         \n            \n             </div>\n     \n    <Markup content={myData.content} />\n    </ArticleWrapper>\n  </div>\n   \n </div>\n\n</div>\n\n   }\n     </MyContainer>\n\n\n      <Footer />\n      </OuterloginContainer>\n    </>\n  );\n}\n\nexport default Updates;\n","/home/pooja/MazarsRepo/src/pages/Admin/CMS/UpdatesContent.js",["4691","4692","4693","4694","4695","4696","4697","4698","4699","4700","4701","4702","4703","4704","4705","4706","4707"],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/Updates.js",["4708","4709","4710","4711","4712","4713"],"/home/pooja/MazarsRepo/src/views/Tax/Indirect.js",["4714","4715","4716","4717","4718"],"\nimport React , {useState, useEffect} from 'react';\nimport Header from \"../../components/Header/Header\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { Link } from 'react-router-dom';\nimport Data from './directData.js';\nimport axios from 'axios';\nimport { baseUrl } from '../../config/config';\nimport Footer from '../../components/Footer/Footer';\nimport classesCustom from './design.module.css';\nimport { OuterloginContainer } from '../../components/Common/OuterloginContainer';\nimport { Button, Breadcrumbs, Box, Typography, Table, TableContainer, \nTableHead, TablePagination, TableBody, TableRow, TableCell } from \"@material-ui/core\";\nconst MyContainer = styled(Box)({\n    display : \"flex\", \n    justifyContent : \"center\", \n    alignItems : \"center\", \n    width: \"100%\",\n    flexDirection : \"column\"\n  })\nconst Indirect = () => {\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n    const [data, setData] = useState([])\n    let wirtten = \"-\"\n    const onChangePage = (event, nextPage) => {\n        setPage(nextPage)\n    }\n    const onChangeRowsPerPage = (e) => {\n        setRowsPerPage(e.target.value)\n    }\n    const getData =() => {\n        axios.get(`${baseUrl}/customers/getarticles?type=indirect`)\n        .then((res) => {\n          console.log(\"response\", res)\n          setData(res.data.result)\n        })\n    }\n  useEffect(()=> {\n      getData()\n  }, [])\n    return(\n       <>\n        <OuterloginContainer>\n        <Header noSign=\"noSign\" />\n        <MyContainer>\n   \n  \n        <div className={classesCustom.articleContent}>\n     <div className={classesCustom.articlesDetails}>\n\n          <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n          <Link underline=\"hover\" color=\"inherit\" to=\"/customer/direct\">\n  Articles\n  </Link>\n  <Link underline=\"hover\" color=\"inherit\" to=\"/customer/indirect\">\n  Indirect Tax\n  </Link>\n  \n \n</Breadcrumbs>\n   \n    <TableContainer>\n        <Table>\n        <TableBody>\n               {\n                   data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((i, e) => (\n                    <TableRow>\n                    <TableCell className=\"tableCellStyle\">\n                    <Link to = {{\n                            pathname : \"/customer/details\",\n                            index : i.id,\n                            hash : \"indirect\"\n                        }}>\n                    {e + 1} {i.heading} {wirtten} <span style={{fontWeight: \"bold\",  margin:\"0 10px\"}}>{i.writer}</span>\n                    -  {i.publish_date.split(\"-\").reverse().join(\"-\")}\n                        </Link>\n                    </TableCell>\n                </TableRow>\n                   ))\n               }\n               \n            </TableBody>\n        </Table>\n       {\n           data.length > 10 ?\n           <TablePagination \n           rowsPerPageOptions = {[5, 10, 15, 20, 25]}\n           count = {data.length}\n           rowsPerPage = {rowsPerPage}\n           page = {page}\n           onChangePage = {onChangePage}\n           onChangeRowsPerPage = {onChangeRowsPerPage}\n            /> : \"\"\n       }\n    </TableContainer>\n          </div>\n      \n        </div>\n      \n       </MyContainer>\n       <Footer />\n        </OuterloginContainer>\n       </>\n  \n    )\n}\nexport default Indirect;","/home/pooja/MazarsRepo/src/views/Tax/Direct.js",["4719","4720","4721","4722","4723"],"import React , {useState, useEffect} from 'react';\nimport Header from \"../../components/Header/Header\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport {baseUrl} from '../../config/config';\nimport Footer from '../../components/Footer/Footer';\nimport { Button, Box, Typography, Table, TableContainer, \nTableHead, TablePagination, TableBody, TableRow, TableCell } from \"@material-ui/core\";\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport classesCustom from './design.module.css';\nimport { OuterloginContainer } from '../../components/Common/OuterloginContainer';\nconst MyContainer = styled(Box)({\n    display: \"flex\",\n  padding : \"0 15px\",\n  height: \"100%\",\n  flexDirection: \"column\",\n  justifyContent: \"space-between\"\n  })\nconst Direct = () => {\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n    const [data, setData] = useState([])\n    const [count2, setCount] = useState(0)\n    let wirtten = \"-\"\n    const onChangePage = (event, nextPage) => {\n        setPage(nextPage)\n    }\n    const onChangeRowsPerPage = (e) => {\n        setRowsPerPage(e.target.value)\n    }\n    const getData =() => {\n        axios.get(`${baseUrl}/customers/getarticles?type=direct`)\n        .then((res) => {\n          console.log(\"response\", res)\n          setData(res.data.result)\n          console.log(\"resDaata\", res.data.result.length)\n          setCount(res.data.result)\n        })\n    }\n  useEffect(()=> {\n      getData()\n  }, [])\n    return(\n       <>\n<OuterloginContainer>\n<Header noSign=\"noSign\" />\n        <MyContainer>\n   \n  \n        <div className={classesCustom.articleContent}>\n     <div className={classesCustom.articlesDetails}>\n\n          <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n          <Link underline=\"hover\" color=\"inherit\" to=\"/customer/direct\">\n  Articles\n  </Link>\n  <Link underline=\"hover\" color=\"inherit\" to=\"/customer/direct\">\n  Direct Tax\n  </Link>\n  \n  \n</Breadcrumbs>\n    <TableContainer>\n        <Table>\n            <TableBody>\n               {\n                   data && data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((i, e) => (\n                    <TableRow>\n                    <TableCell className=\"tableCellStyle\">\n                        <Link to = {{\n                            pathname : \"/customer/details\",\n                            index : i.id,\n                            hash : \"direct\"\n                        }}>\n                   {`${e + 1 } . ${i.heading} ${wirtten}` } <span style={{fontWeight: \"bold\",  margin:\"0 10px\"}}>{i.writer}</span>\n                  -  {i.publish_date.split(\"-\").reverse().join(\"-\")}\n                        </Link>\n                    </TableCell>\n                </TableRow>\n                   ))\n               }\n               \n            </TableBody>\n        </Table>\n    \n            {\n                data.length > 10 ?\n                <TablePagination \n                rowsPerPageOptions = {[5, 10, 15, 20, 25]}\n                count = {data.length}\n                rowsPerPage = {rowsPerPage}\n                page = {page}\n                onChangePage = {onChangePage}\n                onChangeRowsPerPage = {onChangeRowsPerPage} />\n              : \"\"    \n            }\n      \n    </TableContainer>\n          </div>\n      \n        </div>\n      \n       </MyContainer>\n       <Footer />\n</OuterloginContainer>\n       </>\n  \n    )\n}\nexport default Direct;","/home/pooja/MazarsRepo/src/views/Tax/directData.js",[],"/home/pooja/MazarsRepo/src/views/Tax/Details.js",["4724","4725","4726","4727","4728","4729","4730","4731","4732","4733","4734"],"import React , {useState, useEffect} from 'react';\nimport Header from \"../../components/Header/Header\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport Footer from '../../components/Footer/Footer';\nimport { useHistory, useParams  } from 'react-router';\nimport axios from 'axios';\nimport { baseUrl, baseUrl3 } from '../../config/config';\nimport { Markup } from 'interweave';\nimport {Breadcrumbs, Box, Typography } from \"@material-ui/core\";\nimport CommonServices from '../../common/common.js';\nimport {  VscFilePdf} from \"react-icons/vsc\";\nimport classes from './design.module.css';\nimport ima from \"../../mazars_logo.png\";\nimport { OuterloginContainer } from '../../components/Common/OuterloginContainer';\nimport { Link } from 'react-router-dom';\nconst MyContainer = styled(Box)({\n    display : \"flex\", \n    justifyContent : \"center\", \n    alignItems : \"center\", \n    width: \"100%\",\n    flexDirection : \"column\"\n  })\n  const Disclamair = styled(Box)({\ndisplay: \"flex\",\nflexDirection: \"column\",\nwidth:\"100%\",\npadding: \"20px\"\n  })\n  const ArticleWrapper = styled(Box)({\n    display: \"flex\", \n    flexDirection: \"column\",\n  \n    padding: \"5px\"\n  })\n  const ArticleHeader = styled(Box)({\n    display : \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n   \n    backgroundColor: \"#e4f0fa\",\n  \n    padding: \"10px 5px\",\n    margin: \"8px 0px\"\n  })\n  const MyLogo = styled(Box)({\n    display : \"flex\",\n    width: \"100%\",\n    height: \"auto\",\n    maxWidth: \"100px\",\n    objectFit: \"contain\"\n  })\n  const MyHeading = styled(Box)({\n    display : \"flex\",\n    justifyContent: \"space-between\"\n  })\n  const RightContent = styled(Box)({\n    display: \"flex\",\n    flexDirection: \"column\"\n  })\nconst Details = () => {\n  let history = useHistory();\n  let getId = useParams();\n  const [data, setData] = useState([])\n  const [linkdata, setLinkData] = useState(\"direct\")\n \n  useEffect(() => {\n    getData()\n  }, [])\n  const getData = (e) => {\n   \n   if(history.location.index !== undefined){\n    axios.get(`${baseUrl}/customers/getarticles?id=${history.location.index}`)\n    .then((res) => {\n     \n      setData(res.data.result)\n      if(history.location.hash == \"#direct\"){\n        setLinkData(\"direct\")\n      }\n      else if(history.location.hash == \"#indirect\"){\n        setLinkData(\"indirect\")\n      }\n    })\n  }\n}\n\n    return(\n       <>\n       <OuterloginContainer>\n       <Header noSign=\"noSign\"/>\n        <MyContainer>\n   \n  \n        <div className={classes.articleContent}>\n         {\n           data.map((i) => (\n            <div className={classes.articlesDetails}>\n             <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n             <Link underline=\"hover\" color=\"inherit\" to=\"/customer/direct\">\n  Articles\n  </Link>\n  <Link underline=\"hover\" color=\"inherit\" to = {`/customer/${linkdata}`}>\n  {CommonServices.capitalizeFirstLetter(linkdata) + \" tax\"}\n  </Link>\n  \n \n</Breadcrumbs>\n<ArticleWrapper>\n<ArticleHeader>\n<MyLogo>\n<Link to = \"/\">\n<img className={classes.myLogo} src={`${ima}`}/>\n</Link>\n\n</MyLogo>\n<RightContent>\n<h4 style={{color: \"#081f8f\", fontWeight: 600, letterSpacing: \"0.1rem\"}}>Mazars Advisory Solutions (MAS)</h4>\n<span style={{color: \"#0071ce\", fontSize: \"18px\"}}>Building Lasting Relationships</span>\n<a href=\"https://www.masindia.live\" target=\"_blank\">www.masindia.live</a>\n</RightContent>\n  </ArticleHeader>\n           <div>\n           <MyHeading>\n           <h5>  {CommonServices.capitalizeFirstLetter(i.heading)}</h5>\n         \n          <a href={`${baseUrl3}${i.file}`} target=\"_blank\">\n          <VscFilePdf style={{display: \"flex\", width: \"40px\", height: \"40px\"}} />\n          </a>\n         \n         \n           </MyHeading>\n            <h6>Writer :  {i.writer} </h6>\n            <h6> Email : {i.email} </h6>\n           <h6>Date of publishing :   {i.publish_date.split(\"-\").reverse().join(\"-\")} </h6>\n         \n            \n             </div>\n     <div id=\"artContent\">\n    <Markup content={i.content} />\n    </div>\n    <a href={`${baseUrl3}/${i.file}`} target=\"_blank\" \n    className={classes.myLink}>\n\n    <button className=\"downloadBtnPdf\"> Download  <VscFilePdf style={{display: \"flex\",\n     margin: \"0 10px\", color: \"#e4f0fa\", width: \"20px\", height: \"20px\"}} /></button>\n    </a> \n   \n    </ArticleWrapper>\n            </div>\n        \n           ))\n         }\n        </div>\n      \n       </MyContainer>\n       <Footer />\n       </OuterloginContainer>\n       </>\n  \n    )\n}\nexport default Details;","/home/pooja/MazarsRepo/src/views/Tax/LatestUpdats.js",["4735","4736","4737","4738","4739","4740"],"import React , {useState, useEffect} from 'react';\nimport Header from \"../../components/Header/Header\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { baseUrl } from '../../config/config';\nimport { Box } from \"@material-ui/core\";\nimport { useHistory } from 'react-router';\nimport { Markup } from 'interweave';\nimport Footer from '../../components/Footer/Footer';\nconst MyContainer = styled(Box)({\n    display : \"flex\", \n    justifyContent : \"center\", \n    alignItems : \"center\", \n    width: \"100%\",\n    flexDirection : \"column\"\n  })\n \nconst LatestUpdates = () => {\n    const [news, getNews] = useState([])\n    const [pos,setPos] = useState(1200);   \n    const [run, setRun] = useState(true);\n    const [description, setDescription] = useState({})\n    let history = useHistory()\n    let getId = history.location.index;\n    let  width = 1200\n    useEffect(() => {\n        latestNews()\n      }, [])\n      const latestNews = () => {\n        axios.get(`${baseUrl}/customers/getnews`)\n        .then((res) =>{\n        let pp = []\n        console.log(\"getId\", getId, history)\n          if(res.data.code === 1){\n            res.data.result.map((i) => {\n             pp.push(i)\n             if(i.id === getId){\n              \n               setDescription(i)\n             }\n            })\n            getNews(pp)\n          }\n        })\n      }\n      const scrollEff = () => {\n        if(run) setPos(p=>p<width? p+1: -width);        \n      }\n      \n      useEffect(() => {\n        const tm = setTimeout(scrollEff, 10);\n        return () => clearTimeout(tm);\n      },[pos]);\n      \n      const onMouseEnter = (e) => {\n        // console.log(\"mouse enter\");\n        setRun(false);\n      }\n      \n      const onMouseLeave = (e) => {\n        // console.log(\"mouse leave\");\n        setRun(true);\n        setPos(pos+1); // to trigger useEffect \n      }\n      const styles = {\n        position: \"relative\", \n        fontSize: \"1em\",\n        right: pos + \"px\"\n      };\n\n    return(\n       <>\n        <Header noSign=\"noSign\" />\n        <MyContainer>\n   \n        <div style={{width: \"100%\", marginBottom : \"15px\", \n  padding: \"3px 0px\", fontSize: \"14px\", backgroundColor : \"rgb(159 155 155 / 39%)\"}}> \n  <h1 style={styles} \n            onMouseEnter={onMouseEnter} \n            onMouseLeave={onMouseLeave} \n        >\n  {\n     news.map((i, e) => (\n<>\n<span style={{padding: \"0px 20px\", fontSize: \"16px\", color: \"464b4b\"}}> \n\n <Link className=\"tabHover\" to = {{\n  pathname : \"/customer/latestupdates\",\n  index : i.id\n                        }}>\n{i.heading} \n</Link> </span> {e < news.length - 1 === true ? <span> | </span> : \"\"}\n</> \n\n     ))\n   }\n  </h1>\n    </div>\n    <div className=\"StartPageDetails\">\n          <div className=\"mainContent222\">\n          <h4>{description.heading} </h4>\n   <Markup content={description.news} />\n\n          </div>\n      \n        </div>\n      \n       </MyContainer>\n       <Footer />\n       </>\n  \n    )\n}\nexport default LatestUpdates;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Links.js",["4741","4742","4743","4744","4745","4746","4747","4748","4749","4750","4751","4752","4753","4754","4755","4756","4757","4758","4759","4760","4761"],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/Linklist.js",["4762","4763","4764","4765","4766","4767"],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/FaqList.js",["4768","4769","4770","4771","4772","4773","4774","4775","4776","4777","4778","4779"],"import React , {useState, useEffect} from 'react';\nimport Layout from \"../../../components/Layout/Layout\";\nimport {Container} from '@material-ui/core';\nimport {\n  Card,\n  CardBody,\n} from \"reactstrap\";\nimport axios from 'axios';\nimport { styled } from \"@material-ui/styles\";\nimport { useHistory } from 'react-router';\nimport { baseUrl } from '../../../config/config';\nimport DataTablepopulated from '../../../components/DataTablepopulated/DataTabel';\nimport  {DeleteIcon, EditQuery,} from \"../../../components/Common/MessageIcon\";\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { Markup } from 'interweave';\nimport CommonServices from \"../../../common/common\";\nimport GirdExamplefaq from './GridExamplefaq';\nconst MyContainer = styled(Container)({\n\n})\nconst Updates = () =>{ \n    const userId = window.localStorage.getItem(\"adminkey\");\n    const [list, setList] = useState([])\n    const [check, setCheck] = useState(false)\n    let history = useHistory()\n    useEffect(() => {\n      getList()\n    }, [])\n  \n    const getList = () => {\n      axios.get(`${baseUrl}/cms/getallfaq?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n      console.log(\"ress\", res)\n       if(res.data.code === 1){\n        setList(res.data.result)\n        \n       }\n      })\n    }\n   \n \n\nreturn (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n\n<Container maxWidth=\"xl\">\n<div className=\"headingContent\">\n        <h4>FAQs </h4>\n        <Link to={`/cms/faq`}>\n<button \n    \n    className=\"autoWidthBtn rightAlign my-2\">Add FAQ</button>\n      </Link> \n        </div>\n\n        <Card>\n          <CardBody>\n        \n                    <GirdExamplefaq />\n          </CardBody>\n          </Card>\n    </Container>\n</Layout>\n  );\n}\n\nexport default Updates;\n\n\n\n\n","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Faq.js",["4780","4781","4782","4783","4784","4785","4786","4787","4788","4789","4790","4791","4792","4793","4794","4795"],"import React, {useState, useEffect} from 'react';\nimport { Container } from '@material-ui/core';\nimport {  styled } from '@mui/material';\nimport axios from 'axios';\nimport { baseUrl } from '../../../config/config';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport './map.css';\nimport Swal from 'sweetalert2';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\nimport { useHistory, useParams } from 'react-router';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n  } from \"reactstrap\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport AddEditor from './AddEditor';\nconst MyContainer = styled(Container)({\n\n})\nconst Faq = () => {\n    const [det, addDet] = useState();\n    const [question, setQuestion] = useState(\" \")\n    const [stats, setStats] = useState(false)\n    let history = useHistory()\n    let getId = useParams()\n    const userId = localStorage.getItem(\"adminkey\")\n    const { handleSubmit, register, errors, getValues } = useForm();\n    // useEffect(() => {\n    //     getData()\n    //   }, [])\n    //   const getData = (e) => {\n    //     console.log(\"getId\", getId.id)\n    //    if(getId.id !== undefined){\n    //     axios.get(`${baseUrl}/cms/pagelist?uid=${JSON.parse(userId)}&id=${getId.id}`)\n    //     .then((res) => {\n        \n    //      if(res.data.code === 1){\n    //     res.data.result.map((i) => {\n    //       if(i.id === getId.id){\n           \n    //        addDet(i.content)\n    //       }\n    //     })\n    //      }\n    //     })\n    //    }\n    //   }\n    const onSubmit = (e) => {\n      \n        let formData = new FormData();\n       \n        formData.append(\"question\", question);\n        formData.append(\"answer\", det);\n        formData.append(\"status\", Number(stats))\n      \n        axios({\n            method : \"POST\", \n            url : `${baseUrl}/cms/setfaq`,\n            data : formData\n        })\n        .then((res) => {\n           if(res.data.code === 1){\n               Swal.fire({\n                   title : \"success\",\n                   html : \"Faq added successfully\",\n                   icon : \"success\"\n               })\n               history.push(\"/cms/faqlist\")\n           }\n        })\n    }\n    const myLabel = (e) => {\n   \n     setStats(!stats)\n }\n \n    return(\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n        <Container maxWidth=\"xl\">\n        <div className=\"py-2\">\n      <Row>\n          <Col md=\"4\">\n          <button\n                className=\"autoWidthBtn\" \n                onClick={() => history.goBack()}\n              >\n               \n                Go Back\n              </button>\n              \n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4>FAQs</h4>\n            </Col>\n            </Row>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n          \n         \n        \n         \n           <div className=\"row\">\n             <div className=\"col-md-6\">\n             <label className=\"form-label\">Question</label> \n                   <textarea\n                    \n                   value = {question}\n                   onChange={(e) => setQuestion(e.target.value)}\n                   className = \"form-control\">\n                     </textarea>\n               </div>\n               <div className=\"col-md-12 py-2\">\n               <label className=\"form-label\">Answer</label> </div>\n               \n               <div className=\"col-md-12\">\n               <AddEditor />\n                   </div>\n           </div>\n           <div className=\"row\">\n         <div className=\"col-md-3\">\n \n <span style={{margin : \"10px 0\"}}>\n <input type=\"checkbox\" style={{margin : \"10px 0px\"}} name=\"hide\" checked = {stats} id=\"hide\" onChange= {(e) => myLabel(e)}></input>\n <label htmlFor=\"hide\" style={{margin : \"10px\"}}> Publish</label>\n </span>\n </div>\n           </div>\n           <div className=\"row\">\n              <div className=\"col-md-12\">\n              <button className=\"customBtn my-2\">Submit</button> </div>\n           </div>\n           </form>\n        </Container>\n        </Layout>\n    )\n}\nexport default Faq;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/FlashContent.js",["4796","4797","4798","4799","4800","4801","4802","4803","4804","4805","4806","4807","4808","4809","4810","4811"],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/MediaContent.js",["4812","4813","4814","4815","4816","4817","4818","4819"],"import React, {useState, useEffect} from 'react';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Container, Box, Paper } from '@material-ui/core';\nimport {  styled } from '@mui/material';\nimport { useHistory, useParams } from 'react-router';\nimport axios from 'axios';\nimport { baseUrl, baseUrl3 } from '../../../config/config';\nimport {DeleteIcon} from \"../../../components/Common/MessageIcon\";\nimport Swal from 'sweetalert2';\nimport {Link} from 'react-router-dom';\nimport {EditQuery} from '../../../components/Common/MessageIcon';\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport {\n  Card,\n  CardBody,\n} from \"reactstrap\";\nconst MyContainer = styled(Container)({\n\n})\nconst MyBox = styled(Box)({\n    display: \"flex\",\n    width: \"100%\", \n    height: \"500px\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  })\n  const InnerBox = styled(Paper)({\n    display :\"flex\",\n    flexDirection: \"column\",\n    padding: \"20px\",\n    minHeight: \"300px\",\n    width: \"400px\",\n    lineHeight : \"30px\",\n    borderRadius: \"10px\"\n  })\nconst MediaContent = () => {\n  const [galleryData, setGalleryData] = useState([])\n  const [large, setLarge] = useState(false)\n    const userId = window.localStorage.getItem(\"adminkey\");\n    const token = window.localStorage.getItem(\"token\")\n    const myConfig = {\n        headers : {\n         \"uit\" : token\n        }\n      }\n    useEffect(() => {\n      getGalleryData()\n    }, [])\n    const getGalleryData = () => {\n    \n      axios.get(`${baseUrl}/cms/getgallarylist?uid=${JSON.parse(userId)}&type=image`, myConfig)\n      .then((res) => {\n        console.log(\"res\", res.data.result)\n        setGalleryData(res.data.result)\n        console.log(\"resMedia\", res.data.result)\n      })\n    }\n    let history = useHistory()\n   \n  const del = (e) => {\n \n\n    Swal.fire({\n        title: \"Are you sure?\",\n        text: \"Want to delete Photo Galllery ? Yes, delete it!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n        if (result.value) {\n          axios.get(`${baseUrl}/cms/removegallery?uid=${JSON.parse(userId)}&id=${e.id}`, myConfig)\n          .then((res) => {\nconsole.log(\"response\", res)\nif(res.data.code === 1){\nSwal.fire({\n  title : \"success\",\n  html  : \"Photo Gallery deleted successfully\",\n  icon : \"success\"\n})\ngetGalleryData()\n}\nelse{\nSwal.fire({\n  title :\"error\",\n  html : \"Something went wrong , please try again\",\n  icon : \"error\"\n})\n}\n          })\n        }\n    });\n};\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n    \n      headerStyle: () => {\n        return { width : \"50px\" };\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Album Name\",\n    \n     \n      formatter: function dateFormat(cell, row) {\nreturn(\n  <>\n <Link style={{display : \"flex\", height : \"80%\", overflow : \"hidden\"}} to = {{\n                      pathname : \"/cms/imagegallery\", \n                      index : row\n                    }}>\n                   {row.title}\n                 \n                  </Link>\n  </>\n) }\n    },\n   \n    {\n      dataField: \"created_date\",\n      text: \"Date\",\n   \n     \n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created_date;\n        if (oldDate == null) {\n          return null;\n        }\n   \n        return oldDate.split(\" \")[0].split(\"-\").reverse().join(\"-\");\n      },\n    },\n   \n   \n    {\n      dataField : \"\",\n      text : \"Action\",\n      formatter : function nameFormatter (cell, row) {\n        return(\n          <>\n              \n           <div style={{display : \"flex\", width: \"70px\", alignItems: \"center\", justifyContent: \"space-evenly\"}}>\n           <Link \n                   to={`/cms/editimage/${row.id}`}\n                   >\n                     <EditQuery titleName=\"Edit Photo Gallery\" />\n                     </Link>\n                   \n                  <span onClick={() => del(row)}>\n                            <DeleteIcon titleName=\"Delete Photo Gallery\" />\n                            </span>\n           </div>\n            \n          </>\n        )\n      }\n    }\n  ]\n    return(\n    \n      <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n\n      <Container maxWidth = \"xl\">\n           \n          \n      <div className=\"headingContent\">\n               <h4>Photo Gallery </h4>\n               <button \n            \n           className=\"autoWidthBtn rightAlign my-2\" onClick={(e) => {\n             history.push(\"/cms/mediagallery\")\n           }}>New Photo Gallery</button> \n               </div>\n          <Card>\n              <CardBody>\n              <DataTablepopulated \n               bgColor=\"#42566a\"\n               keyField= {\"assign_no\"}\n               data={galleryData}\n               columns={columns}>\n                </DataTablepopulated>\n              </CardBody>\n              </Card>\n         \n          </Container>\n      </Layout>\n    )\n}\nexport default MediaContent;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/MediaGallery.js",["4820","4821"],"import React from 'react';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Container, Box, Paper } from '@material-ui/core';\nimport classNames from 'classnames';\nimport {  styled } from '@mui/material';\nimport { useHistory, useParams } from 'react-router';\nimport { useState } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { baseUrl } from '../../../config/config';\nimport Swal from 'sweetalert2';\nimport {\n  \n  Row,\n  Col,\n \n} from \"reactstrap\";\nconst MyContainer = styled(Container)({\n\n})\nconst MyBox = styled(Box)({\n  display: \"flex\",\n  width: \"100%\", \n  height: \"500px\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n})\nconst InnerBox = styled(Paper)({\n  display :\"flex\",\n  flexDirection: \"column\",\n  padding: \"20px\",\n  minHeight: \"300px\",\n  width: \"400px\",\n  lineHeight : \"30px\",\n  borderRadius: \"10px\"\n})\nconst MediaGallery = () => {\n    const userId = window.localStorage.getItem(\"adminkey\");\n    let history = useHistory()\n    const [heading, setHeading] = useState(\"\")\n    const { handleSubmit, register, errors, getValues } = useForm();\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n    const [item] = useState(current_date);\n    const token = localStorage.getItem(\"token\")\n   \n    const onSubmit = (value) => {\n      let formData = new FormData();\n      let file ; \n      formData.append(\"title\", heading);\n      formData.append(\"type\", \"image\");\n      formData.append(\"date_event\", value.date_event)\n      var uploadImg = value.uploadImg;\n      if (uploadImg) {\n        for (var i = 0; i < uploadImg.length; i++) {\n           file = uploadImg[i];\n           formData.append(\"upload[]\", file);\n        }\n      }\n    \n    // if (uploadImg) {\n    //   for (var i = 0; i < uploadImg.length; i++) {\n    //     let file = uploadImg[i];\n    //     formData.append(\"upload\", file);\n    //     formData.append(\"type\", \"image\")\n       \n    //   }\n    // }\n      axios({\n        method : \"POST\", \n        url : `${baseUrl}/cms/uploadphoto`,\n        headers : {\n          uit : token\n        },\n        data : formData\n      })\n      .then((res) => {\n        let a = res.data\n        console.log(\"res\", a)\n        if(res.data.code === 1){\n          Swal.fire({\n            title :\"success\",\n            html : \"Image uploaded successfully\",\n            icon :\"success\"\n          })\n          history.push(\"/cms/imagelist\")\n        }\n      })\n   \n    }\n    return(\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n\n        <MyContainer>\n        <Row className=\"my-2\">\n          <Col md=\"4\">\n          <button\n                className=\"autoWidthBtn\" \n                onClick={() => history.goBack()}\n              >\n               \n                Go Back\n              </button>\n              \n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4>Photo Gallery</h4>\n            </Col>\n            </Row>\n        <MyBox>\n       <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n          \n\n         <InnerBox>\n\n         <div className=\"row\">\n         <div className=\"col-md-12 col-sm-12\">\n                  \n                  <label className=\"form-label\">Title</label>\n                    <input \n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                     \"is-invalid\": errors.p_heading,\n                   })}\n                   value={heading}\n                   onChange={(e) => setHeading(e.target.value)}\n                   ref={register({ required: true })}\n                   name=\"p_heading\"\n                    placeholder = \"Please enter heading\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-md-12 col-sm-12\">\n                  \n                  <label className=\"form-label\">Date</label>\n                  <input\n               type=\"date\"\n               name= \"date_event\"\n               ref={register}\n               className=\"form-control\"\n             max={item}\n              \n              />\n                  </div>\n                  </div>\n                <div className=\"row\">\n                <div className=\"col-md-12 col-sm-12\">\n                  \n                  <label className=\"form-label\">Photo</label>\n                  <input\n               type=\"file\"\n               name= \"uploadImg\"\n               ref={register}\n               className=\"form-control-file manage_file\"\n               multiple\n              \n              />\n                  </div>\n            \n                  </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n               <button className=\"customBtn mt-5\">Submit</button> </div>\n               </div>\n         </InnerBox>\n          \n         \n          \n           \n          \n            </form>\n       </MyBox>\n                </MyContainer>\n                </Layout>\n    )\n}\nexport default MediaGallery;","/home/pooja/MazarsRepo/src/views/Tax/Media.js",["4822","4823","4824","4825","4826","4827","4828","4829","4830","4831","4832","4833","4834","4835","4836","4837"],"import React , {useState, useEffect} from 'react';\nimport Header from \"../../components/Header/Header\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { Link } from 'react-router-dom';\nimport Data from './directData.js';\nimport Footer from '../../components/Footer/Footer';\nimport { useHistory, useParams  } from 'react-router';\nimport axios from 'axios';\nimport { baseUrl , baseUrl3} from '../../config/config';\nimport { Markup } from 'interweave';\nimport pngAlbum from './album.png';\nimport classes from './design.module.css';\nimport {Breadcrumbs, Button, Box, Typography, } from \"@material-ui/core\";\nimport { OuterloginContainer } from '../../components/Common/OuterloginContainer';\nconst MyContainer = styled(Box)({\n    display : \"flex\", \n    justifyContent : \"center\", \n    alignItems : \"center\", \n    width: \"100%\",\n    flexDirection : \"column\"\n  })\nconst Media = () => {\n    const [galleryData, setGalleryData] = useState([])\n    const userId = window.localStorage.getItem(\"adminkey\");\n    const [large, setLarge] = useState(false)\n    const [selected, setSelected] = useState([])\n    const [count, setCount] = useState(0)\n    useEffect(() => {\n      getGalleryData()\n    }, [])\n    const getGalleryData = () => {\n    \n      axios.get(`${baseUrl}/customers/getgallery`)\n      .then((res) => {\n        console.log(\"res\", res.data.result)\n        setGalleryData(res.data.result)\n      })\n    }\n    let history = useHistory()\n    let kk = []\n   const enLarge = (e) => {\n   \n  history.push(\"/customer/imagegallery\")\n   }\n  \n    return(\n        <>\n      <OuterloginContainer>\n      <Header noSign=\"noSign\" />\n               <MyContainer>\n   \n  \n   <div className={classes.articleContent}>\n    {\n      \n       <div className={classes.articlesDetails}>\n        <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n  <Link underline=\"hover\" color=\"inherit\" to=\"/customer/media\">\n  Media Gallery\n  </Link>\n  <Typography color=\"text.primary\">  Photo Gallery</Typography>\n  \n  </Breadcrumbs>\n\n      <div style={{display: \"flex\", flexWrap: \"wrap\"}}>\n      {\n                     \n                     galleryData.map((i) => (\n                      \n    \n                   \n    <div className=\"galleryBoxvideo\">\n    <div style={{display : \"flex\", justifyContent: \"center\", height: \"70%\", width: \"100%\", alignItems: \"center\"}}>\n    <Link style={{display: \"flex\", height: \"100%\"}}\n    to = {{\n      pathname : \"/customer/imagegallery\",\n                          index : i\n                        }}>\n                          <img src={pngAlbum} \n                          style={{display : \"flex\", width: \"50%\", height: \"50%\", margin: \"auto\" }}\n                           id={i.id} \n                          />\n    \n                                 \n               </Link>\n      </div>\n               <div style={{ padding: \"5px 10px\", width: \"100%\", justifyContent: \"space-between\"}}>\n                <h5  style={{textAlign: \"center\"}}>{i.title}</h5>\n                <h5 style={{textAlign : \"center\"}}>{i.created_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")}</h5>\n                    </div>\n                     </div>  \n                    ))\n                   }\n      </div>\n\n\n       </div>\n   \n     \n    }\n   </div>\n \n  </MyContainer>\n                <Footer />\n      </OuterloginContainer>\n               </>\n    )\n}\nexport default Media;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/MediaTab.js",["4838","4839","4840","4841","4842","4843"],"import React, {useState} from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {  styled } from '@mui/material';\nimport { Container, Box, Paper } from '@material-ui/core';\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\nimport MediaContent from './MediaContent';\nimport VideoMedia from \"./VideoMedia\";\nimport MediaText from \"./MediaText\";\nconst MyContainer = styled(Container)({\n\n})\nconst MediaTab = () => {\n    const userId = window.localStorage.getItem(\"adminkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n    const [bgColor, setbgColor] = useState(\"#615339\")\n    const tableIndex = (index) => {\n        setTabIndex(index)\n        console.log(index)\n        if(index === 0){\n          setbgColor(\"#615339\")\n        }\n        else if(index === 1){\n          setbgColor(\"#907b56\")\n        }\n        else if(index === 2){\n          setbgColor(\"#907b56\")\n        }\n        else if(index === 3){\n          setbgColor(\"#907b56\")\n        }\n      }\n        \n      const myStyle1 = {\n        margin: \"10px auto\"\n      };\n      const myStyle2 = {\n        margin: \"10px auto\",\n     \n        color : \"#5a625a\",\n        fontWeight : 1000\n         };\n      \n      \n    \n   return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n\n    <MyContainer>\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => tableIndex(index)}>\n      <TabList\n          className=\"fixedTab\"\n          >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1} className=\"tabHover\">\n                       Photo Gallery\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1} className=\"tabHover\">\n                         Video Gallery\n                        </Tab>\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1} className=\"tabHover\">\n                       Media News\n                        </Tab>\n\n                    </TabList>\n\n                    <TabPanel>\n                   <MediaContent />\n                    </TabPanel>\n\n                    <TabPanel>\n                       <VideoMedia />\n                    </TabPanel>\n\n                    <TabPanel>\n                      <MediaText />\n                    </TabPanel>\n                </Tabs>\n           \n       </MyContainer>\n       </Layout>\n   )\n}\nexport default MediaTab;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/VideoMedia.js",["4844","4845","4846","4847","4848","4849","4850","4851"],"import React, {useState, useEffect} from 'react';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Container, Box, Paper } from '@material-ui/core';\nimport {  styled } from '@mui/material';\nimport { useHistory, useParams } from 'react-router';\nimport axios from 'axios';\nimport { baseUrl, baseUrl3 } from '../../../config/config';\nimport {DeleteIcon} from \"../../../components/Common/MessageIcon\";\nimport Swal from 'sweetalert2';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ReactPlayer from \"react-player\";\nimport {EditQuery} from '../../../components/Common/MessageIcon';\nimport { Link } from 'react-router-dom';\nimport DataTablepopulated from \"../../../components/DataTablepopulated/DataTabel\";\nimport {\n  Card,\n  CardBody,\n} from \"reactstrap\";\n\nconst MyContainer = styled(Container)({\n\n})\nconst MyBox = styled(Box)({\n    display: \"flex\",\n    width: \"100%\", \n    height: \"500px\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  })\n  const InnerBox = styled(Paper)({\n    display :\"flex\",\n    flexDirection: \"column\",\n    padding: \"20px\",\n    minHeight: \"300px\",\n    width: \"400px\",\n    lineHeight : \"30px\",\n    borderRadius: \"10px\"\n  })\nconst VideoMedia = () => {\n  const [galleryData, setGalleryData] = useState([])\n  const [large, setLarge] = useState(false)\n  const [videoId, setVideoId] = useState()\n  const [play, isPlay] = useState(false)\n  const token = window.localStorage.getItem(\"token\")\n  const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n    const userId = window.localStorage.getItem(\"adminkey\");\n    useEffect(() => {\n      getGalleryData()\n    }, [])\n    const getGalleryData = () => {\n    \n      axios.get(`${baseUrl}/cms/getgallarylist?uid=${JSON.parse(userId)}&type=video`, myConfig)\n      .then((res) => {\n        console.log(\"res\", res.data.result)\n        setGalleryData(res.data.result)\n      })\n    }\n    let history = useHistory()\n    const columns = [\n      {\n        dataField: \"\",\n        text: \"S.No\",\n        formatter: (cellContent, row, rowIndex) => {\n          return rowIndex + 1;\n        },\n      \n        headerStyle: () => {\n          return { width : \"50px\" };\n        },\n      },\n      {\n        dataField: \"\",\n        text: \"Album Name\",\n     \n    \n        formatter: function dateFormat(cell, row) {\n  return(\n    <>\n   <Link style={{display : \"flex\", height : \"80%\", overflow : \"hidden\"}} to = {{\n                         pathname : \"/cms/videogallery\", \n                        index : row\n                      }}>\n                    {row.title}\n                   \n                    </Link>\n    </>\n  ) }\n      },\n      \n      {\n        dataField: \"created_date\",\n        text: \"Date\",\n        sort: true,\n       \n        formatter: function dateFormat(cell, row) {\n  \n          var oldDate = row.created_date;\n          if (oldDate == null) {\n            return null;\n          }\n          return oldDate.split(\" \")[0].split(\"-\").reverse().join(\"-\");\n        },\n      },\n     \n     \n      {\n        dataField : \"\",\n        text : \"Action\",\n        formatter : function nameFormatter (cell, row) {\n          return(\n            <>\n                \n             <div style={{display : \"flex\", width: \"70px\", alignItems: \"center\", justifyContent: \"space-evenly\"}}>\n             <Link \n                     to={`/cms/editvideo/${row.id}`}\n                     >\n                       <EditQuery titleName=\"Edit Video Gallery\" />\n                       </Link>\n                     \n                    <span onClick={() => del(row)}>\n                              <DeleteIcon titleName=\"Delete Video Gallery\" />\n                              </span>\n             </div>\n              \n            </>\n          )\n        }\n      }\n    ]\n    \n    const del = (id) => {\n \n\n      Swal.fire({\n          title: \"Are you sure?\",\n          text: \"Want to delete video gallery? Yes, delete it!\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n          if (result.value) {\n            axios.get(`${baseUrl}/cms/removegallery?uid=${JSON.parse(userId)}&id=${id.id}`, myConfig)\n            .then((res) => {\nconsole.log(\"response\", res)\nif(res.data.code === 1){\n  Swal.fire({\n    title : \"success\",\n    html  : \"Video gallery deleted successfully\",\n    icon : \"success\"\n  })\n  getGalleryData()\n}\nelse{\n  Swal.fire({\n    title :\"error\",\n    html : \"Something went wrong , please try again\",\n    icon : \"error\"\n  })\n}\n            })\n          }\n      });\n  };\n \n  const playVideo2 = (e) => {\n    isPlay(true)\n    setVideoId(`${baseUrl3}/assets/gallery/${e}`)\n  }\n    return(\n  \n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n\n    <Container maxWidth = \"xl\">\n         \n        \n    <div className=\"headingContent\">\n     <h4> Video Gallery\n     </h4>\n     <button \n    \n     className=\"autoWidthBtn rightAlign my-2\" onClick={(e) => {\n   history.push(\"/cms/videocontent\")\n     }}>New Video Gallery</button> \n     </div>\n        <Card>\n            <CardBody>\n           \n               <DataTablepopulated \n                  bgColor=\"#42566a\"\n                  keyField= {\"assign_no\"}\n                  data={galleryData}\n                  columns={columns}>\n                   </DataTablepopulated>\n                 \n            </CardBody>\n            </Card>\n       \n        </Container>\n        {\n          play === true ?\n                \n          <div className=\"modalBox\">\n          <div className=\"boxContainer\">\n          <div className=\"canBtn\"  title=\"cancel\">\n              <h4>Recording Player</h4>\n              <CloseIcon  onClick= {() => isPlay(false)} id=\"myBtn\"/> </div>\n         \n\n         <div className=\"my2\">\n         <ReactPlayer\n           url={videoId}\n           controls={true}\n           playing={true}\n           width='100%'\n           height='100%'\n          />\n             </div>\n          </div>\n     \n    </div> : \"\"\n        }\n    </Layout>\n    )\n}\nexport default VideoMedia;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/MediaText.js",["4852","4853","4854","4855","4856","4857"],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/VideoContent.js",["4858","4859","4860"],"import React from 'react';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Container, Box, Paper } from '@material-ui/core';\nimport classNames from 'classnames';\nimport {  styled } from '@mui/material';\nimport { useHistory, useParams } from 'react-router';\nimport { useState } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { baseUrl } from '../../../config/config';\nimport Swal from 'sweetalert2';\nimport {\n  \n  Row,\n  Col,\n \n} from \"reactstrap\";\nconst MyContainer = styled(Container)({\n\n})\nconst MyBox = styled(Box)({\n  display: \"flex\",\n  width: \"100%\", \n  height: \"500px\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n})\nconst InnerBox = styled(Paper)({\n  display :\"flex\",\n  flexDirection: \"column\",\n  padding: \"20px\",\n  minHeight: \"300px\",\n  width: \"400px\",\n  lineHeight : \"30px\",\n  borderRadius: \"10px\"\n})\nconst VideoContent = () => {\n    const userId = window.localStorage.getItem(\"adminkey\");\n    let history = useHistory()\n    const [heading, setHeading] = useState(\"\")\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n    const [item] = useState(current_date);\n    const token = localStorage.getItem(\"token\")\n    const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n    const { handleSubmit, register, errors, getValues } = useForm();\n    const onSubmit = (value) => {\n      let formData = new FormData();\n      console.log(\"sss\", value.p_upload.length)\n      let file ; \n      formData.append(\"title\", heading);\n      formData.append(\"type\", \"video\");\n      formData.append(\"date_event\", value.date_event)\n      var uploadImg = value.p_upload;\n      if (uploadImg) {\n        for (var i = 0; i < uploadImg.length; i++) {\n           file = uploadImg[i];\n           formData.append(\"upload[]\", file);\n        }\n      }\n      \n      axios({\n        method : \"POST\", \n        url : `${baseUrl}/cms/uploadphoto`,\n        headers : {\n          uit : token\n        },\n        data : formData\n      })\n      .then((res) => {\n        if(res.data.code === 1){\n          Swal.fire({\n            title :\"success\",\n            html : \"Video Gallery added successfully\",\n            icon :\"success\"\n          })\n          history.push(\"/cms/videolist\")\n        }\n      })\n  \n    }\n    return(\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n\n        <MyContainer>\n        <Row className = \"my-2\">\n          <Col md=\"4\">\n          <button\n                className=\"autoWidthBtn\" \n                onClick={() => history.goBack()}\n              >\n               \n                Go Back\n              </button>\n              \n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4>Video Gallery</h4>\n            </Col>\n            </Row>  \n  \n        <MyBox>\n       <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n      \n         <InnerBox>\n         \n         <div className=\"row\">\n         <div className=\"col-md-12 col-sm-12\">\n                  \n                  <label className=\"form-label\">Title</label>\n                    <input \n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                     \"is-invalid\": errors.p_heading,\n                   })}\n                   value={heading}\n                   onChange={(e) => setHeading(e.target.value)}\n                   ref={register({ required: true })}\n                   name=\"p_heading\"\n                    placeholder = \"Please enter heading\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-md-12 col-sm-12\">\n                  \n                  <label className=\"form-label\">Date</label>\n                  <input\n               type=\"date\"\n               name= \"date_event\"\n               ref={register}\n               className=\"form-control\"\n               max={item}\n            \n              />\n                  </div>\n                  </div>\n                <div className=\"row\">\n                <div className=\"col-md-12 col-sm-12\">\n                  \n                  <label className=\"form-label\">Video</label>\n                  <input\n                  type=\"file\"\n                accept=\"file_extension|audio/*|video/*|image/*|media_type\"\n                name=\"p_upload\"\n                ref={register}\n                multiple\n                className=\"form-control-file\"\n                min = {item}\n              />\n                  </div>\n                  </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n               <button className=\"customBtn mt-5\">Submit</button> </div>\n               </div>\n         </InnerBox>\n          \n         \n          \n           \n          \n            </form>\n       </MyBox>\n                </MyContainer>\n                </Layout>\n    )\n}\nexport default VideoContent;\n","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Mediatextshow.js",["4861","4862","4863","4864","4865","4866","4867","4868","4869","4870","4871","4872","4873","4874"],"/home/pooja/MazarsRepo/src/views/Tax/MediaContentCustomer.js",["4875"],"import React, {useState, useEffect} from 'react';\nimport Header from \"../../components/Header/Header\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../../config/config';\nimport {Typography, Breadcrumbs, Table, TableContainer, Box,  \n   TablePagination, TableBody, TableRow, TableCell} from \"@material-ui/core\";\nimport axios from 'axios';\nimport { Markup } from 'interweave';\nimport Footer from '../../components/Footer/Footer';\nimport CommonServices from '../../common/common.js';\nimport classesCustom from './design.module.css';\nimport { OuterloginContainer } from '../../components/Common/OuterloginContainer';\nconst MyContainer = styled(Box)({\n    display : \"flex\", \n    justifyContent : \"center\", \n    alignItems : \"center\", \n    width: \"100%\",\n    flexDirection : \"column\"\n  })\n  const MyHeading = styled(Box)({\n    display : \"flex\",\n    justifyContent: \"space-between\"\n  })\nconst MediaContentCustomer = () => {\n    const [data, setData] = useState([])\n    const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [myData, setMyData] = useState()\n  const [ description, setDescription] = useState(false)\n    useEffect(() => {\n        getMediaData()\n    }, [])\n    const getMediaData = () => {\n        axios.get(`${baseUrl}/customers/getgalleryupdated`)\n        .then((res) => {\n            console.log(\"res\", res.data.result)\n            setData(res.data.result)\n        })\n    }\n    const onChangePage = (event, nextPage) => {\n        setPage(nextPage)\n      }\n      const onChangeRowsPerPage = (e) => {\n        setRowsPerPage(e.target.value)\n      }\n      const getData = (e) => {\n        setDescription(true);\n        console.log(\"eee\", e.publish_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"))\n        setMyData(e)\n         }     \n    return(\n        <>\n      \n       <OuterloginContainer>\n       <Header noSign=\"noSign\" />\n        <MyContainer>\n       {\n           description === false ?\n           <div className={classesCustom.articleContent}>\n     <div className={classesCustom.articlesDetails}>\n              <TableContainer>\n             <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n             <Link underline=\"hover\" color=\"inherit\" to=\"/customer/media\">\n  Media Gallery\n  </Link>\n  <Typography color=\"text.primary\">  Media News</Typography>\n        \n       \n        </Breadcrumbs>\n          <Table>\n            <TableBody>\n            {\n        data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((i, e) => (\n              <TableRow key={i.id}>\n               \n               <TableCell key={i.id} className=\"tableCellStyle\" style={{cursor: \"pointer\"}} onClick={(p) => getData(i)}>\n               <span>\n         <span style={{color: \"rgb(61, 71, 117\"}}>\n           {`${e + 1} .`}\n           </span> <span className=\"tabHover updatesLink\">\n           {` ${i.heading} -    ${i.publish_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")}`}\n      </span>\n  </span>\n  </TableCell>\n       \n              </TableRow>\n               ))\n              }\n            </TableBody>\n          </Table>\n          {\n           data.length > 10 ?\n           <TablePagination \n           rowsPerPageOptions = {[5, 10, 15, 20, 25]}\n           count = {data.length}\n           rowsPerPage = {rowsPerPage}\n           page = {page}\n           onChangePage = {onChangePage}\n           onChangeRowsPerPage = {onChangeRowsPerPage}\n            /> : \"\"\n         }\n          </TableContainer>\n              </div>\n              </div> : \"\"\n       }\n        {description === true ?\n       <div className={classesCustom.articleContent}>\n       <div className={classesCustom.articlesDetails}>\n         <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n         <Link underline=\"hover\" color=\"inherit\" to=\"/customer/media\">\n  Media Gallery\n  </Link>\n        <Link underline=\"hover\" color=\"inherit\" to={{\n          pathname : \"/customer/mediacontent\",\n          index : 2\n        }}>\n       Media News\n        </Link>\n        <Typography color=\"text.primary\">{myData.heading}</Typography>\n        </Breadcrumbs>\n       <div style={{margin: \"20px 0px 10px 0px\"}}>\n       <div>\n           <MyHeading>\n           <h5>  {CommonServices.capitalizeFirstLetter(myData.heading)}</h5>\n          \n         \n           </MyHeading>\n\n           <h6>Date -   {myData.publish_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")} </h6>\n         \n            \n             </div>\n             <Markup content={myData.content} />\n       </div>\n       </div>\n      \n      </div>\n       : \"\"}\n       </MyContainer>\n       <Footer />\n       </OuterloginContainer>\n       </>\n  \n    )\n}\nexport default MediaContentCustomer;","/home/pooja/MazarsRepo/src/views/Tax/GalleryVideo.js",["4876","4877","4878"],"import React , {useState, useEffect} from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport {Breadcrumbs,  Box, Typography} from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ImageGallery from 'react-image-gallery';\nimport { baseUrl, baseUrl3 } from \"../../config/config\";\nimport axios from \"axios\";\nimport './style.css';\nimport classes from './design.module.css';\n    const MyContainer = styled(Box)({\n        display : \"flex\", \n        justifyContent : \"center\", \n        alignItems : \"center\", \n        width: \"100%\",\n        flexDirection : \"column\"\n      })\nconst GalleryVideo = () => {\n  const [images, setImages] = useState([])\n  const [title, setTitle] = useState(\"\")\n  let history = useHistory();\n  \n    useEffect(() => {\n      getImages()\n    }, [])\n    const getImages = () => {\n      let obj = []\n     if(typeof(history.location.index) === 'object'){\n     console.log(\"index\", typeof(history.location.index) === 'object' )\n      axios.get(`${baseUrl}/customers/getgallery?id=${history.location.index.id}`)\n      .then((res) => {\n       \n      res.data.result.map((i) => {\n        setTitle(i.title)\n        let  a = {\n          original : `${baseUrl3}/assets/gallery/${i.name}`,\n          thumbnail : `${baseUrl3}/assets/gallery/${i.name}`\n        }\n        obj.push(a)\n      \n     setImages(obj)\n      })\n      })\n     \n     }\n     else{\n      let  a = {\n        original : `${baseUrl3}/assets/gallery/${history.location.index}`,\n        thumbnail : `${baseUrl3}/assets/gallery/${history.location.index}`\n      }\n      obj.push(a)\n    \n   setImages(obj)\n     }\n        }\n    \n   console.log(\"images\", images)\n    return(\n        <>\n         <Header noSign=\"noSign\" />\n        <MyContainer>\n   \n  \n        <div className={classes.articleContent}>\n      \n        <div className={classes.articlesDetails}>\n            <span style={{display: \"flex\", width: \"100%\", justifyContent: \"space-between\"}}>\n            <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n  \n  <Link underline=\"hover\" color=\"inherit\" to = {`/customer/media`}>\n Media Gallery\n  </Link>\n  <Link underline=\"hover\" color=\"inherit\" to = {`/customer/media`}>\n Photo Gallery\n  </Link>\n  <Typography>{title}</Typography>\n \n</Breadcrumbs>\n<button\n                className=\"autoWidthBtn\" \n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n              </span>\n        <div style={{display: \"flex\", margin: \"20px 0 10px 0\", \n        width:\"100%\", justifyContent: \"center\", alignItems: \"center\"}}>\n    {images.length > 0 ? \n     <ImageGallery items={images} \n     \n     additionalClass = {classes.myVideo} /> : \"\" }\n            </div>\n            </div>\n        \n         \n        </div>\n      \n       </MyContainer>\n   \n       </>\n    )\n}\nexport default GalleryVideo;","/home/pooja/MazarsRepo/src/views/Tax/VideoList.js",["4879","4880","4881","4882","4883","4884","4885","4886","4887"],"import React , {useState, useEffect} from 'react';\nimport Header from \"../../components/Header/Header\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { Link } from 'react-router-dom';\nimport Data from './directData.js';\nimport Footer from '../../components/Footer/Footer';\nimport { useHistory, useParams  } from 'react-router';\nimport axios from 'axios';\nimport { baseUrl , baseUrl3} from '../../config/config';\nimport { Markup } from 'interweave';\nimport ReactPlayer from \"react-player\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport {Breadcrumbs, Box, Typography  } from \"@material-ui/core\";\nimport pngAlbum from './album.png';\nimport classes from './design.module.css';\nimport { OuterloginContainer } from '../../components/Common/OuterloginContainer';\nconst MyContainer = styled(Box)({\n    display : \"flex\", \n    justifyContent : \"center\", \n    alignItems : \"center\", \n    width: \"100%\",\n    flexDirection : \"column\"\n  })\nconst VideoList = () => {\n    const [galleryData, setGalleryData] = useState([])\n    const userId = window.localStorage.getItem(\"adminkey\");\n    const [videoId, setVideoId] = useState()\n    const [play, isPlay] = useState(false)\n    useEffect(() => {\n      getGalleryData()\n    }, [])\n    const getGalleryData = () => {\n    \n      axios.get(`${baseUrl}/customers/getvideogallery`)\n      .then((res) => {\n      \n        setGalleryData(res.data.result)\n      })\n    }\n    let history = useHistory()\n    let kk = []\n    const playVideo2 = (e) => {\n        isPlay(true)\n        setVideoId(`${baseUrl3}/assets/gallery/${e}`)\n      }\n  \n    return(\n        <>\n     <OuterloginContainer>\n     <Header noSign=\"noSign\" />\n\n<MyContainer>\n\n\n<div className={classes.articleContent}>\n{\n\n<div className={classes.articlesDetails}>\n<Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n<Link underline=\"hover\" color=\"inherit\" to=\"/customer/media\">\nMedia Gallery\n</Link>\n<Typography color=\"text.primary\">  Video Gallery</Typography>\n\n</Breadcrumbs>\n\n<div style={{display: \"flex\", flexWrap: \"wrap\"}}>\n{\n\ngalleryData.map((i) => (\n\n\n\n<div className=\"galleryBoxvideo\">\n<div style={{display : \"flex\", justifyContent: \"center\", height: \"70%\", width: \"100%\", alignItems: \"center\"}}>\n<Link style={{display: \"flex\", height: \"100%\"}}\nto = {{\n                    pathname : \"/customer/videogallery\", \n                    index : i\n                  }}>\n     <img src={pngAlbum} \n  style={{display : \"flex\", width: \"50%\", height: \"50%\", margin: \"auto\" }}\n   id={i.id} \n  />\n                           \n         </Link>\n</div>\n         <div style={{ padding: \"5px 10px\", width: \"100%\", justifyContent: \"space-between\"}}>\n          <h5 style={{textAlign: \"center\"}}>{i.title}</h5>\n          <h5 style={{textAlign: \"center\"}}>{i.created_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")}</h5>\n              </div>\n               </div>\n))\n}\n</div>\n\n\n</div>\n\n\n}\n</div>\n{\nplay === true ?\n\n<div className=\"modalBox\">\n<div className=\"boxContainer\">\n<div className=\"canBtn\"  title=\"cancel\">\n<h4>Recording Player</h4>\n<CloseIcon  onClick= {() => isPlay(false)} id=\"myBtn\"/> </div>\n\n\n<div className=\"my2\">\n<ReactPlayer\nurl={videoId}\ncontrols={true}\nplaying={true}\nwidth='100%'\nheight='100%'\n/>\n</div>\n</div>\n\n</div> : \"\"\n}\n</MyContainer>\n<Footer />\n     </OuterloginContainer>\n               </>\n    )\n}\nexport default VideoList;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/GroupImage.js",["4888","4889","4890"],"import React , {useState, useEffect} from \"react\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport {Container } from '@material-ui/core';\nimport { useHistory } from \"react-router\";\nimport {DeleteIcon} from \"../../../components/Common/MessageIcon\";\nimport Swal from 'sweetalert2';\nimport {Link} from 'react-router-dom';\nimport {\n \n  Row,\n  Col,\n  \n} from \"reactstrap\";\nconst MyContainer = styled(Container)({\n\n})\nconst GroupImage = () => {\n  const [galleryData, setGalleryData] = useState([])\n  const userId = window.localStorage.getItem(\"adminkey\");\n  let history = useHistory();\n  \n    useEffect(() => {\n      getImages()\n    }, [])\n \n    const getImages = () => {\n   if(history.location.index){\n     \n   \n    axios.get(`${baseUrl}/cms/getgallarylist?uid=${JSON.parse(userId)}&type=image&id=${history.location.index.id}`)\n    .then((res) => {\n     \n      setGalleryData(res.data.result)\n      \n    })\n    }\n    \n  }\n  const del = (e) => {\n \n\n    Swal.fire({\n        title: \"Are you sure?\",\n        text: \"Want to delete Photo? Yes, delete it!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n        if (result.value) {\n          axios.get(`${baseUrl}/cms/deleteimage?uid=${JSON.parse(userId)}&id=${e.imageid}&imageid=${e.id}`)\n          .then((res) => {\nconsole.log(\"response\", res)\nif(res.data.code === 1){\nSwal.fire({\n  title : \"success\",\n  html  : \"Photo deleted successfully\",\n  icon : \"success\"\n})\ngetImages()\n}\nelse{\nSwal.fire({\n  title :\"error\",\n  html : \"Something went wrong , please try again\",\n  icon : \"error\"\n})\n}\n          })\n        }\n    });\n};\n    return(\n        <>\n     <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>   \n     \n <MyContainer>\n <div className=\"py-2\">\n      <Row>\n          <Col md=\"4\">\n          <button\n                className=\"autoWidthBtn\" \n                onClick={() => history.goBack()}\n              >\n               \n                Go Back\n              </button>\n              \n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4>Photo Gallery</h4>\n            </Col>\n            </Row>\n        </div>\n <div className=\"galleryContainer\">\n                 \n {\n                   galleryData.map((i) => (\n                    <div className=\"galleryBox\" key={i.id}> \n                    \n                  \n                     <Link style={{display : \"flex\", height : \"80%\", overflow : \"hidden\"}} to = {{\n                      pathname : \"/cms/imagegallery\", \n                      index : i\n                    }}>\n                    <img  id={i.id} key={i.id} src={`${baseUrl3}/assets/gallery/${i.name}`} />\n                  <h4 style={{margin: \"5px 10px\"}}>{i.title}</h4>\n                  </Link>\n                   \n                  \n                  <div className=\"delIcon\">\n                  <span title=\"Delete Photo\" onClick={() => del(i)}>\n                   <DeleteIcon />\n                   </span>\n\n                    </div>\n                 \n                   </div>\n                  \n                  ))\n                 }\n              \n                </div>\n </MyContainer>\n       </Layout>  \n       </>\n    )\n}\nexport default GroupImage;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/EditImage.js",["4891","4892","4893","4894","4895","4896"],"import React, { useEffect} from 'react';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Container, Box, Paper } from '@material-ui/core';\nimport classNames from 'classnames';\nimport {  styled } from '@mui/material';\nimport { useHistory, useParams } from 'react-router';\nimport { useState } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { baseUrl, baseUrl3 } from '../../../config/config';\nimport Swal from 'sweetalert2';\nimport {DeleteIcon, EyeIcon} from \"../../../components/Common/MessageIcon\";\nimport InsertPhotoIcon from '@mui/icons-material/InsertPhoto';\nimport {\n  \n  Row,\n  Col,\n \n} from \"reactstrap\";\nconst MyContainer = styled(Container)({\n\n})\nconst MyBox = styled(Box)({\n  display: \"flex\",\n  width: \"100%\", \n  height: \"500px\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n})\nconst InnerBox = styled(Paper)({\n  display :\"flex\",\n  flexDirection: \"column\",\n  padding: \"20px\",\n  minHeight: \"300px\",\n  width: \"400px\",\n  lineHeight : \"30px\",\n  borderRadius: \"10px\"\n})\nconst EditImage = () => {\n    const userId = window.localStorage.getItem(\"adminkey\");\n    let history = useHistory()\n    const [heading, setHeading] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n    const [data, setData] = useState([]) \n    const [images, setImages] = useState([])\n    const token = localStorage.getItem(\"token\")\n    const myConfig = {\n      headers : {\n       \"uit\" : token\n      }\n    }\n    const { handleSubmit, register, errors, getValues } = useForm();\n    let getId = useParams()\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n    const [item] = useState(current_date);\n  \n   \n    useEffect(() => {\n      getData()\n    }, [])\n    const getData = (e) => {\n   \n     if(getId.id !== undefined){\n        axios.get(`${baseUrl}/cms/getgallarylist?uid=${JSON.parse(userId)}&type=image&id=${getId.id}`, myConfig)\n      .then((res) => {\n    \n      setData(res.data.result);\n     res.data.result.map((i) => {\n        \n         setHeading(i.title)\n         console.log(i.created_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"))\n         setDate(i.created_date.split(\" \")[0].split(\"-\").join(\"-\"))\n         setImages(i.name)\n     })\n      })\n     }\n    }\n    const del = (e) => {\n \n\n      Swal.fire({\n          title: \"Are you sure?\",\n          text: \"Want to delete articles? Yes, delete it!\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n          if (result.value) {\n            axios.get(`${baseUrl}/cms/deleteimage?uid=${JSON.parse(userId)}&id=${e.imageid}&imageid=${e.id}`, myConfig)\n            .then((res) => {\n  console.log(\"response\", res)\n  if(res.data.code === 1){\n  Swal.fire({\n    title : \"success\",\n    html  : \"Image deleted successfully\",\n    icon : \"success\"\n  })\n  getData()\n  }\n  else{\n  Swal.fire({\n    title :\"error\",\n    html : \"Something went wrong , please try again\",\n    icon : \"error\"\n  })\n  }\n            })\n          }\n      });\n  };\n    const onSubmit = (value) => {\n      console.log(\"uploadImg\", value.uploadImg)\n      let formData = new FormData();\n      let file ; \n      formData.append(\"title\", heading);\n      formData.append(\"type\", \"image\");\n      formData.append(\"date_event\", value.date_event)\n      formData.append(\"id\", getId.id)\n      var uploadImg = value.uploadImg;\n      if (uploadImg) {\n        for (var i = 0; i < uploadImg.length; i++) {\n           file = uploadImg[i];\n           formData.append(\"upload[]\", file);\n        }\n      }\n      \n      axios({\n        method : \"POST\", \n        url : `${baseUrl}/cms/uploadphoto`,\n        headers : {\n          uit : token\n        },\n        data : formData\n      })\n      .then((res) => {\n        let a = res.data\n        console.log(\"res\", a)\n        if(res.data.code === 1){\n          Swal.fire({\n            title :\"success\",\n            html : \"Photo Gallery updated successfully\",\n            icon :\"success\"\n          })\n          history.push(\"/cms/imagelist\")\n        }\n      })\n    \n    }\n    return(\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n\n        <MyContainer>\n        <Row className=\"py-2\">\n          <Col md=\"4\">\n          <button\n                className=\"autoWidthBtn\" \n                onClick={() => history.goBack()}\n              >\n               \n                Go Back\n              </button>\n              \n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4>Photo Gallery</h4>\n            </Col>\n            </Row>\n        <MyBox>\n        \n       <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n          \n\n         <InnerBox>\n         \n         \n         <div className=\"row\">\n         <div className=\"col-md-12 col-sm-12\">\n                  \n                  <label className=\"form-label\">Title</label>\n                    <input \n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                     \"is-invalid\": errors.p_heading,\n                   })}\n                   value={heading}\n                   onChange={(e) => setHeading(e.target.value)}\n                   ref={register({ required: true })}\n                   name=\"p_heading\"\n                    placeholder = \"Please enter heading\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-md-12 col-sm-12\">\n                  \n                  <label className=\"form-label\">Date</label>\n                  <input\n               type=\"date\"\n               defaultValue={date}\n               name= \"date_event\"\n               ref={register}\n               className=\"form-control\"\n           max= {item}\n              \n              />\n                  </div>\n                  </div>\n                  <div className=\"row\" style={{display : \"flex\",maxHeight: \"100px\",\n                   padding: \"10px 0\", overflow : \"auto\"}}>\n                      {data.map((i, e) => (\n                          <div className=\"col-md-12 col-sm-12\">\n                            <div style={{display : \"flex\", justifyContent : \"space-evenly\", alignItems : \"center\"}}>\n                          <a href={`${baseUrl3}/assets/gallery/${i.name}`} className=\"tabHover\" target=\"_blank\">\n                          <InsertPhotoIcon className=\"inprogress\" />\n                              </a>\n\n                            <span onClick={() => del(i)}>\n                            <DeleteIcon />\n                            </span>\n                             \n                            \n                                </div>\n                              </div>\n                      ))}\n                      </div>\n                <div className=\"row\">\n                <div className=\"col-md-12 col-sm-12\">\n                  \n                  <label className=\"form-label\">Media</label>\n                  <input\n               type=\"file\"\n               name= \"uploadImg\"\n               ref={register}\n               className=\"form-control-file manage_file\"\n               multiple\n              \n              />\n                  </div>\n            \n                  </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n               <button className=\"customBtn mt-5\">Submit</button> </div>\n               </div>\n         </InnerBox>\n          \n         \n          \n           \n          \n            </form>\n       </MyBox>\n                </MyContainer>\n                </Layout>\n    )\n}\nexport default EditImage;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/EditVideo.js",["4897","4898","4899","4900","4901","4902"],"import React, { useEffect } from 'react';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Container, Box, Paper } from '@material-ui/core';\nimport classNames from 'classnames';\nimport { styled } from '@mui/material';\nimport { useHistory, useParams } from 'react-router';\nimport { useState } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { baseUrl, baseUrl3 } from '../../../config/config';\nimport Swal from 'sweetalert2';\nimport { DeleteIcon, EyeIcon } from \"../../../components/Common/MessageIcon\";\nimport OndemandVideoIcon from '@mui/icons-material/OndemandVideo';\nimport InsertPhotoIcon from '@mui/icons-material/InsertPhoto';\nimport {\n\n  Row,\n  Col,\n\n} from \"reactstrap\";\nconst MyContainer = styled(Container)({\n\n})\nconst MyBox = styled(Box)({\n  display: \"flex\",\n  width: \"100%\",\n  height: \"500px\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n})\nconst InnerBox = styled(Paper)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"20px\",\n  minHeight: \"300px\",\n  width: \"400px\",\n  lineHeight: \"30px\",\n  borderRadius: \"10px\"\n})\nconst EditVideo = () => {\n  const userId = window.localStorage.getItem(\"adminkey\");\n  let history = useHistory()\n  const [heading, setHeading] = useState(\"\")\n  const [date, setDate] = useState(\"\")\n  const [data, setData] = useState([])\n  const { handleSubmit, register, errors, getValues } = useForm();\n  let getId = useParams()\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n  const token = localStorage.getItem(\"token\")\n  const myConfig = {\n    headers : {\n     \"uit\" : token\n    }\n  }\n  useEffect(() => {\n    getData()\n  }, [])\n  const getData = (e) => {\n\n    if (getId.id !== undefined) {\n      axios.get(`${baseUrl}/cms/getgallarylist?uid=${JSON.parse(userId)}&type=video&id=${getId.id}`, myConfig)\n        .then((res) => {\n\n          setData(res.data.result);\n          res.data.result.map((i) => {\n\n            setHeading(i.title)\n            console.log(i.created_date.split(\" \")[0].split(\"-\").reverse().join(\"-\"))\n            setDate(i.created_date.split(\" \")[0].split(\"-\").join(\"-\"))\n          })\n        })\n    }\n  }\n\n  const onSubmit = (value) => {\n    let formData = new FormData();\n    let file;\n    formData.append(\"title\", heading);\n    formData.append(\"type\", \"video\");\n    formData.append(\"date_event\", value.date_event)\n    formData.append(\"id\", getId.id)\n    var uploadImg = value.uploadImg;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        file = uploadImg[i];\n        formData.append(\"upload[]\", file);\n      }\n    }\n\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/cms/uploadphoto`,\n      headers : {\n        uit : token\n      },\n      data: formData\n    })\n      .then((res) => {\n        let a = res.data\n        console.log(\"res\", a)\n        if (res.data.code === 1) {\n          Swal.fire({\n            title: \"success\",\n            html: \"Video Gallery Update successfully\",\n            icon: \"success\"\n          })\n          history.push(\"/cms/videolist\")\n        }\n      })\n\n  }\n\n  const del = (e) => {\n    console.log(\"iii\", e.name.split(\".\")[1] === \"mp4\")\nlet message = \"\"\nlet confirmationMessage = \"\"\nif(e.name.split(\".\")[1] === \"mp4\"){\n  message = \"Video deleted successfully\"\n  confirmationMessage = \"Do you want to delete video? Yes, delete it!\"\n}\nelse{\n  message = \"Image deleted successfully\"\n  confirmationMessage = \"Do you want to delete image? Yes, delete it!\"\n}\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `${confirmationMessage}`,\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        axios.get(`${baseUrl}/cms/deletevideo?uid=${JSON.parse(userId)}&id=${e.imageid}&videooid=${e.id}`, myConfig)\n          .then((res) => {\n            console.log(\"response\", res)\n            if (res.data.code === 1) {\n              Swal.fire({\n                title: \"success\",\n                html: `${message}`,\n                icon: \"success\"\n              })\n              getData()\n            }\n            else {\n              Swal.fire({\n                title: \"error\",\n                html: \"Something went wrong , please try again\",\n                icon: \"error\"\n              })\n            }\n          })\n      }\n    });\n  };\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n\n      <MyContainer>\n        <Row className=\"my-2\">\n          <Col md=\"4\">\n            <button\n              className=\"autoWidthBtn\"\n              onClick={() => history.goBack()}\n            >\n\n              Go Back\n            </button>\n\n          </Col>\n          <Col md=\"4\" alig=\"center\">\n            <h4>Video Gallery</h4>\n          </Col>\n        </Row>\n        <MyBox>\n\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n\n            <InnerBox>\n\n              <div className=\"row\">\n                <div className=\"col-md-12 col-sm-12\">\n\n                  <label className=\"form-label\">Title</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_heading,\n                    })}\n                    value={heading}\n                    onChange={(e) => setHeading(e.target.value)}\n                    ref={register({ required: true })}\n                    name=\"p_heading\"\n                    placeholder=\"Please enter heading\"\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-12 col-sm-12\">\n\n                  <label className=\"form-label\">Date</label>\n                  <input\n                    type=\"date\"\n                    defaultValue={date}\n                    name=\"date_event\"\n                    ref={register}\n                    className=\"form-control\"\n                    max={item}\n\n                  />\n                </div>\n              </div>\n              <div className=\"row\" style={{\n                display: \"flex\", maxHeight: \"100px\",\n                padding: \"10px 0\", overflow: \"auto\"\n              }}>\n                {data.map((i, e) => (\n                  <div className=\"col-md-12 col-sm-12\">\n                    <div style={{ display: \"flex\", justifyContent: \"space-evenly\", alignItems: \"center\" }}>\n                      {\n                        i.name.split(\".\")[1] === \"mp4\" === true ?\n                          <a href={`${baseUrl3}/assets/gallery/${i.name}`} className=\"tabHover\" target=\"_blank\">\n                            <OndemandVideoIcon className=\"inprogress\" />\n                          </a> :\n                          <a href={`${baseUrl3}/assets/gallery/${i.name}`} className=\"tabHover\" target=\"_blank\">\n                            <InsertPhotoIcon className=\"inprogress\" />\n                          </a>}\n\n                      <span onClick={() => del(i)}>\n                        <DeleteIcon />\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-12 col-sm-12\">\n\n                  <label className=\"form-label\">Media</label>\n\n                  <input\n                    type=\"file\"\n                    accept=\"file_extension|audio/*|video/*|image/*|media_type\"\n                    name=\"uploadImg\"\n                    ref={register}\n                    className=\"form-control-file\"\n                    multiple\n                  />\n                </div>\n\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <button className=\"customBtn mt-5\">Submit</button> </div>\n              </div>\n            </InnerBox>\n\n\n\n\n\n          </form>\n        </MyBox>\n      </MyContainer>\n    </Layout>\n  )\n}\nexport default EditVideo;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Groupvideo.js",["4903","4904","4905","4906"],"import React , {useState, useEffect} from \"react\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport {Container } from '@material-ui/core';\nimport { useHistory } from \"react-router\";\nimport {DeleteIcon} from \"../../../components/Common/MessageIcon\";\nimport Swal from 'sweetalert2';\nimport {Link} from 'react-router-dom';\nimport {\n \n  Row,\n  Col,\n  \n} from \"reactstrap\";\nimport { AiOutlinePlaySquare } from 'react-icons/ai';\nimport ReactPlayer from \"react-player\";\nimport CloseIcon from '@material-ui/icons/Close';\nconst MyContainer = styled(Container)({\n\n})\nconst Groupvideo = () => {\n  const [galleryData, setGalleryData] = useState([])\n  const [videoId, setVideoId] = useState()\n  const [play, isPlay] = useState(false)\n  const userId = window.localStorage.getItem(\"adminkey\");\n  let history = useHistory();\n  \n    useEffect(() => {\n      getImages()\n    }, [])\n \n    const getImages = () => {\n   if(history.location.index){\n     \n   \n    axios.get(`${baseUrl}/cms/getgallarylist?uid=${JSON.parse(userId)}&type=video&id=${history.location.index.id}`)\n    .then((res) => {\n     \n      setGalleryData(res.data.result)\n      \n    })\n    }\n    \n  }\n  const del = (e) => {\n \n\n    Swal.fire({\n        title: \"Are you sure?\",\n        text: \"Want to delete media? Yes, delete it!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n        if (result.value) {\n          axios.get(`${baseUrl}/cms/deleteimage?uid=${JSON.parse(userId)}&id=${e.imageid}&imageid=${e.id}`)\n          .then((res) => {\nconsole.log(\"response\", res)\nif(res.data.code === 1){\nSwal.fire({\n  title : \"success\",\n  html  : \"Media deleted successfully\",\n  icon : \"success\"\n})\ngetImages()\n}\nelse{\nSwal.fire({\n  title :\"error\",\n  html : \"Something went wrong , please try again\",\n  icon : \"error\"\n})\n}\n          })\n        }\n    });\n};\n const playVideo2 = (e) => {\n  isPlay(true)\n  setVideoId(`${baseUrl3}/assets/gallery/${e}`)\n}\n    return(\n        <>\n     <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>   \n <MyContainer>\n <div className=\"py-2\">\n      <Row>\n          <Col md=\"4\">\n          <button\n                className=\"autoWidthBtn\" \n                onClick={() => history.goBack()}\n              >\n               \n                Go Back\n              </button>\n              \n            </Col>\n            <Col md=\"4\" align=\"center\">\n              <h4>Video Gallery</h4>\n            </Col>\n            </Row>\n        </div>\n <div className=\"galleryContainer\">\n                 \n {\n                   galleryData.map((i) => (\n                    <div className=\"galleryBox\" key={i.id}> \n                    {\n                      i.name.split(\".\")[1] === \"mp4\" === true ?\n                     <>\n                      <div style={{position: \"relative\"}}>\n                      <video \n                                 onClick = {(e) => playVideo2(i.name)}\n                                 style={{display : \"flex\", zIndex: 1, width: \"100%\"}} id={i.id} src={`${baseUrl3}/assets/gallery/${i.name}`}\n           />\n                      <span  onClick = {(e) => playVideo2(i.name)}>\n                       <AiOutlinePlaySquare style={{display: \"flex\", \n                       color: \"red\", width: \"40px\", height:\"40px\", position: \"absolute\",\n                       top: \"20%\", left: \"50%\" }} />\n                       </span>\n                       <div className=\"delIcon\">\n                  <span title=\"Delete Media\" onClick={() => del(i)}>\n                   <DeleteIcon />\n                   </span>\n                  \n                    </div>\n                        </div>\n                              \n                     </>\n       :\n       <>\n      <img \n      \n       style={{display : \"flex\", zIndex: 1, width: \"100%\"}} id={i.id} src={`${baseUrl3}/assets/gallery/${i.name}`}\n/>\n<div className=\"delIcon\">\n                  <span title=\"Delete Media\" onClick={() => del(i)}>\n                   <DeleteIcon />\n                   </span>\n                  \n                    </div>\n</>\n\n                     }\n                \n{/*                     \n                  <video id={i.id} src={`${baseUrl3}/assets/gallery/${i.name}`}\n                   onClick={() => playVideo2(i.id)}></video>\n                  <h4 style={{margin: \"5px 10px\"}}>{i.title}</h4>\n                  \n                   \n                  \n                  <div className=\"delIcon\">\n                  <span title=\"Delete Media\" onClick={() => del(i)}>\n                   <DeleteIcon />\n                   </span>\n                  \n                    </div> */}\n                 \n                   </div>\n                  \n                  ))\n                 }\n              \n                </div>\n                {\n          play === true ?\n                \n          <div className=\"modalBox\">\n          <div className=\"boxContainer\">\n          <div className=\"canBtn\"  title=\"cancel\">\n              <h4>Recording Player</h4>\n              <CloseIcon  onClick= {() => isPlay(false)} id=\"myBtn\"/> </div>\n         \n\n         <div className=\"my2\">\n         <ReactPlayer\n           url={videoId}\n           controls={true}\n           playing={true}\n           width='100%'\n           height='100%'\n          />\n             </div>\n          </div>\n     \n    </div> : \"\"\n        }\n\n </MyContainer>\n       </Layout>  \n       </>\n    )\n}\nexport default Groupvideo;","/home/pooja/MazarsRepo/src/views/Tax/VideoGallary.js",["4907","4908","4909","4910","4911","4912","4913","4914"],"import React , {useState, useEffect} from 'react';\nimport Header from \"../../components/Header/Header\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { Link } from 'react-router-dom';\nimport Footer from '../../components/Footer/Footer';\nimport { useHistory, useParams  } from 'react-router';\nimport axios from 'axios';\nimport { baseUrl , baseUrl3} from '../../config/config';\nimport ReactPlayer from \"react-player\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport {Breadcrumbs,  Box, Typography } from \"@material-ui/core\";\nimport { AiOutlinePlaySquare } from 'react-icons/ai';\nimport classes from './design.module.css';\nconst MyContainer = styled(Box)({\n    display : \"flex\", \n    justifyContent : \"center\", \n    alignItems : \"center\", \n    width: \"100%\",\n    flexDirection : \"column\"\n  })\nconst Videogallery = () => {\n    const [galleryData, setGalleryData] = useState([])\n    const userId = window.localStorage.getItem(\"adminkey\");\n    const [videoId, setVideoId] = useState()\n    const [video, isVideo] = useState(false)\n    const [play, isPlay] = useState(false)\n    const [title, setTitle] = useState(\"\")\n    let history = useHistory()\n    useEffect(() => {\n        getGalleryVideo()\n    }, [])\n   const getGalleryVideo = () => {\n    if(history.location.index){\n     localStorage.setItem(\"videoId\", history.location.index.id)\n   \n        axios.get(`${baseUrl}/customers/getvideogallery?id=${history.location.index.id}`)\n        .then((res) => {\n        \n          setGalleryData(res.data.result)\n          res.data.result.map((i) => {\n            setTitle(i.title)\n           if(i.name.split(\".\")[1] === \"mp4\"){\n             isVideo(true)\n             \n           }\n          })\n          \n        })\n        }\n        else{\nlet aa = localStorage.getItem(\"videoId\")\nconsole.log(\"aa\", aa)\n        axios.get(`${baseUrl}/customers/getvideogallery?id=${aa}`)\n        .then((res) => {\n        \n          setGalleryData(res.data.result)\n          res.data.result.map((i) => {\n            setTitle(i.title)\n           if(i.name.split(\".\")[1] === \"mp4\"){\n             isVideo(true)\n             \n           }\n          })\n          \n        })\n        }\n   }\n   const playVideo2 = (e) => {\n    isPlay(true)\n    setVideoId(`${baseUrl3}/assets/gallery/${e}`)\n  }\n\n    return(\n        <>\n\n                  <Header noSign=\"noSign\" />\n               <MyContainer>\n   \n  \n   <div className={classes.articleContent}>\n    {\n      \n       <div className={classes.articlesDetails}>\n          <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n  <Link underline=\"hover\" color=\"inherit\" to=\"/customer/media\">\n  Media Gallery\n  </Link>\n  <Link underline=\"hover\" color=\"inherit\" to=\"/customer/videolist\">\n  Video Gallery\n  </Link>\n  <Typography color=\"text.primary\">  {title}</Typography>\n  \n  </Breadcrumbs>\n\n      <div style={{display: \"flex\", flexWrap: \"wrap\"}}>\n      {\n                     \n                     galleryData.map((i) => (\n                      \n    \n                   \n    <div className=\"galleryBoxvideo\">\n    <div style={{display : \"flex\", justifyContent: \"center\", height: \"70%\", width: \"100%\", alignItems: \"center\"}}>\n    {\n                      i.name.split(\".\")[1] === \"mp4\" === true ?\n                     <>\n                      <div style={{position: \"relative\"}}>\n                      <video \n                                 onClick = {(e) => playVideo2(i.name)}\n                                 style={{display : \"flex\", zIndex: 1, width: \"100%\"}} id={i.id} src={`${baseUrl3}/assets/gallery/${i.name}`}\n           />\n                      <span  onClick = {(e) => playVideo2(i.name)}>\n                       <AiOutlinePlaySquare style={{display: \"flex\", \n                       color: \"red\", width: \"40px\", height:\"40px\", position: \"absolute\",\n                       top: \"20%\", left: \"50%\" }} />\n                       </span>\n                        </div>\n                              \n                     </>\n       :\n       <Link style={{display: \"flex\", height: \"100%\"}}\n       to = {{\n         pathname : \"/customer/imagegallery\",\n                             index : i.name\n                           }}><img \n       \n       style={{display : \"flex\", zIndex: 1, width: \"100%\"}} id={i.id} src={`${baseUrl3}/assets/gallery/${i.name}`}\n/>\n</Link>\n                     }\n      </div>\n              \n                     </div>  \n                    ))\n                   }\n      </div>\n\n\n       </div>\n   \n     \n    }\n   </div>\n   {\n          play === true ?\n                \n          <div className=\"modalBox\">\n          <div className=\"boxContainer\">\n          <div className=\"canBtn\"  title=\"cancel\">\n              <h4>Recording Player</h4>\n              <CloseIcon  onClick= {() => isPlay(false)} id=\"myBtn\"/> </div>\n         \n\n         <div className=\"my2\">\n         <ReactPlayer\n           url={videoId}\n           controls={true}\n           playing={true}\n           width='100%'\n           height='100%'\n          />\n             </div>\n          </div>\n     \n    </div> : \"\"\n        }\n  </MyContainer>\n                <Footer />\n               </>\n    )\n}\nexport default Videogallery;","/home/pooja/MazarsRepo/src/views/Tax/GroupVideo.js",["4915","4916","4917"],"import React , {useState, useEffect} from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport {Breadcrumbs,  Box, Typography} from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ImageGallery from 'react-image-gallery';\nimport { baseUrl, baseUrl3 } from \"../../config/config\";\nimport axios from \"axios\";\nimport './style.css';\n    const MyContainer = styled(Box)({\n        display : \"flex\", \n        justifyContent : \"center\", \n        alignItems : \"center\", \n        width: \"100%\",\n        flexDirection : \"column\"\n      })\nconst GroupVideo = () => {\n  const [images, setImages] = useState([])\n  \n  let history = useHistory();\n   \n    useEffect(() => {\n      getImages()\n    }, [])\n    const getImages = () => {\n      let obj = []\n     if(history.location.index){\n     \n      axios.get(`${baseUrl}/customers/getvideogallery?id=${history.location.index.id}`)\n      .then((res) => {\n       \n      res.data.result.map((i) => {\n        let  a = {\n          original : `${baseUrl3}/assets/gallery/${i.name}`,\n          thumbnail : `${baseUrl3}/assets/gallery/${i.name}`\n        }\n        obj.push(a)\n        console.log(\"aa\", a, obj)\n     setImages(obj)\n      })\n      })\n     \n     }\n     console.log(\"obj\", obj)\n    }\n    \n   \n    return(\n        <>\n         <Header noSign=\"noSign\" />\n        <MyContainer>\n   \n  \n        <div className=\"StartPageDetails\">\n      \n            <div style={{display : \"flex\", width:\"1000px\", justifyContent: \"center\",\n          alignItems: \"flex-start\", flexDirection: \"column\", padding: \"5px 0px\"}}>\n            <span style={{textAlign: \"left\"}}>\n            <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n  \n  <Link underline=\"hover\" color=\"inherit\" to = {`/customer/media`}>\n Media Gallery\n  </Link>\n  <Link underline=\"hover\" color=\"inherit\" to = {`/customer/media`}>\n Photo Gallery\n  </Link>\n  \n  <Typography color=\"text.primary\"> Nature Image(Make your life easy)</Typography>\n</Breadcrumbs>\n        \n              </span>\n        <div style={{display: \"flex\", width:\"100%\", justifyContent: \"center\", alignItems: \"center\"}}>\n    {images.length > 0 ? \n     <ImageGallery items={images} \n     height={300}\n     additionalClass = \"myVideo\" /> : \"\" }\n            </div>\n            </div>\n        \n         \n        </div>\n      \n       </MyContainer>\n   \n       </>\n    )\n}\nexport default GroupVideo;","/home/pooja/MazarsRepo/src/views/Tax/FaqQuestion.js",["4918","4919","4920","4921","4922","4923","4924","4925"],"import React , {useState, useEffect} from 'react';\nimport Header from \"../../components/Header/Header\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { Link } from 'react-router-dom';\nimport Footer from '../../components/Footer/Footer';\nimport axios from 'axios';\nimport {Breadcrumbs, Box, Typography } from \"@material-ui/core\";\nimport CommonServices from '../../common/common.js';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { baseUrl } from '../../config/config';\nimport { Markup } from 'interweave';\nimport classes from './design.module.css';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { OuterloginContainer } from '../../components/Common/OuterloginContainer';\nconst MyContainer = styled(Box)({\n    display : \"flex\", \n    justifyContent : \"center\", \n    alignItems : \"center\", \n    width: \"100%\",\n    flexDirection : \"column\"\n  })\n\nconst FaqQuestion = () => {\n    const [data, setData] = useState([\"1\"])\n    const [list, setList] = useState([])\n    const [heading, setHeading] = useState(\"\")\n   \n    const [expanded, setExpanded] = useState([]);\n    const getList = () => {\n      axios.get(`${baseUrl}/customers/getfaq`)\n      .then((res) => {\n       \n      if(res.data.code === 1){\n        console.log(\"response\", res.data.result)\n        setList(res.data.result)\n      \n      }\n      })\n    }\n    useEffect(() => {\n      getList()\n    }, [])\n    const handleChange = (panel) => (event, isExpanded) => {\nif(expanded.includes(panel)){\nlet k = expanded.filter((i) => {\n  return panel !== i\n})\nsetExpanded(k)\n}\nelse{\n  setExpanded((oldData) => {\n    return([...oldData, panel])\n  });\n}\n    };\n  \n    return(\n        <>\n     <OuterloginContainer>\n     <Header noSign=\"noSign\"/>\n         <MyContainer>\n    \n   \n         <div className={classes.articleContent}>\n          {\n        \n             <div className={classes.articlesDetails}>\n              <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n           \n   <Link underline=\"hover\" color=\"inherit\" to = {`/customer/faq-question`}>\n   {CommonServices.capitalizeFirstLetter(\"FAQ\")}\n   </Link>\n   \n  \n </Breadcrumbs>\n \n        \n            \n          {list && list.map((i) => (\n                       <>\n                             <Accordion  key = {i.id} expanded={expanded.includes(i.id) == true} onChange={handleChange(i.id)}>\n        <AccordionSummary\n       expandIcon={expanded.includes(i.id) == true ? <RemoveIcon /> : <AddIcon />}\n          aria-controls={i.id}\n          id={i.id}\n        >\n          <Typography style={{ width: '33%', flexShrink: 0 , fontWeight: 600, fontSize: \"13px\"}} variant=\"subtitle2\">\n{i.question}\n          </Typography>\n        \n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n          <Markup content={i.answer} />\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n    \n\n                       </>\n               \n          ))}\n     \n      \n   \n             </div>\n         \n\n          }\n         </div>\n       \n        </MyContainer>\n        <Footer />\n     </OuterloginContainer>\n        </>\n   \n     )\n }\nexport default FaqQuestion;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/EditFaq.js",["4926","4927","4928","4929","4930","4931","4932","4933","4934","4935","4936","4937","4938","4939","4940","4941"],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/makeData.js",[],["4942","4943"],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/GridExaxple.js",["4944","4945","4946","4947","4948","4949"],"/home/pooja/MazarsRepo/src/components/Common/OuterloginContainer.js",[],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/GridExamplefaq.js",["4950","4951","4952","4953","4954","4955","4956","4957","4958","4959","4960"],"/home/pooja/MazarsRepo/src/pages/Admin/cmslogin/Login.js",["4961","4962","4963","4964"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\nimport { Spinner } from \"reactstrap\";\nimport {useHistory} from 'react-router-dom';\nimport Cookies from \"js-cookie\"\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction Login(props) {\n  const alert = useAlert();\n  let history = useHistory()\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [email, setEmail] = useState(null);\n  const [show, setShow] = useState(false);\n  const [uid, setUid] = useState('')\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n \n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"userid\", value.p_email);\n      formData.append(\"password\", value.password);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/login`,\n        data: formData,\n      })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          setLoading(false)\n          setShow(true)\n          Cookies.set(\"adminName\", response.data.display_name)\n          localStorage.setItem(\"role\", response.data.role)\n          Swal.fire({\n            \"title\" : \"success\", \n            \"html\" : \"As per your request, OTP has been sent to your registered email address.\",\n            \"icon\" : \"success\"\n          })\n          // Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setUid(response.data[\"user id\"])\n          logout()\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Invalid email or password.\")\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n  const logout = () => {\n    setTimeout(() => {\n      localStorage.removeItem(\"adminkey\");\n      localStorage.removeItem(\"adminEmail\");\n      history.push(\"/admin/login\");\n    }, 36000000)\n  }\n  const handleChange = (e) => {\n  \n    setEmail(e.target.value);\n  };\n  if(window.location.origin === \"http://masindia.live\" && window.location.protocol == 'http:'){\n    window.location.href = window.location.href.replace('http:', 'https:')\n  }\n \n  \n  return (\n    <>\n      <Header admin=\"admin\" noAdminSign = \"adminSign\"/>\n      <div class=\"container\">\n\n        {\n          show ? <div>\n            <VerifyOtpLogin email={email} uid={uid}\n              loading={loading}\n              setLoading={setLoading} />\n          </div>\n            :\n            <div class=\"form\">\n              <div class=\"heading\">\n                <h2>\n                    CMS LOGIN</h2>\n              </div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">User Id<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                        placeholder=\"Enter Email\"\n                        autocomplete=\"off\"\n                        onChange={(e) => handleChange(e)}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n                      <input\n                        type={isPasswordShow ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.password,\n                        })}\n                        name=\"password\"\n                        placeholder=\"Enter Password\"\n                        ref={register}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                      />\n                      <i\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword}\n                      />\n                      {errors.password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                {\n                  loading ?\n                    <div class=\"col-md-12\">\n                      <Spinner color=\"primary\" />\n                    </div>\n                    :\n                    <button type=\"submit\" className=\"customBtn\">\n                      Submit\n                    </button>\n                }\n\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n                  <Link\n                    to={{\n                      pathname: \"/admin/forget-password\",\n                      email: `${email}`,\n                    }}\n                  >\n                    Forgot Password\n                  </Link>\n                </div>\n\n                <Mandatory />\n              </form>\n            </div>\n        }\n\n\n      </div>\n    \n    </>\n  );\n}\nexport default Login;","/home/pooja/MazarsRepo/src/pages/Admin/cmslogin/VerifyOtpLogin.js",["4965"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\n\nconst Schema = yup.object().shape({\n  p_otp: yup.string().required(\"\"),\n});\n\n\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\n  const role = localStorage.getItem(\"role\")\n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const history = useHistory();\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [num, changeNum] = useState(false);\n\n\n  useEffect(() => {\n   LoadingTime.timer2(setTime, setDisabled)\n  \n   \n  }, [num]);\n\n  useEffect(() => {\n  \n    LoadingTime.timer2(setTime, setDisabled)\n  }, []);\n\n  const validOtp = (e) => {\n    if (isNaN(e.target.value)) {\n      Alerts.ErrorNormal(\"Please enter number only\")\n    }\n  }\n\n\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/verifyloginotp`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n\n        if (response.data.code == 1) {\n          setLoading(false)\n          Alerts.SuccessLogin(\"Logged in successfully.\")\n          localStorage.setItem(\"adminkey\", JSON.stringify(response.data[\"user id\"]));\n          sessionStorage.setItem(\"adminIdsession\", JSON.stringify(response.data[\"user id\"]));\n          localStorage.setItem(\"adminEmail\", JSON.stringify(response.data.name));\n       \n          if(role === \"cms\"){\n          history.push(\"/cms/cms\")\n\n         }\n           else{\n            \n        history.push(\"/admin/dashboard\")\n  \n           }\n        } else {\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n          setLoading(false)\n          reset();\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n  const resendOtp = () => {\n    setLoading(true)\n    changeNum(!num)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"uid\", uid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/regenrateotp`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setDisabled(false)\n        }\n        else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n\n  return (\n    <>\n\n      <div class=\"container\">\n        <div class=\"otp\">\n          <div class=\"heading text-center\">\n            <h2>Verify Your OTP</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            {\n              disabled ?\n                null\n                :\n                <div class=\"form-group\">\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_otp,\n                    })}\n                    id=\"otp\"\n                    placeholder=\"Enter Your OTP Here\"\n                    ref={register}\n                    name=\"p_otp\"\n                    autocomplete=\"off\"\n                    onChange={(e) => validOtp(e)}\n                  />\n                  {errors.p_otp && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_otp.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                  <Mandatory />\n                </div>\n            }\n\n            {\n              loading ?\n                <Spinner color=\"primary\" />\n                :\n                <div class=\"text-center\">\n                  {\n                    disabled ?\n                      <button type=\"submit\" class=\"autoWidthBtn\" onClick={resendOtp}>SEND OTP</button>\n                      :\n                      <button type=\"submit\" class=\"autoWidthBtn\">VERIFY OTP</button>\n                  }\n                </div>\n            }\n          </form>\n\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/home/pooja/MazarsRepo/src/views/Login/Linklist.js",["4966","4967","4968","4969","4970","4971","4972","4973","4974","4975","4976"],"import { useState, useEffect } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer';\nimport './style.css';\nimport {Box} from \"@material-ui/core\";\nimport { styled , makeStyles} from \"@material-ui/styles\";\nimport { Markup } from \"interweave\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { baseUrl, baseUrl3 } from '../../config/config';\nimport ima from \"../../mazars_logo.png\";\nimport classesCustom from './design.module.css';\nimport CommonServices from '../../common/common.js';\nimport {  VscFilePdf} from \"react-icons/vsc\";\nimport { OuterloginContainer } from \"../../components/Common/OuterloginContainer\";\nimport {Typography, Breadcrumbs, Table, TableContainer, \n  TableHead, TablePagination, TableBody, TableRow, TableCell} from \"@material-ui/core\";\nconst MyBox = styled(Box)({\n  display: \"flex\", \n width: \"1000px\",\n margin: \"10px 0px\",\n  justifyContent : \"space-between\",\n \n  padding : \"10px\"\n})\nconst ImgBox = styled(Box)({\ndisplay: \"flex\",\nwidth: \"20%\",\nflexDirection: \"column\",\nminHeight: \"200px\",\nalignItems : \"center\",\npadding : \"10px\"\n})\nconst MyContainer = styled(Box)({\n  display : \"flex\", \n  justifyContent : \"center\", \n  alignItems : \"center\", \n  width: \"100%\",\n  flexDirection : \"column\"\n})\nconst ArticleHeader = styled(Box)({\n  display : \"flex\",\n  width: \"100%\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  backgroundColor: \"#e4f0fa\",\n\n  padding: \"10px 5px\",\n  margin: \"8px 0px\"\n})\nconst MyLogo = styled(Box)({\n  display : \"flex\",\n  width: \"100%\",\n  height: \"auto\",\n  maxWidth: \"100px\",\n  objectFit: \"contain\"\n})\nconst MyHeading = styled(Box)({\n  display : \"flex\",\n  justifyContent: \"space-between\"\n})\nconst RightContent = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\"\n})\nconst useStyle = makeStyles({\n  imgResponsive : {\n    display : \"flex\",\n    maxWidth: \"25%\",\n    height : \"50px\", \n    cursor : \"pointer\",\n   alignItems : \"space-between\",\n    justifyContent: \"center\",\n    textAlign : \"justify\"\n  }\n})\n\nfunction Linklist() {\n \n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [linkData, setLinkData] = useState([])\n  const [showData, setShowData] = useState(false)\n  const [updates, isUpdates] = useState(false)\n  const [myData, setMyData] = useState()\n  const [ description, setDescription] = useState(false)\n  const [linkData22, showLinkData22] = useState(false)\n  let history = useHistory()\n  let id = useParams()\n  const getId = history.location.index;\nuseEffect(() => {\n  showLinkData()\n}, [])\nconst showLinkData = () => {\n \n  \n  \n    axios.get(`${baseUrl}/customers/getimportantlink`)\n    .then((res) => {\n     console.log(\"res\", res)\n      setLinkData(res.data.result)\n      showLinkData22(true)\n      isUpdates(false)\n    })\n   \n  \n  }\n  \n  \n  \n  if(window.location.origin === \"http://masindia.live\" && window.location.protocol == 'http:'){\n    window.location.href = window.location.href.replace('http:', 'https:')\n  }\n  \n  \n\n const getData = (e) => {\nsetDescription(true);\nsetMyData(e)\n }\n const onChangePage = (event, nextPage) => {\n  setPage(nextPage)\n}\nconst onChangeRowsPerPage = (e) => {\n  setRowsPerPage(e.target.value)\n}\n  \nconst classes = useStyle()\n\n  return (\n    <>\n    <OuterloginContainer>\n      <Header noSign=\"noSign\" getData = {setShowData} />\n     <MyContainer>\n   \n  \n   {\n     description === false ? \n     <div className={classesCustom.articleContent}>\n     <div className={classesCustom.articlesDetails}>\n\n  <>\n {\n   updates === true ?\n  <TableContainer>\n       <Breadcrumbs separator=\"<\" maxItems={3} aria-label=\"breadcrumb\">\n  <Link underline=\"hover\" color=\"inherit\" to={{\n    pathname : \"/customer/updates\",\n    index : 2\n  }}>\n   Updates\n  </Link>\n  \n \n  </Breadcrumbs>\n    <Table>\n      <TableBody>\n      {\n  linkData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((i, e) => (\n        <TableRow>\n          <TableCell  onClick={(p) => getData(i)}className=\"tableCellStyle\">\n         <span>\n         <span style={{color: \"rgb(61, 71, 117\"}}>\n           {`${e + 1} .`}\n           </span> <span className=\"tabHover updatesLink\">\n     {` ${i.heading} -    ${i.publish_date.split(\"-\").reverse().join(\"-\")}`}\n      </span>\n  </span>\n          </TableCell>\n        </TableRow>\n         ))\n        }\n      </TableBody>\n    </Table>\n   {\n     linkData.length > 10 ?\n     <TablePagination \n     rowsPerPageOptions = {[5, 10, 15, 20, 25]}\n     count = {linkData.length}\n     rowsPerPage = {rowsPerPage}\n     page = {page}\n     onChangePage = {onChangePage}\n     onChangeRowsPerPage = {onChangeRowsPerPage}\n      /> : \"\"\n   }\n  </TableContainer>\n   : \n   <>\n   \n    <TableContainer>\n    {linkData22 === true ? <>\n    <Breadcrumbs separator=\"<\" maxItems={3} aria-label=\"breadcrumb\">\n  <Link underline=\"hover\" color=\"inherit\" to={{\n    pathname : \"/customer/updates\",\n    index : 3\n  }}>\n  Important Links\n  </Link>\n  \n\n  </Breadcrumbs>\n    <Table>\n    <TableHead>\n   <TableRow>\n     <TableCell style= {{width : \"50px\"}}>S.No</TableCell>\n     <TableCell style={{width : \"400px\"}}>Website</TableCell>\n     <TableCell>Url</TableCell>\n   </TableRow>\n   </TableHead>\n      <TableBody>\n      {\n  linkData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((i, e) => (\n \n <>\n\n  \n    <TableRow>\n      <TableCell style={{padding: \"8px 16px\"}} className=\"tableCellStyle\">\n     \n        {e + 1}\n      </TableCell>\n      <TableCell>\n        {i.heading}\n      </TableCell>\n      <TableCell>\n        <a href={i.url} target=\"_blank\">{i.url}</a>\n      </TableCell>\n    </TableRow>\n \n </>\n         ))\n        }\n      </TableBody>\n    </Table>\n    </> : \"\" }\n    {linkData22 === false ? <>\n {\n   linkData.length > 0 ?\n   <Breadcrumbs separator=\"<\" maxItems={3} aria-label=\"breadcrumb\">\n   <Link underline=\"hover\" color=\"inherit\" to={{\n    pathname : \"/customer/updates\",\n    index : 4\n  }}>\n   FAQs\n   </Link>\n   \n   \n   </Breadcrumbs> : \"\"\n }\n   {\n     linkData.map((i) => (\n      <Markup className=\"myFaq\" content = {i.content} />\n     ))\n   }\n    </> : \"\" }\n    {\n      linkData.length > 10 ?\n      <TablePagination \n        rowsPerPageOptions = {[5, 10, 15, 20, 25]}\n        count = {linkData.length}\n        rowsPerPage = {rowsPerPage}\n        page = {page}\n        onChangePage = {onChangePage}\n        onChangeRowsPerPage = {onChangeRowsPerPage}\n         /> : \"\"\n    }\n  </TableContainer>\n   </>\n }\n  </>\n \n   </div>\n\n </div> : \n   <div className={classesCustom.articleContent}>\n   <div className={classesCustom.articlesDetails}>\n   <Breadcrumbs separator=\">\" maxItems={3} aria-label=\"breadcrumb\">\n  \n  <Link underline=\"hover\" color=\"inherit\" to = {{\n  pathname : \"/customer/updates\",\n  index : 2\n}}>\n   Updates\n  </Link>\n \n  </Breadcrumbs>\n  <div style={{margin: \"20px 0 10px 0\"}}>\n  <ArticleHeader>\n  <MyLogo>\n<Link to = \"/\">\n<img className={classesCustom.myLogo} src={`${ima}`}/>\n</Link>\n</MyLogo>\n<RightContent>\n<h4 style={{color: \"#081f8f\"}}>Mazars Advisory Solutions (MAS)</h4>\n<span style={{color: \"#0071ce\", fontSize: \"18px\"}}>Building Lasting Relationships</span>\n<a href=\"https://www.masindia.live\" target=\"_blank\">www.masindia.live.com</a>\n</RightContent>\n  </ArticleHeader>\n  \n  <div>\n           <MyHeading>\n           <h5>  {CommonServices.capitalizeFirstLetter(myData.heading)}</h5>\n           <a href={`${baseUrl3}/${myData.file}`} target=\"_blank\" \n    className={classes.myLink}>\n\n    <button className=\"downloadBtnPdf\"> Download  <VscFilePdf style={{display: \"flex\",\n     margin: \"0 10px\", color: \"#e4f0fa\", width: \"20px\", height: \"20px\"}} /></button>\n    </a> \n         \n           </MyHeading>\n\n           <h6>Date -   {myData.publish_date.split(\"-\").reverse().join(\"-\")} </h6>\n         \n            \n             </div>\n     \n    <Markup content={myData.content} />\n  </div>\n   \n </div>\n\n</div>\n\n   }\n     </MyContainer>\n\n\n      <Footer />\n      </OuterloginContainer>\n    </>\n  );\n}\n\nexport default Linklist;\n","/home/pooja/MazarsRepo/src/views/EditQuery/Editor.js",[],"/home/pooja/MazarsRepo/src/components/Common/MainContainer.js",[],"/home/pooja/MazarsRepo/src/components/Common/MyContainer.js",["4977"],"import styled from 'styled-components';\nimport {  Box } from \"@material-ui/core\";\n// const MainContent = styled(div)({\n//     display : \"flex\", \n//     justifyContent : \"center\", \n//     width: \"100%\",\n//     flexDirection : \"column\",\n//     flexWrap : \"wrap\",\n//     padding: \"0\"\n\n//   })\nconst MainContent  = styled.div`\ndisplay: flex;\nwidth: 100%;\nflex-direction: column;\njustify-content: center;\nflex-wrap: wrap;\n@media (max-width: 1024px) {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: center;\n    flex-wrap: wrap;\n    padding: 0 10px;\n}`\n  const MyContainer = (props) => {\n      return (\n          <MainContent>\n              {props.children}\n          </MainContent>\n      )\n  }\n  export default MyContainer;","/home/pooja/MazarsRepo/src/components/Common/FlashSection.js",[],"/home/pooja/MazarsRepo/src/components/Common/MainContent.js",[],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/CustomQuillEditor.js",["4978","4979","4980","4981","4982"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Quill } from \"react-quill-with-table\";\nimport QuillBetterTable from \"quill-better-table\";\nimport \"react-quill-with-table/dist/quill.snow.css\";\nimport \"react-quill-with-table/dist/quill.bubble.css\";\nimport {Markup} from 'interweave';\nQuill.register(\"modules/better-table\", QuillBetterTable);\n\n\n\nfunction CustomQuillEditor(props) {\n  const editor = useRef();\n  const [text, setText] = useState(props.content);\n  \n useEffect(() => {\n   if(props.content){\n    // var snow = new Quill('#snow-container', {\n    //   theme: 'snow',\n    //   modules: {\n    //     table: true,\n    //     toolbar: [\n    //       [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\n    //       [{size: []}],\n    //       ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    //       [{'list': 'ordered'}, {'list': 'bullet'}, \n    //        {'indent': '-1'}, {'indent': '+1'}],\n    //       ['link', 'image', 'video'],\n    //       ['clean']\n    //     ],\n    //   }\n    // });\n       var snow = new Quill('#snow-container', {\n             modules: {\n              table: true,\n                 toolbar: [\n                     [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\n                     [{size: []}],\n                     ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                     [{'list': 'ordered'}, {'list': 'bullet'}, \n                      {'indent': '-1'}, {'indent': '+1'}],\n                     ['link', 'image', 'video'],\n                     ['clean']\n                   ],\n              \n             },\n        \n             placeholder: 'Compose an epic...',\n             theme: 'snow'    \n           });\n     \n\n    const table = snow.getModule('table');\n    snow.on('text-change', function(delta, old, source) {\n      if (source === 'user') {\n     \n        updateOutput();\n      }\n    });\n    \n    function updateOutput() {\n      const snowContent = snow.getContents();\n    }    \n   }\n }, [props.content])\n  return (\n   <>\n\n   <div class=\"container\" style={{padding: \"0px\", maxWidth: \"1920px\"}}>\n  <div class=\"panel\">\n    <div id=\"snow-container\">\n     <Markup content={props.content} />\n    </div>\n  \n  </div>\n\n</div> \n   </>\n  \n  \n  );\n}\nexport default CustomQuillEditor;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/AddCmsContent.js",["4983","4984","4985","4986","4987","4988","4989","4990","4991","4992","4993","4994"],"/home/pooja/MazarsRepo/src/pages/Admin/CMS/AddEditor.js",["4995","4996","4997","4998","4999"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Quill } from \"react-quill-with-table\";\nimport QuillBetterTable from \"quill-better-table\";\nimport \"react-quill-with-table/dist/quill.snow.css\";\nimport \"react-quill-with-table/dist/quill.bubble.css\";\n\nQuill.register(\"modules/better-table\", QuillBetterTable);\n\n\n\nfunction AddEditor() {\n  const editor = useRef();\n  const [text, setText] = useState(\"\");\n useEffect(() => {\n    var snow = new Quill('#snow-container', {\n        theme: 'snow',\n        modules: {\n          table: true,\n        }\n      });\n\n      const table = snow.getModule('table');\n      snow.on('text-change', function(delta, old, source) {\n        if (source === 'user') {\n       \n          updateOutput();\n        }\n      });\n      \n      function updateOutput() {\n        const snowContent = snow.getContents();\n      }    \n }, [])\n  return (\n   <>\n <div class=\"container\" style={{padding: \"0px\", maxWidth : \"1920px\"}}>\n  <div class=\"panel\">\n    <div id=\"snow-container\"></div>\n   \n  </div>\n\n</div>\n\n   </>\n  \n  \n  );\n}\nexport default AddEditor;","/home/pooja/MazarsRepo/src/pages/Admin/CMS/Editupdates.js",["5000","5001","5002","5003","5004","5005","5006","5007","5008","5009","5010","5011","5012","5013","5014","5015","5016"],"/home/pooja/MazarsRepo/src/WebRoutes.js",["5017","5018","5019"],"import React, {useEffect, useState} from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { positions, Provider, transitions } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport PageNotFound from './components/PageNotFound/PageNotFound'\nimport { useHistory } from \"react-router\";\n\n\n//user routes\nimport ModalMaual from './views/ModalManual/ModalManual';\nimport Login from './views/Login/Login'\nimport SignUp from './views/SignUpForm/SignUp'\nimport Dashboard from './views/Dashboard/Dashboard'\nimport MyAssingment from './views/MyAssingment/MyAssingment'\nimport AddFreshAssingment from './views/AddFressAssignment/AddFreshAssingment'\nimport SelectCategoryPage from './views/SelectCategoryPage/SelectCategoryPage'\nimport QueriesTab from './views/QueriesTab/QueriesTab'\nimport ProposalTab from './views/ProposalTab/ProposalTab'\nimport AssignmentTab from './views/AssignmentTab/AssignmentTab'\nimport ProposalReceived from './views/ProposalView/ProposalView'\nimport ForgetPassword from './views/ForgetPassword/ForgetPassword'\nimport NewPassword from './views/NewPassword/NewPassword'\nimport ChangePassword from './views/ChangePassword/ChangePassword'\nimport EditQuery from './views/EditQuery/EditQuery'\nimport VideoCall from './views/VideoCall/VideoCall'\nimport MeetingComponent from './views/MeetingComponent/MeetingComponent'\nimport schedule from './views/Schedule/schedule'\nimport ViewNotification from './views/ViewNotification/ViewNotification'\nimport Chatting from './views/Chatting/Chatting'\nimport Message from './views/Message/Message'\nimport ProposalView from './views/ProposalView/ProposalView'\nimport Feedback from './views/Feedback/Feedback'\nimport FeedbackData from './views/FeedbackData/FeedbackData'\nimport PaymentStatus from './views/PaymentStatus/PaymentStatus'\nimport PaymentGateway from \"./views/PaymentGateway.js/PaymentGateway\";\nimport ThankYou from \"./views/ThankYou/Thankyou\";\nimport payDetails from \"./views/PaymentStatus/PayDetails\";\nimport Contact from \"./views/Contact/Contact\";\nimport About from './views/About/About';\nimport Media from './views/Tax/Media';\nimport FaqQuestion from \"./views/Tax/FaqQuestion\";\nimport LinklistUser from \"./views/Login/Linklist\";\n\n\n//admin routes\nimport AdminStart from './pages/Admin/Start/Start'\nimport AdminLogin from './pages/Admin/Login/Login'\nimport AdminDashboard from './pages/Admin/Dashboard/Dashboard'\nimport AdminNewTeamLeader from './pages/Admin/AddNewTeamLeader/AddNewTeamLeader'\nimport AdminNewTaxProf from './pages/Admin/AddNewTaxProf/AddNewTaxProf'\nimport AdminProposal from './pages/Admin/Proposal/Proposal'\nimport AdminQueriesRecevied from './pages/Admin/QueriesRecevied/QueriesRecevied'\nimport AdminQueryAssingment from './pages/Admin/QueryAssingment/QueryAssingment'\nimport AdminEditTL from './pages/Admin/EditTL/EditTL'\nimport AdminEditTP from './pages/Admin/EditTP/EditTP'\nimport AdminQueriesTab from './pages/Admin/QueriesTab/QueriesTab'\nimport AdminAssignmentTab from './pages/Admin/AssignmentTab/index'\nimport AdminPaymentStatusTab from './pages/Admin/PaymentStatusTab/PaymentStatusTab'\nimport AdminTeamLeaderTab from './pages/Admin/TeamLeaderTab/TeamLeaderTab'\nimport AdminTaxProfessionalsTab from './pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab'\nimport AdminFeedbackTab from './pages/Admin/FeedbackTab/FeedbackTab'\nimport AdminPendingRecevived from './pages/Admin/PendingReceived/PendingRecevived'\nimport AdminForgetPassword from './pages/Admin/ForgetPassword/ForgetPassword'\nimport AdminNewPassword from './pages/Admin/NewPassword/NewPassword'\nimport AdminQueryRejection from './pages/Admin/QueryRejection/QueryRejection'\nimport AdminSchedule from './pages/Admin/Schedule/Schedule'\nimport AdminMeetingComponent from './pages/Admin/MeetingComponent/MeetingComponent'\nimport AdminChatting from './pages/Admin/Chatting/Chatting'\nimport AdminMessage from './pages/Admin/Message/Message'\nimport AdminViewNotification from './pages/Admin/ViewNotification/ViewNotification'\nimport AdminRecording from './pages/Admin/Recording/Recording'\nimport adMeetingComponent from './pages/Admin/MeetingComponent/MeetingComponent'\nimport Customer from \"./pages/Admin/customer/Customer\";\nimport adminReport from \"./pages/Admin/Report/Report\";\nimport AdminInvoice from \"./pages/Admin/Invoice/Invoice\";\nimport AdpayDetails from \"./pages/Admin/PaymentStatusTab/Paydetails\";\nimport ReportList from \"./pages/Admin/Report/ReportList\"\nimport Consalation from './pages/Admin/Report/Consalation';\nimport Cms from  './pages/Admin/CMS/CMS';\nimport AdminUpdates from './pages/Admin/CMS/Updates';\nimport UpdatesContent from \"./pages/Admin/CMS/UpdatesContent\";\nimport Linklist from \"./pages/Admin/CMS/Linklist\";\nimport FaqList from \"./pages/Admin/CMS/FaqList\";\nimport CmsLogin from './pages/Admin/cmslogin/Login';\nimport GroupImage from \"./pages/Admin/CMS/GroupImage\";\n//TL routes\nimport TlStart from './pages/TL/Start/Start'\nimport TlLogin from './pages/TL/Login/Login'\nimport TlDashboard from './pages/TL/Dashboard/Dashboard'\nimport TlAddAssingmentStages from './pages/TL/AddAssingmentStages/AddAssingmentStages'\nimport TlAddNew from './pages/TL/AddNew/AddNew'\nimport TlAddTeamProf from './pages/TL/AddTeamProf/AddTeamProf'\nimport TlProposalTab from './pages/TL/Proposal/ProposalTab'\nimport TlQueriesRecevied from './pages/TL/QueriesRecevied/QueriesRecevied'\nimport TlQueryAssingment from './pages/TL/QueryAssingment/QueryAssingment'\nimport TlEditTP from './pages/TL/EditTP/EditTP'\nimport TlFeedbackTab from './pages/TL/FeedbackTab/FeedbackTab'\nimport TlPaymentStatus from './pages/TL/PaymentStatus/PaymentStatus'\nimport TlAssignmentTab from './pages/TL/AssignmentTab/AssignmentTab'\nimport TlSendProposal from './pages/TL/SendProposal/SendProposal'\nimport TlQueriesTab from './pages/TL/QueriesTab/QueriesTab'\nimport TlEditProposal from './pages/TL/EditProposal/EditProposal'\nimport TlPendingReceived from './pages/TL//PendingReceived/PendingReceived'\nimport TlAssignmentForm from './pages/TL/AssignmentForm/AssignmentForm'\nimport TlViewReport from './pages/TL/ViewReport/ViewReport'\nimport TlForgetPassword from './pages/TL/ForgetPassword/ForgetPassword'\nimport TlNewPassword from './pages/TL/NewPassword/NewPassword'\nimport TlViewNotification from './pages/TL/ViewNotification/ViewNotification'\nimport TlChatting from './pages/TL/Chatting/Chatting'\nimport TlMessage from './pages/TL/Message/Message'\nimport TlSchedule from './pages/TL/Schedule/Schedule'\nimport TlMeetingComponent from './pages/TL/MeetingComponent/MeetingComponent'\nimport TlRecording from './pages/TL/Recording/Recording'\nimport TlReport from \"./pages/TL/Report/Report\";\nimport TlInvoice from \"./pages/TL/Proposal/Invoice\"\nimport TlInvoiceTab from \"./pages/TL/Proposal/InvoiceTab\";\nimport TlpayDetails from \"./pages/TL/PaymentStatus/Paydetails\";\n// TP routes\nimport TpStart from './pages/TP/Start/Start'\nimport TpLogin from './pages/TP/Login/Login'\nimport TpQueriesRecevied from './pages/TP/QueriesRecevied/QueriesRecevied'\nimport TpQueriesTab from './pages/TP/QueriesTab/QueriesTab'\nimport TpProposalTab from './pages/TP/Proposal/ProposalTab'\nimport TpSendProposal from './pages/TP/SendProposal/SendProposal'\nimport TpEditProposal from './pages/TP/EditProposal/EditProposal'\nimport TpChangePassword from './pages/TP/ChangePassword/ChangePassword'\nimport TpDashboard from './pages/TP/Dashboard/Dashboard'\nimport TpForgetPassword from './pages/TP/ForgetPassword/ForgetPassword'\nimport TpNewPassword from './pages/TP/NewPassword/NewPassword'\nimport TpPaymentStatus from './pages/TP/PaymentStatus/PaymentStatus'\nimport TpAssignmentTab from './pages/TP/AssignmentTab/AssignmentTab'\nimport TpSchedule from './pages/TP/Schedule/Schedule'\nimport TpMessage from './pages/TP/Message/Message'\nimport TpChatting from './pages/TP/Chatting/Chatting'\nimport TpAddAssingmentStages from './pages/TP/AddAssingmentStages/AddAssingmentStages'\nimport TpFeedbackTab from './pages/TP/FeedbackTab/FeedbackTab'\nimport TpMeetingComponent from './pages/TP/MeetingComponent/MeetingComponent'\nimport TpViewNotification from './pages/TP/ViewNotification/ViewNotification'\nimport TpRecording from './pages/TP/Recording/Recording'\nimport TpReport from \"./pages/TP/Report/Report\";\nimport TpInvoice from \"./pages/TP/Invoice/Invoice.js\";\nimport TppayDetails from \"./pages/TP/PaymentStatus/Paydetails\";\n//private routes\nimport PrivateRouteUser from './Service/PrivateRouteUser'\nimport PrivateRouteAdmin from './Service/PrivateRouteAdmin'\nimport PrivateRouteTL from './Service/PrivateRouteTL'\nimport PrivateRouteTP from './Service/PrivateRouteTP'\nimport PublicRouteUser from './Service/PublicRouteUser'\nimport PublicRouteAdmin from './Service/PublicRouteAdmin'\nimport PublicRouteTL from './Service/PublicRouteTL'\nimport PublicRouteTP from './Service/PublicRouteTP'\nimport AboutOuter from \"./views/About/AboutOuter\";\nimport ContactOuter from \"./views/Contact/ContactOuter\";\nimport QueryContact from \"./views/QueryContact/QueryContact\";\nimport Updates from \"./views/Login/Updates\";\nimport FlashMessage from \"./pages/Admin/CMS/FlashMessage\";\nimport CmsContent from \"./pages/Admin/CMS/CmsContent\";\nimport Direct from \"./views/Tax/Direct\";\nimport Indirect from \"./views/Tax/Indirect\";\nimport Details from \"./views/Tax/Details\";\nimport LatestUpdates from \"./views/Tax/LatestUpdats\";\nimport Links from \"./pages/Admin/CMS/Links\";\nimport Faq from \"./pages/Admin/CMS/Faq\";\nimport FlashContent from \"./pages/Admin/CMS/FlashContent\";\nimport MediaGallery from \"./pages/Admin/CMS/MediaGallery\";\nimport MediaContent from \"./pages/Admin/CMS/MediaContent\";\nimport MediaTab from \"./pages/Admin/CMS/MediaTab\";\nimport VideoContent from \"./pages/Admin/CMS/VideoContent\";\nimport Mediatextshow from \"./pages/Admin/CMS/Mediatextshow\";\nimport MediaContentCustomer from \"./views/Tax/MediaContentCustomer\";\nimport GalleryVideo from \"./views/Tax/GalleryVideo\";\nimport VideoList from \"./views/Tax/VideoList\";\nimport EditImage from \"./pages/Admin/CMS/EditImage\";\nimport EditVideo from \"./pages/Admin/CMS/EditVideo\";\nimport Groupvideo from \"./pages/Admin/CMS/Groupvideo\";\nimport Videogallery from \"./views/Tax/VideoGallary\";\nimport GroupVideo from \"./views/Tax/GroupVideo\";\nimport EditFaq from \"./pages/Admin/CMS/EditFaq\";\nimport VideoMedia from \"./pages/Admin/CMS/VideoMedia\";\nimport MediaText from \"./pages/Admin/CMS/MediaText\";\nimport AddCmsContent from \"./pages/Admin/CMS/AddCmsContent\";\nimport Editupdates from \"./pages/Admin/CMS/Editupdates\";\n\n// import PayDetails from \"./views/PaymentStatus/PayDetails\";\n\n\nconst options = {\n  timeout: 4000,\n  position: positions.TOP_CENTER,\n  offset: \"80px\",\n  transition: transitions.SCALE,\n};\n\nfunction WebRoutes() {\n//  const [cms, showCms] = useState(false)\n//  let history = useHistory()\n// useEffect(() => {\n//   getRole()\n// }, [])\n// const getRole = () => {\n//   let a = localStorage.getItem(\"role\")\n//  if(a === \"cms\"){\n//    console.log(\"window.location.href\", windo)\n//   if(window.location.hash[0] === \"admin\"){\n//    history.push('/*')\n//   }\n//  }\n\n// }\n\n  return (\n   <>\n  \n      <Provider template={AlertTemplate} {...options}>\n        <Router>\n          <Switch>\n\n            <PublicRouteUser exact path=\"/\" component={Login} />\n            <PublicRouteUser exact path=\"/customer/signup\" component={SignUp} />\n            <PublicRouteUser exact path=\"/customer/forget-password\" component={ForgetPassword} />\n            <PublicRouteUser exact path=\"/customer/new-password/:id\" component={NewPassword} />\n             <PublicRouteUser exact path = \"/customer/aboutbasic\" component={AboutOuter} />\n             <PublicRouteUser exact path = \"/customer/direct\" component={Direct} />\n             <PublicRouteUser exact path = \"/customer/indirect\" component={Indirect} />\n             <PublicRouteUser exact path = \"/customer/mediacontent\" component={MediaContentCustomer} />\n             <PublicRouteUser exact path = \"/customer/media\" component = {Media} />\n             <PublicRouteUser exact path = \"/customer/imagegallery\" component = {GalleryVideo} />\n             <PublicRouteUser exact path = \"/customer/videolist\" component = {VideoList} />\n             <PublicRouteUser exact path = \"/customer/videogallery\" component = {Videogallery} />\n         <PublicRouteUser exact path = \"/customer/details\" component={Details} />\n         <PublicRouteUser exact path = \"/customer/groupvideo\" component = {GroupVideo} />\n     <PublicRouteUser exact path = \"/customer/customerquery\" component={QueryContact} />\n     <PublicRouteUser exact path = \"/customer/latestupdates\" component={LatestUpdates} />\n     <PublicRouteUser exact path = \"/customer/updates\" component={Updates} />\n        <PublicRouteUser exact path = \"/customer/contactbasic\" component = {ContactOuter} />\n       <PublicRouteUser exact path = \"/customer/faq-question\" component={FaqQuestion} />\n          <PublicRouteAdmin exact path = \"/customer/link\" component = {LinklistUser} />\n            <PrivateRouteUser exact path=\"/customer/select-category\" component={SelectCategoryPage} />\n            <PrivateRouteUser exact path=\"/customer/dashboard\" component={Dashboard} />\n            <PrivateRouteUser exact path=\"/customer/my-assingment/:id\" component={MyAssingment} />\n            <PrivateRouteUser exact path=\"/customer/addfresh\" component={AddFreshAssingment} />\n            <PrivateRouteUser exact path=\"/customer/queries\" component={QueriesTab} />\n            <PrivateRouteUser exact path=\"/customer/proposal\" component={ProposalTab} />\n            <PrivateRouteUser exact path=\"/customer/assignment\" component={AssignmentTab} />\n            <PrivateRouteUser exact path=\"/customer/proposal-received/:id\" component={ProposalReceived} />\n            <PrivateRouteUser exact path=\"/customer/change-password\" component={ChangePassword} />\n            <PrivateRouteUser exact path=\"/customer/edit-query/:id\" component={EditQuery} />\n            <PrivateRouteUser exact path=\"/customer/video-call\" component={VideoCall} />\n            <PrivateRouteUser exact path=\"/customer/meeting/:id\" component={MeetingComponent} />\n            <PrivateRouteUser exact path=\"/customer/schedule\" component={schedule} />\n            <PrivateRouteUser exact path=\"/customer/view-notification/:id\" component={ViewNotification} />\n            <PrivateRouteUser exact path=\"/customer/proposal_view/:id\" component={ProposalView} />\n            <PrivateRouteUser exact path=\"/customer/message\" component={Message} />\n            <PrivateRouteUser exact path=\"/customer/chatting/:id\" component={Chatting} />\n            <PrivateRouteUser exact path=\"/customer/feedback/:id\" component={Feedback} />\n            <PrivateRouteUser exact path=\"/customer/feedback-data\" component={FeedbackData} />\n            <PrivateRouteUser exact path=\"/customer/paymentstatus\" component={PaymentStatus} />\n            <PrivateRouteUser exact path=\"/customer/payment\" component={PaymentGateway} />\n            <PrivateRouteUser exact path=\"/customer/thankyou\" component={ThankYou} />  \n            <PrivateRouteUser exact path=\"/customer/paydetails/:id\" component={payDetails} />\n             <PrivateRouteUser exact path = \"/customer/modalmanual\" component = {ModalMaual} />\n             <PrivateRouteUser exact path = \"/customer/contact\" component = {Contact} />\n             <PrivateRouteUser exact path = \"/customer/mediacontent\" component = {Contact} />\n            <PrivateRouteUser exact path = \"/customer/about\" component = {About} />\n           \n            \n            <PublicRouteAdmin exact path=\"/admin/start\" component={AdminStart} />\n            <PublicRouteAdmin exact path=\"/admin/login\" component={AdminLogin} />\n            <PublicRouteAdmin exact path=\"/admin/forget-password\" component={AdminForgetPassword} />\n            <PublicRouteAdmin exact path=\"/admin/new-password/:id\" component={AdminNewPassword} />\n           \n            <PrivateRouteAdmin exact path=\"/admin/dashboard\" component={AdminDashboard} />\n            <PrivateRouteAdmin exact path=\"/admin/addnewtl\" component={AdminNewTeamLeader} />\n            <PrivateRouteAdmin exact path=\"/admin/addnewtp\" component={AdminNewTaxProf} />\n            <PrivateRouteAdmin exact path=\"/admin/teamleaders\" component={AdminTeamLeaderTab} />\n            <PrivateRouteAdmin exact path=\"/admin/taxprofessionals\" component={AdminTaxProfessionalsTab} />\n            <PrivateRouteAdmin exact path=\"/admin/proposal\" component={AdminProposal} />\n            <PrivateRouteAdmin exact path=\"/admin/queries/:id\" component={AdminQueriesRecevied} />\n            <PrivateRouteAdmin exact path=\"/admin/queryassing/:id\" component={AdminQueryAssingment} />\n            <PrivateRouteAdmin exact path=\"/admin/queriestab\" component={AdminQueriesTab} />\n            <PrivateRouteAdmin exact path=\"/admin/feedback\" component={AdminFeedbackTab} />\n            <PrivateRouteAdmin exact path=\"/admin/paymentstatus\" component={AdminPaymentStatusTab} />\n            <PrivateRouteAdmin exact path=\"/admin/assignment\" component={AdminAssignmentTab} />\n            <PrivateRouteAdmin exact path=\"/admin/edittl/:id\" component={AdminEditTL} />\n            <PrivateRouteAdmin exact path=\"/admin/edittp/:id\" component={AdminEditTP} />\n            <PrivateRouteAdmin exact path=\"/admin/pending/:id\" component={AdminPendingRecevived} />\n            <PrivateRouteAdmin exact path=\"/admin/query_rejection/:id\" component={AdminQueryRejection} />\n            <PrivateRouteAdmin exact path=\"/admin/schedule\" component={AdminSchedule} />\n            <PrivateRouteAdmin exact path=\"/admin/meeting\" component={AdminMeetingComponent} />\n            <PrivateRouteAdmin exact path=\"/admin/chatting/:id\" component={AdminChatting} />\n            <PrivateRouteAdmin exact path=\"/admin/message\" component={AdminMessage} />\n            <PrivateRouteAdmin exact path=\"/admin/view-notification/:id\" component={AdminViewNotification} />\n            <PrivateRouteAdmin exact path=\"/admin/recording\" component={AdminRecording} />\n            <PrivateRouteAdmin exact path=\"/admin/meeting/:id\" component={adMeetingComponent} />\n            <PrivateRouteAdmin exact path=\"/admin/customers\" component={Customer} />\n            <PrivateRouteAdmin exact path=\"/admin/reports\" component={adminReport} />\n            <PrivateRouteAdmin exact path= \"/admin/adinvoice\" component={AdminInvoice}/>\n            <PrivateRouteAdmin exact path=\"/admin/paydetails/:id\" component={AdpayDetails} />\n            <PrivateRouteAdmin exact path = \"/admin/reportlist\" component = {ReportList} />\n            <PrivateRouteAdmin exact path = \"/admin/consalation\" component = {Consalation} />\n          \n            <PublicRouteTL exact path=\"/teamleader/start\" component={TlStart} />\n            <PublicRouteTL exact path=\"/teamleader/login\" component={TlLogin} />\n            <PublicRouteTL exact path=\"/teamleader/forget-password\" component={TlForgetPassword} />\n            <PublicRouteTL exact path=\"/teamleader/new-password/:id\" component={TlNewPassword} />\n          \n                  \n            <PrivateRouteTL exact path=\"/teamleader/dashboard\" component={TlDashboard} />\n            <PrivateRouteTL exact path=\"/teamleader/addnew\" component={TlAddNew} />\n            <PrivateRouteTL exact path=\"/teamleader/addteamprof\" component={TlAddTeamProf} />\n            <PrivateRouteTL exact path=\"/teamleader/proposal\" component={TlProposalTab} />\n            <PrivateRouteTL exact path=\"/teamleader/addassingment/:id\" component={TlAddAssingmentStages} />\n            <PrivateRouteTL exact path=\"/teamleader/queries/:id\" component={TlQueriesRecevied} />\n            <PrivateRouteTL exact path=\"/teamleader/queryassing/:id\" component={TlQueryAssingment} />\n            <PrivateRouteTL exact path=\"/teamleader/edittp/:id\" component={TlEditTP} />\n            <PrivateRouteTL exact path=\"/teamleader/feedback\" component={TlFeedbackTab} />\n            <PrivateRouteTL exact path=\"/teamleader/paymentstatus\" component={TlPaymentStatus} />\n            <PrivateRouteTL exact path=\"/teamleader/assignment\" component={TlAssignmentTab} />\n            <PrivateRouteTL exact path=\"/teamleader/sendproposal/:id\" component={TlSendProposal} />\n            <PrivateRouteTL exact path=\"/teamleader/queriestab\" component={TlQueriesTab} />\n            <PrivateRouteTL exact path=\"/teamleader/edit-proposal/:id\" component={TlEditProposal} />\n            <PrivateRouteTL exact path=\"/teamleader/pending/:id\" component={TlPendingReceived} />\n            <PrivateRouteTL exact path=\"/teamleader/assignment-form/:id\" component={TlAssignmentForm} />\n            <PrivateRouteTL exact path=\"/teamleader/meeting/:id\" component={TlMeetingComponent} />\n            <PrivateRouteTL exact path=\"/teamleader/view-report/:id\" component={TlViewReport} />\n            <PrivateRouteTL exact path=\"/teamleader/schedule\" component={TlSchedule} />\n            <PrivateRouteTL exact path=\"/teamleader/view-notification/:id\" component={TlViewNotification} />\n            <PrivateRouteTL exact path=\"/teamleader/chatting/:id\" component={TlChatting} />\n            <PrivateRouteTL exact path=\"/teamleader/message\" component={TlMessage} />\n            <PrivateRouteTL exact path=\"/teamleader/recording\" component={TlRecording} />\n            <PrivateRouteTL exact path=\"/teamleader/reports\" component={TlReport}/>\n            <PrivateRouteTL exact path=\"/teamleader/invoice\" component={TlInvoice}/>\n            <PrivateRouteTL exact path=\"/teamleader/tlinvoice\" component={TlInvoiceTab}/>\n            <PrivateRouteTL exact path=\"/teamleader/paydetails/:id\" component={TlpayDetails} />\n\n            <PublicRouteTP exact path=\"/taxprofessional/start\" component={TpStart} />\n            <PublicRouteTP exact path=\"/taxprofessional/login\" component={TpLogin} />\n            <PublicRouteTP exact path=\"/taxprofessional/new-password/:id\" component={TpNewPassword} />\n            <PublicRouteTP exact path=\"/taxprofessional/forget-password\" component={TpForgetPassword} />\n            \n            <PrivateRouteTP exact path=\"/taxprofessional/queries/:id\" component={TpQueriesRecevied} />\n            <PrivateRouteTP exact path=\"/taxprofessional/queriestab\" component={TpQueriesTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/proposal\" component={TpProposalTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/sendproposal/:id\" component={TpSendProposal} />\n            <PrivateRouteTP exact path=\"/taxprofessional/edit-proposal/:id\" component={TpEditProposal} />\n            <PrivateRouteTP exact path=\"/taxprofessional/change-password\" component={TpChangePassword} />\n            <PrivateRouteTP exact path=\"/taxprofessional/dashboard\" component={TpDashboard} />\n            <PrivateRouteTP exact path =\"/taxprofessional/chatting/:id\" component = {TpChatting} />\n            <PrivateRouteTP exact path=\"/taxprofessional/addassingment/:id\" component={TpAddAssingmentStages} />\n            <PrivateRouteTP exact path=\"/taxprofessional/paymentstatus\" component={TpPaymentStatus} />\n            <PrivateRouteTP exact path=\"/taxprofessional/assignment\" component={TpAssignmentTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/schedule\" component={TpSchedule} />\n            <PrivateRouteTP exact path=\"/taxprofessional/message\" component={TpMessage} />\n            <PrivateRouteTP exact path=\"/taxprofessional/feedback\" component={TpFeedbackTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/meeting/:id\" component={TpMeetingComponent} />\n            <PrivateRouteTP exact path=\"/taxprofessional/view-notification/:id\" component={TpViewNotification} />\n            <PrivateRouteTP exact path=\"/taxprofessional/recording\" component={TpRecording} />\n            <PrivateRouteTP exact path=\"/taxprofessional/reports\" component={TpReport}/>\n            <PrivateRouteTP exact path=\"/taxprofessional/tpinvoice\" component={TpInvoice}/>\n            <PrivateRouteTP exact path=\"/taxprofessional/paydetails/:id\" component={TppayDetails} />\n           \n           \n            <PublicRouteAdmin exact path = \"/cms/login\" component = {CmsLogin} />\n            <PrivateRouteAdmin exact path=\"/cms/cms\" component={Cms} />\n            <PrivateRouteAdmin exact path = \"/cms/flash\" component = {FlashMessage} />\n            <PrivateRouteAdmin exact path = \"/cms/articles\" component = {CmsContent} />\n            <PrivateRouteAdmin exact path = \"/cms/updates\" component = {AdminUpdates} />\n            <PrivateRouteAdmin exact path = \"/cms/articlesedit/:id\" component = {CmsContent} />\n            <PrivateRouteAdmin exact path = \"/cms/updatecontent\" component = {UpdatesContent} />\n            <PrivateRouteAdmin exact path = \"/cms/editupdates/:id\" component = {Editupdates} />\n            <PrivateRouteAdmin exact path = \"/cms/links\" component = {Links} />\n            <PrivateRouteAdmin exact path = \"/cms/linksedit/:id\" component = {Links} />\n            <PrivateRouteAdmin exact path = \"/cms/linklist\" component = {Linklist} />\n            <PrivateRouteAdmin exact path = \"/cms/faqlist\" component = {FaqList} />\n            <PrivateRouteAdmin exact path = \"/cms/mediagallery\" component = {MediaGallery} />\n            <PrivateRouteAdmin exact path = \"/cms/mediacontent\" component = {MediaContent} />\n            <PrivateRouteAdmin exact path = \"/cms/flashcontent\" component = {FlashContent} />\n            <PrivateRouteAdmin exact path = \"/cms/flashcontent/:id\" component = {FlashContent} />\n            <PrivateRouteAdmin exact path = \"/cms/faqedit/:id\" component = {Faq} />\n            <PrivateRouteAdmin exact path = \"/cms/faq\" component = {Faq} />\n            <PrivateRouteAdmin exact path = \"/cms/mediatab\" component = {MediaTab} />\n            <PrivateRouteAdmin exact path = \"/cms/videocontent\" component = {VideoContent} />\n            <PrivateRouteAdmin exact path = \"/cms/mediatext\" component = {Mediatextshow} />\n            <PrivateRouteAdmin exact path = \"/cms/mediatext/:id\" component = {Mediatextshow} />\n            <PrivateRouteAdmin exact path = \"/cms/imagegallery\" component = {GroupImage} />\n            <PrivateRouteAdmin exact path = \"/cms/videogallery\" component = {Groupvideo} />\n            <PrivateRouteAdmin exact path = \"/cms/editimage/:id\" component = {EditImage} />\n            <PrivateRouteAdmin exact path = \"/cms/editvideo/:id\" component = {EditVideo} />\n             <PrivateRouteAdmin exact path = \"/cms/editfaq/:id\" component = {EditFaq} />\n             <PrivateRouteAdmin exact path = \"/cms/videolist\" component = {VideoMedia} />\n             <PrivateRouteAdmin exact path = \"/cms/addarticles\" component = {AddCmsContent} />\n             <PrivateRouteAdmin exact path = \"/cms/contentlist\" component = {MediaText} />\n             <PrivateRouteAdmin exaxt path = \"/cms/imagelist\" component = {MediaContent} />\n            <Route exact path=\"/*\" component={PageNotFound} />\n\n          </Switch>\n        </Router>\n      </Provider>\n  \n   </>\n  );\n}\n\n\nexport default WebRoutes;\n\n\n\n// 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\n\n\n\n\n\n\n","/home/pooja/MazarsRepo/src/components/IdleTimeOutHandler.js",["5020","5021"],"/home/pooja/MazarsRepo/src/components/IdleTimeOutModal.js",["5022","5023"],{"ruleId":"5024","replacedBy":"5025"},{"ruleId":"5026","replacedBy":"5027"},{"ruleId":"5028","severity":1,"message":"5029","line":2,"column":17,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":2,"column":27,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5033","line":2,"column":27,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":38},{"ruleId":"5028","severity":1,"message":"5034","line":9,"column":8,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5035","line":12,"column":9,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":14},{"ruleId":"5024","replacedBy":"5036"},{"ruleId":"5026","replacedBy":"5037"},{"ruleId":"5028","severity":1,"message":"5038","line":79,"column":10,"nodeType":"5030","messageId":"5031","endLine":79,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5039","line":80,"column":20,"nodeType":"5030","messageId":"5031","endLine":80,"endColumn":31},{"ruleId":"5040","severity":1,"message":"5041","line":95,"column":4,"nodeType":"5042","endLine":95,"endColumn":14,"suggestions":"5043"},{"ruleId":"5040","severity":1,"message":"5044","line":102,"column":6,"nodeType":"5042","endLine":102,"endColumn":12,"suggestions":"5045"},{"ruleId":"5046","severity":1,"message":"5047","line":112,"column":31,"nodeType":"5048","messageId":"5049","endLine":112,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":127,"column":84,"nodeType":"5052","messageId":"5053","endLine":127,"endColumn":86},{"ruleId":"5040","severity":1,"message":"5054","line":183,"column":3,"nodeType":"5042","endLine":183,"endColumn":8,"suggestions":"5055"},{"ruleId":"5056","severity":1,"message":"5057","line":246,"column":4,"nodeType":"5052","messageId":"5058","endLine":246,"endColumn":5},{"ruleId":"5056","severity":1,"message":"5057","line":246,"column":22,"nodeType":"5052","messageId":"5058","endLine":246,"endColumn":25},{"ruleId":"5056","severity":1,"message":"5057","line":257,"column":4,"nodeType":"5052","messageId":"5058","endLine":257,"endColumn":5},{"ruleId":"5056","severity":1,"message":"5057","line":257,"column":22,"nodeType":"5052","messageId":"5058","endLine":257,"endColumn":25},{"ruleId":"5059","severity":1,"message":"5060","line":280,"column":17,"nodeType":"5061","endLine":280,"endColumn":64},{"ruleId":"5062","severity":1,"message":"5063","line":377,"column":7,"nodeType":"5061","endLine":378,"endColumn":45},{"ruleId":"5062","severity":1,"message":"5063","line":385,"column":7,"nodeType":"5061","endLine":385,"endColumn":72},{"ruleId":"5062","severity":1,"message":"5063","line":392,"column":7,"nodeType":"5061","endLine":392,"endColumn":64},{"ruleId":"5062","severity":1,"message":"5063","line":399,"column":7,"nodeType":"5061","endLine":399,"endColumn":67},{"ruleId":"5062","severity":1,"message":"5063","line":403,"column":7,"nodeType":"5061","endLine":403,"endColumn":68},{"ruleId":"5028","severity":1,"message":"5064","line":41,"column":10,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5065","line":62,"column":9,"nodeType":"5030","messageId":"5031","endLine":62,"endColumn":24},{"ruleId":"5040","severity":1,"message":"5044","line":85,"column":6,"nodeType":"5042","endLine":85,"endColumn":12,"suggestions":"5066"},{"ruleId":"5046","severity":1,"message":"5067","line":89,"column":26,"nodeType":"5048","messageId":"5049","endLine":89,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":90,"column":27,"nodeType":"5052","messageId":"5053","endLine":90,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5068","line":108,"column":9,"nodeType":"5030","messageId":"5031","endLine":108,"endColumn":10},{"ruleId":"5050","severity":1,"message":"5051","line":141,"column":13,"nodeType":"5052","messageId":"5053","endLine":141,"endColumn":15},{"ruleId":"5046","severity":1,"message":"5067","line":150,"column":26,"nodeType":"5048","messageId":"5049","endLine":150,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":151,"column":27,"nodeType":"5052","messageId":"5053","endLine":151,"endColumn":29},{"ruleId":"5046","severity":1,"message":"5067","line":161,"column":27,"nodeType":"5048","messageId":"5049","endLine":161,"endColumn":29},{"ruleId":"5050","severity":1,"message":"5051","line":162,"column":15,"nodeType":"5052","messageId":"5053","endLine":162,"endColumn":17},{"ruleId":"5046","severity":1,"message":"5067","line":179,"column":23,"nodeType":"5048","messageId":"5049","endLine":179,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":180,"column":16,"nodeType":"5052","messageId":"5053","endLine":180,"endColumn":18},{"ruleId":"5046","severity":1,"message":"5067","line":186,"column":26,"nodeType":"5048","messageId":"5049","endLine":186,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":296,"column":36,"nodeType":"5052","messageId":"5053","endLine":296,"endColumn":38},{"ruleId":"5069","severity":1,"message":"5070","line":371,"column":2,"nodeType":"5071","messageId":"5072","endLine":372,"endColumn":41},{"ruleId":"5069","severity":1,"message":"5070","line":378,"column":5,"nodeType":"5071","messageId":"5072","endLine":379,"endColumn":44},{"ruleId":"5073","severity":1,"message":"5074","line":476,"column":13,"nodeType":"5061","messageId":"5075","endLine":476,"endColumn":66,"fix":"5076"},{"ruleId":"5028","severity":1,"message":"5077","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5079","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5080","line":28,"column":24,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5081","line":43,"column":10,"nodeType":"5030","messageId":"5031","endLine":43,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5082","line":45,"column":10,"nodeType":"5030","messageId":"5031","endLine":45,"endColumn":20},{"ruleId":"5050","severity":1,"message":"5051","line":107,"column":40,"nodeType":"5052","messageId":"5053","endLine":107,"endColumn":42},{"ruleId":"5040","severity":1,"message":"5083","line":192,"column":6,"nodeType":"5042","endLine":192,"endColumn":8,"suggestions":"5084"},{"ruleId":"5028","severity":1,"message":"5085","line":4,"column":10,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5086","line":9,"column":8,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5087","line":13,"column":7,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":16},{"ruleId":"5040","severity":1,"message":"5088","line":126,"column":6,"nodeType":"5042","endLine":126,"endColumn":8,"suggestions":"5089"},{"ruleId":"5028","severity":1,"message":"5090","line":128,"column":9,"nodeType":"5030","messageId":"5031","endLine":128,"endColumn":15},{"ruleId":"5050","severity":1,"message":"5091","line":195,"column":27,"nodeType":"5052","messageId":"5053","endLine":195,"endColumn":29},{"ruleId":"5050","severity":1,"message":"5091","line":195,"column":52,"nodeType":"5052","messageId":"5053","endLine":195,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5091","line":210,"column":25,"nodeType":"5052","messageId":"5053","endLine":210,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5091","line":210,"column":51,"nodeType":"5052","messageId":"5053","endLine":210,"endColumn":53},{"ruleId":"5050","severity":1,"message":"5091","line":244,"column":18,"nodeType":"5052","messageId":"5053","endLine":244,"endColumn":20},{"ruleId":"5050","severity":1,"message":"5091","line":299,"column":22,"nodeType":"5052","messageId":"5053","endLine":299,"endColumn":24},{"ruleId":"5050","severity":1,"message":"5091","line":346,"column":23,"nodeType":"5052","messageId":"5053","endLine":346,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5092","line":12,"column":33,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5093","line":12,"column":62,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":73},{"ruleId":"5028","severity":1,"message":"5094","line":5,"column":10,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5095","line":31,"column":10,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5096","line":44,"column":6,"nodeType":"5042","endLine":44,"endColumn":8,"suggestions":"5097"},{"ruleId":"5050","severity":1,"message":"5051","line":117,"column":34,"nodeType":"5052","messageId":"5053","endLine":117,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":120,"column":34,"nodeType":"5052","messageId":"5053","endLine":120,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":123,"column":34,"nodeType":"5052","messageId":"5053","endLine":123,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":127,"column":34,"nodeType":"5052","messageId":"5053","endLine":127,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5095","line":29,"column":10,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5098","line":41,"column":6,"nodeType":"5042","endLine":41,"endColumn":8,"suggestions":"5099"},{"ruleId":"5050","severity":1,"message":"5051","line":119,"column":34,"nodeType":"5052","messageId":"5053","endLine":119,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":122,"column":34,"nodeType":"5052","messageId":"5053","endLine":122,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":126,"column":34,"nodeType":"5052","messageId":"5053","endLine":126,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":130,"column":34,"nodeType":"5052","messageId":"5053","endLine":130,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5095","line":28,"column":10,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5100","line":41,"column":6,"nodeType":"5042","endLine":41,"endColumn":8,"suggestions":"5101"},{"ruleId":"5069","severity":1,"message":"5070","line":140,"column":5,"nodeType":"5071","messageId":"5072","endLine":142,"endColumn":58},{"ruleId":"5028","severity":1,"message":"5032","line":2,"column":27,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5102","line":19,"column":19,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5103","line":20,"column":9,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5104","line":20,"column":27,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":37},{"ruleId":"5028","severity":1,"message":"5035","line":35,"column":9,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":36,"column":35,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":74,"column":14,"nodeType":"5052","messageId":"5053","endLine":74,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5094","line":5,"column":10,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5077","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":13,"column":3,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5106","line":20,"column":8,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5107","line":62,"column":18,"nodeType":"5030","messageId":"5031","endLine":62,"endColumn":30},{"ruleId":"5040","severity":1,"message":"5108","line":72,"column":6,"nodeType":"5042","endLine":72,"endColumn":8,"suggestions":"5109"},{"ruleId":"5028","severity":1,"message":"5110","line":197,"column":7,"nodeType":"5030","messageId":"5031","endLine":197,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5111","line":198,"column":12,"nodeType":"5030","messageId":"5031","endLine":198,"endColumn":19},{"ruleId":"5050","severity":1,"message":"5051","line":295,"column":37,"nodeType":"5052","messageId":"5053","endLine":295,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":298,"column":39,"nodeType":"5052","messageId":"5053","endLine":298,"endColumn":41},{"ruleId":"5050","severity":1,"message":"5051","line":301,"column":41,"nodeType":"5052","messageId":"5053","endLine":301,"endColumn":43},{"ruleId":"5050","severity":1,"message":"5051","line":317,"column":33,"nodeType":"5052","messageId":"5053","endLine":317,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":331,"column":35,"nodeType":"5052","messageId":"5053","endLine":331,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":355,"column":32,"nodeType":"5052","messageId":"5053","endLine":355,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":356,"column":32,"nodeType":"5052","messageId":"5053","endLine":356,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":357,"column":33,"nodeType":"5052","messageId":"5053","endLine":357,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5112","line":10,"column":10,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5113","line":11,"column":13,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5114","line":13,"column":8,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5102","line":20,"column":19,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5104","line":21,"column":16,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5035","line":30,"column":9,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5044","line":54,"column":6,"nodeType":"5042","endLine":54,"endColumn":12,"suggestions":"5115"},{"ruleId":"5028","severity":1,"message":"5068","line":61,"column":9,"nodeType":"5030","messageId":"5031","endLine":61,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5117","line":6,"column":9,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5118","line":7,"column":10,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5105","line":20,"column":54,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":59},{"ruleId":"5040","severity":1,"message":"5044","line":35,"column":6,"nodeType":"5042","endLine":35,"endColumn":12,"suggestions":"5119"},{"ruleId":"5028","severity":1,"message":"5068","line":44,"column":9,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":10},{"ruleId":"5040","severity":1,"message":"5120","line":25,"column":6,"nodeType":"5042","endLine":25,"endColumn":10,"suggestions":"5121"},{"ruleId":"5028","severity":1,"message":"5077","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5122","line":23,"column":8,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5123","line":35,"column":9,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5124","line":44,"column":11,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":23},{"ruleId":"5040","severity":1,"message":"5125","line":58,"column":6,"nodeType":"5042","endLine":58,"endColumn":12,"suggestions":"5126"},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5127","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5122","line":20,"column":8,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5128","line":6,"column":19,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5129","line":46,"column":12,"nodeType":"5030","messageId":"5031","endLine":46,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5130","line":46,"column":18,"nodeType":"5030","messageId":"5031","endLine":46,"endColumn":25},{"ruleId":"5040","severity":1,"message":"5131","line":67,"column":6,"nodeType":"5042","endLine":67,"endColumn":8,"suggestions":"5132"},{"ruleId":"5050","severity":1,"message":"5051","line":85,"column":22,"nodeType":"5052","messageId":"5053","endLine":85,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5133","line":144,"column":13,"nodeType":"5030","messageId":"5031","endLine":144,"endColumn":18},{"ruleId":"5069","severity":1,"message":"5070","line":181,"column":7,"nodeType":"5071","messageId":"5072","endLine":183,"endColumn":60},{"ruleId":"5050","severity":1,"message":"5051","line":198,"column":25,"nodeType":"5052","messageId":"5053","endLine":198,"endColumn":27},{"ruleId":"5134","severity":1,"message":"5135","line":337,"column":29,"nodeType":"5136","messageId":"5137","endLine":337,"endColumn":63},{"ruleId":"5028","severity":1,"message":"5094","line":5,"column":10,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5078","line":13,"column":5,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5085","line":15,"column":10,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5086","line":17,"column":8,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5138","line":34,"column":8,"nodeType":"5042","endLine":34,"endColumn":10,"suggestions":"5139"},{"ruleId":"5028","severity":1,"message":"5094","line":5,"column":10,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5077","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":13,"column":5,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5086","line":18,"column":8,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5140","line":26,"column":12,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5141","line":26,"column":18,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":25},{"ruleId":"5040","severity":1,"message":"5138","line":46,"column":8,"nodeType":"5042","endLine":46,"endColumn":10,"suggestions":"5142"},{"ruleId":"5050","severity":1,"message":"5051","line":115,"column":45,"nodeType":"5052","messageId":"5053","endLine":115,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5095","line":26,"column":10,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5143","line":38,"column":6,"nodeType":"5042","endLine":38,"endColumn":8,"suggestions":"5144"},{"ruleId":"5050","severity":1,"message":"5051","line":116,"column":34,"nodeType":"5052","messageId":"5053","endLine":116,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":119,"column":34,"nodeType":"5052","messageId":"5053","endLine":119,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":122,"column":34,"nodeType":"5052","messageId":"5053","endLine":122,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5145","line":6,"column":8,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5077","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5146","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5147","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5148","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5149","line":18,"column":3,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5118","line":19,"column":3,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5150","line":21,"column":8,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5151","line":22,"column":10,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5152","line":22,"column":20,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5123","line":31,"column":9,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":16},{"ruleId":"5040","severity":1,"message":"5153","line":64,"column":8,"nodeType":"5042","endLine":64,"endColumn":10,"suggestions":"5154"},{"ruleId":"5050","severity":1,"message":"5051","line":154,"column":44,"nodeType":"5052","messageId":"5053","endLine":154,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":219,"column":32,"nodeType":"5052","messageId":"5053","endLine":219,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":241,"column":32,"nodeType":"5052","messageId":"5053","endLine":241,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":262,"column":42,"nodeType":"5052","messageId":"5053","endLine":262,"endColumn":44},{"ruleId":"5050","severity":1,"message":"5051","line":267,"column":40,"nodeType":"5052","messageId":"5053","endLine":267,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":299,"column":26,"nodeType":"5052","messageId":"5053","endLine":299,"endColumn":28},{"ruleId":"5073","severity":1,"message":"5074","line":299,"column":36,"nodeType":"5061","messageId":"5075","endLine":299,"endColumn":78,"fix":"5155"},{"ruleId":"5050","severity":1,"message":"5051","line":301,"column":25,"nodeType":"5052","messageId":"5053","endLine":301,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":347,"column":15,"nodeType":"5052","messageId":"5053","endLine":347,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5077","line":3,"column":27,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5156","line":3,"column":8,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5157","line":5,"column":10,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5158","line":7,"column":45,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5159","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5159","line":3,"column":8,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5035","line":30,"column":9,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":32,"column":35,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":97,"column":84,"nodeType":"5052","messageId":"5053","endLine":97,"endColumn":86},{"ruleId":"5028","severity":1,"message":"5095","line":19,"column":10,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5160","line":88,"column":6,"nodeType":"5042","endLine":88,"endColumn":8,"suggestions":"5161"},{"ruleId":"5050","severity":1,"message":"5051","line":129,"column":34,"nodeType":"5052","messageId":"5053","endLine":129,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":132,"column":34,"nodeType":"5052","messageId":"5053","endLine":132,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":136,"column":34,"nodeType":"5052","messageId":"5053","endLine":136,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":140,"column":34,"nodeType":"5052","messageId":"5053","endLine":140,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5162","line":7,"column":20,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5163","line":7,"column":26,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5164","line":7,"column":33,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5165","line":12,"column":9,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":23},{"ruleId":"5040","severity":1,"message":"5160","line":160,"column":6,"nodeType":"5042","endLine":160,"endColumn":8,"suggestions":"5166"},{"ruleId":"5028","severity":1,"message":"5090","line":162,"column":9,"nodeType":"5030","messageId":"5031","endLine":162,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5035","line":31,"column":9,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":33,"column":35,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5167","line":42,"column":10,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5168","line":43,"column":10,"nodeType":"5030","messageId":"5031","endLine":43,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5169","line":48,"column":10,"nodeType":"5030","messageId":"5031","endLine":48,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5170","line":54,"column":10,"nodeType":"5030","messageId":"5031","endLine":54,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5171","line":56,"column":10,"nodeType":"5030","messageId":"5031","endLine":56,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5172","line":56,"column":21,"nodeType":"5030","messageId":"5031","endLine":56,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5173","line":58,"column":10,"nodeType":"5030","messageId":"5031","endLine":58,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5174","line":58,"column":25,"nodeType":"5030","messageId":"5031","endLine":58,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5175","line":60,"column":10,"nodeType":"5030","messageId":"5031","endLine":60,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5176","line":60,"column":23,"nodeType":"5030","messageId":"5031","endLine":60,"endColumn":37},{"ruleId":"5028","severity":1,"message":"5177","line":62,"column":10,"nodeType":"5030","messageId":"5031","endLine":62,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5178","line":62,"column":22,"nodeType":"5030","messageId":"5031","endLine":62,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5179","line":65,"column":10,"nodeType":"5030","messageId":"5031","endLine":65,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5160","line":110,"column":6,"nodeType":"5042","endLine":110,"endColumn":8,"suggestions":"5180"},{"ruleId":"5040","severity":1,"message":"5160","line":125,"column":6,"nodeType":"5042","endLine":125,"endColumn":13,"suggestions":"5181"},{"ruleId":"5182","severity":1,"message":"5183","line":134,"column":9,"nodeType":"5030","messageId":"5184","endLine":134,"endColumn":21},{"ruleId":"5046","severity":1,"message":"5047","line":138,"column":21,"nodeType":"5048","messageId":"5049","endLine":138,"endColumn":23},{"ruleId":"5046","severity":1,"message":"5047","line":143,"column":26,"nodeType":"5048","messageId":"5049","endLine":143,"endColumn":28},{"ruleId":"5046","severity":1,"message":"5047","line":206,"column":43,"nodeType":"5048","messageId":"5049","endLine":206,"endColumn":45},{"ruleId":"5028","severity":1,"message":"5185","line":223,"column":7,"nodeType":"5030","messageId":"5031","endLine":223,"endColumn":15},{"ruleId":"5046","severity":1,"message":"5047","line":233,"column":15,"nodeType":"5048","messageId":"5049","endLine":233,"endColumn":17},{"ruleId":"5046","severity":1,"message":"5047","line":275,"column":17,"nodeType":"5048","messageId":"5049","endLine":275,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5186","line":371,"column":9,"nodeType":"5030","messageId":"5031","endLine":371,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5187","line":381,"column":9,"nodeType":"5030","messageId":"5031","endLine":381,"endColumn":24},{"ruleId":"5050","severity":1,"message":"5051","line":574,"column":49,"nodeType":"5052","messageId":"5053","endLine":574,"endColumn":51},{"ruleId":"5050","severity":1,"message":"5051","line":581,"column":47,"nodeType":"5052","messageId":"5053","endLine":581,"endColumn":49},{"ruleId":"5134","severity":1,"message":"5135","line":617,"column":25,"nodeType":"5136","messageId":"5137","endLine":617,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5188","line":6,"column":27,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5189","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5190","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5035","line":35,"column":9,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":36,"column":43,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5191","line":47,"column":10,"nodeType":"5030","messageId":"5031","endLine":47,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5192","line":57,"column":9,"nodeType":"5030","messageId":"5031","endLine":57,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5193","line":79,"column":6,"nodeType":"5042","endLine":79,"endColumn":8,"suggestions":"5194"},{"ruleId":"5040","severity":1,"message":"5195","line":106,"column":6,"nodeType":"5042","endLine":106,"endColumn":15,"suggestions":"5196"},{"ruleId":"5050","severity":1,"message":"5051","line":131,"column":22,"nodeType":"5052","messageId":"5053","endLine":131,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5197","line":140,"column":9,"nodeType":"5030","messageId":"5031","endLine":140,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5198","line":186,"column":9,"nodeType":"5030","messageId":"5031","endLine":186,"endColumn":29},{"ruleId":"5050","severity":1,"message":"5051","line":191,"column":13,"nodeType":"5052","messageId":"5053","endLine":191,"endColumn":15},{"ruleId":"5050","severity":1,"message":"5051","line":199,"column":20,"nodeType":"5052","messageId":"5053","endLine":199,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5199","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5189","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5106","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5123","line":23,"column":9,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5080","line":28,"column":24,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":108,"column":39,"nodeType":"5052","messageId":"5053","endLine":108,"endColumn":41},{"ruleId":"5040","severity":1,"message":"5083","line":215,"column":6,"nodeType":"5042","endLine":215,"endColumn":16,"suggestions":"5200"},{"ruleId":"5028","severity":1,"message":"5201","line":1,"column":56,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":69},{"ruleId":"5028","severity":1,"message":"5095","line":21,"column":10,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5096","line":28,"column":6,"nodeType":"5042","endLine":28,"endColumn":8,"suggestions":"5202"},{"ruleId":"5028","severity":1,"message":"5203","line":80,"column":9,"nodeType":"5030","messageId":"5031","endLine":80,"endColumn":19},{"ruleId":"5050","severity":1,"message":"5051","line":114,"column":34,"nodeType":"5052","messageId":"5053","endLine":114,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":117,"column":34,"nodeType":"5052","messageId":"5053","endLine":117,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":120,"column":34,"nodeType":"5052","messageId":"5053","endLine":120,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":124,"column":34,"nodeType":"5052","messageId":"5053","endLine":124,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5204","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5118","line":17,"column":23,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5205","line":33,"column":11,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5035","line":36,"column":9,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5206","line":44,"column":10,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5207","line":44,"column":18,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5208","line":46,"column":10,"nodeType":"5030","messageId":"5031","endLine":46,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5209","line":47,"column":10,"nodeType":"5030","messageId":"5031","endLine":47,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5210","line":47,"column":17,"nodeType":"5030","messageId":"5031","endLine":47,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5211","line":48,"column":10,"nodeType":"5030","messageId":"5031","endLine":48,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5212","line":48,"column":21,"nodeType":"5030","messageId":"5031","endLine":48,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5179","line":58,"column":10,"nodeType":"5030","messageId":"5031","endLine":58,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5168","line":62,"column":10,"nodeType":"5030","messageId":"5031","endLine":62,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5213","line":64,"column":10,"nodeType":"5030","messageId":"5031","endLine":64,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5169","line":65,"column":10,"nodeType":"5030","messageId":"5031","endLine":65,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5214","line":76,"column":11,"nodeType":"5030","messageId":"5031","endLine":76,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5215","line":76,"column":25,"nodeType":"5030","messageId":"5031","endLine":76,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5105","line":76,"column":35,"nodeType":"5030","messageId":"5031","endLine":76,"endColumn":40},{"ruleId":"5040","severity":1,"message":"5216","line":106,"column":6,"nodeType":"5042","endLine":106,"endColumn":10,"suggestions":"5217"},{"ruleId":"5028","severity":1,"message":"5218","line":130,"column":9,"nodeType":"5030","messageId":"5031","endLine":130,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5219","line":132,"column":10,"nodeType":"5030","messageId":"5031","endLine":132,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5220","line":133,"column":10,"nodeType":"5030","messageId":"5031","endLine":133,"endColumn":16},{"ruleId":"5040","severity":1,"message":"5221","line":150,"column":6,"nodeType":"5042","endLine":150,"endColumn":15,"suggestions":"5222"},{"ruleId":"5040","severity":1,"message":"5223","line":156,"column":6,"nodeType":"5042","endLine":156,"endColumn":13,"suggestions":"5224"},{"ruleId":"5046","severity":1,"message":"5047","line":176,"column":21,"nodeType":"5048","messageId":"5049","endLine":176,"endColumn":23},{"ruleId":"5046","severity":1,"message":"5047","line":180,"column":26,"nodeType":"5048","messageId":"5049","endLine":180,"endColumn":28},{"ruleId":"5069","severity":1,"message":"5070","line":214,"column":6,"nodeType":"5071","messageId":"5072","endLine":216,"endColumn":39},{"ruleId":"5069","severity":1,"message":"5070","line":217,"column":7,"nodeType":"5071","messageId":"5072","endLine":219,"endColumn":45},{"ruleId":"5069","severity":1,"message":"5070","line":220,"column":6,"nodeType":"5071","messageId":"5072","endLine":221,"endColumn":47},{"ruleId":"5069","severity":1,"message":"5070","line":222,"column":6,"nodeType":"5071","messageId":"5072","endLine":223,"endColumn":38},{"ruleId":"5069","severity":1,"message":"5070","line":224,"column":7,"nodeType":"5071","messageId":"5072","endLine":226,"endColumn":45},{"ruleId":"5046","severity":1,"message":"5047","line":255,"column":43,"nodeType":"5048","messageId":"5049","endLine":255,"endColumn":45},{"ruleId":"5046","severity":1,"message":"5047","line":328,"column":15,"nodeType":"5048","messageId":"5049","endLine":328,"endColumn":17},{"ruleId":"5046","severity":1,"message":"5047","line":366,"column":17,"nodeType":"5048","messageId":"5049","endLine":366,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5225","line":511,"column":8,"nodeType":"5030","messageId":"5031","endLine":511,"endColumn":11},{"ruleId":"5046","severity":1,"message":"5047","line":528,"column":22,"nodeType":"5048","messageId":"5049","endLine":528,"endColumn":24},{"ruleId":"5046","severity":1,"message":"5047","line":542,"column":24,"nodeType":"5048","messageId":"5049","endLine":542,"endColumn":26},{"ruleId":"5046","severity":1,"message":"5047","line":560,"column":16,"nodeType":"5048","messageId":"5049","endLine":560,"endColumn":18},{"ruleId":"5046","severity":1,"message":"5047","line":563,"column":16,"nodeType":"5048","messageId":"5049","endLine":563,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5051","line":661,"column":23,"nodeType":"5052","messageId":"5053","endLine":661,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":694,"column":46,"nodeType":"5052","messageId":"5053","endLine":694,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":713,"column":47,"nodeType":"5052","messageId":"5053","endLine":713,"endColumn":49},{"ruleId":"5050","severity":1,"message":"5051","line":790,"column":49,"nodeType":"5052","messageId":"5053","endLine":790,"endColumn":51},{"ruleId":"5050","severity":1,"message":"5051","line":797,"column":47,"nodeType":"5052","messageId":"5053","endLine":797,"endColumn":49},{"ruleId":"5028","severity":1,"message":"5095","line":21,"column":10,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5143","line":27,"column":6,"nodeType":"5042","endLine":27,"endColumn":8,"suggestions":"5226"},{"ruleId":"5050","severity":1,"message":"5051","line":108,"column":34,"nodeType":"5052","messageId":"5053","endLine":108,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":111,"column":34,"nodeType":"5052","messageId":"5053","endLine":111,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":114,"column":34,"nodeType":"5052","messageId":"5053","endLine":114,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5095","line":18,"column":12,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":19},{"ruleId":"5040","severity":1,"message":"5227","line":30,"column":8,"nodeType":"5042","endLine":30,"endColumn":10,"suggestions":"5228"},{"ruleId":"5050","severity":1,"message":"5051","line":104,"column":46,"nodeType":"5052","messageId":"5053","endLine":104,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":107,"column":46,"nodeType":"5052","messageId":"5053","endLine":107,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":110,"column":46,"nodeType":"5052","messageId":"5053","endLine":110,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5145","line":6,"column":8,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5077","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5146","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5147","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5148","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5149","line":18,"column":3,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5118","line":19,"column":3,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5151","line":22,"column":10,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5152","line":22,"column":20,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5104","line":26,"column":10,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5123","line":29,"column":9,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5229","line":34,"column":12,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5230","line":35,"column":12,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5231","line":36,"column":12,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5232","line":36,"column":28,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":45},{"ruleId":"5040","severity":1,"message":"5153","line":64,"column":8,"nodeType":"5042","endLine":64,"endColumn":10,"suggestions":"5233"},{"ruleId":"5028","severity":1,"message":"5234","line":65,"column":8,"nodeType":"5030","messageId":"5031","endLine":65,"endColumn":17},{"ruleId":"5050","severity":1,"message":"5051","line":147,"column":44,"nodeType":"5052","messageId":"5053","endLine":147,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":198,"column":34,"nodeType":"5052","messageId":"5053","endLine":198,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":216,"column":34,"nodeType":"5052","messageId":"5053","endLine":216,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":236,"column":43,"nodeType":"5052","messageId":"5053","endLine":236,"endColumn":45},{"ruleId":"5050","severity":1,"message":"5051","line":263,"column":40,"nodeType":"5052","messageId":"5053","endLine":263,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":265,"column":28,"nodeType":"5052","messageId":"5053","endLine":265,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":267,"column":26,"nodeType":"5052","messageId":"5053","endLine":267,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5235","line":284,"column":13,"nodeType":"5030","messageId":"5031","endLine":284,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5236","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":30},{"ruleId":"5028","severity":1,"message":"5189","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":18,"column":3,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":19,"column":3,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5190","line":20,"column":3,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5118","line":23,"column":23,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5205","line":41,"column":11,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5035","line":44,"column":9,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5206","line":52,"column":10,"nodeType":"5030","messageId":"5031","endLine":52,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5207","line":52,"column":18,"nodeType":"5030","messageId":"5031","endLine":52,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5208","line":54,"column":10,"nodeType":"5030","messageId":"5031","endLine":54,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5209","line":55,"column":10,"nodeType":"5030","messageId":"5031","endLine":55,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5210","line":55,"column":17,"nodeType":"5030","messageId":"5031","endLine":55,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5211","line":56,"column":10,"nodeType":"5030","messageId":"5031","endLine":56,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5212","line":56,"column":21,"nodeType":"5030","messageId":"5031","endLine":56,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5239","line":59,"column":10,"nodeType":"5030","messageId":"5031","endLine":59,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5179","line":66,"column":10,"nodeType":"5030","messageId":"5031","endLine":66,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5168","line":70,"column":10,"nodeType":"5030","messageId":"5031","endLine":70,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5240","line":71,"column":10,"nodeType":"5030","messageId":"5031","endLine":71,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5213","line":72,"column":10,"nodeType":"5030","messageId":"5031","endLine":72,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5169","line":73,"column":10,"nodeType":"5030","messageId":"5031","endLine":73,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5241","line":74,"column":10,"nodeType":"5030","messageId":"5031","endLine":74,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5242","line":74,"column":22,"nodeType":"5030","messageId":"5031","endLine":74,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5243","line":75,"column":10,"nodeType":"5030","messageId":"5031","endLine":75,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5244","line":75,"column":14,"nodeType":"5030","messageId":"5031","endLine":75,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5245","line":76,"column":10,"nodeType":"5030","messageId":"5031","endLine":76,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5246","line":76,"column":17,"nodeType":"5030","messageId":"5031","endLine":76,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5247","line":77,"column":10,"nodeType":"5030","messageId":"5031","endLine":77,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5248","line":77,"column":16,"nodeType":"5030","messageId":"5031","endLine":77,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5249","line":78,"column":10,"nodeType":"5030","messageId":"5031","endLine":78,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5250","line":78,"column":19,"nodeType":"5030","messageId":"5031","endLine":78,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5214","line":87,"column":11,"nodeType":"5030","messageId":"5031","endLine":87,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5105","line":87,"column":35,"nodeType":"5030","messageId":"5031","endLine":87,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5251","line":93,"column":7,"nodeType":"5030","messageId":"5031","endLine":93,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5252","line":95,"column":7,"nodeType":"5030","messageId":"5031","endLine":95,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5253","line":96,"column":7,"nodeType":"5030","messageId":"5031","endLine":96,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5254","line":97,"column":7,"nodeType":"5030","messageId":"5031","endLine":97,"endColumn":21},{"ruleId":"5182","severity":1,"message":"5255","line":98,"column":7,"nodeType":"5030","messageId":"5184","endLine":98,"endColumn":9},{"ruleId":"5040","severity":1,"message":"5160","line":139,"column":6,"nodeType":"5042","endLine":139,"endColumn":8,"suggestions":"5256"},{"ruleId":"5040","severity":1,"message":"5257","line":142,"column":6,"nodeType":"5042","endLine":142,"endColumn":10,"suggestions":"5258"},{"ruleId":"5040","severity":1,"message":"5160","line":170,"column":6,"nodeType":"5042","endLine":170,"endColumn":13,"suggestions":"5259"},{"ruleId":"5028","severity":1,"message":"5260","line":178,"column":9,"nodeType":"5030","messageId":"5031","endLine":178,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5261","line":179,"column":9,"nodeType":"5030","messageId":"5031","endLine":179,"endColumn":27},{"ruleId":"5046","severity":1,"message":"5047","line":180,"column":21,"nodeType":"5048","messageId":"5049","endLine":180,"endColumn":23},{"ruleId":"5069","severity":1,"message":"5070","line":205,"column":7,"nodeType":"5071","messageId":"5072","endLine":207,"endColumn":41},{"ruleId":"5069","severity":1,"message":"5070","line":208,"column":9,"nodeType":"5071","messageId":"5072","endLine":210,"endColumn":47},{"ruleId":"5069","severity":1,"message":"5070","line":215,"column":7,"nodeType":"5071","messageId":"5072","endLine":218,"endColumn":8},{"ruleId":"5069","severity":1,"message":"5070","line":222,"column":7,"nodeType":"5071","messageId":"5072","endLine":225,"endColumn":8},{"ruleId":"5069","severity":1,"message":"5070","line":228,"column":7,"nodeType":"5071","messageId":"5072","endLine":232,"endColumn":8},{"ruleId":"5069","severity":1,"message":"5070","line":234,"column":7,"nodeType":"5071","messageId":"5072","endLine":237,"endColumn":8},{"ruleId":"5046","severity":1,"message":"5047","line":262,"column":43,"nodeType":"5048","messageId":"5049","endLine":262,"endColumn":45},{"ruleId":"5050","severity":1,"message":"5091","line":439,"column":11,"nodeType":"5052","messageId":"5053","endLine":439,"endColumn":13},{"ruleId":"5050","severity":1,"message":"5051","line":520,"column":23,"nodeType":"5052","messageId":"5053","endLine":520,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":579,"column":47,"nodeType":"5052","messageId":"5053","endLine":579,"endColumn":49},{"ruleId":"5050","severity":1,"message":"5051","line":600,"column":45,"nodeType":"5052","messageId":"5053","endLine":600,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":672,"column":53,"nodeType":"5052","messageId":"5053","endLine":672,"endColumn":55},{"ruleId":"5050","severity":1,"message":"5051","line":679,"column":52,"nodeType":"5052","messageId":"5053","endLine":679,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5078","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":18,"column":8,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5236","line":19,"column":8,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":30},{"ruleId":"5028","severity":1,"message":"5035","line":24,"column":9,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5262","line":38,"column":6,"nodeType":"5042","endLine":38,"endColumn":8,"suggestions":"5263"},{"ruleId":"5028","severity":1,"message":"5264","line":240,"column":9,"nodeType":"5030","messageId":"5031","endLine":240,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5150","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5035","line":22,"column":9,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5265","line":25,"column":10,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5266","line":25,"column":18,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5260","line":28,"column":7,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":9},{"ruleId":"5069","severity":1,"message":"5070","line":48,"column":5,"nodeType":"5071","messageId":"5072","endLine":62,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5267","line":121,"column":9,"nodeType":"5030","messageId":"5031","endLine":121,"endColumn":15},{"ruleId":"5050","severity":1,"message":"5051","line":160,"column":43,"nodeType":"5052","messageId":"5053","endLine":160,"endColumn":45},{"ruleId":"5050","severity":1,"message":"5051","line":166,"column":47,"nodeType":"5052","messageId":"5053","endLine":166,"endColumn":49},{"ruleId":"5040","severity":1,"message":"5216","line":242,"column":6,"nodeType":"5042","endLine":242,"endColumn":8,"suggestions":"5268"},{"ruleId":"5028","severity":1,"message":"5269","line":247,"column":11,"nodeType":"5030","messageId":"5031","endLine":247,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5264","line":258,"column":9,"nodeType":"5030","messageId":"5031","endLine":258,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5035","line":20,"column":9,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5270","line":27,"column":6,"nodeType":"5042","endLine":27,"endColumn":14,"suggestions":"5271"},{"ruleId":"5050","severity":1,"message":"5091","line":39,"column":27,"nodeType":"5052","messageId":"5053","endLine":39,"endColumn":29},{"ruleId":"5050","severity":1,"message":"5051","line":93,"column":32,"nodeType":"5052","messageId":"5053","endLine":93,"endColumn":34},{"ruleId":"5028","severity":1,"message":"5077","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5080","line":22,"column":24,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":39},{"ruleId":"5040","severity":1,"message":"5083","line":48,"column":6,"nodeType":"5042","endLine":48,"endColumn":16,"suggestions":"5272"},{"ruleId":"5050","severity":1,"message":"5051","line":197,"column":42,"nodeType":"5052","messageId":"5053","endLine":197,"endColumn":44},{"ruleId":"5050","severity":1,"message":"5051","line":197,"column":72,"nodeType":"5052","messageId":"5053","endLine":197,"endColumn":74},{"ruleId":"5050","severity":1,"message":"5051","line":229,"column":39,"nodeType":"5052","messageId":"5053","endLine":229,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5273","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5274","line":3,"column":15,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5275","line":3,"column":21,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5276","line":3,"column":30,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":38},{"ruleId":"5028","severity":1,"message":"5277","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5199","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5278","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5077","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5279","line":16,"column":12,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5280","line":16,"column":22,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5032","line":2,"column":27,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5114","line":12,"column":8,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5035","line":25,"column":9,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":27,"column":35,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":65,"column":14,"nodeType":"5052","messageId":"5053","endLine":65,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5029","line":2,"column":17,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":2,"column":27,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5116","line":3,"column":8,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5281","line":7,"column":9,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5188","line":6,"column":27,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5094","line":7,"column":10,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5189","line":11,"column":5,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5077","line":12,"column":5,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":15,"column":5,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5190","line":16,"column":5,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5105","line":33,"column":45,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":50},{"ruleId":"5028","severity":1,"message":"5282","line":40,"column":11,"nodeType":"5030","messageId":"5031","endLine":40,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5094","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5077","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5190","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":10},{"ruleId":"5040","severity":1,"message":"5120","line":28,"column":6,"nodeType":"5042","endLine":28,"endColumn":10,"suggestions":"5283"},{"ruleId":"5028","severity":1,"message":"5094","line":5,"column":10,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5077","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":13,"column":5,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5150","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5086","line":19,"column":8,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5140","line":28,"column":12,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5141","line":28,"column":18,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":25},{"ruleId":"5040","severity":1,"message":"5138","line":33,"column":8,"nodeType":"5042","endLine":33,"endColumn":10,"suggestions":"5284"},{"ruleId":"5050","severity":1,"message":"5051","line":104,"column":45,"nodeType":"5052","messageId":"5053","endLine":104,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5150","line":15,"column":8,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5285","line":27,"column":11,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":16},{"ruleId":"5040","severity":1,"message":"5286","line":54,"column":8,"nodeType":"5042","endLine":54,"endColumn":10,"suggestions":"5287"},{"ruleId":"5028","severity":1,"message":"5077","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5190","line":18,"column":3,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5035","line":40,"column":9,"nodeType":"5030","messageId":"5031","endLine":40,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5123","line":41,"column":9,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5282","line":53,"column":11,"nodeType":"5030","messageId":"5031","endLine":53,"endColumn":19},{"ruleId":"5040","severity":1,"message":"5125","line":72,"column":6,"nodeType":"5042","endLine":72,"endColumn":12,"suggestions":"5288"},{"ruleId":"5028","severity":1,"message":"5078","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5085","line":14,"column":10,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5150","line":18,"column":8,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5236","line":19,"column":8,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":30},{"ruleId":"5028","severity":1,"message":"5035","line":23,"column":9,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5289","line":27,"column":10,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5290","line":27,"column":21,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5267","line":36,"column":7,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":13},{"ruleId":"5040","severity":1,"message":"5291","line":39,"column":6,"nodeType":"5042","endLine":39,"endColumn":8,"suggestions":"5292"},{"ruleId":"5069","severity":1,"message":"5070","line":173,"column":5,"nodeType":"5071","messageId":"5072","endLine":185,"endColumn":6},{"ruleId":"5293","severity":1,"message":"5294","line":174,"column":12,"nodeType":"5295","messageId":"5296","endLine":174,"endColumn":13,"fix":"5297"},{"ruleId":"5028","severity":1,"message":"5298","line":192,"column":9,"nodeType":"5030","messageId":"5031","endLine":192,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5118","line":7,"column":23,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5150","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5299","line":24,"column":8,"nodeType":"5042","endLine":24,"endColumn":10,"suggestions":"5300"},{"ruleId":"5073","severity":1,"message":"5074","line":102,"column":16,"nodeType":"5061","messageId":"5075","endLine":102,"endColumn":76,"fix":"5301"},{"ruleId":"5028","severity":1,"message":"5112","line":8,"column":10,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5113","line":9,"column":13,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5114","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5035","line":21,"column":9,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5302","line":1,"column":38,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":53},{"ruleId":"5028","severity":1,"message":"5156","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5157","line":5,"column":10,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5095","line":11,"column":12,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":19},{"ruleId":"5050","severity":1,"message":"5051","line":47,"column":46,"nodeType":"5052","messageId":"5053","endLine":47,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":50,"column":46,"nodeType":"5052","messageId":"5053","endLine":50,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5159","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5150","line":12,"column":10,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5118","line":13,"column":24,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":30},{"ruleId":"5028","severity":1,"message":"5303","line":20,"column":9,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5304","line":23,"column":9,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":15},{"ruleId":"5073","severity":1,"message":"5074","line":181,"column":17,"nodeType":"5061","messageId":"5075","endLine":183,"endColumn":16,"fix":"5305"},{"ruleId":"5028","severity":1,"message":"5159","line":3,"column":8,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5114","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5035","line":29,"column":9,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":30,"column":35,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":93,"column":84,"nodeType":"5052","messageId":"5053","endLine":93,"endColumn":86},{"ruleId":"5028","severity":1,"message":"5306","line":55,"column":23,"nodeType":"5030","messageId":"5031","endLine":55,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5307","line":56,"column":5,"nodeType":"5030","messageId":"5031","endLine":56,"endColumn":28},{"ruleId":"5040","severity":1,"message":"5308","line":160,"column":6,"nodeType":"5042","endLine":160,"endColumn":8,"suggestions":"5309"},{"ruleId":"5028","severity":1,"message":"5104","line":10,"column":10,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5118","line":10,"column":22,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5310","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5199","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5278","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5189","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":20,"column":3,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5311","line":31,"column":12,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5312","line":31,"column":25,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5313","line":33,"column":12,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5167","line":40,"column":10,"nodeType":"5030","messageId":"5031","endLine":40,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5314","line":42,"column":10,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5169","line":43,"column":10,"nodeType":"5030","messageId":"5031","endLine":43,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5158","line":65,"column":45,"nodeType":"5030","messageId":"5031","endLine":65,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5315","line":68,"column":8,"nodeType":"5030","messageId":"5031","endLine":68,"endColumn":16},{"ruleId":"5040","severity":1,"message":"5160","line":87,"column":6,"nodeType":"5042","endLine":87,"endColumn":8,"suggestions":"5316"},{"ruleId":"5040","severity":1,"message":"5160","line":102,"column":6,"nodeType":"5042","endLine":102,"endColumn":13,"suggestions":"5317"},{"ruleId":"5046","severity":1,"message":"5047","line":111,"column":31,"nodeType":"5048","messageId":"5049","endLine":111,"endColumn":33},{"ruleId":"5040","severity":1,"message":"5318","line":126,"column":6,"nodeType":"5042","endLine":126,"endColumn":8,"suggestions":"5319"},{"ruleId":"5040","severity":1,"message":"5320","line":129,"column":6,"nodeType":"5042","endLine":129,"endColumn":28,"suggestions":"5321"},{"ruleId":"5028","severity":1,"message":"5140","line":136,"column":13,"nodeType":"5030","messageId":"5031","endLine":136,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5269","line":147,"column":11,"nodeType":"5030","messageId":"5031","endLine":147,"endColumn":13},{"ruleId":"5040","severity":1,"message":"5262","line":158,"column":6,"nodeType":"5042","endLine":158,"endColumn":20,"suggestions":"5322"},{"ruleId":"5046","severity":1,"message":"5047","line":189,"column":15,"nodeType":"5048","messageId":"5049","endLine":189,"endColumn":17},{"ruleId":"5046","severity":1,"message":"5047","line":257,"column":25,"nodeType":"5048","messageId":"5049","endLine":257,"endColumn":27},{"ruleId":"5046","severity":1,"message":"5047","line":507,"column":19,"nodeType":"5048","messageId":"5049","endLine":507,"endColumn":21},{"ruleId":"5046","severity":1,"message":"5047","line":553,"column":17,"nodeType":"5048","messageId":"5049","endLine":553,"endColumn":19},{"ruleId":"5046","severity":1,"message":"5047","line":563,"column":15,"nodeType":"5048","messageId":"5049","endLine":563,"endColumn":17},{"ruleId":"5046","severity":1,"message":"5047","line":572,"column":15,"nodeType":"5048","messageId":"5049","endLine":572,"endColumn":17},{"ruleId":"5046","severity":1,"message":"5047","line":583,"column":15,"nodeType":"5048","messageId":"5049","endLine":583,"endColumn":17},{"ruleId":"5050","severity":1,"message":"5051","line":734,"column":49,"nodeType":"5052","messageId":"5053","endLine":734,"endColumn":51},{"ruleId":"5050","severity":1,"message":"5051","line":741,"column":47,"nodeType":"5052","messageId":"5053","endLine":741,"endColumn":49},{"ruleId":"5134","severity":1,"message":"5135","line":809,"column":91,"nodeType":"5136","messageId":"5137","endLine":809,"endColumn":105},{"ruleId":"5028","severity":1,"message":"5112","line":5,"column":10,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5113","line":6,"column":13,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5323","line":27,"column":35,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5085","line":4,"column":10,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":17,"column":8,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5262","line":32,"column":6,"nodeType":"5042","endLine":32,"endColumn":8,"suggestions":"5324"},{"ruleId":"5028","severity":1,"message":"5264","line":161,"column":9,"nodeType":"5030","messageId":"5031","endLine":161,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5095","line":24,"column":12,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":19},{"ruleId":"5040","severity":1,"message":"5308","line":118,"column":8,"nodeType":"5042","endLine":118,"endColumn":10,"suggestions":"5325"},{"ruleId":"5050","severity":1,"message":"5051","line":127,"column":46,"nodeType":"5052","messageId":"5053","endLine":127,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":130,"column":46,"nodeType":"5052","messageId":"5053","endLine":130,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":133,"column":46,"nodeType":"5052","messageId":"5053","endLine":133,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":136,"column":46,"nodeType":"5052","messageId":"5053","endLine":136,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5085","line":4,"column":33,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":37},{"ruleId":"5028","severity":1,"message":"5094","line":7,"column":10,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5189","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":13,"column":3,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5326","line":19,"column":10,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5323","line":23,"column":35,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5327","line":25,"column":10,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":26},{"ruleId":"5040","severity":1,"message":"5328","line":34,"column":6,"nodeType":"5042","endLine":34,"endColumn":8,"suggestions":"5329"},{"ruleId":"5050","severity":1,"message":"5051","line":58,"column":39,"nodeType":"5052","messageId":"5053","endLine":58,"endColumn":41},{"ruleId":"5050","severity":1,"message":"5051","line":58,"column":65,"nodeType":"5052","messageId":"5053","endLine":58,"endColumn":67},{"ruleId":"5050","severity":1,"message":"5051","line":178,"column":38,"nodeType":"5052","messageId":"5053","endLine":178,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":179,"column":37,"nodeType":"5052","messageId":"5053","endLine":179,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":180,"column":34,"nodeType":"5052","messageId":"5053","endLine":180,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":181,"column":38,"nodeType":"5052","messageId":"5053","endLine":181,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":182,"column":33,"nodeType":"5052","messageId":"5053","endLine":182,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":400,"column":47,"nodeType":"5052","messageId":"5053","endLine":400,"endColumn":49},{"ruleId":"5050","severity":1,"message":"5051","line":448,"column":44,"nodeType":"5052","messageId":"5053","endLine":448,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":497,"column":46,"nodeType":"5052","messageId":"5053","endLine":497,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":547,"column":46,"nodeType":"5052","messageId":"5053","endLine":547,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5199","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5189","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":13,"column":3,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5079","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5123","line":21,"column":9,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5330","line":38,"column":10,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5081","line":39,"column":10,"nodeType":"5030","messageId":"5031","endLine":39,"endColumn":24},{"ruleId":"5050","severity":1,"message":"5051","line":103,"column":40,"nodeType":"5052","messageId":"5053","endLine":103,"endColumn":42},{"ruleId":"5040","severity":1,"message":"5331","line":209,"column":6,"nodeType":"5042","endLine":209,"endColumn":16,"suggestions":"5332"},{"ruleId":"5028","severity":1,"message":"5323","line":13,"column":35,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5105","line":13,"column":43,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5078","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5086","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5150","line":15,"column":8,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5035","line":20,"column":9,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5270","line":32,"column":6,"nodeType":"5042","endLine":32,"endColumn":8,"suggestions":"5333"},{"ruleId":"5050","severity":1,"message":"5051","line":82,"column":29,"nodeType":"5052","messageId":"5053","endLine":82,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5189","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5190","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5035","line":34,"column":9,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5334","line":56,"column":9,"nodeType":"5030","messageId":"5031","endLine":56,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5335","line":80,"column":6,"nodeType":"5042","endLine":80,"endColumn":8,"suggestions":"5336"},{"ruleId":"5040","severity":1,"message":"5195","line":109,"column":6,"nodeType":"5042","endLine":109,"endColumn":15,"suggestions":"5337"},{"ruleId":"5050","severity":1,"message":"5051","line":133,"column":22,"nodeType":"5052","messageId":"5053","endLine":133,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5095","line":18,"column":10,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5143","line":38,"column":6,"nodeType":"5042","endLine":38,"endColumn":8,"suggestions":"5338"},{"ruleId":"5050","severity":1,"message":"5051","line":109,"column":34,"nodeType":"5052","messageId":"5053","endLine":109,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":112,"column":34,"nodeType":"5052","messageId":"5053","endLine":112,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":115,"column":34,"nodeType":"5052","messageId":"5053","endLine":115,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5095","line":22,"column":10,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5308","line":105,"column":6,"nodeType":"5042","endLine":105,"endColumn":8,"suggestions":"5339"},{"ruleId":"5050","severity":1,"message":"5051","line":116,"column":34,"nodeType":"5052","messageId":"5053","endLine":116,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":119,"column":34,"nodeType":"5052","messageId":"5053","endLine":119,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":122,"column":34,"nodeType":"5052","messageId":"5053","endLine":122,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5340","line":23,"column":10,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5095","line":24,"column":10,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5308","line":128,"column":6,"nodeType":"5042","endLine":128,"endColumn":8,"suggestions":"5341"},{"ruleId":"5050","severity":1,"message":"5051","line":139,"column":34,"nodeType":"5052","messageId":"5053","endLine":139,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":143,"column":34,"nodeType":"5052","messageId":"5053","endLine":143,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":146,"column":34,"nodeType":"5052","messageId":"5053","endLine":146,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":149,"column":34,"nodeType":"5052","messageId":"5053","endLine":149,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5077","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5035","line":30,"column":9,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":31,"column":35,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5342","line":36,"column":10,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5343","line":39,"column":10,"nodeType":"5030","messageId":"5031","endLine":39,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5344","line":39,"column":16,"nodeType":"5030","messageId":"5031","endLine":39,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5345","line":48,"column":8,"nodeType":"5030","messageId":"5031","endLine":48,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5346","line":63,"column":7,"nodeType":"5030","messageId":"5031","endLine":63,"endColumn":12},{"ruleId":"5040","severity":1,"message":"5347","line":88,"column":6,"nodeType":"5042","endLine":88,"endColumn":8,"suggestions":"5348"},{"ruleId":"5040","severity":1,"message":"5160","line":132,"column":6,"nodeType":"5042","endLine":132,"endColumn":10,"suggestions":"5349"},{"ruleId":"5050","severity":1,"message":"5051","line":145,"column":23,"nodeType":"5052","messageId":"5053","endLine":145,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":150,"column":23,"nodeType":"5052","messageId":"5053","endLine":150,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":169,"column":19,"nodeType":"5052","messageId":"5053","endLine":169,"endColumn":21},{"ruleId":"5050","severity":1,"message":"5051","line":171,"column":21,"nodeType":"5052","messageId":"5053","endLine":171,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":179,"column":25,"nodeType":"5052","messageId":"5053","endLine":179,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":180,"column":25,"nodeType":"5052","messageId":"5053","endLine":180,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":192,"column":31,"nodeType":"5052","messageId":"5053","endLine":192,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":192,"column":50,"nodeType":"5052","messageId":"5053","endLine":192,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":196,"column":29,"nodeType":"5052","messageId":"5053","endLine":196,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":196,"column":46,"nodeType":"5052","messageId":"5053","endLine":196,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5091","line":205,"column":33,"nodeType":"5052","messageId":"5053","endLine":205,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":236,"column":32,"nodeType":"5052","messageId":"5053","endLine":236,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":272,"column":28,"nodeType":"5052","messageId":"5053","endLine":272,"endColumn":30},{"ruleId":"5046","severity":1,"message":"5047","line":285,"column":45,"nodeType":"5048","messageId":"5049","endLine":285,"endColumn":47},{"ruleId":"5046","severity":1,"message":"5047","line":295,"column":45,"nodeType":"5048","messageId":"5049","endLine":295,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5350","line":314,"column":5,"nodeType":"5030","messageId":"5031","endLine":314,"endColumn":6},{"ruleId":"5050","severity":1,"message":"5051","line":502,"column":32,"nodeType":"5052","messageId":"5053","endLine":502,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":517,"column":33,"nodeType":"5052","messageId":"5053","endLine":517,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":531,"column":33,"nodeType":"5052","messageId":"5053","endLine":531,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5035","line":31,"column":9,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":33,"column":35,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5167","line":42,"column":10,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5168","line":43,"column":10,"nodeType":"5030","messageId":"5031","endLine":43,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5169","line":48,"column":10,"nodeType":"5030","messageId":"5031","endLine":48,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5170","line":54,"column":10,"nodeType":"5030","messageId":"5031","endLine":54,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5351","line":55,"column":10,"nodeType":"5030","messageId":"5031","endLine":55,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5352","line":55,"column":17,"nodeType":"5030","messageId":"5031","endLine":55,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5179","line":59,"column":10,"nodeType":"5030","messageId":"5031","endLine":59,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5245","line":62,"column":10,"nodeType":"5030","messageId":"5031","endLine":62,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5246","line":62,"column":17,"nodeType":"5030","messageId":"5031","endLine":62,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5353","line":75,"column":7,"nodeType":"5030","messageId":"5031","endLine":75,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5354","line":87,"column":9,"nodeType":"5030","messageId":"5031","endLine":87,"endColumn":20},{"ruleId":"5182","severity":1,"message":"5183","line":134,"column":9,"nodeType":"5030","messageId":"5184","endLine":134,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5260","line":135,"column":9,"nodeType":"5030","messageId":"5031","endLine":135,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5261","line":137,"column":9,"nodeType":"5030","messageId":"5031","endLine":137,"endColumn":27},{"ruleId":"5046","severity":1,"message":"5047","line":138,"column":21,"nodeType":"5048","messageId":"5049","endLine":138,"endColumn":23},{"ruleId":"5046","severity":1,"message":"5047","line":195,"column":43,"nodeType":"5048","messageId":"5049","endLine":195,"endColumn":45},{"ruleId":"5028","severity":1,"message":"5350","line":313,"column":9,"nodeType":"5030","messageId":"5031","endLine":313,"endColumn":10},{"ruleId":"5046","severity":1,"message":"5067","line":315,"column":27,"nodeType":"5048","messageId":"5049","endLine":315,"endColumn":29},{"ruleId":"5050","severity":1,"message":"5051","line":317,"column":16,"nodeType":"5052","messageId":"5053","endLine":317,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5051","line":492,"column":49,"nodeType":"5052","messageId":"5053","endLine":492,"endColumn":51},{"ruleId":"5050","severity":1,"message":"5051","line":499,"column":47,"nodeType":"5052","messageId":"5053","endLine":499,"endColumn":49},{"ruleId":"5028","severity":1,"message":"5085","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":8},{"ruleId":"5040","severity":1,"message":"5355","line":32,"column":6,"nodeType":"5042","endLine":32,"endColumn":16,"suggestions":"5356"},{"ruleId":"5050","severity":1,"message":"5051","line":295,"column":39,"nodeType":"5052","messageId":"5053","endLine":295,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5357","line":4,"column":10,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5350","line":75,"column":17,"nodeType":"5030","messageId":"5031","endLine":75,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5350","line":86,"column":25,"nodeType":"5030","messageId":"5031","endLine":86,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5150","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5358","line":27,"column":11,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5359","line":31,"column":10,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":15},{"ruleId":"5040","severity":1,"message":"5360","line":94,"column":6,"nodeType":"5042","endLine":94,"endColumn":8,"suggestions":"5361"},{"ruleId":"5050","severity":1,"message":"5051","line":210,"column":32,"nodeType":"5052","messageId":"5053","endLine":210,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":332,"column":31,"nodeType":"5052","messageId":"5053","endLine":332,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5362","line":398,"column":9,"nodeType":"5030","messageId":"5031","endLine":398,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5116","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5035","line":29,"column":9,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5358","line":30,"column":11,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5359","line":35,"column":10,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":15},{"ruleId":"5040","severity":1,"message":"5360","line":98,"column":6,"nodeType":"5042","endLine":98,"endColumn":8,"suggestions":"5363"},{"ruleId":"5050","severity":1,"message":"5051","line":213,"column":32,"nodeType":"5052","messageId":"5053","endLine":213,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":424,"column":29,"nodeType":"5052","messageId":"5053","endLine":424,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5359","line":32,"column":12,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5360","line":96,"column":8,"nodeType":"5042","endLine":96,"endColumn":10,"suggestions":"5364"},{"ruleId":"5050","severity":1,"message":"5051","line":215,"column":36,"nodeType":"5052","messageId":"5053","endLine":215,"endColumn":38},{"ruleId":"5050","severity":1,"message":"5051","line":426,"column":37,"nodeType":"5052","messageId":"5053","endLine":426,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5123","line":17,"column":9,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5159","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5365","line":9,"column":9,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5366","line":10,"column":9,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5350","line":30,"column":9,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":10},{"ruleId":"5367","severity":1,"message":"5368","line":51,"column":1,"nodeType":"5369","endLine":57,"endColumn":3},{"ruleId":"5367","severity":1,"message":"5368","line":135,"column":1,"nodeType":"5369","endLine":145,"endColumn":3},{"ruleId":"5050","severity":1,"message":"5051","line":83,"column":44,"nodeType":"5052","messageId":"5053","endLine":83,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":95,"column":24,"nodeType":"5052","messageId":"5053","endLine":95,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5051","line":106,"column":34,"nodeType":"5052","messageId":"5053","endLine":106,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":119,"column":31,"nodeType":"5052","messageId":"5053","endLine":119,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":5,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":5,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":5,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":5,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5150","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5370","line":43,"column":8,"nodeType":"5042","endLine":43,"endColumn":10,"suggestions":"5371"},{"ruleId":"5050","severity":1,"message":"5051","line":134,"column":29,"nodeType":"5052","messageId":"5053","endLine":134,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":151,"column":44,"nodeType":"5052","messageId":"5053","endLine":151,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":157,"column":48,"nodeType":"5052","messageId":"5053","endLine":157,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":162,"column":52,"nodeType":"5052","messageId":"5053","endLine":162,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":182,"column":40,"nodeType":"5052","messageId":"5053","endLine":182,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":192,"column":35,"nodeType":"5052","messageId":"5053","endLine":192,"endColumn":37},{"ruleId":"5028","severity":1,"message":"5123","line":24,"column":11,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5323","line":27,"column":37,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5372","line":28,"column":21,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5359","line":29,"column":12,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5373","line":35,"column":12,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5374","line":55,"column":9,"nodeType":"5030","messageId":"5031","endLine":55,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5375","line":58,"column":9,"nodeType":"5030","messageId":"5031","endLine":58,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5376","line":66,"column":17,"nodeType":"5030","messageId":"5031","endLine":66,"endColumn":20},{"ruleId":"5040","severity":1,"message":"5328","line":81,"column":8,"nodeType":"5042","endLine":81,"endColumn":10,"suggestions":"5377"},{"ruleId":"5050","severity":1,"message":"5091","line":99,"column":29,"nodeType":"5052","messageId":"5053","endLine":99,"endColumn":31},{"ruleId":"5040","severity":1,"message":"5160","line":111,"column":8,"nodeType":"5042","endLine":111,"endColumn":22,"suggestions":"5378"},{"ruleId":"5050","severity":1,"message":"5091","line":161,"column":24,"nodeType":"5052","messageId":"5053","endLine":161,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":161,"column":45,"nodeType":"5052","messageId":"5053","endLine":161,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5091","line":165,"column":29,"nodeType":"5052","messageId":"5053","endLine":165,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":245,"column":34,"nodeType":"5052","messageId":"5053","endLine":245,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":307,"column":48,"nodeType":"5052","messageId":"5053","endLine":307,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":321,"column":37,"nodeType":"5052","messageId":"5053","endLine":321,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":349,"column":37,"nodeType":"5052","messageId":"5053","endLine":349,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":385,"column":34,"nodeType":"5052","messageId":"5053","endLine":385,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":390,"column":43,"nodeType":"5052","messageId":"5053","endLine":390,"endColumn":45},{"ruleId":"5050","severity":1,"message":"5051","line":390,"column":78,"nodeType":"5052","messageId":"5053","endLine":390,"endColumn":80},{"ruleId":"5050","severity":1,"message":"5051","line":390,"column":118,"nodeType":"5052","messageId":"5053","endLine":390,"endColumn":120},{"ruleId":"5050","severity":1,"message":"5091","line":390,"column":154,"nodeType":"5052","messageId":"5053","endLine":390,"endColumn":156},{"ruleId":"5028","severity":1,"message":"5150","line":13,"column":8,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5123","line":24,"column":11,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5323","line":27,"column":37,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5372","line":28,"column":21,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5359","line":29,"column":12,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5358","line":31,"column":12,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5379","line":31,"column":16,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5373","line":36,"column":12,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5380","line":39,"column":12,"nodeType":"5030","messageId":"5031","endLine":39,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5381","line":39,"column":18,"nodeType":"5030","messageId":"5031","endLine":39,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5374","line":53,"column":9,"nodeType":"5030","messageId":"5031","endLine":53,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5375","line":56,"column":11,"nodeType":"5030","messageId":"5031","endLine":56,"endColumn":18},{"ruleId":"5040","severity":1,"message":"5328","line":66,"column":8,"nodeType":"5042","endLine":66,"endColumn":10,"suggestions":"5382"},{"ruleId":"5050","severity":1,"message":"5091","line":89,"column":29,"nodeType":"5052","messageId":"5053","endLine":89,"endColumn":31},{"ruleId":"5040","severity":1,"message":"5160","line":101,"column":8,"nodeType":"5042","endLine":101,"endColumn":22,"suggestions":"5383"},{"ruleId":"5028","severity":1,"message":"5376","line":139,"column":15,"nodeType":"5030","messageId":"5031","endLine":139,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5051","line":228,"column":34,"nodeType":"5052","messageId":"5053","endLine":228,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":290,"column":48,"nodeType":"5052","messageId":"5053","endLine":290,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":305,"column":37,"nodeType":"5052","messageId":"5053","endLine":305,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":333,"column":37,"nodeType":"5052","messageId":"5053","endLine":333,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":369,"column":34,"nodeType":"5052","messageId":"5053","endLine":369,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":375,"column":30,"nodeType":"5052","messageId":"5053","endLine":375,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":375,"column":65,"nodeType":"5052","messageId":"5053","endLine":375,"endColumn":67},{"ruleId":"5050","severity":1,"message":"5051","line":375,"column":104,"nodeType":"5052","messageId":"5053","endLine":375,"endColumn":106},{"ruleId":"5050","severity":1,"message":"5051","line":375,"column":142,"nodeType":"5052","messageId":"5053","endLine":375,"endColumn":144},{"ruleId":"5050","severity":1,"message":"5091","line":412,"column":28,"nodeType":"5052","messageId":"5053","endLine":412,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5091","line":412,"column":49,"nodeType":"5052","messageId":"5053","endLine":412,"endColumn":51},{"ruleId":"5050","severity":1,"message":"5091","line":416,"column":33,"nodeType":"5052","messageId":"5053","endLine":416,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5384","line":2,"column":19,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5077","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":13,"column":3,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5385","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5114","line":22,"column":8,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5342","line":39,"column":10,"nodeType":"5030","messageId":"5031","endLine":39,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5386","line":43,"column":17,"nodeType":"5030","messageId":"5031","endLine":43,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5387","line":51,"column":10,"nodeType":"5030","messageId":"5031","endLine":51,"endColumn":18},{"ruleId":"5040","severity":1,"message":"5347","line":89,"column":6,"nodeType":"5042","endLine":89,"endColumn":8,"suggestions":"5388"},{"ruleId":"5040","severity":1,"message":"5160","line":100,"column":6,"nodeType":"5042","endLine":100,"endColumn":10,"suggestions":"5389"},{"ruleId":"5050","severity":1,"message":"5051","line":112,"column":23,"nodeType":"5052","messageId":"5053","endLine":112,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":117,"column":23,"nodeType":"5052","messageId":"5053","endLine":117,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":139,"column":19,"nodeType":"5052","messageId":"5053","endLine":139,"endColumn":21},{"ruleId":"5050","severity":1,"message":"5051","line":141,"column":21,"nodeType":"5052","messageId":"5053","endLine":141,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":149,"column":25,"nodeType":"5052","messageId":"5053","endLine":149,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":150,"column":25,"nodeType":"5052","messageId":"5053","endLine":150,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":164,"column":31,"nodeType":"5052","messageId":"5053","endLine":164,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":164,"column":50,"nodeType":"5052","messageId":"5053","endLine":164,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":169,"column":29,"nodeType":"5052","messageId":"5053","endLine":169,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":169,"column":46,"nodeType":"5052","messageId":"5053","endLine":169,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5091","line":179,"column":33,"nodeType":"5052","messageId":"5053","endLine":179,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":210,"column":32,"nodeType":"5052","messageId":"5053","endLine":210,"endColumn":34},{"ruleId":"5046","severity":1,"message":"5047","line":248,"column":45,"nodeType":"5048","messageId":"5049","endLine":248,"endColumn":47},{"ruleId":"5046","severity":1,"message":"5047","line":258,"column":45,"nodeType":"5048","messageId":"5049","endLine":258,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":279,"column":28,"nodeType":"5052","messageId":"5053","endLine":279,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":487,"column":32,"nodeType":"5052","messageId":"5053","endLine":487,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":502,"column":33,"nodeType":"5052","messageId":"5053","endLine":502,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":515,"column":33,"nodeType":"5052","messageId":"5053","endLine":515,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5150","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5123","line":27,"column":9,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5323","line":29,"column":35,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5372","line":30,"column":19,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5359","line":31,"column":10,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":15},{"ruleId":"5040","severity":1,"message":"5328","line":71,"column":6,"nodeType":"5042","endLine":71,"endColumn":8,"suggestions":"5390"},{"ruleId":"5050","severity":1,"message":"5091","line":94,"column":22,"nodeType":"5052","messageId":"5053","endLine":94,"endColumn":24},{"ruleId":"5040","severity":1,"message":"5160","line":106,"column":6,"nodeType":"5042","endLine":106,"endColumn":20,"suggestions":"5391"},{"ruleId":"5050","severity":1,"message":"5051","line":223,"column":30,"nodeType":"5052","messageId":"5053","endLine":223,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":321,"column":31,"nodeType":"5052","messageId":"5053","endLine":321,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":354,"column":31,"nodeType":"5052","messageId":"5053","endLine":354,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":390,"column":28,"nodeType":"5052","messageId":"5053","endLine":390,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":395,"column":37,"nodeType":"5052","messageId":"5053","endLine":395,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":395,"column":72,"nodeType":"5052","messageId":"5053","endLine":395,"endColumn":74},{"ruleId":"5050","severity":1,"message":"5051","line":395,"column":112,"nodeType":"5052","messageId":"5053","endLine":395,"endColumn":114},{"ruleId":"5050","severity":1,"message":"5091","line":395,"column":148,"nodeType":"5052","messageId":"5053","endLine":395,"endColumn":150},{"ruleId":"5050","severity":1,"message":"5051","line":407,"column":24,"nodeType":"5052","messageId":"5053","endLine":407,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5051","line":407,"column":59,"nodeType":"5052","messageId":"5053","endLine":407,"endColumn":61},{"ruleId":"5050","severity":1,"message":"5051","line":407,"column":98,"nodeType":"5052","messageId":"5053","endLine":407,"endColumn":100},{"ruleId":"5050","severity":1,"message":"5051","line":407,"column":136,"nodeType":"5052","messageId":"5053","endLine":407,"endColumn":138},{"ruleId":"5050","severity":1,"message":"5091","line":445,"column":24,"nodeType":"5052","messageId":"5053","endLine":445,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":445,"column":45,"nodeType":"5052","messageId":"5053","endLine":445,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5091","line":449,"column":29,"nodeType":"5052","messageId":"5053","endLine":449,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5376","line":462,"column":11,"nodeType":"5030","messageId":"5031","endLine":462,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5376","line":479,"column":7,"nodeType":"5030","messageId":"5031","endLine":479,"endColumn":10},{"ruleId":"5050","severity":1,"message":"5051","line":493,"column":11,"nodeType":"5052","messageId":"5053","endLine":493,"endColumn":13},{"ruleId":"5050","severity":1,"message":"5051","line":493,"column":24,"nodeType":"5052","messageId":"5053","endLine":493,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5051","line":662,"column":22,"nodeType":"5052","messageId":"5053","endLine":662,"endColumn":24},{"ruleId":"5050","severity":1,"message":"5051","line":662,"column":37,"nodeType":"5052","messageId":"5053","endLine":662,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5116","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":9,"column":5,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5237","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5238","line":11,"column":5,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":22,"column":8,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5392","line":24,"column":8,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5145","line":25,"column":8,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5393","line":29,"column":67,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":82},{"ruleId":"5028","severity":1,"message":"5394","line":29,"column":84,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":92},{"ruleId":"5028","severity":1,"message":"5035","line":33,"column":11,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5358","line":34,"column":13,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5395","line":36,"column":11,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5359","line":40,"column":12,"nodeType":"5030","messageId":"5031","endLine":40,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5360","line":63,"column":8,"nodeType":"5042","endLine":63,"endColumn":10,"suggestions":"5396"},{"ruleId":"5050","severity":1,"message":"5091","line":117,"column":29,"nodeType":"5052","messageId":"5053","endLine":117,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5091","line":117,"column":51,"nodeType":"5052","messageId":"5053","endLine":117,"endColumn":53},{"ruleId":"5050","severity":1,"message":"5091","line":121,"column":28,"nodeType":"5052","messageId":"5053","endLine":121,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5091","line":121,"column":50,"nodeType":"5052","messageId":"5053","endLine":121,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5091","line":121,"column":71,"nodeType":"5052","messageId":"5053","endLine":121,"endColumn":73},{"ruleId":"5050","severity":1,"message":"5091","line":126,"column":29,"nodeType":"5052","messageId":"5053","endLine":126,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5091","line":126,"column":51,"nodeType":"5052","messageId":"5053","endLine":126,"endColumn":53},{"ruleId":"5050","severity":1,"message":"5051","line":218,"column":38,"nodeType":"5052","messageId":"5053","endLine":218,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":342,"column":48,"nodeType":"5052","messageId":"5053","endLine":342,"endColumn":50},{"ruleId":"5073","severity":1,"message":"5074","line":412,"column":53,"nodeType":"5061","messageId":"5075","endLine":412,"endColumn":93,"fix":"5397"},{"ruleId":"5028","severity":1,"message":"5116","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":9,"column":5,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5237","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5238","line":11,"column":5,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":21,"column":8,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5145","line":23,"column":8,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5398","line":24,"column":8,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5393","line":29,"column":67,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":82},{"ruleId":"5028","severity":1,"message":"5394","line":29,"column":84,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":92},{"ruleId":"5028","severity":1,"message":"5035","line":34,"column":11,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5358","line":35,"column":13,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5395","line":37,"column":11,"nodeType":"5030","messageId":"5031","endLine":37,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5359","line":41,"column":12,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5360","line":66,"column":8,"nodeType":"5042","endLine":66,"endColumn":10,"suggestions":"5399"},{"ruleId":"5050","severity":1,"message":"5091","line":120,"column":29,"nodeType":"5052","messageId":"5053","endLine":120,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5091","line":120,"column":51,"nodeType":"5052","messageId":"5053","endLine":120,"endColumn":53},{"ruleId":"5050","severity":1,"message":"5091","line":124,"column":28,"nodeType":"5052","messageId":"5053","endLine":124,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5091","line":124,"column":50,"nodeType":"5052","messageId":"5053","endLine":124,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5091","line":124,"column":71,"nodeType":"5052","messageId":"5053","endLine":124,"endColumn":73},{"ruleId":"5050","severity":1,"message":"5091","line":129,"column":29,"nodeType":"5052","messageId":"5053","endLine":129,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5091","line":129,"column":51,"nodeType":"5052","messageId":"5053","endLine":129,"endColumn":53},{"ruleId":"5050","severity":1,"message":"5051","line":217,"column":38,"nodeType":"5052","messageId":"5053","endLine":217,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":342,"column":48,"nodeType":"5052","messageId":"5053","endLine":342,"endColumn":50},{"ruleId":"5073","severity":1,"message":"5074","line":413,"column":53,"nodeType":"5061","messageId":"5075","endLine":413,"endColumn":93,"fix":"5400"},{"ruleId":"5028","severity":1,"message":"5116","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":9,"column":5,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5237","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5238","line":11,"column":5,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":21,"column":8,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5392","line":23,"column":8,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5145","line":24,"column":8,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5398","line":26,"column":8,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5393","line":29,"column":67,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":82},{"ruleId":"5028","severity":1,"message":"5394","line":29,"column":84,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":92},{"ruleId":"5028","severity":1,"message":"5035","line":33,"column":11,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5358","line":34,"column":13,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5395","line":36,"column":11,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5359","line":40,"column":12,"nodeType":"5030","messageId":"5031","endLine":40,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5360","line":62,"column":8,"nodeType":"5042","endLine":62,"endColumn":10,"suggestions":"5401"},{"ruleId":"5050","severity":1,"message":"5051","line":296,"column":48,"nodeType":"5052","messageId":"5053","endLine":296,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5091","line":319,"column":33,"nodeType":"5052","messageId":"5053","endLine":319,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5091","line":319,"column":55,"nodeType":"5052","messageId":"5053","endLine":319,"endColumn":57},{"ruleId":"5050","severity":1,"message":"5091","line":323,"column":32,"nodeType":"5052","messageId":"5053","endLine":323,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5091","line":323,"column":54,"nodeType":"5052","messageId":"5053","endLine":323,"endColumn":56},{"ruleId":"5050","severity":1,"message":"5091","line":323,"column":75,"nodeType":"5052","messageId":"5053","endLine":323,"endColumn":77},{"ruleId":"5050","severity":1,"message":"5091","line":328,"column":33,"nodeType":"5052","messageId":"5053","endLine":328,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5091","line":328,"column":55,"nodeType":"5052","messageId":"5053","endLine":328,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5079","line":7,"column":10,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5214","line":9,"column":13,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5158","line":9,"column":45,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":29,"column":50,"nodeType":"5052","messageId":"5053","endLine":29,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5402","line":18,"column":10,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5403","line":28,"column":10,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5404","line":33,"column":9,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":29},{"ruleId":"5040","severity":1,"message":"5370","line":47,"column":6,"nodeType":"5042","endLine":47,"endColumn":8,"suggestions":"5405"},{"ruleId":"5050","severity":1,"message":"5051","line":176,"column":38,"nodeType":"5052","messageId":"5053","endLine":176,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":182,"column":42,"nodeType":"5052","messageId":"5053","endLine":182,"endColumn":44},{"ruleId":"5050","severity":1,"message":"5051","line":187,"column":46,"nodeType":"5052","messageId":"5053","endLine":187,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":275,"column":33,"nodeType":"5052","messageId":"5053","endLine":275,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5406","line":17,"column":22,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5407","line":17,"column":34,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5394","line":17,"column":65,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":73},{"ruleId":"5028","severity":1,"message":"5408","line":18,"column":3,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5409","line":18,"column":19,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":31},{"ruleId":"5040","severity":1,"message":"5370","line":41,"column":6,"nodeType":"5042","endLine":41,"endColumn":8,"suggestions":"5410"},{"ruleId":"5050","severity":1,"message":"5051","line":146,"column":28,"nodeType":"5052","messageId":"5053","endLine":146,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":151,"column":30,"nodeType":"5052","messageId":"5053","endLine":151,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":156,"column":32,"nodeType":"5052","messageId":"5053","endLine":156,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":182,"column":30,"nodeType":"5052","messageId":"5053","endLine":182,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":192,"column":25,"nodeType":"5052","messageId":"5053","endLine":192,"endColumn":27},{"ruleId":"5040","severity":1,"message":"5411","line":47,"column":6,"nodeType":"5042","endLine":47,"endColumn":8,"suggestions":"5412"},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5413","line":2,"column":10,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5085","line":2,"column":22,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5414","line":6,"column":8,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5415","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5416","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5086","line":9,"column":8,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5040","severity":1,"message":"5417","line":25,"column":6,"nodeType":"5042","endLine":25,"endColumn":14,"suggestions":"5418"},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5419","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5215","line":20,"column":25,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5035","line":21,"column":9,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5123","line":22,"column":9,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5420","line":24,"column":22,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5421","line":25,"column":5,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5422","line":25,"column":20,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":37},{"ruleId":"5028","severity":1,"message":"5423","line":25,"column":39,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5424","line":26,"column":15,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5107","line":26,"column":28,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5425","line":26,"column":42,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":55},{"ruleId":"5028","severity":1,"message":"5426","line":57,"column":9,"nodeType":"5030","messageId":"5031","endLine":57,"endColumn":22},{"ruleId":"5050","severity":1,"message":"5051","line":90,"column":28,"nodeType":"5052","messageId":"5053","endLine":90,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":93,"column":37,"nodeType":"5052","messageId":"5053","endLine":93,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5357","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5419","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5417","line":22,"column":6,"nodeType":"5042","endLine":22,"endColumn":14,"suggestions":"5427"},{"ruleId":"5050","severity":1,"message":"5091","line":31,"column":13,"nodeType":"5052","messageId":"5053","endLine":31,"endColumn":15},{"ruleId":"5050","severity":1,"message":"5051","line":60,"column":41,"nodeType":"5052","messageId":"5053","endLine":60,"endColumn":43},{"ruleId":"5050","severity":1,"message":"5051","line":66,"column":32,"nodeType":"5052","messageId":"5053","endLine":66,"endColumn":34},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5094","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5105","line":25,"column":35,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5357","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5428","line":5,"column":19,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5429","line":14,"column":7,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5117","line":63,"column":5,"nodeType":"5030","messageId":"5031","endLine":63,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5117","line":92,"column":5,"nodeType":"5030","messageId":"5031","endLine":92,"endColumn":11},{"ruleId":"5040","severity":1,"message":"5299","line":150,"column":6,"nodeType":"5042","endLine":150,"endColumn":14,"suggestions":"5430"},{"ruleId":"5050","severity":1,"message":"5051","line":232,"column":41,"nodeType":"5052","messageId":"5053","endLine":232,"endColumn":43},{"ruleId":"5056","severity":1,"message":"5431","line":232,"column":46,"nodeType":"5432","messageId":"5058","endLine":232,"endColumn":48},{"ruleId":"5056","severity":1,"message":"5431","line":232,"column":64,"nodeType":"5432","messageId":"5058","endLine":232,"endColumn":66},{"ruleId":"5056","severity":1,"message":"5433","line":232,"column":64,"nodeType":"5432","messageId":"5058","endLine":232,"endColumn":66},{"ruleId":"5050","severity":1,"message":"5051","line":232,"column":81,"nodeType":"5052","messageId":"5053","endLine":232,"endColumn":83},{"ruleId":"5056","severity":1,"message":"5433","line":232,"column":86,"nodeType":"5432","messageId":"5058","endLine":232,"endColumn":88},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5105","line":23,"column":35,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5323","line":9,"column":35,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5434","line":25,"column":5,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":15},{"ruleId":"5050","severity":1,"message":"5091","line":44,"column":29,"nodeType":"5052","messageId":"5053","endLine":44,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":100,"column":18,"nodeType":"5052","messageId":"5053","endLine":100,"endColumn":20},{"ruleId":"5050","severity":1,"message":"5051","line":119,"column":30,"nodeType":"5052","messageId":"5053","endLine":119,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":139,"column":25,"nodeType":"5052","messageId":"5053","endLine":139,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":157,"column":23,"nodeType":"5052","messageId":"5053","endLine":157,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":173,"column":28,"nodeType":"5052","messageId":"5053","endLine":173,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":192,"column":21,"nodeType":"5052","messageId":"5053","endLine":192,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":211,"column":28,"nodeType":"5052","messageId":"5053","endLine":211,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":270,"column":17,"nodeType":"5052","messageId":"5053","endLine":270,"endColumn":19},{"ruleId":"5050","severity":1,"message":"5051","line":288,"column":20,"nodeType":"5052","messageId":"5053","endLine":288,"endColumn":22},{"ruleId":"5050","severity":1,"message":"5051","line":306,"column":16,"nodeType":"5052","messageId":"5053","endLine":306,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5051","line":324,"column":14,"nodeType":"5052","messageId":"5053","endLine":324,"endColumn":16},{"ruleId":"5050","severity":1,"message":"5051","line":444,"column":29,"nodeType":"5052","messageId":"5053","endLine":444,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":458,"column":36,"nodeType":"5052","messageId":"5053","endLine":458,"endColumn":38},{"ruleId":"5050","severity":1,"message":"5051","line":474,"column":34,"nodeType":"5052","messageId":"5053","endLine":474,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":487,"column":32,"nodeType":"5052","messageId":"5053","endLine":487,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":501,"column":39,"nodeType":"5052","messageId":"5053","endLine":501,"endColumn":41},{"ruleId":"5050","severity":1,"message":"5051","line":514,"column":31,"nodeType":"5052","messageId":"5053","endLine":514,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5035","line":12,"column":9,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":13,"column":35,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5035","line":14,"column":9,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":15,"column":35,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5435","line":1,"column":10,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5079","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5323","line":11,"column":35,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5436","line":13,"column":11,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":18},{"ruleId":"5040","severity":1,"message":"5160","line":58,"column":6,"nodeType":"5042","endLine":58,"endColumn":20,"suggestions":"5437"},{"ruleId":"5050","severity":1,"message":"5051","line":95,"column":15,"nodeType":"5052","messageId":"5053","endLine":95,"endColumn":17},{"ruleId":"5050","severity":1,"message":"5051","line":120,"column":30,"nodeType":"5052","messageId":"5053","endLine":120,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":168,"column":33,"nodeType":"5052","messageId":"5053","endLine":168,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":190,"column":23,"nodeType":"5052","messageId":"5053","endLine":190,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":214,"column":18,"nodeType":"5052","messageId":"5053","endLine":214,"endColumn":20},{"ruleId":"5050","severity":1,"message":"5051","line":238,"column":28,"nodeType":"5052","messageId":"5053","endLine":238,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":285,"column":26,"nodeType":"5052","messageId":"5053","endLine":285,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":308,"column":26,"nodeType":"5052","messageId":"5053","endLine":308,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":332,"column":20,"nodeType":"5052","messageId":"5053","endLine":332,"endColumn":22},{"ruleId":"5050","severity":1,"message":"5051","line":354,"column":20,"nodeType":"5052","messageId":"5053","endLine":354,"endColumn":22},{"ruleId":"5050","severity":1,"message":"5051","line":376,"column":20,"nodeType":"5052","messageId":"5053","endLine":376,"endColumn":22},{"ruleId":"5050","severity":1,"message":"5051","line":398,"column":20,"nodeType":"5052","messageId":"5053","endLine":398,"endColumn":22},{"ruleId":"5050","severity":1,"message":"5051","line":421,"column":20,"nodeType":"5052","messageId":"5053","endLine":421,"endColumn":22},{"ruleId":"5050","severity":1,"message":"5051","line":440,"column":16,"nodeType":"5052","messageId":"5053","endLine":440,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5051","line":459,"column":14,"nodeType":"5052","messageId":"5053","endLine":459,"endColumn":16},{"ruleId":"5050","severity":1,"message":"5051","line":572,"column":16,"nodeType":"5052","messageId":"5053","endLine":572,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5051","line":586,"column":31,"nodeType":"5052","messageId":"5053","endLine":586,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":601,"column":24,"nodeType":"5052","messageId":"5053","endLine":601,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5051","line":616,"column":19,"nodeType":"5052","messageId":"5053","endLine":616,"endColumn":21},{"ruleId":"5050","severity":1,"message":"5051","line":630,"column":29,"nodeType":"5052","messageId":"5053","endLine":630,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":643,"column":21,"nodeType":"5052","messageId":"5053","endLine":643,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":657,"column":21,"nodeType":"5052","messageId":"5053","endLine":657,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5199","line":3,"column":3,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5278","line":4,"column":3,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5189","line":5,"column":3,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5118","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5438","line":19,"column":12,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5085","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5439","line":96,"column":7,"nodeType":"5030","messageId":"5031","endLine":96,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5440","line":27,"column":10,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5123","line":37,"column":7,"nodeType":"5030","messageId":"5031","endLine":37,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5441","line":38,"column":9,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":18},{"ruleId":"5442","severity":1,"message":"5443","line":82,"column":3,"nodeType":"5444","messageId":"5053","endLine":82,"endColumn":15},{"ruleId":"5040","severity":1,"message":"5445","line":94,"column":4,"nodeType":"5042","endLine":94,"endColumn":20,"suggestions":"5446"},{"ruleId":"5050","severity":1,"message":"5091","line":116,"column":27,"nodeType":"5052","messageId":"5053","endLine":116,"endColumn":29},{"ruleId":"5050","severity":1,"message":"5051","line":128,"column":48,"nodeType":"5052","messageId":"5053","endLine":128,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":128,"column":108,"nodeType":"5052","messageId":"5053","endLine":128,"endColumn":110},{"ruleId":"5050","severity":1,"message":"5091","line":146,"column":24,"nodeType":"5052","messageId":"5053","endLine":146,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5051","line":154,"column":47,"nodeType":"5052","messageId":"5053","endLine":154,"endColumn":49},{"ruleId":"5050","severity":1,"message":"5051","line":154,"column":107,"nodeType":"5052","messageId":"5053","endLine":154,"endColumn":109},{"ruleId":"5040","severity":1,"message":"5447","line":160,"column":4,"nodeType":"5042","endLine":160,"endColumn":17,"suggestions":"5448"},{"ruleId":"5050","severity":1,"message":"5091","line":174,"column":26,"nodeType":"5052","messageId":"5053","endLine":174,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":180,"column":48,"nodeType":"5052","messageId":"5053","endLine":180,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":180,"column":108,"nodeType":"5052","messageId":"5053","endLine":180,"endColumn":110},{"ruleId":"5040","severity":1,"message":"5449","line":186,"column":4,"nodeType":"5042","endLine":186,"endColumn":17,"suggestions":"5450"},{"ruleId":"5028","severity":1,"message":"5451","line":192,"column":7,"nodeType":"5030","messageId":"5031","endLine":192,"endColumn":21},{"ruleId":"5062","severity":1,"message":"5063","line":212,"column":17,"nodeType":"5061","endLine":217,"endColumn":19},{"ruleId":"5059","severity":1,"message":"5060","line":223,"column":15,"nodeType":"5061","endLine":223,"endColumn":52},{"ruleId":"5062","severity":1,"message":"5063","line":360,"column":17,"nodeType":"5061","endLine":365,"endColumn":19},{"ruleId":"5059","severity":1,"message":"5060","line":371,"column":15,"nodeType":"5061","endLine":371,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":5,"column":38,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":5,"column":49,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":5,"column":54,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5393","line":13,"column":51,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":66},{"ruleId":"5028","severity":1,"message":"5394","line":13,"column":68,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":76},{"ruleId":"5028","severity":1,"message":"5359","line":22,"column":12,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5358","line":23,"column":12,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5452","line":28,"column":11,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5453","line":48,"column":8,"nodeType":"5042","endLine":48,"endColumn":10,"suggestions":"5454"},{"ruleId":"5050","severity":1,"message":"5051","line":166,"column":44,"nodeType":"5052","messageId":"5053","endLine":166,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":250,"column":50,"nodeType":"5052","messageId":"5053","endLine":250,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":261,"column":53,"nodeType":"5052","messageId":"5053","endLine":261,"endColumn":55},{"ruleId":"5050","severity":1,"message":"5091","line":261,"column":74,"nodeType":"5052","messageId":"5053","endLine":261,"endColumn":76},{"ruleId":"5050","severity":1,"message":"5051","line":274,"column":71,"nodeType":"5052","messageId":"5053","endLine":274,"endColumn":73},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":5,"column":38,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":5,"column":49,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":5,"column":54,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5393","line":13,"column":51,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":66},{"ruleId":"5028","severity":1,"message":"5394","line":13,"column":68,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":76},{"ruleId":"5028","severity":1,"message":"5359","line":19,"column":12,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5358","line":20,"column":12,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5452","line":25,"column":11,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5453","line":45,"column":8,"nodeType":"5042","endLine":45,"endColumn":10,"suggestions":"5455"},{"ruleId":"5050","severity":1,"message":"5051","line":164,"column":44,"nodeType":"5052","messageId":"5053","endLine":164,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":247,"column":71,"nodeType":"5052","messageId":"5053","endLine":247,"endColumn":73},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":5,"column":38,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":5,"column":49,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":5,"column":54,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5359","line":19,"column":12,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5453","line":44,"column":8,"nodeType":"5042","endLine":44,"endColumn":10,"suggestions":"5456"},{"ruleId":"5050","severity":1,"message":"5051","line":164,"column":44,"nodeType":"5052","messageId":"5053","endLine":164,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":170,"column":48,"nodeType":"5052","messageId":"5053","endLine":170,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":175,"column":52,"nodeType":"5052","messageId":"5053","endLine":175,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":255,"column":50,"nodeType":"5052","messageId":"5053","endLine":255,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":263,"column":53,"nodeType":"5052","messageId":"5053","endLine":263,"endColumn":55},{"ruleId":"5050","severity":1,"message":"5091","line":263,"column":74,"nodeType":"5052","messageId":"5053","endLine":263,"endColumn":76},{"ruleId":"5050","severity":1,"message":"5051","line":274,"column":71,"nodeType":"5052","messageId":"5053","endLine":274,"endColumn":73},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":5,"column":38,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":5,"column":49,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":5,"column":54,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5457","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5359","line":22,"column":12,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5458","line":26,"column":12,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5459","line":26,"column":17,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5460","line":27,"column":12,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5461","line":27,"column":17,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":23},{"ruleId":"5040","severity":1,"message":"5453","line":55,"column":8,"nodeType":"5042","endLine":55,"endColumn":10,"suggestions":"5462"},{"ruleId":"5050","severity":1,"message":"5051","line":176,"column":44,"nodeType":"5052","messageId":"5053","endLine":176,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":184,"column":48,"nodeType":"5052","messageId":"5053","endLine":184,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":188,"column":52,"nodeType":"5052","messageId":"5053","endLine":188,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":272,"column":50,"nodeType":"5052","messageId":"5053","endLine":272,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":280,"column":53,"nodeType":"5052","messageId":"5053","endLine":280,"endColumn":55},{"ruleId":"5050","severity":1,"message":"5091","line":280,"column":74,"nodeType":"5052","messageId":"5053","endLine":280,"endColumn":76},{"ruleId":"5050","severity":1,"message":"5051","line":291,"column":71,"nodeType":"5052","messageId":"5053","endLine":291,"endColumn":73},{"ruleId":"5069","severity":1,"message":"5463","line":371,"column":1,"nodeType":"5071","messageId":"5464","endLine":381,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":64,"column":32,"nodeType":"5052","messageId":"5053","endLine":64,"endColumn":34},{"ruleId":"5028","severity":1,"message":"5323","line":19,"column":37,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5105","line":19,"column":45,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":50},{"ruleId":"5028","severity":1,"message":"5269","line":24,"column":11,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":13},{"ruleId":"5040","severity":1,"message":"5216","line":35,"column":6,"nodeType":"5042","endLine":35,"endColumn":8,"suggestions":"5465"},{"ruleId":"5046","severity":1,"message":"5047","line":43,"column":26,"nodeType":"5048","messageId":"5049","endLine":43,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5077","line":4,"column":38,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":4,"column":49,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":4,"column":54,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":6,"column":8,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5466","line":10,"column":8,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5467","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":20},{"ruleId":"5040","severity":1,"message":"5453","line":51,"column":8,"nodeType":"5042","endLine":51,"endColumn":10,"suggestions":"5468"},{"ruleId":"5134","severity":1,"message":"5135","line":190,"column":25,"nodeType":"5136","messageId":"5137","endLine":190,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5152","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5077","line":4,"column":38,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":4,"column":49,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":4,"column":54,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":6,"column":8,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5466","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5469","line":27,"column":25,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5470","line":28,"column":6,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":15},{"ruleId":"5040","severity":1,"message":"5453","line":49,"column":8,"nodeType":"5042","endLine":49,"endColumn":10,"suggestions":"5471"},{"ruleId":"5050","severity":1,"message":"5051","line":190,"column":35,"nodeType":"5052","messageId":"5053","endLine":190,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":205,"column":34,"nodeType":"5052","messageId":"5053","endLine":205,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":207,"column":34,"nodeType":"5052","messageId":"5053","endLine":207,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":231,"column":44,"nodeType":"5052","messageId":"5053","endLine":231,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5091","line":267,"column":34,"nodeType":"5052","messageId":"5053","endLine":267,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5091","line":267,"column":56,"nodeType":"5052","messageId":"5053","endLine":267,"endColumn":58},{"ruleId":"5050","severity":1,"message":"5091","line":271,"column":32,"nodeType":"5052","messageId":"5053","endLine":271,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5091","line":271,"column":54,"nodeType":"5052","messageId":"5053","endLine":271,"endColumn":56},{"ruleId":"5050","severity":1,"message":"5091","line":271,"column":75,"nodeType":"5052","messageId":"5053","endLine":271,"endColumn":77},{"ruleId":"5050","severity":1,"message":"5091","line":276,"column":33,"nodeType":"5052","messageId":"5053","endLine":276,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5091","line":276,"column":55,"nodeType":"5052","messageId":"5053","endLine":276,"endColumn":57},{"ruleId":"5134","severity":1,"message":"5135","line":320,"column":25,"nodeType":"5136","messageId":"5137","endLine":320,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5472","line":3,"column":8,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5078","line":11,"column":5,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5118","line":12,"column":5,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5473","line":18,"column":8,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5286","line":39,"column":8,"nodeType":"5042","endLine":39,"endColumn":10,"suggestions":"5474"},{"ruleId":"5028","severity":1,"message":"5475","line":40,"column":11,"nodeType":"5030","messageId":"5031","endLine":40,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5476","line":56,"column":7,"nodeType":"5030","messageId":"5031","endLine":56,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5117","line":10,"column":11,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":17},{"ruleId":"5073","severity":1,"message":"5074","line":61,"column":45,"nodeType":"5061","messageId":"5075","endLine":64,"endColumn":46,"fix":"5477"},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5035","line":15,"column":9,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":14},{"ruleId":"5050","severity":1,"message":"5051","line":31,"column":33,"nodeType":"5052","messageId":"5053","endLine":31,"endColumn":35},{"ruleId":"5073","severity":1,"message":"5074","line":35,"column":23,"nodeType":"5061","messageId":"5075","endLine":38,"endColumn":24,"fix":"5478"},{"ruleId":"5028","severity":1,"message":"5428","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5479","line":11,"column":5,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5480","line":14,"column":11,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5481","line":16,"column":9,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5482","line":21,"column":9,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5117","line":106,"column":5,"nodeType":"5030","messageId":"5031","endLine":106,"endColumn":11},{"ruleId":"5050","severity":1,"message":"5051","line":205,"column":38,"nodeType":"5052","messageId":"5053","endLine":205,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":206,"column":37,"nodeType":"5052","messageId":"5053","endLine":206,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":207,"column":34,"nodeType":"5052","messageId":"5053","endLine":207,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":208,"column":38,"nodeType":"5052","messageId":"5053","endLine":208,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":222,"column":38,"nodeType":"5052","messageId":"5053","endLine":222,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":222,"column":86,"nodeType":"5052","messageId":"5053","endLine":222,"endColumn":88},{"ruleId":"5050","severity":1,"message":"5051","line":237,"column":42,"nodeType":"5052","messageId":"5053","endLine":237,"endColumn":44},{"ruleId":"5056","severity":1,"message":"5431","line":237,"column":74,"nodeType":"5432","messageId":"5058","endLine":237,"endColumn":76},{"ruleId":"5056","severity":1,"message":"5431","line":237,"column":92,"nodeType":"5432","messageId":"5058","endLine":237,"endColumn":94},{"ruleId":"5056","severity":1,"message":"5433","line":237,"column":92,"nodeType":"5432","messageId":"5058","endLine":237,"endColumn":94},{"ruleId":"5050","severity":1,"message":"5051","line":237,"column":109,"nodeType":"5052","messageId":"5053","endLine":237,"endColumn":111},{"ruleId":"5056","severity":1,"message":"5433","line":237,"column":141,"nodeType":"5432","messageId":"5058","endLine":237,"endColumn":143},{"ruleId":"5056","severity":1,"message":"5433","line":237,"column":159,"nodeType":"5432","messageId":"5058","endLine":237,"endColumn":161},{"ruleId":"5056","severity":1,"message":"5433","line":237,"column":186,"nodeType":"5432","messageId":"5058","endLine":237,"endColumn":188},{"ruleId":"5050","severity":1,"message":"5051","line":239,"column":35,"nodeType":"5052","messageId":"5053","endLine":239,"endColumn":37},{"ruleId":"5028","severity":1,"message":"5085","line":4,"column":10,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5281","line":9,"column":9,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":15},{"ruleId":"5059","severity":1,"message":"5060","line":37,"column":9,"nodeType":"5061","endLine":37,"endColumn":48},{"ruleId":"5059","severity":1,"message":"5060","line":43,"column":9,"nodeType":"5061","endLine":43,"endColumn":53},{"ruleId":"5059","severity":1,"message":"5060","line":52,"column":14,"nodeType":"5061","endLine":52,"endColumn":56},{"ruleId":"5073","severity":1,"message":"5074","line":58,"column":7,"nodeType":"5061","messageId":"5075","endLine":58,"endColumn":40,"fix":"5483"},{"ruleId":"5028","severity":1,"message":"5484","line":1,"column":16,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5157","line":4,"column":10,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5156","line":5,"column":8,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5485","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5486","line":9,"column":8,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":18},{"ruleId":"5134","severity":1,"message":"5135","line":41,"column":137,"nodeType":"5136","messageId":"5137","endLine":41,"endColumn":153},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5152","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5487","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5488","line":42,"column":11,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5489","line":163,"column":9,"nodeType":"5030","messageId":"5031","endLine":163,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5490","line":183,"column":7,"nodeType":"5030","messageId":"5031","endLine":183,"endColumn":9},{"ruleId":"5050","severity":1,"message":"5051","line":240,"column":29,"nodeType":"5052","messageId":"5053","endLine":240,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":278,"column":35,"nodeType":"5052","messageId":"5053","endLine":278,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":281,"column":37,"nodeType":"5052","messageId":"5053","endLine":281,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":284,"column":39,"nodeType":"5052","messageId":"5053","endLine":284,"endColumn":41},{"ruleId":"5050","severity":1,"message":"5051","line":300,"column":31,"nodeType":"5052","messageId":"5053","endLine":300,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":314,"column":33,"nodeType":"5052","messageId":"5053","endLine":314,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":344,"column":33,"nodeType":"5052","messageId":"5053","endLine":344,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":345,"column":33,"nodeType":"5052","messageId":"5053","endLine":345,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":346,"column":34,"nodeType":"5052","messageId":"5053","endLine":346,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":370,"column":34,"nodeType":"5052","messageId":"5053","endLine":370,"endColumn":36},{"ruleId":"5073","severity":1,"message":"5074","line":379,"column":21,"nodeType":"5061","messageId":"5075","endLine":379,"endColumn":63,"fix":"5491"},{"ruleId":"5050","severity":1,"message":"5051","line":411,"column":29,"nodeType":"5052","messageId":"5053","endLine":411,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5128","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5117","line":94,"column":7,"nodeType":"5030","messageId":"5031","endLine":94,"endColumn":13},{"ruleId":"5050","severity":1,"message":"5051","line":229,"column":22,"nodeType":"5052","messageId":"5053","endLine":229,"endColumn":24},{"ruleId":"5050","severity":1,"message":"5051","line":229,"column":45,"nodeType":"5052","messageId":"5053","endLine":229,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":232,"column":28,"nodeType":"5052","messageId":"5053","endLine":232,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":232,"column":51,"nodeType":"5052","messageId":"5053","endLine":232,"endColumn":53},{"ruleId":"5050","severity":1,"message":"5051","line":235,"column":30,"nodeType":"5052","messageId":"5053","endLine":235,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":247,"column":27,"nodeType":"5052","messageId":"5053","endLine":247,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5323","line":11,"column":27,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5105","line":11,"column":35,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5199","line":3,"column":3,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5278","line":4,"column":3,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5189","line":5,"column":3,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5118","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5438","line":19,"column":12,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":29},{"ruleId":"5050","severity":1,"message":"5091","line":43,"column":22,"nodeType":"5052","messageId":"5053","endLine":43,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5323","line":9,"column":35,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5205","line":10,"column":11,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5372","line":10,"column":19,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5492","line":12,"column":10,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5493","line":12,"column":24,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":30,"column":16,"nodeType":"5052","messageId":"5053","endLine":30,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5282","line":11,"column":10,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5068","line":17,"column":9,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":10},{"ruleId":"5367","severity":1,"message":"5368","line":31,"column":1,"nodeType":"5369","endLine":33,"endColumn":5},{"ruleId":"5367","severity":1,"message":"5368","line":23,"column":1,"nodeType":"5369","endLine":29,"endColumn":3},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5205","line":8,"column":11,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5323","line":9,"column":35,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5492","line":23,"column":10,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5494","line":24,"column":10,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5495","line":24,"column":16,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5206","line":25,"column":10,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5496","line":26,"column":10,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5497","line":31,"column":10,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":14},{"ruleId":"5050","severity":1,"message":"5051","line":50,"column":16,"nodeType":"5052","messageId":"5053","endLine":50,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5105","line":24,"column":35,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5498","line":10,"column":39,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":53},{"ruleId":"5028","severity":1,"message":"5123","line":12,"column":9,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":16},{"ruleId":"5059","severity":1,"message":"5499","line":26,"column":17,"nodeType":"5061","endLine":29,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5051","line":57,"column":52,"nodeType":"5052","messageId":"5053","endLine":57,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":64,"column":21,"nodeType":"5052","messageId":"5053","endLine":64,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":68,"column":21,"nodeType":"5052","messageId":"5053","endLine":68,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":72,"column":21,"nodeType":"5052","messageId":"5053","endLine":72,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":75,"column":22,"nodeType":"5052","messageId":"5053","endLine":75,"endColumn":24},{"ruleId":"5059","severity":1,"message":"5499","line":81,"column":17,"nodeType":"5061","endLine":86,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5051","line":99,"column":27,"nodeType":"5052","messageId":"5053","endLine":99,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5500","line":20,"column":12,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5501","line":37,"column":11,"nodeType":"5030","messageId":"5031","endLine":37,"endColumn":19},{"ruleId":"5040","severity":1,"message":"5502","line":64,"column":6,"nodeType":"5042","endLine":64,"endColumn":8,"suggestions":"5503"},{"ruleId":"5050","severity":1,"message":"5051","line":66,"column":24,"nodeType":"5052","messageId":"5053","endLine":66,"endColumn":26},{"ruleId":"5040","severity":1,"message":"5504","line":87,"column":6,"nodeType":"5042","endLine":87,"endColumn":24,"suggestions":"5505"},{"ruleId":"5028","severity":1,"message":"5158","line":88,"column":45,"nodeType":"5030","messageId":"5031","endLine":88,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5105","line":88,"column":56,"nodeType":"5030","messageId":"5031","endLine":88,"endColumn":61},{"ruleId":"5046","severity":1,"message":"5047","line":96,"column":35,"nodeType":"5048","messageId":"5049","endLine":96,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":343,"column":27,"nodeType":"5052","messageId":"5053","endLine":343,"endColumn":29},{"ruleId":"5069","severity":1,"message":"5070","line":425,"column":9,"nodeType":"5071","messageId":"5072","endLine":426,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":425,"column":26,"nodeType":"5052","messageId":"5053","endLine":425,"endColumn":28},{"ruleId":"5046","severity":1,"message":"5047","line":459,"column":21,"nodeType":"5048","messageId":"5049","endLine":459,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":461,"column":14,"nodeType":"5052","messageId":"5053","endLine":461,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5149","line":4,"column":41,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":52},{"ruleId":"5040","severity":1,"message":"5506","line":12,"column":6,"nodeType":"5042","endLine":12,"endColumn":11,"suggestions":"5507"},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5323","line":7,"column":36,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":42},{"ruleId":"5028","severity":1,"message":"5497","line":10,"column":10,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":14},{"ruleId":"5050","severity":1,"message":"5051","line":20,"column":22,"nodeType":"5052","messageId":"5053","endLine":20,"endColumn":24},{"ruleId":"5050","severity":1,"message":"5051","line":37,"column":28,"nodeType":"5052","messageId":"5053","endLine":37,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":55,"column":28,"nodeType":"5052","messageId":"5053","endLine":55,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":72,"column":27,"nodeType":"5052","messageId":"5053","endLine":72,"endColumn":29},{"ruleId":"5050","severity":1,"message":"5051","line":90,"column":27,"nodeType":"5052","messageId":"5053","endLine":90,"endColumn":29},{"ruleId":"5050","severity":1,"message":"5051","line":107,"column":28,"nodeType":"5052","messageId":"5053","endLine":107,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":194,"column":27,"nodeType":"5052","messageId":"5053","endLine":194,"endColumn":29},{"ruleId":"5050","severity":1,"message":"5051","line":194,"column":57,"nodeType":"5052","messageId":"5053","endLine":194,"endColumn":59},{"ruleId":"5050","severity":1,"message":"5051","line":194,"column":91,"nodeType":"5052","messageId":"5053","endLine":194,"endColumn":93},{"ruleId":"5028","severity":1,"message":"5149","line":30,"column":41,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5118","line":30,"column":54,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":60},{"ruleId":"5040","severity":1,"message":"5508","line":110,"column":4,"nodeType":"5042","endLine":110,"endColumn":16,"suggestions":"5509"},{"ruleId":"5510","severity":1,"message":"5511","line":121,"column":11,"nodeType":"5061","endLine":122,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":57,"column":24,"nodeType":"5052","messageId":"5053","endLine":57,"endColumn":26},{"ruleId":"5040","severity":1,"message":"5512","line":76,"column":6,"nodeType":"5042","endLine":76,"endColumn":24,"suggestions":"5513"},{"ruleId":"5028","severity":1,"message":"5158","line":77,"column":45,"nodeType":"5030","messageId":"5031","endLine":77,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5105","line":77,"column":56,"nodeType":"5030","messageId":"5031","endLine":77,"endColumn":61},{"ruleId":"5046","severity":1,"message":"5047","line":85,"column":35,"nodeType":"5048","messageId":"5049","endLine":85,"endColumn":37},{"ruleId":"5046","severity":1,"message":"5047","line":238,"column":21,"nodeType":"5048","messageId":"5049","endLine":238,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":240,"column":9,"nodeType":"5052","messageId":"5053","endLine":240,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5040","severity":1,"message":"5417","line":19,"column":6,"nodeType":"5042","endLine":19,"endColumn":14,"suggestions":"5514"},{"ruleId":"5050","severity":1,"message":"5091","line":29,"column":17,"nodeType":"5052","messageId":"5053","endLine":29,"endColumn":19},{"ruleId":"5050","severity":1,"message":"5051","line":58,"column":41,"nodeType":"5052","messageId":"5053","endLine":58,"endColumn":43},{"ruleId":"5050","severity":1,"message":"5051","line":64,"column":32,"nodeType":"5052","messageId":"5053","endLine":64,"endColumn":34},{"ruleId":"5040","severity":1,"message":"5506","line":20,"column":8,"nodeType":"5042","endLine":20,"endColumn":18,"suggestions":"5515"},{"ruleId":"5050","severity":1,"message":"5051","line":71,"column":75,"nodeType":"5052","messageId":"5053","endLine":71,"endColumn":77},{"ruleId":"5050","severity":1,"message":"5091","line":79,"column":42,"nodeType":"5052","messageId":"5053","endLine":79,"endColumn":44},{"ruleId":"5028","severity":1,"message":"5199","line":3,"column":3,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5278","line":4,"column":3,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5189","line":5,"column":3,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5118","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5438","line":19,"column":12,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5199","line":3,"column":3,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5278","line":4,"column":3,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5189","line":5,"column":3,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5118","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5438","line":19,"column":12,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5085","line":4,"column":10,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5516","line":5,"column":8,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5517","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5518","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5122","line":28,"column":8,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5519","line":49,"column":9,"nodeType":"5030","messageId":"5031","endLine":49,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5520","line":52,"column":10,"nodeType":"5030","messageId":"5031","endLine":52,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5521","line":58,"column":20,"nodeType":"5030","messageId":"5031","endLine":58,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5522","line":59,"column":21,"nodeType":"5030","messageId":"5031","endLine":59,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5523","line":60,"column":24,"nodeType":"5030","messageId":"5031","endLine":60,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5524","line":61,"column":25,"nodeType":"5030","messageId":"5031","endLine":61,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5525","line":62,"column":24,"nodeType":"5030","messageId":"5031","endLine":62,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5526","line":77,"column":23,"nodeType":"5030","messageId":"5031","endLine":77,"endColumn":37},{"ruleId":"5040","severity":1,"message":"5527","line":83,"column":6,"nodeType":"5042","endLine":83,"endColumn":8,"suggestions":"5528"},{"ruleId":"5182","severity":1,"message":"5529","line":416,"column":17,"nodeType":"5030","messageId":"5184","endLine":416,"endColumn":20},{"ruleId":"5046","severity":1,"message":"5067","line":430,"column":26,"nodeType":"5048","messageId":"5049","endLine":430,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":431,"column":21,"nodeType":"5052","messageId":"5053","endLine":431,"endColumn":23},{"ruleId":"5182","severity":1,"message":"5530","line":439,"column":13,"nodeType":"5030","messageId":"5184","endLine":439,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":18,"column":8,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5531","line":19,"column":8,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5532","line":26,"column":42,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":49},{"ruleId":"5028","severity":1,"message":"5281","line":29,"column":9,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5323","line":32,"column":35,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5372","line":33,"column":19,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5533","line":34,"column":10,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5373","line":38,"column":10,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5374","line":49,"column":7,"nodeType":"5030","messageId":"5031","endLine":49,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5375","line":52,"column":7,"nodeType":"5030","messageId":"5031","endLine":52,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5534","line":123,"column":9,"nodeType":"5030","messageId":"5031","endLine":123,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":204,"column":30,"nodeType":"5052","messageId":"5053","endLine":204,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":266,"column":40,"nodeType":"5052","messageId":"5053","endLine":266,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":282,"column":31,"nodeType":"5052","messageId":"5053","endLine":282,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5091","line":349,"column":24,"nodeType":"5052","messageId":"5053","endLine":349,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":349,"column":45,"nodeType":"5052","messageId":"5053","endLine":349,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5091","line":353,"column":29,"nodeType":"5052","messageId":"5053","endLine":353,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5532","line":21,"column":42,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":49},{"ruleId":"5028","severity":1,"message":"5281","line":25,"column":9,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5323","line":28,"column":35,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5372","line":29,"column":19,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5533","line":30,"column":10,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5373","line":34,"column":10,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5374","line":50,"column":7,"nodeType":"5030","messageId":"5031","endLine":50,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5375","line":53,"column":7,"nodeType":"5030","messageId":"5031","endLine":53,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5534","line":118,"column":9,"nodeType":"5030","messageId":"5031","endLine":118,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":197,"column":30,"nodeType":"5052","messageId":"5053","endLine":197,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":259,"column":40,"nodeType":"5052","messageId":"5053","endLine":259,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":275,"column":31,"nodeType":"5052","messageId":"5053","endLine":275,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5091","line":343,"column":24,"nodeType":"5052","messageId":"5053","endLine":343,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":343,"column":45,"nodeType":"5052","messageId":"5053","endLine":343,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5091","line":347,"column":29,"nodeType":"5052","messageId":"5053","endLine":347,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5532","line":21,"column":42,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":49},{"ruleId":"5028","severity":1,"message":"5281","line":25,"column":9,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5323","line":28,"column":35,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5372","line":29,"column":19,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5533","line":30,"column":10,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5374","line":44,"column":8,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5375","line":47,"column":7,"nodeType":"5030","messageId":"5031","endLine":47,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5535","line":64,"column":10,"nodeType":"5030","messageId":"5031","endLine":64,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5536","line":66,"column":9,"nodeType":"5030","messageId":"5031","endLine":66,"endColumn":20},{"ruleId":"5040","severity":1,"message":"5537","line":74,"column":6,"nodeType":"5042","endLine":74,"endColumn":8,"suggestions":"5538"},{"ruleId":"5040","severity":1,"message":"5160","line":107,"column":6,"nodeType":"5042","endLine":107,"endColumn":20,"suggestions":"5539"},{"ruleId":"5050","severity":1,"message":"5051","line":224,"column":30,"nodeType":"5052","messageId":"5053","endLine":224,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":287,"column":40,"nodeType":"5052","messageId":"5053","endLine":287,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":302,"column":31,"nodeType":"5052","messageId":"5053","endLine":302,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5091","line":369,"column":24,"nodeType":"5052","messageId":"5053","endLine":369,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":369,"column":45,"nodeType":"5052","messageId":"5053","endLine":369,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":378,"column":12,"nodeType":"5052","messageId":"5053","endLine":378,"endColumn":14},{"ruleId":"5050","severity":1,"message":"5051","line":378,"column":25,"nodeType":"5052","messageId":"5053","endLine":378,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":535,"column":22,"nodeType":"5052","messageId":"5053","endLine":535,"endColumn":24},{"ruleId":"5050","severity":1,"message":"5051","line":535,"column":37,"nodeType":"5052","messageId":"5053","endLine":535,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5540","line":29,"column":12,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":24},{"ruleId":"5040","severity":1,"message":"5360","line":42,"column":8,"nodeType":"5042","endLine":42,"endColumn":10,"suggestions":"5541"},{"ruleId":"5050","severity":1,"message":"5051","line":159,"column":38,"nodeType":"5052","messageId":"5053","endLine":159,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5091","line":311,"column":28,"nodeType":"5052","messageId":"5053","endLine":311,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5091","line":311,"column":49,"nodeType":"5052","messageId":"5053","endLine":311,"endColumn":51},{"ruleId":"5028","severity":1,"message":"5077","line":8,"column":5,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5237","line":9,"column":5,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5238","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5540","line":31,"column":12,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":24},{"ruleId":"5040","severity":1,"message":"5360","line":45,"column":8,"nodeType":"5042","endLine":45,"endColumn":10,"suggestions":"5542"},{"ruleId":"5050","severity":1,"message":"5051","line":165,"column":38,"nodeType":"5052","messageId":"5053","endLine":165,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5091","line":314,"column":28,"nodeType":"5052","messageId":"5053","endLine":314,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5091","line":314,"column":49,"nodeType":"5052","messageId":"5053","endLine":314,"endColumn":51},{"ruleId":"5073","severity":1,"message":"5074","line":362,"column":53,"nodeType":"5061","messageId":"5075","endLine":362,"endColumn":93,"fix":"5543"},{"ruleId":"5028","severity":1,"message":"5540","line":27,"column":12,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":24},{"ruleId":"5040","severity":1,"message":"5360","line":47,"column":8,"nodeType":"5042","endLine":47,"endColumn":10,"suggestions":"5544"},{"ruleId":"5050","severity":1,"message":"5051","line":163,"column":38,"nodeType":"5052","messageId":"5053","endLine":163,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5091","line":316,"column":24,"nodeType":"5052","messageId":"5053","endLine":316,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":316,"column":45,"nodeType":"5052","messageId":"5053","endLine":316,"endColumn":47},{"ruleId":"5073","severity":1,"message":"5074","line":367,"column":53,"nodeType":"5061","messageId":"5075","endLine":367,"endColumn":93,"fix":"5545"},{"ruleId":"5028","severity":1,"message":"5402","line":5,"column":10,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5413","line":5,"column":21,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":31},{"ruleId":"5040","severity":1,"message":"5546","line":56,"column":6,"nodeType":"5042","endLine":56,"endColumn":8,"suggestions":"5547"},{"ruleId":"5050","severity":1,"message":"5051","line":146,"column":28,"nodeType":"5052","messageId":"5053","endLine":146,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":65,"column":32,"nodeType":"5052","messageId":"5053","endLine":65,"endColumn":34},{"ruleId":"5028","severity":1,"message":"5548","line":1,"column":38,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":48},{"ruleId":"5040","severity":1,"message":"5549","line":37,"column":6,"nodeType":"5042","endLine":37,"endColumn":15,"suggestions":"5550"},{"ruleId":"5050","severity":1,"message":"5051","line":126,"column":23,"nodeType":"5052","messageId":"5053","endLine":126,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":143,"column":28,"nodeType":"5052","messageId":"5053","endLine":143,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":149,"column":30,"nodeType":"5052","messageId":"5053","endLine":149,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":154,"column":32,"nodeType":"5052","messageId":"5053","endLine":154,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":172,"column":24,"nodeType":"5052","messageId":"5053","endLine":172,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":223,"column":26,"nodeType":"5052","messageId":"5053","endLine":223,"endColumn":28},{"ruleId":"5040","severity":1,"message":"5551","line":32,"column":6,"nodeType":"5042","endLine":32,"endColumn":8,"suggestions":"5552"},{"ruleId":"5050","severity":1,"message":"5051","line":126,"column":28,"nodeType":"5052","messageId":"5053","endLine":126,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":131,"column":30,"nodeType":"5052","messageId":"5053","endLine":131,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":135,"column":32,"nodeType":"5052","messageId":"5053","endLine":135,"endColumn":34},{"ruleId":"5028","severity":1,"message":"5077","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5118","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5214","line":28,"column":11,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5215","line":28,"column":25,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5323","line":28,"column":35,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5105","line":28,"column":43,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5205","line":29,"column":11,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5372","line":29,"column":19,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5492","line":32,"column":10,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5493","line":32,"column":24,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":39},{"ruleId":"5040","severity":1,"message":"5553","line":64,"column":6,"nodeType":"5042","endLine":64,"endColumn":8,"suggestions":"5554"},{"ruleId":"5050","severity":1,"message":"5051","line":154,"column":28,"nodeType":"5052","messageId":"5053","endLine":154,"endColumn":30},{"ruleId":"5028","severity":1,"message":"5394","line":17,"column":68,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":76},{"ruleId":"5040","severity":1,"message":"5555","line":45,"column":6,"nodeType":"5042","endLine":45,"endColumn":8,"suggestions":"5556"},{"ruleId":"5050","severity":1,"message":"5051","line":158,"column":28,"nodeType":"5052","messageId":"5053","endLine":158,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":260,"column":18,"nodeType":"5052","messageId":"5053","endLine":260,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5357","line":13,"column":10,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5516","line":15,"column":10,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5150","line":17,"column":8,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5393","line":23,"column":51,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":66},{"ruleId":"5028","severity":1,"message":"5394","line":23,"column":68,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":76},{"ruleId":"5040","severity":1,"message":"5557","line":50,"column":6,"nodeType":"5042","endLine":50,"endColumn":8,"suggestions":"5558"},{"ruleId":"5050","severity":1,"message":"5051","line":157,"column":28,"nodeType":"5052","messageId":"5053","endLine":157,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":241,"column":55,"nodeType":"5052","messageId":"5053","endLine":241,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5357","line":13,"column":10,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5516","line":15,"column":10,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5150","line":17,"column":8,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5394","line":24,"column":68,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":76},{"ruleId":"5040","severity":1,"message":"5559","line":51,"column":6,"nodeType":"5042","endLine":51,"endColumn":8,"suggestions":"5560"},{"ruleId":"5050","severity":1,"message":"5051","line":164,"column":28,"nodeType":"5052","messageId":"5053","endLine":164,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":266,"column":18,"nodeType":"5052","messageId":"5053","endLine":266,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5484","line":10,"column":16,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5561","line":15,"column":8,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5394","line":18,"column":68,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":76},{"ruleId":"5040","severity":1,"message":"5562","line":55,"column":6,"nodeType":"5042","endLine":55,"endColumn":8,"suggestions":"5563"},{"ruleId":"5050","severity":1,"message":"5051","line":165,"column":28,"nodeType":"5052","messageId":"5053","endLine":165,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":173,"column":30,"nodeType":"5052","messageId":"5053","endLine":173,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":177,"column":32,"nodeType":"5052","messageId":"5053","endLine":177,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":268,"column":55,"nodeType":"5052","messageId":"5053","endLine":268,"endColumn":57},{"ruleId":"5050","severity":1,"message":"5051","line":276,"column":18,"nodeType":"5052","messageId":"5053","endLine":276,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5069","severity":1,"message":"5463","line":70,"column":1,"nodeType":"5071","messageId":"5464","endLine":79,"endColumn":2},{"ruleId":"5028","severity":1,"message":"5564","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5085","line":25,"column":10,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5520","line":33,"column":10,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5565","line":34,"column":10,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5521","line":37,"column":20,"nodeType":"5030","messageId":"5031","endLine":37,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5522","line":38,"column":21,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5523","line":39,"column":24,"nodeType":"5030","messageId":"5031","endLine":39,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5525","line":40,"column":24,"nodeType":"5030","messageId":"5031","endLine":40,"endColumn":39},{"ruleId":"5040","severity":1,"message":"5527","line":62,"column":6,"nodeType":"5042","endLine":62,"endColumn":8,"suggestions":"5566"},{"ruleId":"5028","severity":1,"message":"5567","line":265,"column":9,"nodeType":"5030","messageId":"5031","endLine":265,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5323","line":12,"column":27,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5105","line":12,"column":35,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5323","line":11,"column":27,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5105","line":11,"column":35,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5568","line":2,"column":13,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":20},{"ruleId":"5059","severity":1,"message":"5060","line":33,"column":15,"nodeType":"5061","endLine":36,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5094","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5419","line":10,"column":8,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5117","line":26,"column":9,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5105","line":27,"column":35,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5428","line":4,"column":19,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5429","line":11,"column":7,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5569","line":36,"column":7,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":16},{"ruleId":"5040","severity":1,"message":"5299","line":43,"column":6,"nodeType":"5042","endLine":43,"endColumn":14,"suggestions":"5570"},{"ruleId":"5028","severity":1,"message":"5117","line":47,"column":5,"nodeType":"5030","messageId":"5031","endLine":47,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5117","line":75,"column":5,"nodeType":"5030","messageId":"5031","endLine":75,"endColumn":11},{"ruleId":"5050","severity":1,"message":"5051","line":187,"column":41,"nodeType":"5052","messageId":"5053","endLine":187,"endColumn":43},{"ruleId":"5056","severity":1,"message":"5431","line":187,"column":46,"nodeType":"5432","messageId":"5058","endLine":187,"endColumn":48},{"ruleId":"5056","severity":1,"message":"5431","line":187,"column":64,"nodeType":"5432","messageId":"5058","endLine":187,"endColumn":66},{"ruleId":"5056","severity":1,"message":"5433","line":187,"column":64,"nodeType":"5432","messageId":"5058","endLine":187,"endColumn":66},{"ruleId":"5050","severity":1,"message":"5051","line":187,"column":81,"nodeType":"5052","messageId":"5053","endLine":187,"endColumn":83},{"ruleId":"5056","severity":1,"message":"5433","line":187,"column":86,"nodeType":"5432","messageId":"5058","endLine":187,"endColumn":88},{"ruleId":"5028","severity":1,"message":"5323","line":9,"column":35,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5436","line":12,"column":5,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5434","line":23,"column":5,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":15},{"ruleId":"5050","severity":1,"message":"5091","line":42,"column":23,"nodeType":"5052","messageId":"5053","endLine":42,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":95,"column":26,"nodeType":"5052","messageId":"5053","endLine":95,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":111,"column":33,"nodeType":"5052","messageId":"5053","endLine":111,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":127,"column":26,"nodeType":"5052","messageId":"5053","endLine":127,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":143,"column":25,"nodeType":"5052","messageId":"5053","endLine":143,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":159,"column":28,"nodeType":"5052","messageId":"5053","endLine":159,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":175,"column":20,"nodeType":"5052","messageId":"5053","endLine":175,"endColumn":22},{"ruleId":"5050","severity":1,"message":"5051","line":191,"column":26,"nodeType":"5052","messageId":"5053","endLine":191,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":207,"column":20,"nodeType":"5052","messageId":"5053","endLine":207,"endColumn":22},{"ruleId":"5050","severity":1,"message":"5051","line":223,"column":16,"nodeType":"5052","messageId":"5053","endLine":223,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5051","line":239,"column":14,"nodeType":"5052","messageId":"5053","endLine":239,"endColumn":16},{"ruleId":"5050","severity":1,"message":"5051","line":255,"column":21,"nodeType":"5052","messageId":"5053","endLine":255,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":368,"column":31,"nodeType":"5052","messageId":"5053","endLine":368,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":383,"column":44,"nodeType":"5052","messageId":"5053","endLine":383,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":396,"column":39,"nodeType":"5052","messageId":"5053","endLine":396,"endColumn":41},{"ruleId":"5050","severity":1,"message":"5051","line":409,"column":32,"nodeType":"5052","messageId":"5053","endLine":409,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":423,"column":36,"nodeType":"5052","messageId":"5053","endLine":423,"endColumn":38},{"ruleId":"5050","severity":1,"message":"5051","line":438,"column":31,"nodeType":"5052","messageId":"5053","endLine":438,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":40,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":51},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":53,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":59},{"ruleId":"5510","severity":1,"message":"5511","line":18,"column":11,"nodeType":"5061","endLine":19,"endColumn":42},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5282","line":25,"column":13,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5105","line":30,"column":37,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":42},{"ruleId":"5028","severity":1,"message":"5571","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5086","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5572","line":12,"column":5,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5573","line":13,"column":5,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":20},{"ruleId":"5574","severity":1,"message":"5575","line":133,"column":151,"nodeType":"5052","messageId":"5576","endLine":133,"endColumn":152},{"ruleId":"5574","severity":1,"message":"5575","line":133,"column":154,"nodeType":"5052","messageId":"5576","endLine":133,"endColumn":155},{"ruleId":"5293","severity":1,"message":"5294","line":134,"column":31,"nodeType":"5295","messageId":"5296","endLine":134,"endColumn":32,"fix":"5577"},{"ruleId":"5046","severity":1,"message":"5047","line":216,"column":47,"nodeType":"5048","messageId":"5049","endLine":216,"endColumn":49},{"ruleId":"5046","severity":1,"message":"5047","line":258,"column":33,"nodeType":"5048","messageId":"5049","endLine":258,"endColumn":35},{"ruleId":"5046","severity":1,"message":"5047","line":275,"column":33,"nodeType":"5048","messageId":"5049","endLine":275,"endColumn":35},{"ruleId":"5046","severity":1,"message":"5047","line":295,"column":47,"nodeType":"5048","messageId":"5049","endLine":295,"endColumn":49},{"ruleId":"5046","severity":1,"message":"5047","line":322,"column":29,"nodeType":"5048","messageId":"5049","endLine":322,"endColumn":31},{"ruleId":"5046","severity":1,"message":"5047","line":335,"column":29,"nodeType":"5048","messageId":"5049","endLine":335,"endColumn":31},{"ruleId":"5578","severity":1,"message":"5579","line":447,"column":7,"nodeType":"5580","messageId":"5053","endLine":447,"endColumn":11,"fix":"5581"},{"ruleId":"5046","severity":1,"message":"5047","line":457,"column":45,"nodeType":"5048","messageId":"5049","endLine":457,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":473,"column":32,"nodeType":"5052","messageId":"5053","endLine":473,"endColumn":34},{"ruleId":"5182","severity":1,"message":"5582","line":520,"column":14,"nodeType":"5030","messageId":"5184","endLine":520,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":525,"column":31,"nodeType":"5052","messageId":"5053","endLine":525,"endColumn":33},{"ruleId":"5182","severity":1,"message":"5582","line":527,"column":13,"nodeType":"5030","messageId":"5184","endLine":527,"endColumn":27},{"ruleId":"5046","severity":1,"message":"5047","line":580,"column":21,"nodeType":"5048","messageId":"5049","endLine":580,"endColumn":23},{"ruleId":"5583","severity":1,"message":"5584","line":641,"column":11,"nodeType":"5295","messageId":"5585","endLine":641,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":36,"column":37,"nodeType":"5052","messageId":"5053","endLine":36,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":44,"column":39,"nodeType":"5052","messageId":"5053","endLine":44,"endColumn":41},{"ruleId":"5050","severity":1,"message":"5051","line":51,"column":41,"nodeType":"5052","messageId":"5053","endLine":51,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5586","line":11,"column":17,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5086","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":22},{"ruleId":"5574","severity":1,"message":"5575","line":160,"column":151,"nodeType":"5052","messageId":"5576","endLine":160,"endColumn":152},{"ruleId":"5574","severity":1,"message":"5575","line":160,"column":154,"nodeType":"5052","messageId":"5576","endLine":160,"endColumn":155},{"ruleId":"5293","severity":1,"message":"5294","line":161,"column":31,"nodeType":"5295","messageId":"5296","endLine":161,"endColumn":32,"fix":"5587"},{"ruleId":"5046","severity":1,"message":"5047","line":264,"column":47,"nodeType":"5048","messageId":"5049","endLine":264,"endColumn":49},{"ruleId":"5046","severity":1,"message":"5047","line":315,"column":33,"nodeType":"5048","messageId":"5049","endLine":315,"endColumn":35},{"ruleId":"5046","severity":1,"message":"5047","line":332,"column":33,"nodeType":"5048","messageId":"5049","endLine":332,"endColumn":35},{"ruleId":"5046","severity":1,"message":"5047","line":352,"column":47,"nodeType":"5048","messageId":"5049","endLine":352,"endColumn":49},{"ruleId":"5046","severity":1,"message":"5047","line":385,"column":29,"nodeType":"5048","messageId":"5049","endLine":385,"endColumn":31},{"ruleId":"5046","severity":1,"message":"5047","line":398,"column":29,"nodeType":"5048","messageId":"5049","endLine":398,"endColumn":31},{"ruleId":"5578","severity":1,"message":"5579","line":512,"column":10,"nodeType":"5580","messageId":"5053","endLine":512,"endColumn":14,"fix":"5588"},{"ruleId":"5046","severity":1,"message":"5047","line":523,"column":45,"nodeType":"5048","messageId":"5049","endLine":523,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":542,"column":35,"nodeType":"5052","messageId":"5053","endLine":542,"endColumn":37},{"ruleId":"5182","severity":1,"message":"5582","line":596,"column":14,"nodeType":"5030","messageId":"5184","endLine":596,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":601,"column":31,"nodeType":"5052","messageId":"5053","endLine":601,"endColumn":33},{"ruleId":"5182","severity":1,"message":"5582","line":603,"column":13,"nodeType":"5030","messageId":"5184","endLine":603,"endColumn":27},{"ruleId":"5046","severity":1,"message":"5047","line":669,"column":20,"nodeType":"5048","messageId":"5049","endLine":669,"endColumn":22},{"ruleId":"5050","severity":1,"message":"5051","line":901,"column":33,"nodeType":"5052","messageId":"5053","endLine":901,"endColumn":35},{"ruleId":"5589","severity":1,"message":"5590","line":903,"column":8,"nodeType":"5030","messageId":"5591","endLine":903,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5091","line":944,"column":26,"nodeType":"5052","messageId":"5053","endLine":944,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":1121,"column":29,"nodeType":"5052","messageId":"5053","endLine":1121,"endColumn":31},{"ruleId":"5062","severity":1,"message":"5063","line":1123,"column":6,"nodeType":"5061","endLine":1123,"endColumn":55},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5114","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5323","line":19,"column":37,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5592","line":29,"column":38,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":43},{"ruleId":"5050","severity":1,"message":"5091","line":39,"column":30,"nodeType":"5052","messageId":"5053","endLine":39,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5593","line":45,"column":25,"nodeType":"5030","messageId":"5031","endLine":45,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5594","line":47,"column":13,"nodeType":"5030","messageId":"5031","endLine":47,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5040","severity":1,"message":"5083","line":28,"column":4,"nodeType":"5042","endLine":28,"endColumn":6,"suggestions":"5595"},{"ruleId":"5510","severity":1,"message":"5511","line":35,"column":11,"nodeType":"5061","endLine":36,"endColumn":42},{"ruleId":"5028","severity":1,"message":"5150","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5537","line":57,"column":8,"nodeType":"5042","endLine":57,"endColumn":10,"suggestions":"5596"},{"ruleId":"5050","severity":1,"message":"5051","line":143,"column":36,"nodeType":"5052","messageId":"5053","endLine":143,"endColumn":38},{"ruleId":"5028","severity":1,"message":"5150","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5374","line":48,"column":7,"nodeType":"5030","messageId":"5031","endLine":48,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5375","line":51,"column":7,"nodeType":"5030","messageId":"5031","endLine":51,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5537","line":62,"column":6,"nodeType":"5042","endLine":62,"endColumn":8,"suggestions":"5597"},{"ruleId":"5050","severity":1,"message":"5051","line":149,"column":30,"nodeType":"5052","messageId":"5053","endLine":149,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5598","line":297,"column":9,"nodeType":"5030","messageId":"5031","endLine":297,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5150","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5374","line":49,"column":7,"nodeType":"5030","messageId":"5031","endLine":49,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5375","line":52,"column":7,"nodeType":"5030","messageId":"5031","endLine":52,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5537","line":72,"column":6,"nodeType":"5042","endLine":72,"endColumn":8,"suggestions":"5599"},{"ruleId":"5050","severity":1,"message":"5051","line":158,"column":30,"nodeType":"5052","messageId":"5053","endLine":158,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5150","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5537","line":56,"column":6,"nodeType":"5042","endLine":56,"endColumn":8,"suggestions":"5600"},{"ruleId":"5050","severity":1,"message":"5051","line":148,"column":30,"nodeType":"5052","messageId":"5053","endLine":148,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5035","line":24,"column":11,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5601","line":28,"column":12,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5358","line":31,"column":12,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5379","line":31,"column":16,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5602","line":32,"column":12,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5603","line":32,"column":20,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":31},{"ruleId":"5040","severity":1,"message":"5562","line":56,"column":8,"nodeType":"5042","endLine":56,"endColumn":10,"suggestions":"5604"},{"ruleId":"5028","severity":1,"message":"5116","line":1,"column":59,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":65},{"ruleId":"5028","severity":1,"message":"5605","line":18,"column":22,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5393","line":18,"column":51,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":66},{"ruleId":"5028","severity":1,"message":"5035","line":22,"column":11,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5601","line":26,"column":12,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5358","line":30,"column":12,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5379","line":30,"column":16,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5602","line":31,"column":12,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5603","line":31,"column":20,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":31},{"ruleId":"5040","severity":1,"message":"5562","line":47,"column":8,"nodeType":"5042","endLine":47,"endColumn":10,"suggestions":"5606"},{"ruleId":"5028","severity":1,"message":"5035","line":23,"column":11,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5601","line":27,"column":12,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5358","line":30,"column":12,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5379","line":30,"column":16,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5602","line":31,"column":12,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5603","line":31,"column":20,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":31},{"ruleId":"5040","severity":1,"message":"5562","line":59,"column":8,"nodeType":"5042","endLine":59,"endColumn":10,"suggestions":"5607"},{"ruleId":"5050","severity":1,"message":"5051","line":171,"column":44,"nodeType":"5052","messageId":"5053","endLine":171,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":179,"column":48,"nodeType":"5052","messageId":"5053","endLine":179,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":186,"column":52,"nodeType":"5052","messageId":"5053","endLine":186,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":310,"column":56,"nodeType":"5052","messageId":"5053","endLine":310,"endColumn":58},{"ruleId":"5028","severity":1,"message":"5150","line":13,"column":8,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5114","line":15,"column":8,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5035","line":24,"column":11,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5601","line":28,"column":12,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":25},{"ruleId":"5040","severity":1,"message":"5562","line":64,"column":8,"nodeType":"5042","endLine":64,"endColumn":10,"suggestions":"5608"},{"ruleId":"5028","severity":1,"message":"5609","line":83,"column":7,"nodeType":"5030","messageId":"5031","endLine":83,"endColumn":15},{"ruleId":"5050","severity":1,"message":"5051","line":185,"column":44,"nodeType":"5052","messageId":"5053","endLine":185,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":193,"column":48,"nodeType":"5052","messageId":"5053","endLine":193,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":199,"column":52,"nodeType":"5052","messageId":"5053","endLine":199,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":326,"column":56,"nodeType":"5052","messageId":"5053","endLine":326,"endColumn":58},{"ruleId":"5028","severity":1,"message":"5610","line":1,"column":38,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":45},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5150","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5035","line":29,"column":9,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5611","line":32,"column":10,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5612","line":56,"column":6,"nodeType":"5042","endLine":56,"endColumn":8,"suggestions":"5613"},{"ruleId":"5050","severity":1,"message":"5051","line":146,"column":28,"nodeType":"5052","messageId":"5053","endLine":146,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":151,"column":30,"nodeType":"5052","messageId":"5053","endLine":151,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":156,"column":32,"nodeType":"5052","messageId":"5053","endLine":156,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":179,"column":26,"nodeType":"5052","messageId":"5053","endLine":179,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":207,"column":34,"nodeType":"5052","messageId":"5053","endLine":207,"endColumn":36},{"ruleId":"5056","severity":1,"message":"5614","line":210,"column":35,"nodeType":"5052","messageId":"5058","endLine":210,"endColumn":36},{"ruleId":"5056","severity":1,"message":"5614","line":210,"column":45,"nodeType":"5052","messageId":"5058","endLine":210,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":234,"column":35,"nodeType":"5052","messageId":"5053","endLine":234,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":234,"column":61,"nodeType":"5052","messageId":"5053","endLine":234,"endColumn":63},{"ruleId":"5050","severity":1,"message":"5051","line":234,"column":87,"nodeType":"5052","messageId":"5053","endLine":234,"endColumn":89},{"ruleId":"5050","severity":1,"message":"5051","line":263,"column":35,"nodeType":"5052","messageId":"5053","endLine":263,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":263,"column":94,"nodeType":"5052","messageId":"5053","endLine":263,"endColumn":96},{"ruleId":"5056","severity":1,"message":"5614","line":267,"column":40,"nodeType":"5052","messageId":"5058","endLine":267,"endColumn":41},{"ruleId":"5056","severity":1,"message":"5614","line":267,"column":50,"nodeType":"5052","messageId":"5058","endLine":267,"endColumn":53},{"ruleId":"5050","severity":1,"message":"5051","line":280,"column":44,"nodeType":"5052","messageId":"5053","endLine":280,"endColumn":46},{"ruleId":"5028","severity":1,"message":"5610","line":1,"column":38,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":45},{"ruleId":"5028","severity":1,"message":"5150","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5035","line":27,"column":9,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5611","line":30,"column":10,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5612","line":42,"column":6,"nodeType":"5042","endLine":42,"endColumn":8,"suggestions":"5615"},{"ruleId":"5050","severity":1,"message":"5051","line":158,"column":26,"nodeType":"5052","messageId":"5053","endLine":158,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":186,"column":34,"nodeType":"5052","messageId":"5053","endLine":186,"endColumn":36},{"ruleId":"5056","severity":1,"message":"5614","line":189,"column":35,"nodeType":"5052","messageId":"5058","endLine":189,"endColumn":36},{"ruleId":"5056","severity":1,"message":"5614","line":189,"column":45,"nodeType":"5052","messageId":"5058","endLine":189,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":213,"column":35,"nodeType":"5052","messageId":"5053","endLine":213,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":213,"column":61,"nodeType":"5052","messageId":"5053","endLine":213,"endColumn":63},{"ruleId":"5050","severity":1,"message":"5051","line":213,"column":87,"nodeType":"5052","messageId":"5053","endLine":213,"endColumn":89},{"ruleId":"5050","severity":1,"message":"5051","line":242,"column":35,"nodeType":"5052","messageId":"5053","endLine":242,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":242,"column":94,"nodeType":"5052","messageId":"5053","endLine":242,"endColumn":96},{"ruleId":"5056","severity":1,"message":"5614","line":246,"column":40,"nodeType":"5052","messageId":"5058","endLine":246,"endColumn":41},{"ruleId":"5056","severity":1,"message":"5614","line":246,"column":50,"nodeType":"5052","messageId":"5058","endLine":246,"endColumn":53},{"ruleId":"5050","severity":1,"message":"5051","line":259,"column":44,"nodeType":"5052","messageId":"5053","endLine":259,"endColumn":46},{"ruleId":"5028","severity":1,"message":"5610","line":1,"column":38,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":45},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5616","line":15,"column":8,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5617","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5035","line":31,"column":9,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5611","line":34,"column":10,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5612","line":60,"column":6,"nodeType":"5042","endLine":60,"endColumn":8,"suggestions":"5618"},{"ruleId":"5050","severity":1,"message":"5051","line":157,"column":40,"nodeType":"5052","messageId":"5053","endLine":157,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":162,"column":44,"nodeType":"5052","messageId":"5053","endLine":162,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":167,"column":48,"nodeType":"5052","messageId":"5053","endLine":167,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":191,"column":36,"nodeType":"5052","messageId":"5053","endLine":191,"endColumn":38},{"ruleId":"5050","severity":1,"message":"5091","line":194,"column":45,"nodeType":"5052","messageId":"5053","endLine":194,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":219,"column":30,"nodeType":"5052","messageId":"5053","endLine":219,"endColumn":32},{"ruleId":"5056","severity":1,"message":"5614","line":222,"column":31,"nodeType":"5052","messageId":"5058","endLine":222,"endColumn":32},{"ruleId":"5056","severity":1,"message":"5614","line":222,"column":41,"nodeType":"5052","messageId":"5058","endLine":222,"endColumn":44},{"ruleId":"5050","severity":1,"message":"5051","line":246,"column":31,"nodeType":"5052","messageId":"5053","endLine":246,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":246,"column":57,"nodeType":"5052","messageId":"5053","endLine":246,"endColumn":59},{"ruleId":"5050","severity":1,"message":"5051","line":246,"column":83,"nodeType":"5052","messageId":"5053","endLine":246,"endColumn":85},{"ruleId":"5050","severity":1,"message":"5051","line":283,"column":31,"nodeType":"5052","messageId":"5053","endLine":283,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":283,"column":90,"nodeType":"5052","messageId":"5053","endLine":283,"endColumn":92},{"ruleId":"5056","severity":1,"message":"5614","line":287,"column":36,"nodeType":"5052","messageId":"5058","endLine":287,"endColumn":37},{"ruleId":"5056","severity":1,"message":"5614","line":287,"column":46,"nodeType":"5052","messageId":"5058","endLine":287,"endColumn":49},{"ruleId":"5050","severity":1,"message":"5051","line":300,"column":47,"nodeType":"5052","messageId":"5053","endLine":300,"endColumn":49},{"ruleId":"5050","severity":1,"message":"5051","line":306,"column":40,"nodeType":"5052","messageId":"5053","endLine":306,"endColumn":42},{"ruleId":"5028","severity":1,"message":"5619","line":443,"column":7,"nodeType":"5030","messageId":"5031","endLine":443,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5610","line":1,"column":38,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":45},{"ruleId":"5028","severity":1,"message":"5078","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5150","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5611","line":34,"column":12,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":24},{"ruleId":"5040","severity":1,"message":"5612","line":75,"column":8,"nodeType":"5042","endLine":75,"endColumn":10,"suggestions":"5620"},{"ruleId":"5050","severity":1,"message":"5051","line":172,"column":44,"nodeType":"5052","messageId":"5053","endLine":172,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":177,"column":48,"nodeType":"5052","messageId":"5053","endLine":177,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":182,"column":52,"nodeType":"5052","messageId":"5053","endLine":182,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":206,"column":40,"nodeType":"5052","messageId":"5053","endLine":206,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5091","line":209,"column":49,"nodeType":"5052","messageId":"5053","endLine":209,"endColumn":51},{"ruleId":"5050","severity":1,"message":"5051","line":238,"column":40,"nodeType":"5052","messageId":"5053","endLine":238,"endColumn":42},{"ruleId":"5056","severity":1,"message":"5614","line":241,"column":41,"nodeType":"5052","messageId":"5058","endLine":241,"endColumn":42},{"ruleId":"5056","severity":1,"message":"5614","line":241,"column":51,"nodeType":"5052","messageId":"5058","endLine":241,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":265,"column":41,"nodeType":"5052","messageId":"5053","endLine":265,"endColumn":43},{"ruleId":"5050","severity":1,"message":"5051","line":265,"column":67,"nodeType":"5052","messageId":"5053","endLine":265,"endColumn":69},{"ruleId":"5050","severity":1,"message":"5051","line":265,"column":93,"nodeType":"5052","messageId":"5053","endLine":265,"endColumn":95},{"ruleId":"5050","severity":1,"message":"5051","line":302,"column":41,"nodeType":"5052","messageId":"5053","endLine":302,"endColumn":43},{"ruleId":"5050","severity":1,"message":"5051","line":302,"column":100,"nodeType":"5052","messageId":"5053","endLine":302,"endColumn":102},{"ruleId":"5056","severity":1,"message":"5614","line":306,"column":46,"nodeType":"5052","messageId":"5058","endLine":306,"endColumn":47},{"ruleId":"5056","severity":1,"message":"5614","line":306,"column":56,"nodeType":"5052","messageId":"5058","endLine":306,"endColumn":59},{"ruleId":"5050","severity":1,"message":"5051","line":319,"column":57,"nodeType":"5052","messageId":"5053","endLine":319,"endColumn":59},{"ruleId":"5050","severity":1,"message":"5051","line":325,"column":50,"nodeType":"5052","messageId":"5053","endLine":325,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5621","line":390,"column":7,"nodeType":"5030","messageId":"5031","endLine":390,"endColumn":17},{"ruleId":"5050","severity":1,"message":"5091","line":75,"column":22,"nodeType":"5052","messageId":"5053","endLine":75,"endColumn":24},{"ruleId":"5134","severity":1,"message":"5135","line":104,"column":17,"nodeType":"5136","messageId":"5137","endLine":106,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5079","line":7,"column":10,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5323","line":13,"column":27,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5105","line":13,"column":35,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":50,"column":40,"nodeType":"5052","messageId":"5053","endLine":50,"endColumn":42},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5302","line":1,"column":38,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":53},{"ruleId":"5028","severity":1,"message":"5095","line":9,"column":12,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":19},{"ruleId":"5050","severity":1,"message":"5051","line":45,"column":46,"nodeType":"5052","messageId":"5053","endLine":45,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":48,"column":46,"nodeType":"5052","messageId":"5053","endLine":48,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5105","line":22,"column":37,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":42},{"ruleId":"5028","severity":1,"message":"5622","line":11,"column":13,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5623","line":12,"column":13,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5622","line":11,"column":13,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5623","line":12,"column":13,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5145","line":6,"column":8,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5077","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5146","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5147","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5148","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5149","line":18,"column":3,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5118","line":19,"column":3,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5150","line":21,"column":8,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5151","line":22,"column":10,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5152","line":22,"column":20,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5123","line":28,"column":9,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5229","line":33,"column":12,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5230","line":34,"column":12,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5231","line":35,"column":12,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5232","line":35,"column":28,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":45},{"ruleId":"5040","severity":1,"message":"5153","line":61,"column":8,"nodeType":"5042","endLine":61,"endColumn":10,"suggestions":"5624"},{"ruleId":"5028","severity":1,"message":"5234","line":62,"column":8,"nodeType":"5030","messageId":"5031","endLine":62,"endColumn":17},{"ruleId":"5050","severity":1,"message":"5051","line":144,"column":44,"nodeType":"5052","messageId":"5053","endLine":144,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":195,"column":34,"nodeType":"5052","messageId":"5053","endLine":195,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":213,"column":34,"nodeType":"5052","messageId":"5053","endLine":213,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":233,"column":43,"nodeType":"5052","messageId":"5053","endLine":233,"endColumn":45},{"ruleId":"5050","severity":1,"message":"5051","line":259,"column":40,"nodeType":"5052","messageId":"5053","endLine":259,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":261,"column":28,"nodeType":"5052","messageId":"5053","endLine":261,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":263,"column":26,"nodeType":"5052","messageId":"5053","endLine":263,"endColumn":28},{"ruleId":"5073","severity":1,"message":"5074","line":263,"column":36,"nodeType":"5061","messageId":"5075","endLine":263,"endColumn":78,"fix":"5625"},{"ruleId":"5028","severity":1,"message":"5626","line":277,"column":13,"nodeType":"5030","messageId":"5031","endLine":277,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5235","line":282,"column":13,"nodeType":"5030","messageId":"5031","endLine":282,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5104","line":10,"column":10,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5118","line":10,"column":22,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5310","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5199","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5278","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5189","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":20,"column":3,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5627","line":26,"column":11,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5628","line":27,"column":11,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5311","line":32,"column":12,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5312","line":32,"column":25,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5313","line":34,"column":12,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5167","line":41,"column":10,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5314","line":43,"column":10,"nodeType":"5030","messageId":"5031","endLine":43,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5169","line":44,"column":10,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5141","line":45,"column":16,"nodeType":"5030","messageId":"5031","endLine":45,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5629","line":49,"column":10,"nodeType":"5030","messageId":"5031","endLine":49,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5630","line":50,"column":10,"nodeType":"5030","messageId":"5031","endLine":50,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5631","line":62,"column":7,"nodeType":"5030","messageId":"5031","endLine":62,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5185","line":76,"column":7,"nodeType":"5030","messageId":"5031","endLine":76,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5632","line":77,"column":7,"nodeType":"5030","messageId":"5031","endLine":77,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5633","line":78,"column":7,"nodeType":"5030","messageId":"5031","endLine":78,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5158","line":81,"column":45,"nodeType":"5030","messageId":"5031","endLine":81,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5315","line":84,"column":8,"nodeType":"5030","messageId":"5031","endLine":84,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5634","line":86,"column":8,"nodeType":"5030","messageId":"5031","endLine":86,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5635","line":86,"column":15,"nodeType":"5030","messageId":"5031","endLine":86,"endColumn":23},{"ruleId":"5040","severity":1,"message":"5160","line":98,"column":6,"nodeType":"5042","endLine":98,"endColumn":8,"suggestions":"5636"},{"ruleId":"5040","severity":1,"message":"5160","line":113,"column":6,"nodeType":"5042","endLine":113,"endColumn":13,"suggestions":"5637"},{"ruleId":"5040","severity":1,"message":"5638","line":120,"column":6,"nodeType":"5042","endLine":120,"endColumn":8,"suggestions":"5639"},{"ruleId":"5040","severity":1,"message":"5640","line":124,"column":6,"nodeType":"5042","endLine":124,"endColumn":28,"suggestions":"5641"},{"ruleId":"5028","severity":1,"message":"5140","line":131,"column":13,"nodeType":"5030","messageId":"5031","endLine":131,"endColumn":17},{"ruleId":"5046","severity":1,"message":"5047","line":168,"column":15,"nodeType":"5048","messageId":"5049","endLine":168,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5642","line":207,"column":9,"nodeType":"5030","messageId":"5031","endLine":207,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5643","line":212,"column":11,"nodeType":"5030","messageId":"5031","endLine":212,"endColumn":19},{"ruleId":"5046","severity":1,"message":"5047","line":476,"column":19,"nodeType":"5048","messageId":"5049","endLine":476,"endColumn":21},{"ruleId":"5046","severity":1,"message":"5047","line":522,"column":17,"nodeType":"5048","messageId":"5049","endLine":522,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5644","line":530,"column":9,"nodeType":"5030","messageId":"5031","endLine":530,"endColumn":19},{"ruleId":"5046","severity":1,"message":"5047","line":532,"column":15,"nodeType":"5048","messageId":"5049","endLine":532,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5645","line":539,"column":9,"nodeType":"5030","messageId":"5031","endLine":539,"endColumn":24},{"ruleId":"5046","severity":1,"message":"5047","line":541,"column":15,"nodeType":"5048","messageId":"5049","endLine":541,"endColumn":17},{"ruleId":"5046","severity":1,"message":"5047","line":552,"column":15,"nodeType":"5048","messageId":"5049","endLine":552,"endColumn":17},{"ruleId":"5050","severity":1,"message":"5051","line":702,"column":49,"nodeType":"5052","messageId":"5053","endLine":702,"endColumn":51},{"ruleId":"5050","severity":1,"message":"5051","line":709,"column":47,"nodeType":"5052","messageId":"5053","endLine":709,"endColumn":49},{"ruleId":"5134","severity":1,"message":"5135","line":776,"column":91,"nodeType":"5136","messageId":"5137","endLine":776,"endColumn":105},{"ruleId":"5028","severity":1,"message":"5150","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5286","line":47,"column":8,"nodeType":"5042","endLine":47,"endColumn":10,"suggestions":"5646"},{"ruleId":"5028","severity":1,"message":"5475","line":70,"column":11,"nodeType":"5030","messageId":"5031","endLine":70,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5476","line":82,"column":7,"nodeType":"5030","messageId":"5031","endLine":82,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5094","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5077","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5190","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":10},{"ruleId":"5040","severity":1,"message":"5120","line":28,"column":6,"nodeType":"5042","endLine":28,"endColumn":10,"suggestions":"5647"},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5281","line":6,"column":9,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5078","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5086","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5150","line":15,"column":8,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5035","line":20,"column":9,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5270","line":34,"column":6,"nodeType":"5042","endLine":34,"endColumn":8,"suggestions":"5648"},{"ruleId":"5050","severity":1,"message":"5051","line":84,"column":29,"nodeType":"5052","messageId":"5053","endLine":84,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":36,"column":37,"nodeType":"5052","messageId":"5053","endLine":36,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":44,"column":39,"nodeType":"5052","messageId":"5053","endLine":44,"endColumn":41},{"ruleId":"5050","severity":1,"message":"5051","line":51,"column":41,"nodeType":"5052","messageId":"5053","endLine":51,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5085","line":4,"column":33,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":37},{"ruleId":"5028","severity":1,"message":"5094","line":7,"column":10,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5189","line":13,"column":3,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5323","line":23,"column":35,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5327","line":25,"column":10,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":26},{"ruleId":"5040","severity":1,"message":"5328","line":41,"column":6,"nodeType":"5042","endLine":41,"endColumn":8,"suggestions":"5649"},{"ruleId":"5050","severity":1,"message":"5051","line":58,"column":39,"nodeType":"5052","messageId":"5053","endLine":58,"endColumn":41},{"ruleId":"5050","severity":1,"message":"5051","line":58,"column":65,"nodeType":"5052","messageId":"5053","endLine":58,"endColumn":67},{"ruleId":"5050","severity":1,"message":"5051","line":182,"column":38,"nodeType":"5052","messageId":"5053","endLine":182,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":183,"column":37,"nodeType":"5052","messageId":"5053","endLine":183,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":184,"column":34,"nodeType":"5052","messageId":"5053","endLine":184,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":185,"column":38,"nodeType":"5052","messageId":"5053","endLine":185,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":186,"column":33,"nodeType":"5052","messageId":"5053","endLine":186,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":404,"column":47,"nodeType":"5052","messageId":"5053","endLine":404,"endColumn":49},{"ruleId":"5050","severity":1,"message":"5051","line":452,"column":44,"nodeType":"5052","messageId":"5053","endLine":452,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":501,"column":46,"nodeType":"5052","messageId":"5053","endLine":501,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":551,"column":46,"nodeType":"5052","messageId":"5053","endLine":551,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5273","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5274","line":3,"column":15,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5275","line":3,"column":21,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5276","line":3,"column":30,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":38},{"ruleId":"5028","severity":1,"message":"5277","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5199","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5278","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5077","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5279","line":16,"column":12,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5280","line":16,"column":22,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5650","line":17,"column":11,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5651","line":26,"column":11,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5077","line":13,"column":3,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5190","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5035","line":33,"column":9,"nodeType":"5030","messageId":"5031","endLine":33,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5123","line":34,"column":9,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5124","line":44,"column":11,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5282","line":46,"column":9,"nodeType":"5030","messageId":"5031","endLine":46,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5125","line":64,"column":6,"nodeType":"5042","endLine":64,"endColumn":8,"suggestions":"5652"},{"ruleId":"5028","severity":1,"message":"5077","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":13,"column":5,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5150","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5086","line":18,"column":8,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5035","line":22,"column":11,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5140","line":26,"column":12,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5141","line":26,"column":18,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":25},{"ruleId":"5040","severity":1,"message":"5138","line":42,"column":8,"nodeType":"5042","endLine":42,"endColumn":10,"suggestions":"5653"},{"ruleId":"5050","severity":1,"message":"5051","line":109,"column":45,"nodeType":"5052","messageId":"5053","endLine":109,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5095","line":22,"column":10,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5308","line":106,"column":6,"nodeType":"5042","endLine":106,"endColumn":8,"suggestions":"5654"},{"ruleId":"5050","severity":1,"message":"5051","line":117,"column":34,"nodeType":"5052","messageId":"5053","endLine":117,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":120,"column":34,"nodeType":"5052","messageId":"5053","endLine":120,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":123,"column":34,"nodeType":"5052","messageId":"5053","endLine":123,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5152","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5077","line":4,"column":38,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":4,"column":49,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":4,"column":54,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5359","line":19,"column":12,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5655","line":19,"column":19,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5656","line":22,"column":12,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5657","line":22,"column":28,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":45},{"ruleId":"5040","severity":1,"message":"5453","line":50,"column":8,"nodeType":"5042","endLine":50,"endColumn":10,"suggestions":"5658"},{"ruleId":"5050","severity":1,"message":"5051","line":197,"column":35,"nodeType":"5052","messageId":"5053","endLine":197,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":212,"column":34,"nodeType":"5052","messageId":"5053","endLine":212,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":214,"column":34,"nodeType":"5052","messageId":"5053","endLine":214,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":235,"column":44,"nodeType":"5052","messageId":"5053","endLine":235,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":247,"column":39,"nodeType":"5052","messageId":"5053","endLine":247,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5659","line":268,"column":5,"nodeType":"5030","messageId":"5031","endLine":268,"endColumn":14},{"ruleId":"5050","severity":1,"message":"5091","line":278,"column":33,"nodeType":"5052","messageId":"5053","endLine":278,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5091","line":278,"column":55,"nodeType":"5052","messageId":"5053","endLine":278,"endColumn":57},{"ruleId":"5050","severity":1,"message":"5091","line":282,"column":32,"nodeType":"5052","messageId":"5053","endLine":282,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5091","line":282,"column":54,"nodeType":"5052","messageId":"5053","endLine":282,"endColumn":56},{"ruleId":"5050","severity":1,"message":"5091","line":282,"column":75,"nodeType":"5052","messageId":"5053","endLine":282,"endColumn":77},{"ruleId":"5050","severity":1,"message":"5091","line":287,"column":33,"nodeType":"5052","messageId":"5053","endLine":287,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5091","line":287,"column":55,"nodeType":"5052","messageId":"5053","endLine":287,"endColumn":57},{"ruleId":"5134","severity":1,"message":"5135","line":341,"column":23,"nodeType":"5136","messageId":"5137","endLine":341,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5077","line":4,"column":38,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":4,"column":49,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":4,"column":54,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":6,"column":8,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5359","line":14,"column":12,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5655","line":14,"column":19,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5460","line":19,"column":12,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5461","line":19,"column":17,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5404","line":46,"column":11,"nodeType":"5030","messageId":"5031","endLine":46,"endColumn":31},{"ruleId":"5040","severity":1,"message":"5453","line":54,"column":8,"nodeType":"5042","endLine":54,"endColumn":10,"suggestions":"5660"},{"ruleId":"5134","severity":1,"message":"5135","line":231,"column":21,"nodeType":"5136","messageId":"5137","endLine":231,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5150","line":13,"column":8,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5661","line":18,"column":43,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":64},{"ruleId":"5028","severity":1,"message":"5123","line":23,"column":11,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5323","line":26,"column":37,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5372","line":27,"column":21,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5359","line":28,"column":12,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5358","line":30,"column":12,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5379","line":30,"column":16,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5373","line":35,"column":12,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5380","line":38,"column":12,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5381","line":38,"column":18,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5374","line":57,"column":7,"nodeType":"5030","messageId":"5031","endLine":57,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5375","line":60,"column":7,"nodeType":"5030","messageId":"5031","endLine":60,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5376","line":71,"column":15,"nodeType":"5030","messageId":"5031","endLine":71,"endColumn":18},{"ruleId":"5040","severity":1,"message":"5328","line":84,"column":8,"nodeType":"5042","endLine":84,"endColumn":10,"suggestions":"5662"},{"ruleId":"5028","severity":1,"message":"5534","line":148,"column":11,"nodeType":"5030","messageId":"5031","endLine":148,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":232,"column":36,"nodeType":"5052","messageId":"5053","endLine":232,"endColumn":38},{"ruleId":"5050","severity":1,"message":"5051","line":294,"column":48,"nodeType":"5052","messageId":"5053","endLine":294,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":310,"column":37,"nodeType":"5052","messageId":"5053","endLine":310,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":339,"column":34,"nodeType":"5052","messageId":"5053","endLine":339,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":376,"column":34,"nodeType":"5052","messageId":"5053","endLine":376,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":382,"column":30,"nodeType":"5052","messageId":"5053","endLine":382,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":382,"column":65,"nodeType":"5052","messageId":"5053","endLine":382,"endColumn":67},{"ruleId":"5050","severity":1,"message":"5051","line":382,"column":104,"nodeType":"5052","messageId":"5053","endLine":382,"endColumn":106},{"ruleId":"5050","severity":1,"message":"5051","line":382,"column":142,"nodeType":"5052","messageId":"5053","endLine":382,"endColumn":144},{"ruleId":"5050","severity":1,"message":"5091","line":453,"column":24,"nodeType":"5052","messageId":"5053","endLine":453,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":453,"column":45,"nodeType":"5052","messageId":"5053","endLine":453,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5091","line":457,"column":29,"nodeType":"5052","messageId":"5053","endLine":457,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5150","line":15,"column":8,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5663","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5123","line":27,"column":9,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5323","line":30,"column":35,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5372","line":31,"column":19,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5359","line":32,"column":10,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5374","line":58,"column":7,"nodeType":"5030","messageId":"5031","endLine":58,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5375","line":61,"column":7,"nodeType":"5030","messageId":"5031","endLine":61,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5328","line":85,"column":6,"nodeType":"5042","endLine":85,"endColumn":8,"suggestions":"5664"},{"ruleId":"5050","severity":1,"message":"5051","line":233,"column":30,"nodeType":"5052","messageId":"5053","endLine":233,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":295,"column":40,"nodeType":"5052","messageId":"5053","endLine":295,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":310,"column":31,"nodeType":"5052","messageId":"5053","endLine":310,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":339,"column":28,"nodeType":"5052","messageId":"5053","endLine":339,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":376,"column":28,"nodeType":"5052","messageId":"5053","endLine":376,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":381,"column":37,"nodeType":"5052","messageId":"5053","endLine":381,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":381,"column":72,"nodeType":"5052","messageId":"5053","endLine":381,"endColumn":74},{"ruleId":"5050","severity":1,"message":"5051","line":381,"column":112,"nodeType":"5052","messageId":"5053","endLine":381,"endColumn":114},{"ruleId":"5050","severity":1,"message":"5091","line":381,"column":148,"nodeType":"5052","messageId":"5053","endLine":381,"endColumn":150},{"ruleId":"5050","severity":1,"message":"5051","line":393,"column":24,"nodeType":"5052","messageId":"5053","endLine":393,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5051","line":393,"column":59,"nodeType":"5052","messageId":"5053","endLine":393,"endColumn":61},{"ruleId":"5050","severity":1,"message":"5051","line":393,"column":98,"nodeType":"5052","messageId":"5053","endLine":393,"endColumn":100},{"ruleId":"5050","severity":1,"message":"5051","line":393,"column":136,"nodeType":"5052","messageId":"5053","endLine":393,"endColumn":138},{"ruleId":"5050","severity":1,"message":"5091","line":430,"column":24,"nodeType":"5052","messageId":"5053","endLine":430,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":430,"column":45,"nodeType":"5052","messageId":"5053","endLine":430,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5376","line":442,"column":11,"nodeType":"5030","messageId":"5031","endLine":442,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5376","line":459,"column":7,"nodeType":"5030","messageId":"5031","endLine":459,"endColumn":10},{"ruleId":"5050","severity":1,"message":"5051","line":473,"column":13,"nodeType":"5052","messageId":"5053","endLine":473,"endColumn":15},{"ruleId":"5050","severity":1,"message":"5051","line":473,"column":26,"nodeType":"5052","messageId":"5053","endLine":473,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":649,"column":22,"nodeType":"5052","messageId":"5053","endLine":649,"endColumn":24},{"ruleId":"5050","severity":1,"message":"5051","line":649,"column":37,"nodeType":"5052","messageId":"5053","endLine":649,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5150","line":13,"column":8,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5665","line":19,"column":66,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":87},{"ruleId":"5028","severity":1,"message":"5123","line":26,"column":11,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5323","line":29,"column":37,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5372","line":30,"column":21,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5359","line":31,"column":12,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5666","line":34,"column":12,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5667","line":34,"column":21,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5373","line":38,"column":12,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5380","line":41,"column":12,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5381","line":41,"column":18,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5374","line":51,"column":7,"nodeType":"5030","messageId":"5031","endLine":51,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5375","line":54,"column":7,"nodeType":"5030","messageId":"5031","endLine":54,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5376","line":74,"column":11,"nodeType":"5030","messageId":"5031","endLine":74,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5328","line":92,"column":8,"nodeType":"5042","endLine":92,"endColumn":10,"suggestions":"5668"},{"ruleId":"5050","severity":1,"message":"5051","line":231,"column":36,"nodeType":"5052","messageId":"5053","endLine":231,"endColumn":38},{"ruleId":"5050","severity":1,"message":"5051","line":293,"column":48,"nodeType":"5052","messageId":"5053","endLine":293,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":308,"column":37,"nodeType":"5052","messageId":"5053","endLine":308,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":337,"column":34,"nodeType":"5052","messageId":"5053","endLine":337,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":374,"column":34,"nodeType":"5052","messageId":"5053","endLine":374,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":379,"column":43,"nodeType":"5052","messageId":"5053","endLine":379,"endColumn":45},{"ruleId":"5050","severity":1,"message":"5051","line":379,"column":78,"nodeType":"5052","messageId":"5053","endLine":379,"endColumn":80},{"ruleId":"5050","severity":1,"message":"5051","line":379,"column":118,"nodeType":"5052","messageId":"5053","endLine":379,"endColumn":120},{"ruleId":"5050","severity":1,"message":"5091","line":379,"column":154,"nodeType":"5052","messageId":"5053","endLine":379,"endColumn":156},{"ruleId":"5050","severity":1,"message":"5091","line":443,"column":26,"nodeType":"5052","messageId":"5053","endLine":443,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5091","line":443,"column":47,"nodeType":"5052","messageId":"5053","endLine":443,"endColumn":49},{"ruleId":"5050","severity":1,"message":"5091","line":447,"column":31,"nodeType":"5052","messageId":"5053","endLine":447,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5123","line":17,"column":9,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5085","line":4,"column":10,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5517","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5518","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5521","line":41,"column":20,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5522","line":42,"column":21,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5523","line":43,"column":24,"nodeType":"5030","messageId":"5031","endLine":43,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5525","line":44,"column":24,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5526","line":59,"column":23,"nodeType":"5030","messageId":"5031","endLine":59,"endColumn":37},{"ruleId":"5040","severity":1,"message":"5527","line":65,"column":6,"nodeType":"5042","endLine":65,"endColumn":8,"suggestions":"5669"},{"ruleId":"5182","severity":1,"message":"5529","line":391,"column":17,"nodeType":"5030","messageId":"5184","endLine":391,"endColumn":20},{"ruleId":"5046","severity":1,"message":"5067","line":405,"column":26,"nodeType":"5048","messageId":"5049","endLine":405,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":406,"column":21,"nodeType":"5052","messageId":"5053","endLine":406,"endColumn":23},{"ruleId":"5182","severity":1,"message":"5530","line":414,"column":13,"nodeType":"5030","messageId":"5184","endLine":414,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5094","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5419","line":10,"column":8,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":26,"column":35,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5428","line":4,"column":19,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":28},{"ruleId":"5040","severity":1,"message":"5299","line":41,"column":6,"nodeType":"5042","endLine":41,"endColumn":14,"suggestions":"5670"},{"ruleId":"5028","severity":1,"message":"5117","line":46,"column":5,"nodeType":"5030","messageId":"5031","endLine":46,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5117","line":74,"column":5,"nodeType":"5030","messageId":"5031","endLine":74,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":42,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5500","line":20,"column":12,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5501","line":37,"column":11,"nodeType":"5030","messageId":"5031","endLine":37,"endColumn":19},{"ruleId":"5040","severity":1,"message":"5502","line":65,"column":6,"nodeType":"5042","endLine":65,"endColumn":8,"suggestions":"5671"},{"ruleId":"5050","severity":1,"message":"5051","line":67,"column":24,"nodeType":"5052","messageId":"5053","endLine":67,"endColumn":26},{"ruleId":"5040","severity":1,"message":"5504","line":90,"column":6,"nodeType":"5042","endLine":90,"endColumn":24,"suggestions":"5672"},{"ruleId":"5028","severity":1,"message":"5158","line":91,"column":45,"nodeType":"5030","messageId":"5031","endLine":91,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5105","line":91,"column":56,"nodeType":"5030","messageId":"5031","endLine":91,"endColumn":61},{"ruleId":"5046","severity":1,"message":"5047","line":99,"column":35,"nodeType":"5048","messageId":"5049","endLine":99,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":346,"column":27,"nodeType":"5052","messageId":"5053","endLine":346,"endColumn":29},{"ruleId":"5069","severity":1,"message":"5070","line":428,"column":8,"nodeType":"5071","messageId":"5072","endLine":429,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":428,"column":25,"nodeType":"5052","messageId":"5053","endLine":428,"endColumn":27},{"ruleId":"5046","severity":1,"message":"5047","line":462,"column":21,"nodeType":"5048","messageId":"5049","endLine":462,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":464,"column":14,"nodeType":"5052","messageId":"5053","endLine":464,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5095","line":19,"column":10,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5143","line":38,"column":6,"nodeType":"5042","endLine":38,"endColumn":8,"suggestions":"5673"},{"ruleId":"5050","severity":1,"message":"5051","line":105,"column":34,"nodeType":"5052","messageId":"5053","endLine":105,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":108,"column":34,"nodeType":"5052","messageId":"5053","endLine":108,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":111,"column":34,"nodeType":"5052","messageId":"5053","endLine":111,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5029","line":2,"column":17,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":2,"column":27,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5035","line":21,"column":9,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":23,"column":35,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":62,"column":14,"nodeType":"5052","messageId":"5053","endLine":62,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5112","line":8,"column":10,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5113","line":9,"column":13,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5114","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5674","line":16,"column":10,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5035","line":21,"column":9,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5068","line":50,"column":7,"nodeType":"5030","messageId":"5031","endLine":50,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5306","line":55,"column":23,"nodeType":"5030","messageId":"5031","endLine":55,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5307","line":56,"column":5,"nodeType":"5030","messageId":"5031","endLine":56,"endColumn":28},{"ruleId":"5040","severity":1,"message":"5308","line":160,"column":6,"nodeType":"5042","endLine":160,"endColumn":8,"suggestions":"5675"},{"ruleId":"5028","severity":1,"message":"5032","line":2,"column":27,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5156","line":5,"column":8,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5157","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5114","line":10,"column":8,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5035","line":21,"column":9,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":26,"column":54,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":59},{"ruleId":"5028","severity":1,"message":"5240","line":28,"column":10,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5386","line":28,"column":17,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5077","line":13,"column":3,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5035","line":30,"column":9,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":31,"column":35,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5342","line":36,"column":10,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5343","line":39,"column":10,"nodeType":"5030","messageId":"5031","endLine":39,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5344","line":39,"column":16,"nodeType":"5030","messageId":"5031","endLine":39,"endColumn":23},{"ruleId":"5040","severity":1,"message":"5347","line":72,"column":6,"nodeType":"5042","endLine":72,"endColumn":8,"suggestions":"5676"},{"ruleId":"5040","severity":1,"message":"5160","line":128,"column":6,"nodeType":"5042","endLine":128,"endColumn":10,"suggestions":"5677"},{"ruleId":"5050","severity":1,"message":"5051","line":141,"column":24,"nodeType":"5052","messageId":"5053","endLine":141,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5051","line":146,"column":23,"nodeType":"5052","messageId":"5053","endLine":146,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":165,"column":19,"nodeType":"5052","messageId":"5053","endLine":165,"endColumn":21},{"ruleId":"5050","severity":1,"message":"5051","line":167,"column":21,"nodeType":"5052","messageId":"5053","endLine":167,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":175,"column":25,"nodeType":"5052","messageId":"5053","endLine":175,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":176,"column":25,"nodeType":"5052","messageId":"5053","endLine":176,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":188,"column":31,"nodeType":"5052","messageId":"5053","endLine":188,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":188,"column":50,"nodeType":"5052","messageId":"5053","endLine":188,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":192,"column":29,"nodeType":"5052","messageId":"5053","endLine":192,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":192,"column":46,"nodeType":"5052","messageId":"5053","endLine":192,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5091","line":201,"column":33,"nodeType":"5052","messageId":"5053","endLine":201,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":232,"column":32,"nodeType":"5052","messageId":"5053","endLine":232,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":268,"column":28,"nodeType":"5052","messageId":"5053","endLine":268,"endColumn":30},{"ruleId":"5046","severity":1,"message":"5047","line":281,"column":45,"nodeType":"5048","messageId":"5049","endLine":281,"endColumn":47},{"ruleId":"5046","severity":1,"message":"5047","line":291,"column":45,"nodeType":"5048","messageId":"5049","endLine":291,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":513,"column":32,"nodeType":"5052","messageId":"5053","endLine":513,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":528,"column":33,"nodeType":"5052","messageId":"5053","endLine":528,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":542,"column":33,"nodeType":"5052","messageId":"5053","endLine":542,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5095","line":24,"column":12,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":19},{"ruleId":"5040","severity":1,"message":"5308","line":118,"column":8,"nodeType":"5042","endLine":118,"endColumn":10,"suggestions":"5678"},{"ruleId":"5050","severity":1,"message":"5051","line":127,"column":46,"nodeType":"5052","messageId":"5053","endLine":127,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":130,"column":46,"nodeType":"5052","messageId":"5053","endLine":130,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":133,"column":46,"nodeType":"5052","messageId":"5053","endLine":133,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":136,"column":46,"nodeType":"5052","messageId":"5053","endLine":136,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5123","line":12,"column":9,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5679","line":17,"column":10,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5080","line":17,"column":24,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":39},{"ruleId":"5040","severity":1,"message":"5083","line":174,"column":6,"nodeType":"5042","endLine":174,"endColumn":16,"suggestions":"5680"},{"ruleId":"5028","severity":1,"message":"5159","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5681","line":9,"column":8,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5682","line":10,"column":8,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5683","line":22,"column":10,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5340","line":25,"column":10,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5095","line":26,"column":10,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5684","line":123,"column":11,"nodeType":"5030","messageId":"5031","endLine":123,"endColumn":19},{"ruleId":"5040","severity":1,"message":"5685","line":140,"column":6,"nodeType":"5042","endLine":140,"endColumn":8,"suggestions":"5686"},{"ruleId":"5050","severity":1,"message":"5051","line":150,"column":34,"nodeType":"5052","messageId":"5053","endLine":150,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":153,"column":34,"nodeType":"5052","messageId":"5053","endLine":153,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":156,"column":34,"nodeType":"5052","messageId":"5053","endLine":156,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5159","line":3,"column":8,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5035","line":29,"column":9,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":31,"column":35,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":95,"column":84,"nodeType":"5052","messageId":"5053","endLine":95,"endColumn":86},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":5,"column":38,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":5,"column":49,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":5,"column":54,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5687","line":9,"column":8,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5688","line":10,"column":8,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5457","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5689","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5487","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5690","line":18,"column":8,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5605","line":18,"column":22,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5691","line":18,"column":31,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":49},{"ruleId":"5028","severity":1,"message":"5407","line":18,"column":51,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5359","line":24,"column":12,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5655","line":24,"column":19,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5460","line":29,"column":12,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5461","line":29,"column":17,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":23},{"ruleId":"5040","severity":1,"message":"5453","line":59,"column":8,"nodeType":"5042","endLine":59,"endColumn":10,"suggestions":"5692"},{"ruleId":"5134","severity":1,"message":"5135","line":216,"column":21,"nodeType":"5136","messageId":"5137","endLine":216,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5302","line":1,"column":38,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":53},{"ruleId":"5028","severity":1,"message":"5156","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5157","line":5,"column":10,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5095","line":11,"column":12,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":19},{"ruleId":"5050","severity":1,"message":"5051","line":46,"column":46,"nodeType":"5052","messageId":"5053","endLine":46,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":49,"column":46,"nodeType":"5052","messageId":"5053","endLine":49,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5145","line":6,"column":8,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5077","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5146","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5147","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5148","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5149","line":18,"column":3,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5118","line":19,"column":3,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5150","line":21,"column":8,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5151","line":22,"column":10,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5152","line":22,"column":20,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5104","line":27,"column":10,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5123","line":30,"column":9,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5229","line":35,"column":12,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5231","line":36,"column":12,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5232","line":36,"column":28,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":45},{"ruleId":"5028","severity":1,"message":"5230","line":37,"column":12,"nodeType":"5030","messageId":"5031","endLine":37,"endColumn":21},{"ruleId":"5040","severity":1,"message":"5153","line":63,"column":8,"nodeType":"5042","endLine":63,"endColumn":10,"suggestions":"5693"},{"ruleId":"5028","severity":1,"message":"5234","line":64,"column":8,"nodeType":"5030","messageId":"5031","endLine":64,"endColumn":17},{"ruleId":"5050","severity":1,"message":"5051","line":131,"column":44,"nodeType":"5052","messageId":"5053","endLine":131,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":167,"column":34,"nodeType":"5052","messageId":"5053","endLine":167,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":180,"column":34,"nodeType":"5052","messageId":"5053","endLine":180,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":195,"column":43,"nodeType":"5052","messageId":"5053","endLine":195,"endColumn":45},{"ruleId":"5050","severity":1,"message":"5051","line":220,"column":40,"nodeType":"5052","messageId":"5053","endLine":220,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":222,"column":28,"nodeType":"5052","messageId":"5053","endLine":222,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":224,"column":26,"nodeType":"5052","messageId":"5053","endLine":224,"endColumn":28},{"ruleId":"5073","severity":1,"message":"5074","line":224,"column":36,"nodeType":"5061","messageId":"5075","endLine":224,"endColumn":80,"fix":"5694"},{"ruleId":"5028","severity":1,"message":"5235","line":239,"column":13,"nodeType":"5030","messageId":"5031","endLine":239,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5150","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5286","line":46,"column":8,"nodeType":"5042","endLine":46,"endColumn":10,"suggestions":"5695"},{"ruleId":"5028","severity":1,"message":"5475","line":69,"column":11,"nodeType":"5030","messageId":"5031","endLine":69,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5476","line":81,"column":7,"nodeType":"5030","messageId":"5031","endLine":81,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5281","line":6,"column":9,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5273","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5274","line":3,"column":15,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5275","line":3,"column":21,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5276","line":3,"column":30,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":38},{"ruleId":"5028","severity":1,"message":"5277","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5199","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5278","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5077","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5279","line":16,"column":12,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5280","line":16,"column":22,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5650","line":17,"column":11,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5651","line":26,"column":11,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5077","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":13,"column":5,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5150","line":16,"column":8,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5086","line":18,"column":8,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5035","line":23,"column":11,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5140","line":27,"column":12,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5141","line":27,"column":18,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":25},{"ruleId":"5040","severity":1,"message":"5138","line":37,"column":8,"nodeType":"5042","endLine":37,"endColumn":10,"suggestions":"5696"},{"ruleId":"5050","severity":1,"message":"5051","line":109,"column":45,"nodeType":"5052","messageId":"5053","endLine":109,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5077","line":13,"column":3,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5190","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5035","line":34,"column":9,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5123","line":35,"column":9,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5124","line":45,"column":11,"nodeType":"5030","messageId":"5031","endLine":45,"endColumn":23},{"ruleId":"5040","severity":1,"message":"5125","line":65,"column":6,"nodeType":"5042","endLine":65,"endColumn":8,"suggestions":"5697"},{"ruleId":"5040","severity":1,"message":"5698","line":69,"column":6,"nodeType":"5042","endLine":69,"endColumn":12,"suggestions":"5699"},{"ruleId":"5069","severity":1,"message":"5070","line":98,"column":5,"nodeType":"5071","messageId":"5072","endLine":102,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5091","line":99,"column":18,"nodeType":"5052","messageId":"5053","endLine":99,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5094","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5077","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5190","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":10},{"ruleId":"5040","severity":1,"message":"5120","line":28,"column":6,"nodeType":"5042","endLine":28,"endColumn":10,"suggestions":"5700"},{"ruleId":"5028","severity":1,"message":"5104","line":10,"column":10,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5118","line":10,"column":22,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5310","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5199","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5278","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5189","line":16,"column":3,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":17,"column":3,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":20,"column":3,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5701","line":23,"column":8,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5313","line":35,"column":12,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5167","line":42,"column":10,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5314","line":44,"column":10,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5169","line":45,"column":10,"nodeType":"5030","messageId":"5031","endLine":45,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5702","line":48,"column":17,"nodeType":"5030","messageId":"5031","endLine":48,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5631","line":61,"column":7,"nodeType":"5030","messageId":"5031","endLine":61,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5185","line":69,"column":7,"nodeType":"5030","messageId":"5031","endLine":69,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5632","line":70,"column":7,"nodeType":"5030","messageId":"5031","endLine":70,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5633","line":71,"column":7,"nodeType":"5030","messageId":"5031","endLine":71,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5158","line":74,"column":45,"nodeType":"5030","messageId":"5031","endLine":74,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5315","line":77,"column":8,"nodeType":"5030","messageId":"5031","endLine":77,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5634","line":79,"column":8,"nodeType":"5030","messageId":"5031","endLine":79,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5635","line":79,"column":15,"nodeType":"5030","messageId":"5031","endLine":79,"endColumn":23},{"ruleId":"5040","severity":1,"message":"5160","line":91,"column":6,"nodeType":"5042","endLine":91,"endColumn":8,"suggestions":"5703"},{"ruleId":"5040","severity":1,"message":"5160","line":105,"column":6,"nodeType":"5042","endLine":105,"endColumn":13,"suggestions":"5704"},{"ruleId":"5040","severity":1,"message":"5705","line":112,"column":6,"nodeType":"5042","endLine":112,"endColumn":8,"suggestions":"5706"},{"ruleId":"5040","severity":1,"message":"5320","line":115,"column":6,"nodeType":"5042","endLine":115,"endColumn":28,"suggestions":"5707"},{"ruleId":"5028","severity":1,"message":"5140","line":122,"column":13,"nodeType":"5030","messageId":"5031","endLine":122,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5269","line":152,"column":9,"nodeType":"5030","messageId":"5031","endLine":152,"endColumn":11},{"ruleId":"5046","severity":1,"message":"5047","line":154,"column":31,"nodeType":"5048","messageId":"5049","endLine":154,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":156,"column":40,"nodeType":"5052","messageId":"5053","endLine":156,"endColumn":42},{"ruleId":"5040","severity":1,"message":"5262","line":170,"column":6,"nodeType":"5042","endLine":170,"endColumn":13,"suggestions":"5708"},{"ruleId":"5046","severity":1,"message":"5047","line":186,"column":15,"nodeType":"5048","messageId":"5049","endLine":186,"endColumn":17},{"ruleId":"5046","severity":1,"message":"5047","line":498,"column":19,"nodeType":"5048","messageId":"5049","endLine":498,"endColumn":21},{"ruleId":"5046","severity":1,"message":"5047","line":544,"column":17,"nodeType":"5048","messageId":"5049","endLine":544,"endColumn":19},{"ruleId":"5046","severity":1,"message":"5047","line":555,"column":15,"nodeType":"5048","messageId":"5049","endLine":555,"endColumn":17},{"ruleId":"5046","severity":1,"message":"5047","line":566,"column":15,"nodeType":"5048","messageId":"5049","endLine":566,"endColumn":17},{"ruleId":"5050","severity":1,"message":"5051","line":705,"column":49,"nodeType":"5052","messageId":"5053","endLine":705,"endColumn":51},{"ruleId":"5050","severity":1,"message":"5051","line":712,"column":47,"nodeType":"5052","messageId":"5053","endLine":712,"endColumn":49},{"ruleId":"5134","severity":1,"message":"5135","line":779,"column":91,"nodeType":"5136","messageId":"5137","endLine":779,"endColumn":105},{"ruleId":"5028","severity":1,"message":"5159","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5112","line":8,"column":10,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5113","line":9,"column":13,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5114","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5035","line":20,"column":9,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5068","line":49,"column":7,"nodeType":"5030","messageId":"5031","endLine":49,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5032","line":2,"column":27,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5035","line":22,"column":9,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":24,"column":35,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":61,"column":14,"nodeType":"5052","messageId":"5053","endLine":61,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5094","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5077","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5190","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":10},{"ruleId":"5040","severity":1,"message":"5709","line":27,"column":6,"nodeType":"5042","endLine":27,"endColumn":8,"suggestions":"5710"},{"ruleId":"5073","severity":1,"message":"5074","line":90,"column":29,"nodeType":"5061","messageId":"5075","endLine":93,"endColumn":30,"fix":"5711"},{"ruleId":"5028","severity":1,"message":"5077","line":11,"column":3,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5190","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5323","line":23,"column":35,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5712","line":23,"column":50,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":58},{"ruleId":"5040","severity":1,"message":"5328","line":39,"column":6,"nodeType":"5042","endLine":39,"endColumn":8,"suggestions":"5713"},{"ruleId":"5040","severity":1,"message":"5714","line":54,"column":6,"nodeType":"5042","endLine":54,"endColumn":16,"suggestions":"5715"},{"ruleId":"5050","severity":1,"message":"5051","line":147,"column":35,"nodeType":"5052","messageId":"5053","endLine":147,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":320,"column":26,"nodeType":"5052","messageId":"5053","endLine":320,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":334,"column":26,"nodeType":"5052","messageId":"5053","endLine":334,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":347,"column":26,"nodeType":"5052","messageId":"5053","endLine":347,"endColumn":28},{"ruleId":"5073","severity":1,"message":"5074","line":409,"column":29,"nodeType":"5061","messageId":"5075","endLine":412,"endColumn":30,"fix":"5716"},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5035","line":12,"column":9,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":13,"column":35,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5282","line":16,"column":9,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5035","line":14,"column":9,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":15,"column":35,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5282","line":19,"column":9,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5357","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5428","line":5,"column":19,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5429","line":14,"column":7,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5282","line":42,"column":9,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5299","line":100,"column":6,"nodeType":"5042","endLine":100,"endColumn":14,"suggestions":"5717"},{"ruleId":"5028","severity":1,"message":"5117","line":134,"column":5,"nodeType":"5030","messageId":"5031","endLine":134,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5117","line":163,"column":5,"nodeType":"5030","messageId":"5031","endLine":163,"endColumn":11},{"ruleId":"5050","severity":1,"message":"5051","line":242,"column":41,"nodeType":"5052","messageId":"5053","endLine":242,"endColumn":43},{"ruleId":"5056","severity":1,"message":"5431","line":242,"column":46,"nodeType":"5432","messageId":"5058","endLine":242,"endColumn":48},{"ruleId":"5056","severity":1,"message":"5431","line":242,"column":64,"nodeType":"5432","messageId":"5058","endLine":242,"endColumn":66},{"ruleId":"5056","severity":1,"message":"5433","line":242,"column":64,"nodeType":"5432","messageId":"5058","endLine":242,"endColumn":66},{"ruleId":"5050","severity":1,"message":"5051","line":242,"column":81,"nodeType":"5052","messageId":"5053","endLine":242,"endColumn":83},{"ruleId":"5056","severity":1,"message":"5433","line":242,"column":86,"nodeType":"5432","messageId":"5058","endLine":242,"endColumn":88},{"ruleId":"5028","severity":1,"message":"5323","line":10,"column":35,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5434","line":26,"column":5,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":15},{"ruleId":"5050","severity":1,"message":"5051","line":99,"column":18,"nodeType":"5052","messageId":"5053","endLine":99,"endColumn":20},{"ruleId":"5050","severity":1,"message":"5051","line":119,"column":30,"nodeType":"5052","messageId":"5053","endLine":119,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":138,"column":25,"nodeType":"5052","messageId":"5053","endLine":138,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":156,"column":23,"nodeType":"5052","messageId":"5053","endLine":156,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":172,"column":28,"nodeType":"5052","messageId":"5053","endLine":172,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":191,"column":21,"nodeType":"5052","messageId":"5053","endLine":191,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":210,"column":28,"nodeType":"5052","messageId":"5053","endLine":210,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":229,"column":17,"nodeType":"5052","messageId":"5053","endLine":229,"endColumn":19},{"ruleId":"5050","severity":1,"message":"5051","line":247,"column":20,"nodeType":"5052","messageId":"5053","endLine":247,"endColumn":22},{"ruleId":"5050","severity":1,"message":"5051","line":263,"column":16,"nodeType":"5052","messageId":"5053","endLine":263,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5051","line":279,"column":14,"nodeType":"5052","messageId":"5053","endLine":279,"endColumn":16},{"ruleId":"5050","severity":1,"message":"5051","line":402,"column":29,"nodeType":"5052","messageId":"5053","endLine":402,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":416,"column":36,"nodeType":"5052","messageId":"5053","endLine":416,"endColumn":38},{"ruleId":"5050","severity":1,"message":"5051","line":432,"column":34,"nodeType":"5052","messageId":"5053","endLine":432,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":445,"column":32,"nodeType":"5052","messageId":"5053","endLine":445,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":459,"column":39,"nodeType":"5052","messageId":"5053","endLine":459,"endColumn":41},{"ruleId":"5050","severity":1,"message":"5051","line":472,"column":31,"nodeType":"5052","messageId":"5053","endLine":472,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5357","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5419","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":14},{"ruleId":"5040","severity":1,"message":"5417","line":27,"column":6,"nodeType":"5042","endLine":27,"endColumn":14,"suggestions":"5718"},{"ruleId":"5050","severity":1,"message":"5091","line":31,"column":14,"nodeType":"5052","messageId":"5053","endLine":31,"endColumn":16},{"ruleId":"5050","severity":1,"message":"5051","line":59,"column":41,"nodeType":"5052","messageId":"5053","endLine":59,"endColumn":43},{"ruleId":"5050","severity":1,"message":"5051","line":65,"column":32,"nodeType":"5052","messageId":"5053","endLine":65,"endColumn":34},{"ruleId":"5028","severity":1,"message":"5092","line":2,"column":58,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":72},{"ruleId":"5028","severity":1,"message":"5278","line":2,"column":74,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":84},{"ruleId":"5028","severity":1,"message":"5719","line":2,"column":97,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":108},{"ruleId":"5028","severity":1,"message":"5092","line":2,"column":51,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":65},{"ruleId":"5028","severity":1,"message":"5093","line":2,"column":103,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":114},{"ruleId":"5028","severity":1,"message":"5116","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":9,"column":5,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5237","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5238","line":11,"column":5,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":21,"column":8,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5145","line":23,"column":8,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5398","line":24,"column":8,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5720","line":28,"column":22,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5393","line":28,"column":67,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":82},{"ruleId":"5028","severity":1,"message":"5394","line":28,"column":84,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":92},{"ruleId":"5028","severity":1,"message":"5035","line":35,"column":11,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5358","line":36,"column":13,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5395","line":38,"column":11,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5359","line":42,"column":12,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5360","line":71,"column":8,"nodeType":"5042","endLine":71,"endColumn":10,"suggestions":"5721"},{"ruleId":"5050","severity":1,"message":"5091","line":117,"column":24,"nodeType":"5052","messageId":"5053","endLine":117,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":117,"column":45,"nodeType":"5052","messageId":"5053","endLine":117,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":204,"column":38,"nodeType":"5052","messageId":"5053","endLine":204,"endColumn":40},{"ruleId":"5073","severity":1,"message":"5074","line":389,"column":53,"nodeType":"5061","messageId":"5075","endLine":389,"endColumn":93,"fix":"5722"},{"ruleId":"5028","severity":1,"message":"5116","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":9,"column":5,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5237","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5238","line":11,"column":5,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":21,"column":8,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5392","line":23,"column":8,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5145","line":24,"column":8,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5720","line":29,"column":22,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5393","line":29,"column":67,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":82},{"ruleId":"5028","severity":1,"message":"5394","line":29,"column":84,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":92},{"ruleId":"5028","severity":1,"message":"5035","line":35,"column":11,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5358","line":36,"column":13,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5395","line":38,"column":11,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5359","line":42,"column":12,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5360","line":65,"column":8,"nodeType":"5042","endLine":65,"endColumn":10,"suggestions":"5723"},{"ruleId":"5050","severity":1,"message":"5091","line":115,"column":24,"nodeType":"5052","messageId":"5053","endLine":115,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":115,"column":45,"nodeType":"5052","messageId":"5053","endLine":115,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":204,"column":38,"nodeType":"5052","messageId":"5053","endLine":204,"endColumn":40},{"ruleId":"5073","severity":1,"message":"5074","line":392,"column":53,"nodeType":"5061","messageId":"5075","endLine":392,"endColumn":93,"fix":"5724"},{"ruleId":"5028","severity":1,"message":"5116","line":4,"column":8,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":9,"column":5,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5237","line":10,"column":5,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5238","line":11,"column":5,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":21,"column":8,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5392","line":23,"column":8,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5145","line":24,"column":8,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5720","line":28,"column":22,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5393","line":28,"column":67,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":82},{"ruleId":"5028","severity":1,"message":"5394","line":28,"column":84,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":92},{"ruleId":"5028","severity":1,"message":"5035","line":35,"column":11,"nodeType":"5030","messageId":"5031","endLine":35,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5358","line":36,"column":13,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5395","line":38,"column":11,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5359","line":42,"column":12,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5360","line":64,"column":8,"nodeType":"5042","endLine":64,"endColumn":10,"suggestions":"5725"},{"ruleId":"5050","severity":1,"message":"5091","line":312,"column":24,"nodeType":"5052","messageId":"5053","endLine":312,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5091","line":312,"column":45,"nodeType":"5052","messageId":"5053","endLine":312,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5323","line":11,"column":27,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5105","line":11,"column":35,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5586","line":10,"column":17,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5701","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5086","line":15,"column":8,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":22},{"ruleId":"5574","severity":1,"message":"5575","line":208,"column":153,"nodeType":"5052","messageId":"5576","endLine":208,"endColumn":154},{"ruleId":"5574","severity":1,"message":"5575","line":208,"column":156,"nodeType":"5052","messageId":"5576","endLine":208,"endColumn":157},{"ruleId":"5293","severity":1,"message":"5294","line":209,"column":33,"nodeType":"5295","messageId":"5296","endLine":209,"endColumn":34,"fix":"5726"},{"ruleId":"5046","severity":1,"message":"5047","line":312,"column":45,"nodeType":"5048","messageId":"5049","endLine":312,"endColumn":47},{"ruleId":"5046","severity":1,"message":"5047","line":359,"column":31,"nodeType":"5048","messageId":"5049","endLine":359,"endColumn":33},{"ruleId":"5046","severity":1,"message":"5047","line":377,"column":31,"nodeType":"5048","messageId":"5049","endLine":377,"endColumn":33},{"ruleId":"5046","severity":1,"message":"5047","line":397,"column":45,"nodeType":"5048","messageId":"5049","endLine":397,"endColumn":47},{"ruleId":"5046","severity":1,"message":"5047","line":425,"column":27,"nodeType":"5048","messageId":"5049","endLine":425,"endColumn":29},{"ruleId":"5046","severity":1,"message":"5047","line":438,"column":27,"nodeType":"5048","messageId":"5049","endLine":438,"endColumn":29},{"ruleId":"5578","severity":1,"message":"5579","line":552,"column":10,"nodeType":"5580","messageId":"5053","endLine":552,"endColumn":14,"fix":"5727"},{"ruleId":"5046","severity":1,"message":"5047","line":562,"column":45,"nodeType":"5048","messageId":"5049","endLine":562,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":581,"column":35,"nodeType":"5052","messageId":"5053","endLine":581,"endColumn":37},{"ruleId":"5182","severity":1,"message":"5582","line":636,"column":14,"nodeType":"5030","messageId":"5184","endLine":636,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":641,"column":32,"nodeType":"5052","messageId":"5053","endLine":641,"endColumn":34},{"ruleId":"5182","severity":1,"message":"5582","line":643,"column":14,"nodeType":"5030","messageId":"5184","endLine":643,"endColumn":28},{"ruleId":"5046","severity":1,"message":"5047","line":704,"column":21,"nodeType":"5048","messageId":"5049","endLine":704,"endColumn":23},{"ruleId":"5583","severity":1,"message":"5584","line":775,"column":13,"nodeType":"5295","messageId":"5585","endLine":775,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":967,"column":33,"nodeType":"5052","messageId":"5053","endLine":967,"endColumn":35},{"ruleId":"5589","severity":1,"message":"5590","line":969,"column":8,"nodeType":"5030","messageId":"5591","endLine":969,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5091","line":1021,"column":28,"nodeType":"5052","messageId":"5053","endLine":1021,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":1197,"column":29,"nodeType":"5052","messageId":"5053","endLine":1197,"endColumn":31},{"ruleId":"5062","severity":1,"message":"5063","line":1199,"column":6,"nodeType":"5061","endLine":1199,"endColumn":55},{"ruleId":"5050","severity":1,"message":"5051","line":83,"column":44,"nodeType":"5052","messageId":"5053","endLine":83,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":95,"column":24,"nodeType":"5052","messageId":"5053","endLine":95,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5051","line":106,"column":34,"nodeType":"5052","messageId":"5053","endLine":106,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":119,"column":31,"nodeType":"5052","messageId":"5053","endLine":119,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":5,"column":38,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":5,"column":49,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":5,"column":54,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5359","line":22,"column":12,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5453","line":55,"column":8,"nodeType":"5042","endLine":55,"endColumn":10,"suggestions":"5728"},{"ruleId":"5050","severity":1,"message":"5051","line":171,"column":44,"nodeType":"5052","messageId":"5053","endLine":171,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":177,"column":48,"nodeType":"5052","messageId":"5053","endLine":177,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":182,"column":52,"nodeType":"5052","messageId":"5053","endLine":182,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":257,"column":50,"nodeType":"5052","messageId":"5053","endLine":257,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":265,"column":53,"nodeType":"5052","messageId":"5053","endLine":265,"endColumn":55},{"ruleId":"5050","severity":1,"message":"5091","line":265,"column":74,"nodeType":"5052","messageId":"5053","endLine":265,"endColumn":76},{"ruleId":"5050","severity":1,"message":"5051","line":276,"column":71,"nodeType":"5052","messageId":"5053","endLine":276,"endColumn":73},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":5,"column":38,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":5,"column":49,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":5,"column":54,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5688","line":10,"column":8,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5359","line":23,"column":12,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5358","line":24,"column":12,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5452","line":36,"column":11,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5453","line":58,"column":8,"nodeType":"5042","endLine":58,"endColumn":10,"suggestions":"5729"},{"ruleId":"5050","severity":1,"message":"5051","line":172,"column":44,"nodeType":"5052","messageId":"5053","endLine":172,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":180,"column":48,"nodeType":"5052","messageId":"5053","endLine":180,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":184,"column":52,"nodeType":"5052","messageId":"5053","endLine":184,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":255,"column":50,"nodeType":"5052","messageId":"5053","endLine":255,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":263,"column":53,"nodeType":"5052","messageId":"5053","endLine":263,"endColumn":55},{"ruleId":"5050","severity":1,"message":"5091","line":263,"column":74,"nodeType":"5052","messageId":"5053","endLine":263,"endColumn":76},{"ruleId":"5050","severity":1,"message":"5051","line":274,"column":71,"nodeType":"5052","messageId":"5053","endLine":274,"endColumn":73},{"ruleId":"5028","severity":1,"message":"5384","line":2,"column":19,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5077","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":13,"column":3,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5385","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5342","line":40,"column":10,"nodeType":"5030","messageId":"5031","endLine":40,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5386","line":44,"column":17,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5387","line":51,"column":10,"nodeType":"5030","messageId":"5031","endLine":51,"endColumn":18},{"ruleId":"5040","severity":1,"message":"5347","line":90,"column":6,"nodeType":"5042","endLine":90,"endColumn":8,"suggestions":"5730"},{"ruleId":"5040","severity":1,"message":"5160","line":101,"column":6,"nodeType":"5042","endLine":101,"endColumn":10,"suggestions":"5731"},{"ruleId":"5050","severity":1,"message":"5051","line":111,"column":24,"nodeType":"5052","messageId":"5053","endLine":111,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5051","line":116,"column":23,"nodeType":"5052","messageId":"5053","endLine":116,"endColumn":25},{"ruleId":"5050","severity":1,"message":"5051","line":138,"column":19,"nodeType":"5052","messageId":"5053","endLine":138,"endColumn":21},{"ruleId":"5050","severity":1,"message":"5051","line":140,"column":21,"nodeType":"5052","messageId":"5053","endLine":140,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":148,"column":25,"nodeType":"5052","messageId":"5053","endLine":148,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":149,"column":25,"nodeType":"5052","messageId":"5053","endLine":149,"endColumn":27},{"ruleId":"5050","severity":1,"message":"5051","line":166,"column":31,"nodeType":"5052","messageId":"5053","endLine":166,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":166,"column":50,"nodeType":"5052","messageId":"5053","endLine":166,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":171,"column":29,"nodeType":"5052","messageId":"5053","endLine":171,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":171,"column":46,"nodeType":"5052","messageId":"5053","endLine":171,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5091","line":181,"column":33,"nodeType":"5052","messageId":"5053","endLine":181,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":213,"column":32,"nodeType":"5052","messageId":"5053","endLine":213,"endColumn":34},{"ruleId":"5046","severity":1,"message":"5047","line":250,"column":45,"nodeType":"5048","messageId":"5049","endLine":250,"endColumn":47},{"ruleId":"5046","severity":1,"message":"5047","line":260,"column":45,"nodeType":"5048","messageId":"5049","endLine":260,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":279,"column":28,"nodeType":"5052","messageId":"5053","endLine":279,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":481,"column":32,"nodeType":"5052","messageId":"5053","endLine":481,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":496,"column":33,"nodeType":"5052","messageId":"5053","endLine":496,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":509,"column":33,"nodeType":"5052","messageId":"5053","endLine":509,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":5,"column":38,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":5,"column":49,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":5,"column":54,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5393","line":13,"column":52,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":67},{"ruleId":"5028","severity":1,"message":"5394","line":13,"column":69,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":77},{"ruleId":"5028","severity":1,"message":"5359","line":21,"column":12,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5358","line":22,"column":12,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5452","line":34,"column":11,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":22},{"ruleId":"5040","severity":1,"message":"5453","line":51,"column":8,"nodeType":"5042","endLine":51,"endColumn":10,"suggestions":"5732"},{"ruleId":"5050","severity":1,"message":"5051","line":165,"column":44,"nodeType":"5052","messageId":"5053","endLine":165,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":237,"column":50,"nodeType":"5052","messageId":"5053","endLine":237,"endColumn":52},{"ruleId":"5050","severity":1,"message":"5051","line":248,"column":53,"nodeType":"5052","messageId":"5053","endLine":248,"endColumn":55},{"ruleId":"5050","severity":1,"message":"5091","line":248,"column":74,"nodeType":"5052","messageId":"5053","endLine":248,"endColumn":76},{"ruleId":"5050","severity":1,"message":"5051","line":261,"column":71,"nodeType":"5052","messageId":"5053","endLine":261,"endColumn":73},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5077","line":5,"column":38,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":5,"column":49,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":5,"column":54,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5359","line":21,"column":12,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5358","line":22,"column":12,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5379","line":22,"column":16,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5733","line":23,"column":12,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5734","line":23,"column":29,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":44},{"ruleId":"5040","severity":1,"message":"5453","line":48,"column":8,"nodeType":"5042","endLine":48,"endColumn":10,"suggestions":"5735"},{"ruleId":"5050","severity":1,"message":"5051","line":162,"column":44,"nodeType":"5052","messageId":"5053","endLine":162,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":233,"column":71,"nodeType":"5052","messageId":"5053","endLine":233,"endColumn":73},{"ruleId":"5050","severity":1,"message":"5051","line":63,"column":32,"nodeType":"5052","messageId":"5053","endLine":63,"endColumn":34},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":5,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":5,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":5,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":5,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5150","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5736","line":26,"column":12,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":26},{"ruleId":"5050","severity":1,"message":"5051","line":140,"column":44,"nodeType":"5052","messageId":"5053","endLine":140,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":146,"column":48,"nodeType":"5052","messageId":"5053","endLine":146,"endColumn":50},{"ruleId":"5050","severity":1,"message":"5051","line":151,"column":52,"nodeType":"5052","messageId":"5053","endLine":151,"endColumn":54},{"ruleId":"5050","severity":1,"message":"5051","line":171,"column":40,"nodeType":"5052","messageId":"5053","endLine":171,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5051","line":181,"column":35,"nodeType":"5052","messageId":"5053","endLine":181,"endColumn":37},{"ruleId":"5028","severity":1,"message":"5116","line":2,"column":8,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5152","line":4,"column":19,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5077","line":5,"column":38,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":47},{"ruleId":"5028","severity":1,"message":"5237","line":5,"column":49,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":5,"column":54,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5150","line":8,"column":8,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5687","line":9,"column":8,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5688","line":10,"column":8,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5457","line":11,"column":8,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5690","line":19,"column":8,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5605","line":19,"column":22,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5691","line":19,"column":31,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":49},{"ruleId":"5028","severity":1,"message":"5393","line":19,"column":51,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":66},{"ruleId":"5028","severity":1,"message":"5394","line":19,"column":68,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":76},{"ruleId":"5028","severity":1,"message":"5737","line":19,"column":89,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":99},{"ruleId":"5028","severity":1,"message":"5359","line":26,"column":12,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5655","line":26,"column":19,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":27},{"ruleId":"5040","severity":1,"message":"5453","line":57,"column":8,"nodeType":"5042","endLine":57,"endColumn":10,"suggestions":"5738"},{"ruleId":"5050","severity":1,"message":"5051","line":207,"column":35,"nodeType":"5052","messageId":"5053","endLine":207,"endColumn":37},{"ruleId":"5050","severity":1,"message":"5051","line":223,"column":34,"nodeType":"5052","messageId":"5053","endLine":223,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":225,"column":34,"nodeType":"5052","messageId":"5053","endLine":225,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":244,"column":44,"nodeType":"5052","messageId":"5053","endLine":244,"endColumn":46},{"ruleId":"5050","severity":1,"message":"5051","line":250,"column":40,"nodeType":"5052","messageId":"5053","endLine":250,"endColumn":42},{"ruleId":"5050","severity":1,"message":"5091","line":280,"column":33,"nodeType":"5052","messageId":"5053","endLine":280,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5091","line":280,"column":55,"nodeType":"5052","messageId":"5053","endLine":280,"endColumn":57},{"ruleId":"5050","severity":1,"message":"5091","line":284,"column":32,"nodeType":"5052","messageId":"5053","endLine":284,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5091","line":284,"column":54,"nodeType":"5052","messageId":"5053","endLine":284,"endColumn":56},{"ruleId":"5050","severity":1,"message":"5091","line":284,"column":75,"nodeType":"5052","messageId":"5053","endLine":284,"endColumn":77},{"ruleId":"5050","severity":1,"message":"5091","line":289,"column":33,"nodeType":"5052","messageId":"5053","endLine":289,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5091","line":289,"column":55,"nodeType":"5052","messageId":"5053","endLine":289,"endColumn":57},{"ruleId":"5134","severity":1,"message":"5135","line":341,"column":21,"nodeType":"5136","messageId":"5137","endLine":341,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5085","line":4,"column":10,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5517","line":10,"column":3,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5518","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5519","line":34,"column":9,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5521","line":43,"column":20,"nodeType":"5030","messageId":"5031","endLine":43,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5522","line":44,"column":21,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5523","line":45,"column":24,"nodeType":"5030","messageId":"5031","endLine":45,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5525","line":46,"column":24,"nodeType":"5030","messageId":"5031","endLine":46,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5526","line":60,"column":23,"nodeType":"5030","messageId":"5031","endLine":60,"endColumn":37},{"ruleId":"5040","severity":1,"message":"5527","line":66,"column":6,"nodeType":"5042","endLine":66,"endColumn":8,"suggestions":"5739"},{"ruleId":"5182","severity":1,"message":"5529","line":397,"column":17,"nodeType":"5030","messageId":"5184","endLine":397,"endColumn":20},{"ruleId":"5046","severity":1,"message":"5067","line":411,"column":26,"nodeType":"5048","messageId":"5049","endLine":411,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":412,"column":21,"nodeType":"5052","messageId":"5053","endLine":412,"endColumn":23},{"ruleId":"5182","severity":1,"message":"5530","line":420,"column":13,"nodeType":"5030","messageId":"5184","endLine":420,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5123","line":17,"column":9,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5150","line":10,"column":8,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5690","line":17,"column":8,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5740","line":25,"column":10,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5150","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5736","line":23,"column":10,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":24},{"ruleId":"5050","severity":1,"message":"5051","line":136,"column":28,"nodeType":"5052","messageId":"5053","endLine":136,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":141,"column":30,"nodeType":"5052","messageId":"5053","endLine":141,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":146,"column":32,"nodeType":"5052","messageId":"5053","endLine":146,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":166,"column":31,"nodeType":"5052","messageId":"5053","endLine":166,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":176,"column":29,"nodeType":"5052","messageId":"5053","endLine":176,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5040","severity":1,"message":"5370","line":29,"column":6,"nodeType":"5042","endLine":29,"endColumn":8,"suggestions":"5741"},{"ruleId":"5050","severity":1,"message":"5051","line":137,"column":28,"nodeType":"5052","messageId":"5053","endLine":137,"endColumn":30},{"ruleId":"5050","severity":1,"message":"5051","line":142,"column":30,"nodeType":"5052","messageId":"5053","endLine":142,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":147,"column":32,"nodeType":"5052","messageId":"5053","endLine":147,"endColumn":34},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":3,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5237","line":7,"column":3,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5238","line":8,"column":3,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5078","line":9,"column":3,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":8},{"ruleId":"5040","severity":1,"message":"5370","line":27,"column":6,"nodeType":"5042","endLine":27,"endColumn":8,"suggestions":"5742"},{"ruleId":"5050","severity":1,"message":"5051","line":135,"column":28,"nodeType":"5052","messageId":"5053","endLine":135,"endColumn":30},{"ruleId":"5028","severity":1,"message":"5323","line":11,"column":27,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5105","line":11,"column":35,"nodeType":"5030","messageId":"5031","endLine":11,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5105","line":24,"column":35,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5094","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5105","line":25,"column":35,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5086","line":6,"column":8,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5419","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5114","line":9,"column":8,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5323","line":22,"column":37,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5592","line":27,"column":38,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":43},{"ruleId":"5050","severity":1,"message":"5091","line":35,"column":30,"nodeType":"5052","messageId":"5053","endLine":35,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5593","line":41,"column":25,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5149","line":4,"column":41,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":52},{"ruleId":"5040","severity":1,"message":"5506","line":12,"column":6,"nodeType":"5042","endLine":12,"endColumn":11,"suggestions":"5743"},{"ruleId":"5028","severity":1,"message":"5435","line":1,"column":10,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5079","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5105","line":23,"column":35,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":40},{"ruleId":"5028","severity":1,"message":"5586","line":10,"column":17,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5701","line":14,"column":8,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5086","line":15,"column":8,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":22},{"ruleId":"5574","severity":1,"message":"5575","line":207,"column":153,"nodeType":"5052","messageId":"5576","endLine":207,"endColumn":154},{"ruleId":"5574","severity":1,"message":"5575","line":207,"column":156,"nodeType":"5052","messageId":"5576","endLine":207,"endColumn":157},{"ruleId":"5293","severity":1,"message":"5294","line":208,"column":33,"nodeType":"5295","messageId":"5296","endLine":208,"endColumn":34,"fix":"5744"},{"ruleId":"5046","severity":1,"message":"5047","line":311,"column":45,"nodeType":"5048","messageId":"5049","endLine":311,"endColumn":47},{"ruleId":"5046","severity":1,"message":"5047","line":358,"column":31,"nodeType":"5048","messageId":"5049","endLine":358,"endColumn":33},{"ruleId":"5046","severity":1,"message":"5047","line":376,"column":31,"nodeType":"5048","messageId":"5049","endLine":376,"endColumn":33},{"ruleId":"5046","severity":1,"message":"5047","line":396,"column":45,"nodeType":"5048","messageId":"5049","endLine":396,"endColumn":47},{"ruleId":"5046","severity":1,"message":"5047","line":424,"column":27,"nodeType":"5048","messageId":"5049","endLine":424,"endColumn":29},{"ruleId":"5046","severity":1,"message":"5047","line":437,"column":27,"nodeType":"5048","messageId":"5049","endLine":437,"endColumn":29},{"ruleId":"5578","severity":1,"message":"5579","line":551,"column":10,"nodeType":"5580","messageId":"5053","endLine":551,"endColumn":14,"fix":"5745"},{"ruleId":"5046","severity":1,"message":"5047","line":561,"column":45,"nodeType":"5048","messageId":"5049","endLine":561,"endColumn":47},{"ruleId":"5050","severity":1,"message":"5051","line":580,"column":35,"nodeType":"5052","messageId":"5053","endLine":580,"endColumn":37},{"ruleId":"5182","severity":1,"message":"5582","line":635,"column":14,"nodeType":"5030","messageId":"5184","endLine":635,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":640,"column":32,"nodeType":"5052","messageId":"5053","endLine":640,"endColumn":34},{"ruleId":"5182","severity":1,"message":"5582","line":642,"column":14,"nodeType":"5030","messageId":"5184","endLine":642,"endColumn":28},{"ruleId":"5046","severity":1,"message":"5047","line":703,"column":21,"nodeType":"5048","messageId":"5049","endLine":703,"endColumn":23},{"ruleId":"5583","severity":1,"message":"5584","line":769,"column":13,"nodeType":"5295","messageId":"5585","endLine":769,"endColumn":23},{"ruleId":"5050","severity":1,"message":"5051","line":956,"column":33,"nodeType":"5052","messageId":"5053","endLine":956,"endColumn":35},{"ruleId":"5589","severity":1,"message":"5590","line":958,"column":8,"nodeType":"5030","messageId":"5591","endLine":958,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5091","line":1008,"column":26,"nodeType":"5052","messageId":"5053","endLine":1008,"endColumn":28},{"ruleId":"5050","severity":1,"message":"5051","line":1180,"column":29,"nodeType":"5052","messageId":"5053","endLine":1180,"endColumn":31},{"ruleId":"5062","severity":1,"message":"5063","line":1182,"column":6,"nodeType":"5061","endLine":1182,"endColumn":55},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":17,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5114","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5323","line":19,"column":37,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5592","line":23,"column":38,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":43},{"ruleId":"5050","severity":1,"message":"5091","line":36,"column":22,"nodeType":"5052","messageId":"5053","endLine":36,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5593","line":42,"column":17,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5092","line":1,"column":76,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":90},{"ruleId":"5028","severity":1,"message":"5093","line":1,"column":92,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":103},{"ruleId":"5028","severity":1,"message":"5092","line":2,"column":64,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":78},{"ruleId":"5028","severity":1,"message":"5093","line":2,"column":93,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":104},{"ruleId":"5028","severity":1,"message":"5746","line":52,"column":11,"nodeType":"5030","messageId":"5031","endLine":52,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5092","line":1,"column":60,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":74},{"ruleId":"5028","severity":1,"message":"5093","line":1,"column":76,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":87},{"ruleId":"5028","severity":1,"message":"5092","line":2,"column":43,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5093","line":2,"column":83,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":94},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5092","line":2,"column":76,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":90},{"ruleId":"5028","severity":1,"message":"5093","line":2,"column":92,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":103},{"ruleId":"5442","severity":1,"message":"5747","line":72,"column":9,"nodeType":"5444","messageId":"5053","endLine":72,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5092","line":2,"column":75,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":89},{"ruleId":"5028","severity":1,"message":"5093","line":2,"column":91,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":102},{"ruleId":"5442","severity":1,"message":"5747","line":58,"column":9,"nodeType":"5444","messageId":"5053","endLine":58,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5102","line":2,"column":14,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5092","line":2,"column":76,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":90},{"ruleId":"5028","severity":1,"message":"5093","line":2,"column":92,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":103},{"ruleId":"5028","severity":1,"message":"5102","line":2,"column":10,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":22,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5278","line":2,"column":59,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":69},{"ruleId":"5028","severity":1,"message":"5092","line":2,"column":71,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":85},{"ruleId":"5028","severity":1,"message":"5093","line":2,"column":87,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":98},{"ruleId":"5028","severity":1,"message":"5748","line":2,"column":100,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":109},{"ruleId":"5028","severity":1,"message":"5085","line":4,"column":9,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5749","line":5,"column":23,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":29},{"ruleId":"5073","severity":1,"message":"5074","line":28,"column":18,"nodeType":"5061","messageId":"5075","endLine":28,"endColumn":80,"fix":"5750"},{"ruleId":"5028","severity":1,"message":"5163","line":2,"column":9,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5093","line":2,"column":110,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":121},{"ruleId":"5028","severity":1,"message":"5751","line":9,"column":8,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":13},{"ruleId":"5073","severity":1,"message":"5074","line":49,"column":16,"nodeType":"5061","messageId":"5075","endLine":49,"endColumn":67,"fix":"5752"},{"ruleId":"5028","severity":1,"message":"5077","line":3,"column":26,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5237","line":3,"column":49,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5238","line":3,"column":54,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":57},{"ruleId":"5028","severity":1,"message":"5753","line":4,"column":10,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5164","line":5,"column":9,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5077","line":6,"column":26,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5118","line":7,"column":10,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5077","line":4,"column":26,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5754","line":9,"column":8,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":15},{"ruleId":"5040","severity":1,"message":"5755","line":27,"column":4,"nodeType":"5042","endLine":27,"endColumn":6,"suggestions":"5756"},{"ruleId":"5028","severity":1,"message":"5757","line":5,"column":8,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5163","line":2,"column":22,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5758","line":8,"column":11,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5759","line":15,"column":8,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5760","line":17,"column":7,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5761","line":22,"column":10,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":15},{"ruleId":"5040","severity":1,"message":"5762","line":33,"column":8,"nodeType":"5042","endLine":33,"endColumn":10,"suggestions":"5763"},{"ruleId":"5050","severity":1,"message":"5051","line":140,"column":30,"nodeType":"5052","messageId":"5053","endLine":140,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":151,"column":30,"nodeType":"5052","messageId":"5053","endLine":151,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5764","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5765","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5158","line":29,"column":45,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5766","line":37,"column":12,"nodeType":"5030","messageId":"5031","endLine":37,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5767","line":37,"column":22,"nodeType":"5030","messageId":"5031","endLine":37,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5768","line":38,"column":12,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5769","line":45,"column":11,"nodeType":"5030","messageId":"5031","endLine":45,"endColumn":16},{"ruleId":"5040","severity":1,"message":"5299","line":54,"column":8,"nodeType":"5042","endLine":54,"endColumn":10,"suggestions":"5770"},{"ruleId":"5046","severity":1,"message":"5047","line":63,"column":31,"nodeType":"5048","messageId":"5049","endLine":63,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":74,"column":22,"nodeType":"5052","messageId":"5053","endLine":74,"endColumn":24},{"ruleId":"5069","severity":1,"message":"5070","line":107,"column":4,"nodeType":"5071","messageId":"5072","endLine":111,"endColumn":5},{"ruleId":"5028","severity":1,"message":"5771","line":145,"column":7,"nodeType":"5030","messageId":"5031","endLine":145,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":10,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5760","line":18,"column":7,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5772","line":26,"column":12,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5773","line":26,"column":22,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5761","line":28,"column":12,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5762","line":33,"column":8,"nodeType":"5042","endLine":33,"endColumn":10,"suggestions":"5774"},{"ruleId":"5028","severity":1,"message":"5775","line":50,"column":9,"nodeType":"5030","messageId":"5031","endLine":50,"endColumn":18},{"ruleId":"5050","severity":1,"message":"5051","line":167,"column":30,"nodeType":"5052","messageId":"5053","endLine":167,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":178,"column":30,"nodeType":"5052","messageId":"5053","endLine":178,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5149","line":2,"column":41,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":52},{"ruleId":"5028","severity":1,"message":"5118","line":2,"column":54,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":60},{"ruleId":"5028","severity":1,"message":"5158","line":20,"column":45,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5105","line":20,"column":56,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":61},{"ruleId":"5040","severity":1,"message":"5776","line":27,"column":8,"nodeType":"5042","endLine":27,"endColumn":14,"suggestions":"5777"},{"ruleId":"5046","severity":1,"message":"5047","line":35,"column":36,"nodeType":"5048","messageId":"5049","endLine":35,"endColumn":38},{"ruleId":"5050","severity":1,"message":"5051","line":38,"column":28,"nodeType":"5052","messageId":"5053","endLine":38,"endColumn":30},{"ruleId":"5069","severity":1,"message":"5070","line":54,"column":8,"nodeType":"5071","messageId":"5072","endLine":58,"endColumn":6},{"ruleId":"5069","severity":1,"message":"5070","line":64,"column":8,"nodeType":"5071","messageId":"5072","endLine":68,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5104","line":16,"column":9,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5778","line":74,"column":10,"nodeType":"5030","messageId":"5031","endLine":74,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5358","line":80,"column":7,"nodeType":"5030","messageId":"5031","endLine":80,"endColumn":9},{"ruleId":"5040","severity":1,"message":"5041","line":84,"column":4,"nodeType":"5042","endLine":84,"endColumn":6,"suggestions":"5779"},{"ruleId":"5050","severity":1,"message":"5051","line":116,"column":84,"nodeType":"5052","messageId":"5053","endLine":116,"endColumn":86},{"ruleId":"5073","severity":1,"message":"5074","line":231,"column":9,"nodeType":"5061","messageId":"5075","endLine":231,"endColumn":41,"fix":"5780"},{"ruleId":"5062","severity":1,"message":"5063","line":297,"column":1,"nodeType":"5061","endLine":297,"endColumn":55},{"ruleId":"5073","severity":1,"message":"5074","line":303,"column":1,"nodeType":"5061","messageId":"5075","endLine":303,"endColumn":53,"fix":"5781"},{"ruleId":"5073","severity":1,"message":"5074","line":310,"column":12,"nodeType":"5061","messageId":"5075","endLine":311,"endColumn":32,"fix":"5782"},{"ruleId":"5028","severity":1,"message":"5764","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5765","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5199","line":15,"column":5,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5278","line":16,"column":5,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5189","line":17,"column":5,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5077","line":18,"column":5,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":21,"column":5,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5760","line":24,"column":7,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5158","line":29,"column":45,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5783","line":30,"column":12,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5784","line":30,"column":19,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5785","line":32,"column":12,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":18},{"ruleId":"5040","severity":1,"message":"5786","line":48,"column":8,"nodeType":"5042","endLine":48,"endColumn":10,"suggestions":"5787"},{"ruleId":"5046","severity":1,"message":"5047","line":54,"column":37,"nodeType":"5048","messageId":"5049","endLine":54,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":59,"column":27,"nodeType":"5052","messageId":"5053","endLine":59,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5788","line":69,"column":10,"nodeType":"5030","messageId":"5031","endLine":69,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5789","line":81,"column":13,"nodeType":"5030","messageId":"5031","endLine":81,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5790","line":16,"column":10,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5760","line":17,"column":7,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5761","line":23,"column":12,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5762","line":33,"column":8,"nodeType":"5042","endLine":33,"endColumn":10,"suggestions":"5791"},{"ruleId":"5050","severity":1,"message":"5051","line":81,"column":30,"nodeType":"5052","messageId":"5053","endLine":81,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":92,"column":30,"nodeType":"5052","messageId":"5053","endLine":92,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5102","line":4,"column":19,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5792","line":6,"column":8,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5118","line":12,"column":10,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5104","line":12,"column":36,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":46},{"ruleId":"5028","severity":1,"message":"5793","line":13,"column":1,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5118","line":8,"column":10,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5104","line":8,"column":23,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5793","line":9,"column":1,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5794","line":24,"column":12,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5104","line":9,"column":27,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":37},{"ruleId":"5028","severity":1,"message":"5795","line":23,"column":9,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5285","line":62,"column":7,"nodeType":"5030","messageId":"5031","endLine":62,"endColumn":12},{"ruleId":"5040","severity":1,"message":"5299","line":68,"column":6,"nodeType":"5042","endLine":68,"endColumn":8,"suggestions":"5796"},{"ruleId":"5050","severity":1,"message":"5051","line":76,"column":32,"nodeType":"5052","messageId":"5053","endLine":76,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":79,"column":37,"nodeType":"5052","messageId":"5053","endLine":79,"endColumn":39},{"ruleId":"5062","severity":1,"message":"5063","line":111,"column":1,"nodeType":"5061","endLine":111,"endColumn":49},{"ruleId":"5073","severity":1,"message":"5074","line":118,"column":1,"nodeType":"5061","messageId":"5075","endLine":118,"endColumn":53,"fix":"5797"},{"ruleId":"5073","severity":1,"message":"5074","line":125,"column":11,"nodeType":"5061","messageId":"5075","endLine":125,"endColumn":60,"fix":"5798"},{"ruleId":"5073","severity":1,"message":"5074","line":140,"column":5,"nodeType":"5061","messageId":"5075","endLine":141,"endColumn":32,"fix":"5799"},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":29},{"ruleId":"5040","severity":1,"message":"5800","line":29,"column":10,"nodeType":"5042","endLine":29,"endColumn":12,"suggestions":"5801"},{"ruleId":"5046","severity":1,"message":"5047","line":36,"column":37,"nodeType":"5048","messageId":"5049","endLine":36,"endColumn":39},{"ruleId":"5040","severity":1,"message":"5054","line":54,"column":9,"nodeType":"5042","endLine":54,"endColumn":14,"suggestions":"5802"},{"ruleId":"5056","severity":1,"message":"5057","line":93,"column":20,"nodeType":"5052","messageId":"5058","endLine":93,"endColumn":21},{"ruleId":"5056","severity":1,"message":"5057","line":93,"column":38,"nodeType":"5052","messageId":"5058","endLine":93,"endColumn":41},{"ruleId":"5028","severity":1,"message":"5764","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5765","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5199","line":15,"column":5,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5278","line":16,"column":5,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5189","line":17,"column":5,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5077","line":18,"column":5,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":21,"column":5,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5803","line":43,"column":12,"nodeType":"5030","messageId":"5031","endLine":43,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5804","line":43,"column":17,"nodeType":"5030","messageId":"5031","endLine":43,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5158","line":61,"column":45,"nodeType":"5030","messageId":"5031","endLine":61,"endColumn":54},{"ruleId":"5040","severity":1,"message":"5299","line":64,"column":10,"nodeType":"5042","endLine":64,"endColumn":12,"suggestions":"5805"},{"ruleId":"5046","severity":1,"message":"5047","line":72,"column":33,"nodeType":"5048","messageId":"5049","endLine":72,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5806","line":119,"column":11,"nodeType":"5030","messageId":"5031","endLine":119,"endColumn":18},{"ruleId":"5807","severity":1,"message":"5808","line":125,"column":52,"nodeType":"5809","messageId":"5810","endLine":125,"endColumn":53,"suggestions":"5811"},{"ruleId":"5807","severity":1,"message":"5812","line":125,"column":54,"nodeType":"5809","messageId":"5810","endLine":125,"endColumn":55,"suggestions":"5813"},{"ruleId":"5807","severity":1,"message":"5808","line":125,"column":93,"nodeType":"5809","messageId":"5810","endLine":125,"endColumn":94,"suggestions":"5814"},{"ruleId":"5807","severity":1,"message":"5812","line":125,"column":95,"nodeType":"5809","messageId":"5810","endLine":125,"endColumn":96,"suggestions":"5815"},{"ruleId":"5807","severity":1,"message":"5808","line":125,"column":126,"nodeType":"5809","messageId":"5810","endLine":125,"endColumn":127,"suggestions":"5816"},{"ruleId":"5807","severity":1,"message":"5817","line":125,"column":130,"nodeType":"5809","messageId":"5810","endLine":125,"endColumn":131,"suggestions":"5818"},{"ruleId":"5807","severity":1,"message":"5808","line":125,"column":149,"nodeType":"5809","messageId":"5810","endLine":125,"endColumn":150,"suggestions":"5819"},{"ruleId":"5028","severity":1,"message":"5820","line":139,"column":7,"nodeType":"5030","messageId":"5031","endLine":139,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":36},{"ruleId":"5028","severity":1,"message":"5821","line":12,"column":8,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5790","line":16,"column":10,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5822","line":23,"column":12,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5823","line":23,"column":18,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5824","line":31,"column":11,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5821","line":12,"column":8,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5406","line":13,"column":10,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5407","line":13,"column":22,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5114","line":15,"column":8,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5790","line":16,"column":10,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5086","line":17,"column":8,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5760","line":19,"column":7,"nodeType":"5030","messageId":"5031","endLine":19,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5822","line":24,"column":12,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5761","line":25,"column":12,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5825","line":25,"column":19,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5123","line":26,"column":9,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":16},{"ruleId":"5040","severity":1,"message":"5762","line":29,"column":8,"nodeType":"5042","endLine":29,"endColumn":10,"suggestions":"5826"},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":26,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5764","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5765","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5106","line":12,"column":8,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5199","line":15,"column":5,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5278","line":16,"column":5,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5189","line":17,"column":5,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5077","line":18,"column":5,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":21,"column":5,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5827","line":23,"column":8,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5760","line":26,"column":7,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5804","line":30,"column":17,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5285","line":34,"column":9,"nodeType":"5030","messageId":"5031","endLine":34,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5215","line":36,"column":27,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5323","line":36,"column":37,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5158","line":36,"column":45,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5199","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5278","line":13,"column":3,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5189","line":14,"column":3,"nodeType":"5030","messageId":"5031","endLine":14,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5077","line":15,"column":3,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5078","line":18,"column":3,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":8},{"ruleId":"5028","severity":1,"message":"5764","line":20,"column":10,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5765","line":21,"column":8,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5760","line":24,"column":7,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5158","line":28,"column":45,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5105","line":28,"column":56,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":61},{"ruleId":"5028","severity":1,"message":"5828","line":29,"column":12,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5829","line":29,"column":19,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":26},{"ruleId":"5040","severity":1,"message":"5299","line":44,"column":7,"nodeType":"5042","endLine":44,"endColumn":9,"suggestions":"5830"},{"ruleId":"5046","severity":1,"message":"5047","line":49,"column":32,"nodeType":"5048","messageId":"5049","endLine":49,"endColumn":34},{"ruleId":"5050","severity":1,"message":"5051","line":52,"column":24,"nodeType":"5052","messageId":"5053","endLine":52,"endColumn":26},{"ruleId":"5069","severity":1,"message":"5070","line":67,"column":8,"nodeType":"5071","messageId":"5072","endLine":71,"endColumn":6},{"ruleId":"5028","severity":1,"message":"5402","line":5,"column":22,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5152","line":7,"column":19,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5760","line":17,"column":7,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5831","line":20,"column":7,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5832","line":27,"column":9,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5833","line":38,"column":10,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5834","line":38,"column":17,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":25},{"ruleId":"5040","severity":1,"message":"5835","line":48,"column":8,"nodeType":"5042","endLine":48,"endColumn":10,"suggestions":"5836"},{"ruleId":"5028","severity":1,"message":"5402","line":6,"column":22,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5158","line":41,"column":45,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5792","line":5,"column":8,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5402","line":7,"column":22,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5152","line":9,"column":20,"nodeType":"5030","messageId":"5031","endLine":9,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5790","line":10,"column":10,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5118","line":13,"column":22,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5117","line":24,"column":11,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5833","line":25,"column":12,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5834","line":25,"column":19,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5837","line":26,"column":12,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5838","line":26,"column":22,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5359","line":27,"column":12,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5655","line":27,"column":19,"nodeType":"5030","messageId":"5031","endLine":27,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5260","line":40,"column":9,"nodeType":"5030","messageId":"5031","endLine":40,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5839","line":41,"column":10,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":17},{"ruleId":"5062","severity":1,"message":"5063","line":79,"column":27,"nodeType":"5061","endLine":82,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5164","line":4,"column":21,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5163","line":4,"column":26,"nodeType":"5030","messageId":"5031","endLine":4,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5095","line":15,"column":12,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":19},{"ruleId":"5050","severity":1,"message":"5051","line":53,"column":46,"nodeType":"5052","messageId":"5053","endLine":53,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":56,"column":46,"nodeType":"5052","messageId":"5053","endLine":56,"endColumn":48},{"ruleId":"5050","severity":1,"message":"5051","line":59,"column":46,"nodeType":"5052","messageId":"5053","endLine":59,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5402","line":5,"column":22,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5760","line":20,"column":7,"nodeType":"5030","messageId":"5031","endLine":20,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5831","line":23,"column":7,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5832","line":30,"column":9,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5833","line":41,"column":10,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5834","line":41,"column":17,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":25},{"ruleId":"5040","severity":1,"message":"5835","line":53,"column":8,"nodeType":"5042","endLine":53,"endColumn":10,"suggestions":"5840"},{"ruleId":"5028","severity":1,"message":"5841","line":171,"column":9,"nodeType":"5030","messageId":"5031","endLine":171,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5790","line":16,"column":10,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5760","line":17,"column":7,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5761","line":23,"column":12,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5762","line":33,"column":8,"nodeType":"5042","endLine":33,"endColumn":10,"suggestions":"5842"},{"ruleId":"5050","severity":1,"message":"5051","line":98,"column":30,"nodeType":"5052","messageId":"5053","endLine":98,"endColumn":32},{"ruleId":"5050","severity":1,"message":"5051","line":109,"column":30,"nodeType":"5052","messageId":"5053","endLine":109,"endColumn":32},{"ruleId":"5028","severity":1,"message":"5402","line":6,"column":22,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5282","line":44,"column":11,"nodeType":"5030","messageId":"5031","endLine":44,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5158","line":49,"column":45,"nodeType":"5030","messageId":"5031","endLine":49,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5753","line":3,"column":11,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5764","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5765","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5199","line":15,"column":5,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5278","line":16,"column":5,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5189","line":17,"column":5,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5077","line":18,"column":5,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":21,"column":5,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5158","line":28,"column":45,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5785","line":31,"column":12,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":18},{"ruleId":"5040","severity":1,"message":"5786","line":47,"column":8,"nodeType":"5042","endLine":47,"endColumn":10,"suggestions":"5843"},{"ruleId":"5046","severity":1,"message":"5047","line":53,"column":37,"nodeType":"5048","messageId":"5049","endLine":53,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":57,"column":27,"nodeType":"5052","messageId":"5053","endLine":57,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5788","line":68,"column":10,"nodeType":"5030","messageId":"5031","endLine":68,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":29},{"ruleId":"5040","severity":1,"message":"5844","line":25,"column":8,"nodeType":"5042","endLine":25,"endColumn":10,"suggestions":"5845"},{"ruleId":"5046","severity":1,"message":"5047","line":33,"column":31,"nodeType":"5048","messageId":"5049","endLine":33,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5792","line":5,"column":8,"nodeType":"5030","messageId":"5031","endLine":5,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5402","line":7,"column":22,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5790","line":10,"column":10,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5117","line":26,"column":11,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5123","line":40,"column":9,"nodeType":"5030","messageId":"5031","endLine":40,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5260","line":41,"column":9,"nodeType":"5030","messageId":"5031","endLine":41,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5841","line":42,"column":11,"nodeType":"5030","messageId":"5031","endLine":42,"endColumn":21},{"ruleId":"5062","severity":1,"message":"5063","line":81,"column":6,"nodeType":"5061","endLine":84,"endColumn":5},{"ruleId":"5028","severity":1,"message":"5102","line":2,"column":19,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":29},{"ruleId":"5040","severity":1,"message":"5844","line":27,"column":8,"nodeType":"5042","endLine":27,"endColumn":10,"suggestions":"5846"},{"ruleId":"5062","severity":1,"message":"5063","line":110,"column":21,"nodeType":"5061","endLine":110,"endColumn":95},{"ruleId":"5028","severity":1,"message":"5605","line":12,"column":21,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":28},{"ruleId":"5028","severity":1,"message":"5847","line":45,"column":12,"nodeType":"5030","messageId":"5031","endLine":45,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5158","line":52,"column":45,"nodeType":"5030","messageId":"5031","endLine":52,"endColumn":54},{"ruleId":"5040","severity":1,"message":"5299","line":60,"column":8,"nodeType":"5042","endLine":60,"endColumn":10,"suggestions":"5848"},{"ruleId":"5046","severity":1,"message":"5047","line":68,"column":30,"nodeType":"5048","messageId":"5049","endLine":68,"endColumn":32},{"ruleId":"5073","severity":1,"message":"5074","line":215,"column":27,"nodeType":"5061","messageId":"5075","endLine":215,"endColumn":113,"fix":"5849"},{"ruleId":"5028","severity":1,"message":"5605","line":12,"column":22,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5158","line":46,"column":43,"nodeType":"5030","messageId":"5031","endLine":46,"endColumn":52},{"ruleId":"5040","severity":1,"message":"5299","line":58,"column":6,"nodeType":"5042","endLine":58,"endColumn":8,"suggestions":"5850"},{"ruleId":"5046","severity":1,"message":"5047","line":66,"column":35,"nodeType":"5048","messageId":"5049","endLine":66,"endColumn":37},{"ruleId":"5073","severity":1,"message":"5074","line":226,"column":27,"nodeType":"5061","messageId":"5075","endLine":226,"endColumn":113,"fix":"5851"},{"ruleId":"5073","severity":1,"message":"5074","line":229,"column":27,"nodeType":"5061","messageId":"5075","endLine":229,"endColumn":113,"fix":"5852"},{"ruleId":"5028","severity":1,"message":"5102","line":2,"column":19,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5085","line":10,"column":9,"nodeType":"5030","messageId":"5031","endLine":10,"endColumn":13},{"ruleId":"5040","severity":1,"message":"5844","line":32,"column":8,"nodeType":"5042","endLine":32,"endColumn":10,"suggestions":"5853"},{"ruleId":"5062","severity":1,"message":"5063","line":136,"column":7,"nodeType":"5061","endLine":139,"endColumn":3},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5402","line":6,"column":22,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":31},{"ruleId":"5028","severity":1,"message":"5117","line":23,"column":11,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5854","line":25,"column":12,"nodeType":"5030","messageId":"5031","endLine":25,"endColumn":17},{"ruleId":"5040","severity":1,"message":"5855","line":31,"column":8,"nodeType":"5042","endLine":31,"endColumn":10,"suggestions":"5856"},{"ruleId":"5046","severity":1,"message":"5047","line":40,"column":35,"nodeType":"5048","messageId":"5049","endLine":40,"endColumn":37},{"ruleId":"5046","severity":1,"message":"5047","line":57,"column":35,"nodeType":"5048","messageId":"5049","endLine":57,"endColumn":37},{"ruleId":"5062","severity":1,"message":"5063","line":125,"column":31,"nodeType":"5061","endLine":128,"endColumn":3},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":29},{"ruleId":"5040","severity":1,"message":"5844","line":24,"column":8,"nodeType":"5042","endLine":24,"endColumn":10,"suggestions":"5857"},{"ruleId":"5046","severity":1,"message":"5047","line":32,"column":31,"nodeType":"5048","messageId":"5049","endLine":32,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5102","line":3,"column":19,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5858","line":12,"column":8,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":22},{"ruleId":"5028","severity":1,"message":"5140","line":28,"column":12,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5141","line":28,"column":18,"nodeType":"5030","messageId":"5031","endLine":28,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5859","line":30,"column":12,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5860","line":30,"column":21,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":31},{"ruleId":"5050","severity":1,"message":"5051","line":85,"column":89,"nodeType":"5052","messageId":"5053","endLine":85,"endColumn":91},{"ruleId":"5050","severity":1,"message":"5051","line":87,"column":44,"nodeType":"5052","messageId":"5053","endLine":87,"endColumn":46},{"ruleId":"5028","severity":1,"message":"5764","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5765","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5106","line":12,"column":8,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5199","line":15,"column":5,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5278","line":16,"column":5,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5189","line":17,"column":5,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5077","line":18,"column":5,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":21,"column":5,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5827","line":23,"column":8,"nodeType":"5030","messageId":"5031","endLine":23,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5760","line":26,"column":7,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5215","line":36,"column":27,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5323","line":36,"column":37,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":43},{"ruleId":"5028","severity":1,"message":"5158","line":36,"column":45,"nodeType":"5030","messageId":"5031","endLine":36,"endColumn":54},{"ruleId":"5040","severity":1,"message":"5299","line":45,"column":10,"nodeType":"5042","endLine":45,"endColumn":12,"suggestions":"5861"},{"ruleId":"5046","severity":1,"message":"5047","line":53,"column":33,"nodeType":"5048","messageId":"5049","endLine":53,"endColumn":35},{"ruleId":"5050","severity":1,"message":"5051","line":57,"column":24,"nodeType":"5052","messageId":"5053","endLine":57,"endColumn":26},{"ruleId":"5024","replacedBy":"5862"},{"ruleId":"5026","replacedBy":"5863"},{"ruleId":"5028","severity":1,"message":"5864","line":1,"column":28,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5610","line":1,"column":41,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5865","line":1,"column":50,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":56},{"ruleId":"5046","severity":1,"message":"5047","line":27,"column":34,"nodeType":"5048","messageId":"5049","endLine":27,"endColumn":36},{"ruleId":"5040","severity":1,"message":"5762","line":42,"column":9,"nodeType":"5042","endLine":42,"endColumn":11,"suggestions":"5866"},{"ruleId":"5046","severity":1,"message":"5047","line":164,"column":47,"nodeType":"5048","messageId":"5049","endLine":164,"endColumn":49},{"ruleId":"5028","severity":1,"message":"5864","line":1,"column":28,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":39},{"ruleId":"5028","severity":1,"message":"5610","line":1,"column":41,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":48},{"ruleId":"5028","severity":1,"message":"5865","line":1,"column":50,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":56},{"ruleId":"5028","severity":1,"message":"5199","line":12,"column":3,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":7},{"ruleId":"5028","severity":1,"message":"5189","line":13,"column":3,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":11},{"ruleId":"5028","severity":1,"message":"5761","line":16,"column":10,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":15},{"ruleId":"5046","severity":1,"message":"5047","line":32,"column":34,"nodeType":"5048","messageId":"5049","endLine":32,"endColumn":36},{"ruleId":"5040","severity":1,"message":"5762","line":47,"column":9,"nodeType":"5042","endLine":47,"endColumn":11,"suggestions":"5867"},{"ruleId":"5050","severity":1,"message":"5051","line":117,"column":34,"nodeType":"5052","messageId":"5053","endLine":117,"endColumn":36},{"ruleId":"5050","severity":1,"message":"5051","line":128,"column":27,"nodeType":"5052","messageId":"5053","endLine":128,"endColumn":29},{"ruleId":"5046","severity":1,"message":"5047","line":207,"column":47,"nodeType":"5048","messageId":"5049","endLine":207,"endColumn":49},{"ruleId":"5028","severity":1,"message":"5159","line":3,"column":8,"nodeType":"5030","messageId":"5031","endLine":3,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5035","line":30,"column":9,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5105","line":32,"column":35,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":40},{"ruleId":"5050","severity":1,"message":"5051","line":93,"column":84,"nodeType":"5052","messageId":"5053","endLine":93,"endColumn":86},{"ruleId":"5050","severity":1,"message":"5051","line":65,"column":32,"nodeType":"5052","messageId":"5053","endLine":65,"endColumn":34},{"ruleId":"5028","severity":1,"message":"5104","line":16,"column":9,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5831","line":18,"column":7,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":12},{"ruleId":"5028","severity":1,"message":"5868","line":26,"column":7,"nodeType":"5030","messageId":"5031","endLine":26,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5778","line":83,"column":10,"nodeType":"5030","messageId":"5031","endLine":83,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5358","line":89,"column":7,"nodeType":"5030","messageId":"5031","endLine":89,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5285","line":90,"column":9,"nodeType":"5030","messageId":"5031","endLine":90,"endColumn":14},{"ruleId":"5050","severity":1,"message":"5051","line":111,"column":84,"nodeType":"5052","messageId":"5053","endLine":111,"endColumn":86},{"ruleId":"5073","severity":1,"message":"5074","line":226,"column":9,"nodeType":"5061","messageId":"5075","endLine":226,"endColumn":41,"fix":"5869"},{"ruleId":"5062","severity":1,"message":"5063","line":291,"column":1,"nodeType":"5061","endLine":291,"endColumn":55},{"ruleId":"5073","severity":1,"message":"5074","line":297,"column":1,"nodeType":"5061","messageId":"5075","endLine":297,"endColumn":53,"fix":"5870"},{"ruleId":"5073","severity":1,"message":"5074","line":304,"column":12,"nodeType":"5061","messageId":"5075","endLine":305,"endColumn":32,"fix":"5871"},{"ruleId":"5028","severity":1,"message":"5164","line":2,"column":11,"nodeType":"5030","messageId":"5031","endLine":2,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5872","line":12,"column":9,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5873","line":13,"column":10,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5874","line":13,"column":16,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5875","line":52,"column":11,"nodeType":"5030","messageId":"5031","endLine":52,"endColumn":16},{"ruleId":"5028","severity":1,"message":"5876","line":61,"column":13,"nodeType":"5030","messageId":"5031","endLine":61,"endColumn":24},{"ruleId":"5028","severity":1,"message":"5764","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5765","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5158","line":29,"column":45,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5766","line":37,"column":12,"nodeType":"5030","messageId":"5031","endLine":37,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5767","line":37,"column":22,"nodeType":"5030","messageId":"5031","endLine":37,"endColumn":33},{"ruleId":"5028","severity":1,"message":"5768","line":38,"column":12,"nodeType":"5030","messageId":"5031","endLine":38,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5769","line":45,"column":11,"nodeType":"5030","messageId":"5031","endLine":45,"endColumn":16},{"ruleId":"5040","severity":1,"message":"5299","line":55,"column":8,"nodeType":"5042","endLine":55,"endColumn":10,"suggestions":"5877"},{"ruleId":"5046","severity":1,"message":"5047","line":64,"column":31,"nodeType":"5048","messageId":"5049","endLine":64,"endColumn":33},{"ruleId":"5050","severity":1,"message":"5051","line":75,"column":22,"nodeType":"5052","messageId":"5053","endLine":75,"endColumn":24},{"ruleId":"5069","severity":1,"message":"5070","line":108,"column":4,"nodeType":"5071","messageId":"5072","endLine":112,"endColumn":5},{"ruleId":"5028","severity":1,"message":"5771","line":146,"column":7,"nodeType":"5030","messageId":"5031","endLine":146,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5872","line":12,"column":9,"nodeType":"5030","messageId":"5031","endLine":12,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5873","line":13,"column":10,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5874","line":13,"column":16,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":23},{"ruleId":"5028","severity":1,"message":"5875","line":22,"column":13,"nodeType":"5030","messageId":"5031","endLine":22,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5876","line":31,"column":15,"nodeType":"5030","messageId":"5031","endLine":31,"endColumn":26},{"ruleId":"5028","severity":1,"message":"5764","line":6,"column":10,"nodeType":"5030","messageId":"5031","endLine":6,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5765","line":7,"column":8,"nodeType":"5030","messageId":"5031","endLine":7,"endColumn":21},{"ruleId":"5028","severity":1,"message":"5199","line":15,"column":5,"nodeType":"5030","messageId":"5031","endLine":15,"endColumn":9},{"ruleId":"5028","severity":1,"message":"5278","line":16,"column":5,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":15},{"ruleId":"5028","severity":1,"message":"5189","line":17,"column":5,"nodeType":"5030","messageId":"5031","endLine":17,"endColumn":13},{"ruleId":"5028","severity":1,"message":"5077","line":18,"column":5,"nodeType":"5030","messageId":"5031","endLine":18,"endColumn":14},{"ruleId":"5028","severity":1,"message":"5078","line":21,"column":5,"nodeType":"5030","messageId":"5031","endLine":21,"endColumn":10},{"ruleId":"5028","severity":1,"message":"5760","line":24,"column":7,"nodeType":"5030","messageId":"5031","endLine":24,"endColumn":18},{"ruleId":"5028","severity":1,"message":"5158","line":29,"column":45,"nodeType":"5030","messageId":"5031","endLine":29,"endColumn":54},{"ruleId":"5028","severity":1,"message":"5783","line":30,"column":12,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":17},{"ruleId":"5028","severity":1,"message":"5784","line":30,"column":19,"nodeType":"5030","messageId":"5031","endLine":30,"endColumn":27},{"ruleId":"5028","severity":1,"message":"5785","line":32,"column":12,"nodeType":"5030","messageId":"5031","endLine":32,"endColumn":18},{"ruleId":"5040","severity":1,"message":"5786","line":48,"column":8,"nodeType":"5042","endLine":48,"endColumn":10,"suggestions":"5878"},{"ruleId":"5046","severity":1,"message":"5047","line":54,"column":37,"nodeType":"5048","messageId":"5049","endLine":54,"endColumn":39},{"ruleId":"5050","severity":1,"message":"5051","line":59,"column":27,"nodeType":"5052","messageId":"5053","endLine":59,"endColumn":29},{"ruleId":"5028","severity":1,"message":"5788","line":69,"column":10,"nodeType":"5030","messageId":"5031","endLine":69,"endColumn":19},{"ruleId":"5028","severity":1,"message":"5789","line":81,"column":13,"nodeType":"5030","messageId":"5031","endLine":81,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5032","line":1,"column":16,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":25},{"ruleId":"5028","severity":1,"message":"5029","line":1,"column":27,"nodeType":"5030","messageId":"5031","endLine":1,"endColumn":35},{"ruleId":"5028","severity":1,"message":"5413","line":8,"column":10,"nodeType":"5030","messageId":"5031","endLine":8,"endColumn":20},{"ruleId":"5028","severity":1,"message":"5879","line":13,"column":11,"nodeType":"5030","messageId":"5031","endLine":13,"endColumn":15},{"ruleId":"5040","severity":1,"message":"5880","line":35,"column":7,"nodeType":"5042","endLine":35,"endColumn":9,"suggestions":"5881"},{"ruleId":"5028","severity":1,"message":"5068","line":16,"column":11,"nodeType":"5030","messageId":"5031","endLine":16,"endColumn":12},{"ruleId":"5040","severity":1,"message":"5882","line":36,"column":10,"nodeType":"5042","endLine":36,"endColumn":16,"suggestions":"5883"},"no-native-reassign",["5884"],"no-negated-in-lhs",["5885"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'LoginForm' is defined but never used.","'alert' is assigned a value but never used.",["5884"],["5885"],"'linkData' is assigned a value but never used.","'setShowData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showLinkData'. Either include it or remove the dependency array.","ArrayExpression",["5886"],"React Hook useEffect has a missing dependency: 'getTime'. Either include it or remove the dependency array.",["5887"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'scrollEff'. Either include it or remove the dependency array.",["5888"],"no-mixed-operators","Unexpected mix of '<' and '==='. Use parentheses to clarify the intended order of operations.","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'stateName' is assigned a value but never used.","'CountryNumStyle' is assigned a value but never used.",["5889"],"Array.prototype.filter() expects a return value from arrow function.","'s' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"5890","text":"5891"},"'CardTitle' is defined but never used.","'Table' is defined but never used.","'Spinner' is defined but never used.","'setDisplayQuery' is assigned a value but never used.","'declinedStatus' is assigned a value but never used.","'routesData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'myConfig'. Either include them or remove the dependency array.",["5892"],"'Link' is defined but never used.","'CommonServices' is defined but never used.","'sessionId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["5893"],"'logout' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'useAlert' is defined but never used.","'bgColor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CountAllQuery', 'CountDeclined', 'CountInprogressAllocation', and 'CountInprogressProposal'. Either include them or remove the dependency array.",["5894"],"React Hook useEffect has missing dependencies: 'getAcceptedProposal', 'getAllProposal', 'getDeclinedProposal', and 'getInprogressProposal'. Either include them or remove the dependency array.",["5895"],"React Hook useEffect has missing dependencies: 'getAllAssignment', 'getCompletedAssignment', 'getCustomerDeclinedPayment', and 'getInprogressAssignment'. Either include them or remove the dependency array.",["5896"],"'makeStyles' is defined but never used.","'Breadcrumbs' is defined but never used.","'Typography' is defined but never used.","'reset' is assigned a value but never used.","'classNames' is defined but never used.","'amount_fixed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalDetails'. Either include it or remove the dependency array.",["5897"],"'date' is assigned a value but never used.","'convert' is defined but never used.","'yupResolver' is defined but never used.","'yup' is defined but never used.","'Swal' is defined but never used.",["5898"],"'Layout' is defined but never used.","'userId' is assigned a value but never used.","'Button' is defined but never used.",["5899"],"React Hook useEffect has a missing dependency: 'getChatting'. Either include it or remove the dependency array.",["5900"],"'Loader' is defined but never used.","'history' is assigned a value but never used.","'message_type' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.obj'. Either include it or remove the dependency array.",["5901"],"'ArrowBackIcon' is defined but never used.","'ImageUrl' is defined but never used.","'val3' is assigned a value but never used.","'setVal3' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAssementYear' and 'getQuery'. Either include them or remove the dependency array.",["5902"],"'timer' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useEffect has a missing dependency: 'getMessage'. Either include it or remove the dependency array.",["5903"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["5904"],"React Hook useEffect has missing dependencies: 'getAllPaid', 'getPaid', and 'getUnpaid'. Either include them or remove the dependency array.",["5905"],"'PaymentIcon' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'BootstrapTable' is defined but never used.","'baseUrl2' is defined but never used.","'baseUrl3' is defined but never used.","React Hook useEffect has a missing dependency: 'paydetails2'. Either include it or remove the dependency array.",["5906"],{"range":"5907","text":"5891"},"'axios' is defined but never used.","'baseUrl' is defined but never used.","'getValues' is assigned a value but never used.","'Footer' is defined but never used.","React Hook useEffect has a missing dependency: 'myConfig'. Either include it or remove the dependency array.",["5908"],"'Grid' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","'adminsessionId' is assigned a value but never used.",["5909"],"'nn' is assigned a value but never used.","'mcatname' is assigned a value but never used.","'custCate2' is assigned a value but never used.","'postValue' is assigned a value but never used.","'emailPost' is assigned a value but never used.","'setEmailPost' is assigned a value but never used.","'valiEmailPost' is assigned a value but never used.","'setValiemailPost' is assigned a value but never used.","'invalidPost' is assigned a value but never used.","'setInvalidPost' is assigned a value but never used.","'wEmailPost' is assigned a value but never used.","'setWemailPost' is assigned a value but never used.","'display' is assigned a value but never used.",["5910"],["5911"],"no-redeclare","'categeryName' is already defined.","redeclared","'allData1' is assigned a value but never used.","'emailHandler' is assigned a value but never used.","'emailValidation' is assigned a value but never used.","'Redirect' is defined but never used.","'CardBody' is defined but never used.","'Tooltip' is defined but never used.","'expectedDate' is assigned a value but never used.","'tlkey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQueryData' and 'getTaxLeader'. Either include them or remove the dependency array.",["5912"],"React Hook useEffect has a missing dependency: 'getQuery'. Either include it or remove the dependency array.",["5913"],"'expdeliverydate' is assigned a value but never used.","'expectedDeliveryDate' is assigned a value but never used.","'Card' is defined but never used.",["5914"],"'createContext' is defined but never used.",["5915"],"'tableIndex' is assigned a value but never used.","'Reset' is defined but never used.","'Option' is assigned a value but never used.","'store2' is assigned a value but never used.","'setStore2' is assigned a value but never used.","'mcategory' is assigned a value but never used.","'mdata' is assigned a value but never used.","'setmdata' is assigned a value but never used.","'mdataName' is assigned a value but never used.","'setMdataname' is assigned a value but never used.","'error2' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'register' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTeamLeader'. Either include it or remove the dependency array.",["5916"],"'data8' is assigned a value but never used.","'data10' is assigned a value but never used.","'data11' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data5', 'defSubValue', and 'defValue'. Either include them or remove the dependency array.",["5917"],"React Hook useEffect has a missing dependency: 'getSubCategory'. Either include it or remove the dependency array.",["5918"],"'ind' is assigned a value but never used.",["5919"],"React Hook useEffect has missing dependencies: 'CountAllAssignment', 'CountDraftReport', and 'CountFinalReport'. Either include them or remove the dependency array.",["5920"],"'modalData' is assigned a value but never used.","'showTable' is assigned a value but never used.","'paymentUrlcopy' is assigned a value but never used.","'setPaymentUrlCopy' is assigned a value but never used.",["5921"],"'openModal' is assigned a value but never used.","'Container' is assigned a value but never used.","'TaxProffesionalService' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'numAvail' is assigned a value but never used.","'error' is assigned a value but never used.","'teamleader' is assigned a value but never used.","'setTeamLeader' is assigned a value but never used.","'tl' is assigned a value but never used.","'setTl' is assigned a value but never used.","'post1' is assigned a value but never used.","'setPost1' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'post_na' is assigned a value but never used.","'setPost_na' is assigned a value but never used.","'a' is defined but never used.","'dirvalue' is assigned a value but never used.","'indirvalue' is assigned a value but never used.","'allsubcatvalue' is assigned a value but never used.","'vv' is already defined.",["5922"],"React Hook useEffect has a missing dependency: 'getTutorial'. Either include it or remove the dependency array.",["5923"],["5924"],"'kk' is assigned a value but never used.","'parentCategoryName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTaxProf'. Either include it or remove the dependency array.",["5925"],"'del' is assigned a value but never used.","'subCat' is assigned a value but never used.","'setsubCat' is assigned a value but never used.","'digit2' is assigned a value but never used.",["5926"],"'dd' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFeedback'. Either include it or remove the dependency array.",["5927"],["5928"],"'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.","'Recording' is defined but never used.","'CardHeader' is defined but never used.","'tabIndex' is assigned a value but never used.","'setTabIndex' is assigned a value but never used.","'userid' is assigned a value but never used.","'myConfig' is assigned a value but never used.",["5929"],["5930"],"'getId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getRecording'. Either include it or remove the dependency array.",["5931"],["5932"],"'myPurpose' is assigned a value but never used.","'setPurpose' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCustomer'. Either include it or remove the dependency array.",["5933"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"5934","text":"5935"},"'deleteCliente' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["5936"],{"range":"5937","text":"5891"},"'useLayoutEffect' is defined but never used.","'proc' is assigned a value but never used.","'unproc' is assigned a value but never used.",{"range":"5938","text":"5891"},"'admin_declined_query' is assigned a value but never used.","'customer_declined_Query' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myConfig' and 'userid'. Either include them or remove the dependency array.",["5939"],"'Mandatory' is defined but never used.","'subCategory' is assigned a value but never used.","'setSubCategory' is assigned a value but never used.","'custCate' is assigned a value but never used.","'categoryData' is assigned a value but never used.","'firstDay' is assigned a value but never used.",["5940"],["5941"],"React Hook useEffect has missing dependencies: 'getCompany', 'getData', 'getTeamLeader', and 'getupdateQuery'. Either include them or remove the dependency array.",["5942"],"React Hook useEffect has a missing dependency: 'getupdateQuery'. Either include it or remove the dependency array.",["5943"],["5944"],"'errors' is assigned a value but never used.",["5945"],["5946"],"'result' is defined but never used.","'clientDiscussion' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentList'. Either include it or remove the dependency array.",["5947"],"'declined2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQuery', 'id', and 'myConfig'. Either include them or remove the dependency array.",["5948"],["5949"],"'tpkey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQueryData' and 'getTaxProfession'. Either include them or remove the dependency array.",["5950"],["5951"],["5952"],["5953"],"'declined' is assigned a value but never used.",["5954"],"'store' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'scopeError' is assigned a value but never used.","'wrong' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCompany' and 'getQuery'. Either include them or remove the dependency array.",["5955"],["5956"],"'a' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'post_name' is defined but never used.","'teamleader1' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAdditionalQuery' and 'getQueryDetails'. Either include them or remove the dependency array.",["5957"],"'useForm' is defined but never used.","'id' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPaymentStatus'. Either include it or remove the dependency array.",["5958"],"'defaultSorted' is assigned a value but never used.",["5959"],["5960"],"'isActive' is assigned a value but never used.","'isLogout' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'getInCompleteAssingment'. Either include it or remove the dependency array.",["5961"],"'OptGroup' is assigned a value but never used.","'status' is assigned a value but never used.","'clcomp' is assigned a value but never used.","'clinpro' is assigned a value but never used.","'des' is assigned a value but never used.",["5962"],["5963"],"'setId' is assigned a value but never used.","'hide' is assigned a value but never used.","'setHide' is assigned a value but never used.",["5964"],["5965"],"'useFieldArray' is defined but never used.","'Alert' is defined but never used.","'setError' is assigned a value but never used.","'company2' is assigned a value but never used.",["5966"],["5967"],["5968"],["5969"],"'ChangeHistoryIcon' is defined but never used.","'DiscussProposal' is defined but never used.","'HelpIcon' is defined but never used.","'cust_id' is assigned a value but never used.",["5970"],{"range":"5971","text":"5891"},"'AssessmentIcon' is defined but never used.",["5972"],{"range":"5973","text":"5891"},["5974"],"'useParams' is defined but never used.","'assignNo' is assigned a value but never used.","'ViewDiscussionToggel' is assigned a value but never used.",["5975"],"'DeleteIcon' is defined but never used.","'EditQuery' is defined but never used.","'UploadDocument' is defined but never used.","'FeedBackICon' is defined but never used.",["5976"],"React Hook useEffect has a missing dependency: 'getPendingforAcceptance'. Either include it or remove the dependency array.",["5977"],"'useHistory' is defined but never used.","'AdditionalQuery' is defined but never used.","'AddAdditionalQuery' is defined but never used.","'DraftReports' is defined but never used.","React Hook useEffect has a missing dependency: 'getHistory'. Either include it or remove the dependency array.",["5978"],"'Alerts' is defined but never used.","'amount' is assigned a value but never used.","'payment_terms' is assigned a value but never used.","'no_of_installment' is assigned a value but never used.","'installment_amount' is assigned a value but never used.","'amount_type' is assigned a value but never used.","'amount_hourly' is assigned a value but never used.","'installAmount' is assigned a value but never used.",["5979"],"'ReportUrl' is defined but never used.","'Schema' is assigned a value but never used.",["5980"],"Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","'assignment' is assigned a value but never used.","'values' is defined but never used.","'records' is assigned a value but never used.",["5981"],"'ChangeFormateDate' is defined but never used.","'name' is assigned a value but never used.","'toggleState' is assigned a value but never used.","'toggleTab' is assigned a value but never used.","no-dupe-keys","Duplicate key 'myClassHover'.","ObjectExpression","React Hook useEffect has a missing dependency: 'getFeedback2'. Either include it or remove the dependency array.",["5982"],"React Hook useEffect has a missing dependency: 'getFeedbacktl'. Either include it or remove the dependency array.",["5983"],"React Hook useEffect has a missing dependency: 'getFeedbacktp'. Either include it or remove the dependency array.",["5984"],"'handleClickCms' is assigned a value but never used.","'chatHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalList'. Either include it or remove the dependency array.",["5985"],["5986"],["5987"],"'AccountBalanceIcon' is defined but never used.","'id2' is assigned a value but never used.","'setId2' is assigned a value but never used.","'tds' is assigned a value but never used.","'setTds' is assigned a value but never used.",["5988"],"Block is redundant.","redundantBlock",["5989"],"'Records' is defined but never used.","'FileCopyIcon' is defined but never used.",["5990"],"'setShowCopyUrl' is assigned a value but never used.","'copyTitle' is assigned a value but never used.",["5991"],"'ModalVideo' is defined but never used.","'ReactHlsPlayer' is defined but never used.",["5992"],"'modalBox' is assigned a value but never used.","'canBtn' is assigned a value but never used.",{"range":"5993","text":"5891"},{"range":"5994","text":"5891"},"'date_of_delivery' is assigned a value but never used.","'cust_accept_date' is assigned a value but never used.","'timeTaken' is assigned a value but never used.","'difference' is assigned a value but never used.",{"range":"5995","text":"5891"},"'NavLink' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'DescriptionOutlinedIcon' is defined but never used.","'tlname' is assigned a value but never used.","'dueDate' is assigned a value but never used.","'nd' is assigned a value but never used.",{"range":"5996","text":"5891"},"'selectedData' is assigned a value but never used.","'setSelectedData' is assigned a value but never used.","'tax2' is assigned a value but never used.","'setTax2' is assigned a value but never used.","'status1' is assigned a value but never used.","'item' is assigned a value but never used.","'feedbackNumber' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'services2' is assigned a value but never used.","'disabled' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getServices'. Either include it or remove the dependency array.",["5997"],"React Hook useEffect has missing dependencies: 'cgetRate', 'getDataild', 'props.billNo', 'props.generated', 'props.gstNo', and 'tdsRate'. Either include them or remove the dependency array. If 'setGstNum' needs the current value of 'props.gstNo', you can also switch to useReducer instead of useState and read 'props.gstNo' in the reducer.",["5998"],"React Hook useEffect has a missing dependency: 'getNotification'. Either include it or remove the dependency array.",["5999"],"React Hook useEffect has a missing dependency: 'panel'. Either include it or remove the dependency array.",["6000"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has missing dependencies: 'cgetRate', 'getDataild', 'props.billNo', 'props.generated', 'props.gstNo', 'props.id', and 'tdsRate'. Either include them or remove the dependency array. If 'setGstNum' needs the current value of 'props.gstNo', you can also switch to useReducer instead of useState and read 'props.gstNo' in the reducer.",["6001"],["6002"],["6003"],"'Select' is defined but never used.","'MonthView' is defined but never used.","'DragDropProvider' is defined but never used.","'em' is assigned a value but never used.","'loading' is assigned a value but never used.","'SetbaseMode' is assigned a value but never used.","'SetTranscode' is assigned a value but never used.","'SetAttendeeMode' is assigned a value but never used.","'setShowVideoIcon' is assigned a value but never used.","'SetVideoProfile' is assigned a value but never used.","'setCurrentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAssignmentNo', 'getData', and 'getUsers'. Either include them or remove the dependency array.",["6004"],"'msg' is already defined.","'variable' is already defined.","'AdminFilter' is defined but never used.","'Payment' is defined but never used.","'assignmentCount' is assigned a value but never used.","'assingmentStatus' is assigned a value but never used.","'viewData' is assigned a value but never used.","'ViewHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentData'. Either include it or remove the dependency array.",["6005"],["6006"],"'paymentcount' is assigned a value but never used.",["6007"],["6008"],{"range":"6009","text":"5891"},["6010"],{"range":"6011","text":"5891"},"React Hook useEffect has a missing dependency: 'getPendingForAllocation'. Either include it or remove the dependency array.",["6012"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllQueriesData'. Either include it or remove the dependency array.",["6013"],"React Hook useEffect has a missing dependency: 'getPendingForPayment'. Either include it or remove the dependency array.",["6014"],"React Hook useEffect has a missing dependency: 'getPendingForProposals'. Either include it or remove the dependency array.",["6015"],"React Hook useEffect has a missing dependency: 'getDeclinedProposal'. Either include it or remove the dependency array.",["6016"],"React Hook useEffect has a missing dependency: 'getAcceptedProposal'. Either include it or remove the dependency array.",["6017"],"React Hook useEffect has a missing dependency: 'getPendingAcceptedProposal'. Either include it or remove the dependency array.",["6018"],"'ShowProposal' is defined but never used.","React Hook useEffect has a missing dependency: 'getProposalData'. Either include it or remove the dependency array.",["6019"],"'IntegratedEditing' is defined but never used.","'owner' is assigned a value but never used.",["6020"],"'messages' is assigned a value but never used.","'Cookies' is defined but never used.","'viewStyle' is assigned a value but never used.",["6021"],"'RecordVoiceOverIcon' is defined but never used.","'customer_id' is assigned a value but never used.","'customer_secret' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",{"range":"6022","text":"6023"},"no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"6024","text":"6025"},"'praticipantVar' is already defined.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","noDirectMutation","'red' is defined but never used.",{"range":"6026","text":"6023"},{"range":"6027","text":"6025"},"no-use-before-define","'resourceId' was used before it was defined.","usedBeforeDefined","'start' is assigned a value but never used.","'fileList' is assigned a value but never used.","'formData2' is assigned a value but never used.",["6028"],["6029"],["6030"],"'acceptHandler' is assigned a value but never used.",["6031"],["6032"],"'proposalCount' is assigned a value but never used.","'reject' is assigned a value but never used.","'setRejected' is assigned a value but never used.",["6033"],"'EyeIcon' is defined but never used.",["6034"],["6035"],["6036"],"'rightAli' is assigned a value but never used.","'useMemo' is defined but never used.","'queriesCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueriesData'. Either include it or remove the dependency array.",["6037"],"Unexpected mix of '>' and '==='. Use parentheses to clarify the intended order of operations.",["6038"],"'FeedbackIcon' is defined but never used.","'PublishIcon' is defined but never used.",["6039"],"'arr' is assigned a value but never used.",["6040"],"'showManual' is assigned a value but never used.","'nextLogin' is assigned a value but never used.","'currentTime' is assigned a value but never used.",["6041"],{"range":"6042","text":"5891"},"'copyFun' is assigned a value but never used.","'selectInputRef' is assigned a value but never used.","'selectInputRef2' is assigned a value but never used.","'teamleader44' is assigned a value but never used.","'taxprofessional44' is assigned a value but never used.","'pp' is assigned a value but never used.","'dir' is assigned a value but never used.","'indir' is assigned a value but never used.","'item2' is assigned a value but never used.","'setItem2' is assigned a value but never used.",["6043"],["6044"],"React Hook useEffect has missing dependencies: 'getData', 'getTaxProf', 'getTeamLeader', and 'getupdateQuery'. Either include them or remove the dependency array.",["6045"],"React Hook useEffect has missing dependencies: 'getTaxProf' and 'getTeamLeader'. Either include them or remove the dependency array.",["6046"],"'options3' is assigned a value but never used.","'options4' is assigned a value but never used.","'teamLeader' is assigned a value but never used.","'taxProfessional' is assigned a value but never used.",["6047"],["6048"],["6049"],["6050"],"'myStyle1' is assigned a value but never used.","'myStyle2' is assigned a value but never used.",["6051"],["6052"],["6053"],"'setCount' is assigned a value but never used.","'ViewDiscussion' is assigned a value but never used.","'setViewDiscussion' is assigned a value but never used.",["6054"],"'rowStyle2' is assigned a value but never used.",["6055"],"'DraftReportUploadIcon' is defined but never used.",["6056"],"'TaxProfessionalFilter' is defined but never used.",["6057"],"'FinalReportUploadIcon' is defined but never used.","'finalId' is assigned a value but never used.","'setFinalId' is assigned a value but never used.",["6058"],["6059"],["6060"],["6061"],["6062"],["6063"],"'localeData' is defined but never used.",["6064"],["6065"],["6066"],["6067"],"'displayQuery' is assigned a value but never used.",["6068"],"'CompleteData' is defined but never used.","'DeclinedQuery' is defined but never used.","'complete' is assigned a value but never used.","'Declined' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allQuery22', 'myConfig', and 'userid'. Either include them or remove the dependency array.",["6069"],"'TeamFilter' is defined but never used.","'ChatHistory' is defined but never used.","'OutlinedInputIcons' is defined but never used.","'MessageIcon' is defined but never used.","'ViewDiscussionIcon' is defined but never used.",["6070"],["6071"],{"range":"6072","text":"5891"},["6073"],["6074"],["6075"],"React Hook useEffect has a missing dependency: 'checkAssigned'. Either include it or remove the dependency array.",["6076"],["6077"],"'$' is defined but never used.","'setTaxId' is assigned a value but never used.",["6078"],["6079"],"React Hook useEffect has missing dependencies: 'getData', 'getTeamLeader', and 'getupdateQuery'. Either include them or remove the dependency array.",["6080"],["6081"],["6082"],"React Hook useEffect has a missing dependency: 'getReport'. Either include it or remove the dependency array.",["6083"],{"range":"6084","text":"5891"},"'setValue' is assigned a value but never used.",["6085"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["6086"],{"range":"6087","text":"5891"},["6088"],["6089"],"'CardContent' is defined but never used.","'PaymentDecline' is defined but never used.",["6090"],{"range":"6091","text":"5891"},["6092"],{"range":"6093","text":"5891"},["6094"],{"range":"6095","text":"6096"},{"range":"6097","text":"6025"},["6098"],["6099"],["6100"],["6101"],["6102"],"'addPaymentModal' is assigned a value but never used.","'setPaymentModal' is assigned a value but never used.",["6103"],"'incompleteData' is assigned a value but never used.","'ActionIcon' is defined but never used.",["6104"],["6105"],"'pendingData' is assigned a value but never used.",["6106"],["6107"],["6108"],{"range":"6109","text":"6096"},{"range":"6110","text":"6025"},"'classes' is assigned a value but never used.","Duplicate key 'root3'.","'CardMedia' is defined but never used.","'scroll' is defined but never used.",{"range":"6111","text":"5891"},"'style' is defined but never used.",{"range":"6112","text":"5891"},"'styled' is defined but never used.","'Content' is defined but never used.","React Hook useEffect has a missing dependency: 'tar'. Either include it or remove the dependency array.",["6113"],"'mazars' is defined but never used.","'colorCode' is assigned a value but never used.","'myImg' is defined but never used.","'MyContainer' is assigned a value but never used.","'check' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["6114"],"'CKEditor' is defined but never used.","'ClassicEditor' is defined but never used.","'editData' is assigned a value but never used.","'setEditData' is assigned a value but never used.","'editorError' is assigned a value but never used.","'Quill' is assigned a value but never used.",["6115"],"'getEditValue' is assigned a value but never used.","'myVal222' is assigned a value but never used.","'setMyVal22' is assigned a value but never used.",["6116"],"'editQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getEditData'. Either include it or remove the dependency array.",["6117"],"'showData' is assigned a value but never used.",["6118"],{"range":"6119","text":"5891"},{"range":"6120","text":"5891"},{"range":"6121","text":"5891"},"'pages' is assigned a value but never used.","'getPages' is assigned a value but never used.","'pageto' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPageValue'. Either include it or remove the dependency array.",["6122"],"'getToPage' is assigned a value but never used.","'message' is assigned a value but never used.","'Markup' is defined but never used.",["6123"],"'Data' is defined but never used.","'TableHead' is defined but never used.","'count2' is assigned a value but never used.","'Disclamair' is assigned a value but never used.",["6124"],{"range":"6125","text":"5891"},{"range":"6126","text":"5891"},{"range":"6127","text":"5891"},"React Hook useEffect has a missing dependency: 'latestNews'. Either include it or remove the dependency array.",["6128"],["6129"],"'det' is assigned a value but never used.","'addDet' is assigned a value but never used.",["6130"],"'myLabel' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["6131","6132"],"Unnecessary escape character: \\$.",["6133","6134"],["6135","6136"],["6137","6138"],["6139","6140"],"Unnecessary escape character: \\/.",["6141","6142"],["6143","6144"],"'myOrder' is assigned a value but never used.","'DataTablepopulated' is defined but never used.","'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'columns' is assigned a value but never used.","'setCheck' is assigned a value but never used.",["6145"],"'ReactQuill' is defined but never used.","'news' is assigned a value but never used.","'setNews' is assigned a value but never used.",["6146"],"'MyBox' is assigned a value but never used.","'InnerBox' is assigned a value but never used.","'large' is assigned a value but never used.","'setLarge' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getGalleryData'. Either include it or remove the dependency array.",["6147"],"'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'enLarge' is assigned a value but never used.",["6148"],"'playVideo2' is assigned a value but never used.",["6149"],["6150"],"React Hook useEffect has a missing dependency: 'getImages'. Either include it or remove the dependency array.",["6151"],["6152"],"'images' is assigned a value but never used.",["6153"],{"range":"6154","text":"5891"},["6155"],{"range":"6156","text":"5891"},{"range":"6157","text":"5891"},["6158"],"'video' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getGalleryVideo'. Either include it or remove the dependency array.",["6159"],["6160"],"'ExpandMoreIcon' is defined but never used.","'heading' is assigned a value but never used.","'setHeading' is assigned a value but never used.",["6161"],["5884"],["5885"],"'useCallback' is defined but never used.","'useRef' is defined but never used.",["6162"],["6163"],"'ImgBox' is assigned a value but never used.",{"range":"6164","text":"5891"},{"range":"6165","text":"5891"},{"range":"6166","text":"5891"},"'editor' is assigned a value but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'table' is assigned a value but never used.","'snowContent' is assigned a value but never used.",["6167"],["6168"],"'role' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addEvents', 'removeEvents', and 'timer'. Either include them or remove the dependency array.",["6169"],"React Hook useEffect has missing dependencies: 'handleLogout' and 'show'. Either include them or remove the dependency array. If 'handleLogout' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["6170"],"no-global-assign","no-unsafe-negation",{"desc":"6171","fix":"6172"},{"desc":"6173","fix":"6174"},{"desc":"6175","fix":"6176"},{"desc":"6173","fix":"6177"},[11689,11689]," rel=\"noreferrer\"",{"desc":"6178","fix":"6179"},{"desc":"6180","fix":"6181"},{"desc":"6182","fix":"6183"},{"desc":"6184","fix":"6185"},{"desc":"6186","fix":"6187"},{"desc":"6188","fix":"6189"},{"desc":"6173","fix":"6190"},{"desc":"6173","fix":"6191"},{"desc":"6192","fix":"6193"},{"desc":"6194","fix":"6195"},{"desc":"6196","fix":"6197"},{"desc":"6198","fix":"6199"},{"desc":"6198","fix":"6200"},{"desc":"6201","fix":"6202"},{"desc":"6203","fix":"6204"},[9003,9003],{"desc":"6205","fix":"6206"},{"desc":"6205","fix":"6207"},{"desc":"6205","fix":"6208"},{"desc":"6209","fix":"6210"},{"desc":"6211","fix":"6212"},{"desc":"6213","fix":"6214"},{"desc":"6215","fix":"6216"},{"desc":"6182","fix":"6217"},{"desc":"6218","fix":"6219"},{"desc":"6220","fix":"6221"},{"desc":"6222","fix":"6223"},{"desc":"6201","fix":"6224"},{"desc":"6225","fix":"6226"},{"desc":"6203","fix":"6227"},{"desc":"6205","fix":"6228"},{"desc":"6229","fix":"6230"},{"desc":"6209","fix":"6231"},{"desc":"6232","fix":"6233"},{"desc":"6234","fix":"6235"},{"desc":"6236","fix":"6237"},{"desc":"6215","fix":"6238"},{"desc":"6192","fix":"6239"},{"desc":"6198","fix":"6240"},{"desc":"6241","fix":"6242"},{"desc":"6194","fix":"6243"},{"desc":"6244","fix":"6245"},[3526,3534],"\n      .",{"desc":"6246","fix":"6247"},[3258,3258],[4668,4668],{"desc":"6248","fix":"6249"},{"desc":"6205","fix":"6250"},{"desc":"6209","fix":"6251"},{"desc":"6252","fix":"6253"},{"desc":"6254","fix":"6255"},{"desc":"6256","fix":"6257"},{"desc":"6232","fix":"6258"},{"desc":"6248","fix":"6259"},{"desc":"6260","fix":"6261"},{"desc":"6262","fix":"6263"},{"desc":"6264","fix":"6265"},{"desc":"6266","fix":"6267"},{"desc":"6213","fix":"6268"},{"desc":"6201","fix":"6269"},{"desc":"6248","fix":"6270"},{"desc":"6248","fix":"6271"},{"desc":"6272","fix":"6273"},{"desc":"6178","fix":"6274"},{"desc":"6275","fix":"6276"},{"desc":"6277","fix":"6278"},{"desc":"6277","fix":"6279"},{"desc":"6277","fix":"6280"},{"desc":"6281","fix":"6282"},{"desc":"6260","fix":"6283"},{"desc":"6284","fix":"6285"},{"desc":"6260","fix":"6286"},{"desc":"6284","fix":"6287"},{"desc":"6272","fix":"6288"},{"desc":"6178","fix":"6289"},{"desc":"6260","fix":"6290"},{"desc":"6284","fix":"6291"},{"desc":"6277","fix":"6292"},[13426,13426],{"desc":"6277","fix":"6293"},[13361,13361],{"desc":"6277","fix":"6294"},{"desc":"6281","fix":"6295"},{"desc":"6281","fix":"6296"},{"desc":"6297","fix":"6298"},{"desc":"6299","fix":"6300"},{"desc":"6299","fix":"6301"},{"desc":"6302","fix":"6303"},{"desc":"6284","fix":"6304"},{"desc":"6305","fix":"6306"},{"desc":"6307","fix":"6308"},{"desc":"6309","fix":"6310"},{"desc":"6311","fix":"6312"},{"desc":"6311","fix":"6313"},{"desc":"6311","fix":"6314"},{"desc":"6311","fix":"6315"},{"desc":"6234","fix":"6316"},{"desc":"6311","fix":"6317"},{"desc":"6311","fix":"6318"},{"desc":"6241","fix":"6319"},[2143,2143],[1116,1116],[1515,1515],[11821,11821],{"desc":"6320","fix":"6321"},{"desc":"6322","fix":"6323"},{"desc":"6324","fix":"6325"},{"desc":"6326","fix":"6327"},{"desc":"6328","fix":"6329"},{"desc":"6299","fix":"6330"},{"desc":"6331","fix":"6332"},{"desc":"6333","fix":"6334"},{"desc":"6335","fix":"6336"},{"desc":"6284","fix":"6337"},{"desc":"6277","fix":"6338"},{"desc":"6277","fix":"6339"},[11290,11290],{"desc":"6277","fix":"6340"},[11441,11441],{"desc":"6341","fix":"6342"},{"desc":"6343","fix":"6344"},{"desc":"6345","fix":"6346"},{"desc":"6347","fix":"6348"},{"desc":"6349","fix":"6350"},{"desc":"6351","fix":"6352"},{"desc":"6353","fix":"6354"},{"desc":"6355","fix":"6356"},{"desc":"6333","fix":"6357"},{"desc":"6302","fix":"6358"},[3418,3421],"\n .",[11736,11747],"",[4169,4172],[13709,13720],{"desc":"6178","fix":"6359"},{"desc":"6335","fix":"6360"},{"desc":"6335","fix":"6361"},{"desc":"6335","fix":"6362"},{"desc":"6335","fix":"6363"},{"desc":"6355","fix":"6364"},{"desc":"6355","fix":"6365"},{"desc":"6355","fix":"6366"},{"desc":"6355","fix":"6367"},{"desc":"6368","fix":"6369"},{"desc":"6368","fix":"6370"},{"desc":"6368","fix":"6371"},{"desc":"6368","fix":"6372"},{"desc":"6203","fix":"6373"},[7505,7505],{"desc":"6205","fix":"6374"},{"desc":"6209","fix":"6375"},{"desc":"6376","fix":"6377"},{"desc":"6378","fix":"6379"},{"desc":"6241","fix":"6380"},{"desc":"6192","fix":"6381"},{"desc":"6264","fix":"6382"},{"desc":"6260","fix":"6383"},{"desc":"6384","fix":"6385"},{"desc":"6198","fix":"6386"},{"desc":"6248","fix":"6387"},{"desc":"6311","fix":"6388"},{"desc":"6311","fix":"6389"},{"desc":"6260","fix":"6390"},{"desc":"6260","fix":"6391"},{"desc":"6260","fix":"6392"},{"desc":"6333","fix":"6393"},{"desc":"6302","fix":"6394"},{"desc":"6320","fix":"6395"},{"desc":"6322","fix":"6396"},{"desc":"6201","fix":"6397"},{"desc":"6248","fix":"6398"},{"desc":"6272","fix":"6399"},{"desc":"6178","fix":"6400"},{"desc":"6248","fix":"6401"},{"desc":"6215","fix":"6402"},{"desc":"6403","fix":"6404"},{"desc":"6311","fix":"6405"},{"desc":"6203","fix":"6406"},[6070,6070],{"desc":"6241","fix":"6407"},{"desc":"6198","fix":"6408"},{"desc":"6384","fix":"6409"},{"desc":"6410","fix":"6411"},{"desc":"6192","fix":"6412"},{"desc":"6205","fix":"6413"},{"desc":"6209","fix":"6414"},{"desc":"6415","fix":"6416"},{"desc":"6254","fix":"6417"},{"desc":"6418","fix":"6419"},{"desc":"6420","fix":"6421"},[2449,2449],{"desc":"6260","fix":"6422"},{"desc":"6423","fix":"6424"},[12970,12970],{"desc":"6302","fix":"6425"},{"desc":"6299","fix":"6426"},{"desc":"6277","fix":"6427"},[12564,12564],{"desc":"6277","fix":"6428"},[12561,12561],{"desc":"6277","fix":"6429"},[5646,5651],"\n   .",[14543,14554],{"desc":"6311","fix":"6430"},{"desc":"6311","fix":"6431"},{"desc":"6272","fix":"6432"},{"desc":"6178","fix":"6433"},{"desc":"6311","fix":"6434"},{"desc":"6311","fix":"6435"},{"desc":"6311","fix":"6436"},{"desc":"6333","fix":"6437"},{"desc":"6281","fix":"6438"},{"desc":"6281","fix":"6439"},{"desc":"6324","fix":"6440"},[5632,5637],[14528,14539],[1177,1177],[1587,1587],{"desc":"6441","fix":"6442"},{"desc":"6443","fix":"6444"},{"desc":"6246","fix":"6445"},{"desc":"6443","fix":"6446"},{"desc":"6447","fix":"6448"},{"desc":"6449","fix":"6450"},[5773,5773],[7432,7432],[7702,7702],{"desc":"6451","fix":"6452"},{"desc":"6443","fix":"6453"},{"desc":"6246","fix":"6454"},[3310,3310],[3548,3548],[4068,4068],{"desc":"6455","fix":"6456"},{"desc":"6175","fix":"6457"},{"desc":"6246","fix":"6458"},{"messageId":"6459","fix":"6460","desc":"6461"},{"messageId":"6462","fix":"6463","desc":"6464"},{"messageId":"6459","fix":"6465","desc":"6461"},{"messageId":"6462","fix":"6466","desc":"6464"},{"messageId":"6459","fix":"6467","desc":"6461"},{"messageId":"6462","fix":"6468","desc":"6464"},{"messageId":"6459","fix":"6469","desc":"6461"},{"messageId":"6462","fix":"6470","desc":"6464"},{"messageId":"6459","fix":"6471","desc":"6461"},{"messageId":"6462","fix":"6472","desc":"6464"},{"messageId":"6459","fix":"6473","desc":"6461"},{"messageId":"6462","fix":"6474","desc":"6464"},{"messageId":"6459","fix":"6475","desc":"6461"},{"messageId":"6462","fix":"6476","desc":"6464"},{"desc":"6443","fix":"6477"},{"desc":"6246","fix":"6478"},{"desc":"6479","fix":"6480"},{"desc":"6479","fix":"6481"},{"desc":"6443","fix":"6482"},{"desc":"6451","fix":"6483"},{"desc":"6484","fix":"6485"},{"desc":"6484","fix":"6486"},{"desc":"6246","fix":"6487"},[6489,6489],{"desc":"6246","fix":"6488"},[6783,6783],[7002,7002],{"desc":"6484","fix":"6489"},{"desc":"6490","fix":"6491"},{"desc":"6484","fix":"6492"},{"desc":"6246","fix":"6493"},{"desc":"6443","fix":"6494"},{"desc":"6443","fix":"6495"},[5590,5590],[7186,7186],[7456,7456],{"desc":"6246","fix":"6496"},{"desc":"6451","fix":"6497"},{"desc":"6498","fix":"6499"},{"desc":"6500","fix":"6501"},"Update the dependencies array to be: [showData, showLinkData]",{"range":"6502","text":"6503"},"Update the dependencies array to be: [getTime, load]",{"range":"6504","text":"6505"},"Update the dependencies array to be: [pos, scrollEff]",{"range":"6506","text":"6507"},{"range":"6508","text":"6505"},"Update the dependencies array to be: [id, myConfig]",{"range":"6509","text":"6510"},"Update the dependencies array to be: [userId]",{"range":"6511","text":"6512"},"Update the dependencies array to be: [CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",{"range":"6513","text":"6514"},"Update the dependencies array to be: [getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",{"range":"6515","text":"6516"},"Update the dependencies array to be: [getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",{"range":"6517","text":"6518"},"Update the dependencies array to be: [getProposalDetails]",{"range":"6519","text":"6520"},{"range":"6521","text":"6505"},{"range":"6522","text":"6505"},"Update the dependencies array to be: [getChatting, id]",{"range":"6523","text":"6524"},"Update the dependencies array to be: [item, props.location.obj]",{"range":"6525","text":"6526"},"Update the dependencies array to be: [getAssementYear, getQuery]",{"range":"6527","text":"6528"},"Update the dependencies array to be: [getMessage]",{"range":"6529","text":"6530"},{"range":"6531","text":"6530"},"Update the dependencies array to be: [getAllPaid, getPaid, getUnpaid]",{"range":"6532","text":"6533"},"Update the dependencies array to be: [paydetails2]",{"range":"6534","text":"6535"},"Update the dependencies array to be: [myConfig]",{"range":"6536","text":"6537"},{"range":"6538","text":"6537"},{"range":"6539","text":"6537"},"Update the dependencies array to be: [myConfig, store]",{"range":"6540","text":"6541"},"Update the dependencies array to be: [getQueryData, getTaxLeader]",{"range":"6542","text":"6543"},"Update the dependencies array to be: [getQuery, queryNo]",{"range":"6544","text":"6545"},"Update the dependencies array to be: [assingNo, id, myConfig]",{"range":"6546","text":"6547"},{"range":"6548","text":"6514"},"Update the dependencies array to be: [getTeamLeader, id]",{"range":"6549","text":"6550"},"Update the dependencies array to be: [data5, defSubValue, defValue, showDel]",{"range":"6551","text":"6552"},"Update the dependencies array to be: [getSubCategory, store]",{"range":"6553","text":"6554"},{"range":"6555","text":"6533"},"Update the dependencies array to be: [CountAllAssignment, CountDraftReport, CountFinalReport]",{"range":"6556","text":"6557"},{"range":"6558","text":"6535"},{"range":"6559","text":"6537"},"Update the dependencies array to be: [getTutorial, id]",{"range":"6560","text":"6561"},{"range":"6562","text":"6541"},"Update the dependencies array to be: [getTaxProf]",{"range":"6563","text":"6564"},"Update the dependencies array to be: [getTeamLeader]",{"range":"6565","text":"6566"},"Update the dependencies array to be: [getFeedback, userid]",{"range":"6567","text":"6568"},{"range":"6569","text":"6547"},{"range":"6570","text":"6524"},{"range":"6571","text":"6530"},"Update the dependencies array to be: [getRecording]",{"range":"6572","text":"6573"},{"range":"6574","text":"6526"},"Update the dependencies array to be: [getCustomer]",{"range":"6575","text":"6576"},"Update the dependencies array to be: [getData]",{"range":"6577","text":"6578"},"Update the dependencies array to be: [myConfig, userid]",{"range":"6579","text":"6580"},{"range":"6581","text":"6537"},{"range":"6582","text":"6541"},"Update the dependencies array to be: [getCompany, getData, getTeamLeader, getupdateQuery]",{"range":"6583","text":"6584"},"Update the dependencies array to be: [taxId, taxxId, cname, getupdateQuery]",{"range":"6585","text":"6586"},"Update the dependencies array to be: [getTaxProf, teamleader44]",{"range":"6587","text":"6588"},{"range":"6589","text":"6564"},{"range":"6590","text":"6580"},"Update the dependencies array to be: [getAssignmentList]",{"range":"6591","text":"6592"},"Update the dependencies array to be: [assingNo, getQuery, id, myConfig]",{"range":"6593","text":"6594"},"Update the dependencies array to be: [getFeedback]",{"range":"6595","text":"6596"},"Update the dependencies array to be: [getQueryData, getTaxProfession]",{"range":"6597","text":"6598"},{"range":"6599","text":"6545"},{"range":"6600","text":"6533"},{"range":"6601","text":"6580"},{"range":"6602","text":"6580"},"Update the dependencies array to be: [getCompany, getQuery]",{"range":"6603","text":"6604"},{"range":"6605","text":"6510"},"Update the dependencies array to be: [assingNo, getAdditionalQuery, getQueryDetails]",{"range":"6606","text":"6607"},"Update the dependencies array to be: [getPaymentStatus]",{"range":"6608","text":"6609"},{"range":"6610","text":"6609"},{"range":"6611","text":"6609"},"Update the dependencies array to be: [getInCompleteAssingment]",{"range":"6612","text":"6613"},{"range":"6614","text":"6592"},"Update the dependencies array to be: [myConfig, selectedData]",{"range":"6615","text":"6616"},{"range":"6617","text":"6592"},{"range":"6618","text":"6616"},{"range":"6619","text":"6604"},{"range":"6620","text":"6510"},{"range":"6621","text":"6592"},{"range":"6622","text":"6616"},{"range":"6623","text":"6609"},{"range":"6624","text":"6609"},{"range":"6625","text":"6609"},{"range":"6626","text":"6613"},{"range":"6627","text":"6613"},"Update the dependencies array to be: [getPendingforAcceptance]",{"range":"6628","text":"6629"},"Update the dependencies array to be: [getHistory, report]",{"range":"6630","text":"6631"},{"range":"6632","text":"6631"},"Update the dependencies array to be: [getData, report]",{"range":"6633","text":"6634"},{"range":"6635","text":"6616"},"Update the dependencies array to be: [adminDashboard, getFeedback2]",{"range":"6636","text":"6637"},"Update the dependencies array to be: [TLDashboard, getFeedbacktl]",{"range":"6638","text":"6639"},"Update the dependencies array to be: [TPDashboard, getFeedbacktp]",{"range":"6640","text":"6641"},"Update the dependencies array to be: [getProposalList]",{"range":"6642","text":"6643"},{"range":"6644","text":"6643"},{"range":"6645","text":"6643"},{"range":"6646","text":"6643"},{"range":"6647","text":"6566"},{"range":"6648","text":"6643"},{"range":"6649","text":"6643"},{"range":"6650","text":"6573"},"Update the dependencies array to be: [getServices]",{"range":"6651","text":"6652"},"Update the dependencies array to be: [cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.paidAmount, tdsRate]",{"range":"6653","text":"6654"},"Update the dependencies array to be: [getNotification, qno]",{"range":"6655","text":"6656"},"Update the dependencies array to be: [panel, proposalId]",{"range":"6657","text":"6658"},"Update the dependencies array to be: [cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.id, props.paidAmount, tdsRate]",{"range":"6659","text":"6660"},{"range":"6661","text":"6631"},"Update the dependencies array to be: [getNotification, tokenKey]",{"range":"6662","text":"6663"},"Update the dependencies array to be: [getAssignmentNo, getData, getUsers]",{"range":"6664","text":"6665"},"Update the dependencies array to be: [getAssignmentData]",{"range":"6666","text":"6667"},{"range":"6668","text":"6616"},{"range":"6669","text":"6609"},{"range":"6670","text":"6609"},{"range":"6671","text":"6609"},"Update the dependencies array to be: [getPendingForAllocation]",{"range":"6672","text":"6673"},"Update the dependencies array to be: [allData, getAllQueriesData]",{"range":"6674","text":"6675"},"Update the dependencies array to be: [getPendingForPayment]",{"range":"6676","text":"6677"},"Update the dependencies array to be: [getPendingForProposals]",{"range":"6678","text":"6679"},"Update the dependencies array to be: [getDeclinedProposal]",{"range":"6680","text":"6681"},"Update the dependencies array to be: [getAcceptedProposal]",{"range":"6682","text":"6683"},"Update the dependencies array to be: [getPendingAcceptedProposal]",{"range":"6684","text":"6685"},"Update the dependencies array to be: [getProposalData]",{"range":"6686","text":"6687"},{"range":"6688","text":"6665"},{"range":"6689","text":"6634"},{"range":"6690","text":"6510"},{"range":"6691","text":"6667"},{"range":"6692","text":"6667"},{"range":"6693","text":"6667"},{"range":"6694","text":"6667"},{"range":"6695","text":"6687"},{"range":"6696","text":"6687"},{"range":"6697","text":"6687"},{"range":"6698","text":"6687"},"Update the dependencies array to be: [getQueriesData]",{"range":"6699","text":"6700"},{"range":"6701","text":"6700"},{"range":"6702","text":"6700"},{"range":"6703","text":"6700"},{"range":"6704","text":"6535"},{"range":"6705","text":"6537"},{"range":"6706","text":"6541"},"Update the dependencies array to be: [getData, getTaxProf, getTeamLeader, getupdateQuery]",{"range":"6707","text":"6708"},"Update the dependencies array to be: [taxId, taxxId, cname, getTeamLeader, getTaxProf]",{"range":"6709","text":"6710"},{"range":"6711","text":"6573"},{"range":"6712","text":"6524"},{"range":"6713","text":"6596"},{"range":"6714","text":"6592"},"Update the dependencies array to be: [props.location.obj]",{"range":"6715","text":"6716"},{"range":"6717","text":"6530"},{"range":"6718","text":"6580"},{"range":"6719","text":"6643"},{"range":"6720","text":"6643"},{"range":"6721","text":"6592"},{"range":"6722","text":"6592"},{"range":"6723","text":"6592"},{"range":"6724","text":"6665"},{"range":"6725","text":"6634"},{"range":"6726","text":"6652"},{"range":"6727","text":"6654"},{"range":"6728","text":"6533"},{"range":"6729","text":"6580"},{"range":"6730","text":"6604"},{"range":"6731","text":"6510"},{"range":"6732","text":"6580"},{"range":"6733","text":"6547"},"Update the dependencies array to be: [allQuery22, myConfig, userid]",{"range":"6734","text":"6735"},{"range":"6736","text":"6643"},{"range":"6737","text":"6535"},{"range":"6738","text":"6573"},{"range":"6739","text":"6530"},{"range":"6740","text":"6716"},"Update the dependencies array to be: [checkAssigned, item]",{"range":"6741","text":"6742"},{"range":"6743","text":"6524"},{"range":"6744","text":"6537"},{"range":"6745","text":"6541"},"Update the dependencies array to be: [getData, getTeamLeader, getupdateQuery]",{"range":"6746","text":"6747"},{"range":"6748","text":"6586"},"Update the dependencies array to be: [getTaxProf, taxId]",{"range":"6749","text":"6750"},"Update the dependencies array to be: [getReport]",{"range":"6751","text":"6752"},{"range":"6753","text":"6592"},"Update the dependencies array to be: [assignNo, getDetails]",{"range":"6754","text":"6755"},{"range":"6756","text":"6634"},{"range":"6757","text":"6631"},{"range":"6758","text":"6609"},{"range":"6759","text":"6609"},{"range":"6760","text":"6609"},{"range":"6761","text":"6643"},{"range":"6762","text":"6643"},{"range":"6763","text":"6604"},{"range":"6764","text":"6510"},{"range":"6765","text":"6643"},{"range":"6766","text":"6643"},{"range":"6767","text":"6643"},{"range":"6768","text":"6665"},{"range":"6769","text":"6613"},{"range":"6770","text":"6613"},{"range":"6771","text":"6656"},"Update the dependencies array to be: [tar]",{"range":"6772","text":"6773"},"Update the dependencies array to be: [getList]",{"range":"6774","text":"6775"},{"range":"6776","text":"6578"},{"range":"6777","text":"6775"},"Update the dependencies array to be: [edit, getEditData]",{"range":"6778","text":"6779"},"Update the dependencies array to be: [showLinkData]",{"range":"6780","text":"6781"},"Update the dependencies array to be: [getPageValue]",{"range":"6782","text":"6783"},{"range":"6784","text":"6775"},{"range":"6785","text":"6578"},"Update the dependencies array to be: [latestNews]",{"range":"6786","text":"6787"},{"range":"6788","text":"6507"},{"range":"6789","text":"6578"},"removeEscape",{"range":"6790","text":"6025"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"6791","text":"6792"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"6793","text":"6025"},{"range":"6794","text":"6792"},{"range":"6795","text":"6025"},{"range":"6796","text":"6792"},{"range":"6797","text":"6025"},{"range":"6798","text":"6792"},{"range":"6799","text":"6025"},{"range":"6800","text":"6792"},{"range":"6801","text":"6025"},{"range":"6802","text":"6792"},{"range":"6803","text":"6025"},{"range":"6804","text":"6792"},{"range":"6805","text":"6775"},{"range":"6806","text":"6578"},"Update the dependencies array to be: [getGalleryData]",{"range":"6807","text":"6808"},{"range":"6809","text":"6808"},{"range":"6810","text":"6775"},{"range":"6811","text":"6783"},"Update the dependencies array to be: [getImages]",{"range":"6812","text":"6813"},{"range":"6814","text":"6813"},{"range":"6815","text":"6578"},{"range":"6816","text":"6578"},{"range":"6817","text":"6813"},"Update the dependencies array to be: [getGalleryVideo]",{"range":"6818","text":"6819"},{"range":"6820","text":"6813"},{"range":"6821","text":"6578"},{"range":"6822","text":"6775"},{"range":"6823","text":"6775"},{"range":"6824","text":"6578"},{"range":"6825","text":"6783"},"Update the dependencies array to be: [addEvents, removeEvents, timer]",{"range":"6826","text":"6827"},"Update the dependencies array to be: [cont, handleLogout, show]",{"range":"6828","text":"6829"},[3162,3172],"[showData, showLinkData]",[3290,3296],"[getTime, load]",[5200,5205],"[pos, scrollEff]",[3024,3030],[6591,6593],"[id, myConfig]",[4069,4071],"[userId]",[1326,1328],"[CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",[1308,1310],"[getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",[1341,1343],"[getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",[2055,2057],"[getProposalDetails]",[1796,1802],[1306,1312],[601,605],"[getChatting, id]",[1663,1669],"[item, props.location.obj]",[2283,2285],"[getAssementYear, getQuery]",[815,817],"[getMessage]",[1140,1142],[993,995],"[getAllPaid, getPaid, getUnpaid]",[1959,1961],"[paydetails2]",[2648,2650],"[myConfig]",[5213,5215],[3426,3428],[3714,3721],"[myConfig, store]",[2227,2229],"[getQueryData, getTaxLeader]",[2912,2921],"[getQuery, queryNo]",[7010,7020],"[assingNo, id, myConfig]",[1250,1252],[3214,3218],"[getTeamLeader, id]",[4268,4277],"[data5, defSubValue, defValue, showDel]",[4333,4340],"[getSubCategory, store]",[719,721],[1009,1011],"[CountAllAssignment, CountDraftReport, CountFinalReport]",[1779,1781],[4180,4182],[4231,4235],"[getTutorial, id]",[4985,4992],[1186,1188],"[getTaxProf]",[5460,5462],"[getTeamLeader]",[810,818],"[getFeedback, userid]",[1360,1370],[684,688],[926,928],[1644,1646],"[getRecording]",[1789,1795],[1260,1262],"[getCustomer]",[931,933],"[getData]",[5286,5288],"[myConfig, userid]",[3274,3276],[3607,3614],[4094,4096],"[getCompany, getData, getTeamLeader, getupdateQuery]",[4141,4163],"[taxId, taxxId, cname, getupdateQuery]",[4776,4790],"[getTaxProf, teamleader44]",[889,891],[3450,3452],[1017,1019],"[getAssignmentList]",[7090,7100],"[assingNo, getQuery, id, myConfig]",[928,930],"[getFeedback]",[2210,2212],"[getQueryData, getTaxProfession]",[2996,3005],[992,994],[2512,2514],[3236,3238],[2755,2757],"[getCompany, getQuery]",[3983,3987],[895,905],"[assingNo, getAdditionalQuery, getQueryDetails]",[2625,2627],"[getPaymentStatus]",[2692,2694],[2749,2751],[1277,1279],"[getInCompleteAssingment]",[2748,2750],[3709,3723],"[myConfig, selectedData]",[2462,2464],[3569,3583],[2784,2786],[3023,3027],[2646,2648],[3492,3506],[2100,2102],[2092,2094],[2108,2110],[1441,1443],[1251,1253],[1351,1353],"[getPendingforAcceptance]",[626,634],"[getHistory, report]",[597,605],[4084,4092],"[getData, report]",[1609,1623],[3116,3132],"[adminDashboard, getFeedback2]",[4795,4808],"[TLDashboard, getFeedbacktl]",[5515,5528],"[TPDashboard, getFeedbacktp]",[1836,1838],"[getProposalList]",[1837,1839],[1785,1787],[2165,2167],[1345,1347],[1901,1903],[1867,1869],[1090,1092],[2122,2124],"[getServices]",[2889,2907],"[cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.paidAmount, tdsRate]",[425,430],"[getNotification, qno]",[2994,3006],"[panel, proposalId]",[2556,2574],"[cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.id, props.paidAmount, tdsRate]",[511,519],[460,470],"[getNotification, tokenKey]",[2394,2396],"[getAssignmentNo, getData, getUsers]",[2444,2446],"[getAssignmentData]",[3247,3261],[1347,1349],[1380,1382],[1425,1427],[1429,1431],"[getPendingForAllocation]",[1143,1152],"[allData, getAllQueriesData]",[1013,1015],"[getPendingForPayment]",[1641,1643],"[getPendingForProposals]",[1625,1627],"[getDeclinedProposal]",[1706,1708],"[getAcceptedProposal]",[1857,1859],"[getPendingAcceptedProposal]",[1903,1905],"[getProposalData]",[1704,1706],[1205,1213],[697,699],[2004,2006],[1961,1963],[2197,2199],[1912,1914],[1957,1959],[1741,1743],[2107,2109],[2255,2257],[1776,1778],"[getQueriesData]",[1486,1488],[2143,2145],[2494,2496],[1780,1782],[3455,3457],[3772,3779],[3883,3885],"[getData, getTaxProf, getTeamLeader, getupdateQuery]",[3948,3970],"[taxId, taxxId, cname, getTeamLeader, getTaxProf]",[1494,1496],[681,685],[930,932],[1115,1117],[1737,1739],"[props.location.obj]",[1244,1246],[2512,2514],[1880,1882],[1813,1815],[2907,2909],[2879,2881],[2966,2968],[1898,1900],[1361,1369],[2151,2153],[3032,3050],[990,992],[5263,5265],[2281,2283],[3833,3837],[3462,3464],[6248,6258],[3624,3626],"[allQuery22, myConfig, userid]",[2253,2255],[1817,1819],[1416,1418],[1106,1108],[1789,1791],[1841,1847],"[checkAssigned, item]",[735,739],[3240,3242],[3556,3563],[3650,3652],"[getData, getTeamLeader, getupdateQuery]",[3697,3719],[4899,4906],"[getTaxProf, taxId]",[685,687],"[getReport]",[1048,1050],[1362,1372],"[assignNo, getDetails]",[2480,2488],[725,733],[2247,2249],[2025,2027],[1995,1997],[2038,2040],[2026,2028],[2752,2754],[2991,2995],[1998,2000],[1855,1857],[2300,2302],[1991,1993],[659,661],[675,677],[425,430],[720,722],"[tar]",[1050,1052],"[getList]",[1915,1917],[1232,1234],[806,812],"[edit, getEditData]",[2427,2429],"[showLinkData]",[1582,1584],"[getPageValue]",[1071,1073],[1916,1918],[980,982],"[latestNews]",[1643,1648],[1735,1737],[3160,3161],[3160,3160],"\\",[3162,3163],[3162,3162],[3201,3202],[3201,3201],[3203,3204],[3203,3203],[3234,3235],[3234,3234],[3238,3239],[3238,3238],[3257,3258],[3257,3257],[1032,1034],[1361,1363],[1460,1462],"[getGalleryData]",[1623,1625],[1073,1075],[1588,1590],[868,870],"[getImages]",[790,792],[1798,1800],[1773,1775],[1018,1020],[1224,1226],"[getGalleryVideo]",[786,788],[1363,1365],[1268,1270],[1392,1394],[1907,1909],[1595,1597],[969,971],"[addEvents, removeEvents, timer]",[1004,1010],"[cont, handleLogout, show]"]
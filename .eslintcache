[{"/home/pooja/MazarsRepo/src/index.js":"1","/home/pooja/MazarsRepo/src/reportWebVitals.js":"2","/home/pooja/MazarsRepo/src/App.js":"3","/home/pooja/MazarsRepo/src/Service/PublicRouteTL.js":"4","/home/pooja/MazarsRepo/src/Service/PublicRouteTP.js":"5","/home/pooja/MazarsRepo/src/Service/PublicRouteAdmin.js":"6","/home/pooja/MazarsRepo/src/pages/TL/EditProposal/EditProposal.js":"7","/home/pooja/MazarsRepo/src/components/PageNotFound/PageNotFound.js":"8","/home/pooja/MazarsRepo/src/views/Login/Login.js":"9","/home/pooja/MazarsRepo/src/views/Dashboard/Dashboard.js":"10","/home/pooja/MazarsRepo/src/views/MyAssingment/MyAssingment.js":"11","/home/pooja/MazarsRepo/src/views/SignUpForm/SignUp.js":"12","/home/pooja/MazarsRepo/src/views/SelectCategoryPage/SelectCategoryPage.js":"13","/home/pooja/MazarsRepo/src/views/QueriesTab/QueriesTab.js":"14","/home/pooja/MazarsRepo/src/views/AddFressAssignment/AddFreshAssingment.js":"15","/home/pooja/MazarsRepo/src/views/ProposalTab/ProposalTab.js":"16","/home/pooja/MazarsRepo/src/views/AssignmentTab/AssignmentTab.js":"17","/home/pooja/MazarsRepo/src/views/ForgetPassword/ForgetPassword.js":"18","/home/pooja/MazarsRepo/src/views/ProposalView/ProposalView.js":"19","/home/pooja/MazarsRepo/src/views/NewPassword/NewPassword.js":"20","/home/pooja/MazarsRepo/src/views/ChangePassword/ChangePassword.js":"21","/home/pooja/MazarsRepo/src/views/VideoCall/VideoCall.js":"22","/home/pooja/MazarsRepo/src/views/Schedule/schedule.js":"23","/home/pooja/MazarsRepo/src/views/MeetingComponent/MeetingComponent.js":"24","/home/pooja/MazarsRepo/src/views/ViewNotification/ViewNotification.js":"25","/home/pooja/MazarsRepo/src/views/EditQuery/EditQuery.js":"26","/home/pooja/MazarsRepo/src/views/Chatting/Chatting.js":"27","/home/pooja/MazarsRepo/src/views/Message/Message.js":"28","/home/pooja/MazarsRepo/src/views/FeedbackData/FeedbackData.js":"29","/home/pooja/MazarsRepo/src/views/Feedback/Feedback.js":"30","/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentStatus.js":"31","/home/pooja/MazarsRepo/src/views/PaymentGateway.js/PaymentGateway.js":"32","/home/pooja/MazarsRepo/src/pages/Admin/Start/Start.js":"33","/home/pooja/MazarsRepo/src/pages/Admin/Login/Login.js":"34","/home/pooja/MazarsRepo/src/pages/Admin/Dashboard/Dashboard.js":"35","/home/pooja/MazarsRepo/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js":"36","/home/pooja/MazarsRepo/src/pages/Admin/Proposal/Proposal.js":"37","/home/pooja/MazarsRepo/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js":"38","/home/pooja/MazarsRepo/src/pages/Admin/QueriesRecevied/QueriesRecevied.js":"39","/home/pooja/MazarsRepo/src/pages/Admin/QueryAssingment/QueryAssingment.js":"40","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/EditTL.js":"41","/home/pooja/MazarsRepo/src/pages/Admin/QueriesTab/QueriesTab.js":"42","/home/pooja/MazarsRepo/src/pages/Admin/EditTP/EditTP.js":"43","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/index.js":"44","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js":"45","/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js":"46","/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js":"47","/home/pooja/MazarsRepo/src/pages/Admin/FeedbackTab/FeedbackTab.js":"48","/home/pooja/MazarsRepo/src/pages/Admin/ForgetPassword/ForgetPassword.js":"49","/home/pooja/MazarsRepo/src/pages/Admin/PendingReceived/PendingRecevived.js":"50","/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/NewPassword.js":"51","/home/pooja/MazarsRepo/src/pages/Admin/QueryRejection/QueryRejection.js":"52","/home/pooja/MazarsRepo/src/pages/Admin/MeetingComponent/MeetingComponent.js":"53","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Schedule.js":"54","/home/pooja/MazarsRepo/src/pages/Admin/Message/Message.js":"55","/home/pooja/MazarsRepo/src/pages/Admin/Chatting/Chatting.js":"56","/home/pooja/MazarsRepo/src/pages/Admin/ViewNotification/ViewNotification.js":"57","/home/pooja/MazarsRepo/src/pages/Admin/Recording/Recording.js":"58","/home/pooja/MazarsRepo/src/pages/Admin/customer/Customer.js":"59","/home/pooja/MazarsRepo/src/pages/TL/Start/Start.js":"60","/home/pooja/MazarsRepo/src/pages/TL/Login/Login.js":"61","/home/pooja/MazarsRepo/src/pages/Admin/Report/Report.js":"62","/home/pooja/MazarsRepo/src/pages/TL/Dashboard/Dashboard.js":"63","/home/pooja/MazarsRepo/src/pages/TL/AddNew/AddNew.js":"64","/home/pooja/MazarsRepo/src/pages/TL/AddTeamProf/AddTeamProf.js":"65","/home/pooja/MazarsRepo/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js":"66","/home/pooja/MazarsRepo/src/pages/TL/Proposal/ProposalTab.js":"67","/home/pooja/MazarsRepo/src/pages/TL/QueriesRecevied/QueriesRecevied.js":"68","/home/pooja/MazarsRepo/src/pages/TL/EditTP/EditTP.js":"69","/home/pooja/MazarsRepo/src/pages/TL/QueryAssingment/QueryAssingment.js":"70","/home/pooja/MazarsRepo/src/pages/TL/FeedbackTab/FeedbackTab.js":"71","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/PaymentStatus.js":"72","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/SendProposal.js":"73","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AssignmentTab.js":"74","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/QueriesTab.js":"75","/home/pooja/MazarsRepo/src/pages/TL/PendingReceived/PendingReceived.js":"76","/home/pooja/MazarsRepo/src/pages/TL/ViewReport/ViewReport.js":"77","/home/pooja/MazarsRepo/src/pages/TL/AssignmentForm/AssignmentForm.js":"78","/home/pooja/MazarsRepo/src/pages/TL/ForgetPassword/ForgetPassword.js":"79","/home/pooja/MazarsRepo/src/pages/TL/ViewNotification/ViewNotification.js":"80","/home/pooja/MazarsRepo/src/pages/TL/NewPassword/NewPassword.js":"81","/home/pooja/MazarsRepo/src/pages/TL/Message/Message.js":"82","/home/pooja/MazarsRepo/src/pages/TL/Chatting/Chatting.js":"83","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Schedule.js":"84","/home/pooja/MazarsRepo/src/views/PaymentStatus/Paid.js":"85","/home/pooja/MazarsRepo/src/views/PaymentStatus/Unpaid.js":"86","/home/pooja/MazarsRepo/src/views/PaymentStatus/AllPayment.js":"87","/home/pooja/MazarsRepo/src/config/config.js":"88","/home/pooja/MazarsRepo/src/components/Layout/Layout.js":"89","/home/pooja/MazarsRepo/src/components/Loader/Loader.js":"90","/home/pooja/MazarsRepo/src/components/Common/Mandatory.js":"91","/home/pooja/MazarsRepo/src/common/Alerts.js":"92","/home/pooja/MazarsRepo/src/common/common.js":"93","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Demo.js":"94","/home/pooja/MazarsRepo/src/pages/TL/Message/PaymentModal.js":"95","/home/pooja/MazarsRepo/src/pages/TL/NewPassword/ResendOtp.js":"96","/home/pooja/MazarsRepo/src/pages/TL/Recording/Recording.js":"97","/home/pooja/MazarsRepo/src/components/Footer/Footer.js":"98","/home/pooja/MazarsRepo/src/components/Header/Header.js":"99","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/AllQuery.js":"100","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DeliveryFinalTab.js":"101","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportTab.js":"102","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AllAssignment.js":"103","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paid.js":"104","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/ProposalComponent.js":"105","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Unpaid.js":"106","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/AllPayment.js":"107","/home/pooja/MazarsRepo/src/pages/TL/CompleteData/CompleteData.js":"108","/home/pooja/MazarsRepo/src/pages/TL/InCompleteData/InCompleteData.js":"109","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js":"110","/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentComponent.js":"111","/home/pooja/MazarsRepo/src/views/AssignmentTab/DiscardReport.js":"112","/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/History.js":"113","/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/History.js":"114","/home/pooja/MazarsRepo/src/components/Admin-Footer/Admin-Footer.js":"115","/home/pooja/MazarsRepo/src/components/Admin-Header/Admin-Header.js":"116","/home/pooja/MazarsRepo/src/components/Records/Records.js":"117","/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerFilter.js":"118","/home/pooja/MazarsRepo/src/components/Admin-Sidebar/Admin-Sidebar.js":"119","/home/pooja/MazarsRepo/src/components/Search-Filter/RecordingFilter.js":"120","/home/pooja/MazarsRepo/src/pages/TL/Proposal/DeclinedProposal.js":"121","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AcceptedProposal.js":"122","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InprogressProposal.js":"123","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AllProposal.js":"124","/home/pooja/MazarsRepo/src/pages/Admin/customer/CustHistory.js":"125","/home/pooja/MazarsRepo/src/pages/TL/Login/VerifyOtpLogin.js":"126","/home/pooja/MazarsRepo/src/components/QueryDetails/QueryDetails.js":"127","/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerListFilter.js":"128","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Demo.js":"129","/home/pooja/MazarsRepo/src/config/services/TaxProffesional.js":"130","/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/ResendOtp.js":"131","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Unpaid.js":"132","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paid.js":"133","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DiscardReport.js":"134","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/RejectedModal.js":"135","/home/pooja/MazarsRepo/src/pages/Admin/meeting/index.jsx":"136","/home/pooja/MazarsRepo/src/components/Search-Filter/tlFilter.js":"137","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/RejectedModal.js":"138","/home/pooja/MazarsRepo/src/components/PendingForAllocation/History.js":"139","/home/pooja/MazarsRepo/src/pages/TL/Proposal/ChatHistory.js":"140","/home/pooja/MazarsRepo/src/components/Admin-Header/NavWrapper.js":"141","/home/pooja/MazarsRepo/src/components/QueryDetails/Feedback.js":"142","/home/pooja/MazarsRepo/src/components/QueryDetails/QueryRecording.js":"143","/home/pooja/MazarsRepo/src/components/QueryDetails/DraftReports.js":"144","/home/pooja/MazarsRepo/src/components/QueryDetails/AdditionalQuery.js":"145","/home/pooja/MazarsRepo/src/components/QueryDetails/AddAdditionalQuery.js":"146","/home/pooja/MazarsRepo/src/components/QueryDetails/AssignmentDetails.js":"147","/home/pooja/MazarsRepo/src/config/http/http-common.js":"148","/home/pooja/MazarsRepo/src/components/QueryDetails/ProposalDetails.js":"149","/home/pooja/MazarsRepo/src/components/QueryDetails/BasicQuery.js":"150","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DiscardReport.js":"151","/home/pooja/MazarsRepo/src/components/Search-Filter/AdminFilter.js":"152","/home/pooja/MazarsRepo/src/agora.config.js":"153","/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/index.jsx":"154","/home/pooja/MazarsRepo/src/components/Admin-Header/CustomerNotification.js":"155","/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/RecordingModal.js":"156","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/Payment.js":"157","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/FinalReportUpload.js":"158","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/ViewAllReport.js":"159","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportUpload.js":"160","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/AllPayment.js":"161","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DraftReport.js":"162","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/FinalReport.js":"163","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/AllAssignment.js":"164","/home/pooja/MazarsRepo/src/components/AllQueriesData/AllQueriesData.js":"165","/home/pooja/MazarsRepo/src/components/DeclinedQueries/DeclinedQueries.js":"166","/home/pooja/MazarsRepo/src/components/PendingForProposals/PendingForProposals.js":"167","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/Reset.js":"168","/home/pooja/MazarsRepo/src/components/PendingForAllocation/PendingForAllocation.js":"169","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/RejectModal.js":"170","/home/pooja/MazarsRepo/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js":"171","/home/pooja/MazarsRepo/src/components/PendingForAcceptence/PendingForAcceptence.js":"172","/home/pooja/MazarsRepo/src/pages/Admin/AcceptedProposal/AcceptedProposal.js":"173","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/AllProposalComponent.js":"174","/home/pooja/MazarsRepo/src/pages/Admin/Login/VerifyOtpLogin.js":"175","/home/pooja/MazarsRepo/src/views/Message/PaymentModal.js":"176","/home/pooja/MazarsRepo/src/views/EditQuery/DeleteQuery.js":"177","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/ViewAllReport.js":"178","/home/pooja/MazarsRepo/src/views/Schedule/demo.js":"179","/home/pooja/MazarsRepo/src/views/ChangePassword/ResendOtp.js":"180","/home/pooja/MazarsRepo/src/views/NewPassword/ResendOtp.js":"181","/home/pooja/MazarsRepo/src/views/ProposalView/TermsConditions.js":"182","/home/pooja/MazarsRepo/src/components/InputRoom/index.js":"183","/home/pooja/MazarsRepo/src/views/AssignmentTab/CustomerDeclinedPayment.js":"184","/home/pooja/MazarsRepo/src/views/AssignmentTab/CompletedAssignment.js":"185","/home/pooja/MazarsRepo/src/views/AssignmentTab/InprogressAssignment.js":"186","/home/pooja/MazarsRepo/src/views/AssignmentTab/AllAssignment.js":"187","/home/pooja/MazarsRepo/src/views/ProposalTab/DeclinedProposal.js":"188","/home/pooja/MazarsRepo/src/views/ProposalTab/AcceptedProposal.js":"189","/home/pooja/MazarsRepo/src/views/ProposalTab/InprogressProposal.js":"190","/home/pooja/MazarsRepo/src/views/ProposalTab/AllProposal.js":"191","/home/pooja/MazarsRepo/src/views/AddFressAssignment/data.js":"192","/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressProposal.js":"193","/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressAllocation.js":"194","/home/pooja/MazarsRepo/src/views/QueriesTab/AllQueriesData.js":"195","/home/pooja/MazarsRepo/src/views/QueriesTab/DeclinedQueries.js":"196","/home/pooja/MazarsRepo/src/views/SignUpForm/GetOTP.js":"197","/home/pooja/MazarsRepo/src/views/SignUpForm/ResendOtp.js":"198","/home/pooja/MazarsRepo/src/views/SignUpForm/data.js":"199","/home/pooja/MazarsRepo/src/components/meeting/index.jsx":"200","/home/pooja/MazarsRepo/src/views/Login/VerifyOTP.js":"201","/home/pooja/MazarsRepo/src/components/CategorySelect/CategorySelect.js":"202","/home/pooja/MazarsRepo/src/Service/PublicRouteUser.js":"203","/home/pooja/MazarsRepo/src/Service/PrivateRouteTP.js":"204","/home/pooja/MazarsRepo/src/Service/PrivateRouteTL.js":"205","/home/pooja/MazarsRepo/src/Service/PrivateRouteAdmin.js":"206","/home/pooja/MazarsRepo/src/Service/PrivateRouteUser.js":"207","/home/pooja/MazarsRepo/src/pages/TP/EditProposal/EditProposal.js":"208","/home/pooja/MazarsRepo/src/pages/TP/ViewNotification/ViewNotification.js":"209","/home/pooja/MazarsRepo/src/pages/TP/Recording/Recording.js":"210","/home/pooja/MazarsRepo/src/pages/TP/MeetingComponent/MeetingComponent.js":"211","/home/pooja/MazarsRepo/src/pages/TP/FeedbackTab/FeedbackTab.js":"212","/home/pooja/MazarsRepo/src/pages/TP/Message/Message.js":"213","/home/pooja/MazarsRepo/src/pages/TP/Chatting/Chatting.js":"214","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Schedule.js":"215","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/PaymentStatus.js":"216","/home/pooja/MazarsRepo/src/pages/TP/AddAssingmentStages/AddAssingmentStages.js":"217","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AssignmentTab.js":"218","/home/pooja/MazarsRepo/src/pages/TP/ForgetPassword/ForgetPassword.js":"219","/home/pooja/MazarsRepo/src/pages/TP/NewPassword/NewPassword.js":"220","/home/pooja/MazarsRepo/src/pages/TP/Dashboard/Dashboard.js":"221","/home/pooja/MazarsRepo/src/pages/TP/ChangePassword/ChangePassword.js":"222","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/SendProposal.js":"223","/home/pooja/MazarsRepo/src/pages/Admin/ViewProposal/ViewComponent.js":"224","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ProposalTab.js":"225","/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/QueriesTab.js":"226","/home/pooja/MazarsRepo/src/views/SignUpForm/city.js":"227","/home/pooja/MazarsRepo/src/pages/TP/QueriesRecevied/QueriesRecevied.js":"228","/home/pooja/MazarsRepo/src/pages/TP/Login/Login.js":"229","/home/pooja/MazarsRepo/src/pages/TP/Start/Start.js":"230","/home/pooja/MazarsRepo/src/pages/TL/MeetingComponent/MeetingComponent.js":"231","/home/pooja/MazarsRepo/src/views/AssignmentTab/ViewAllReport.js":"232","/home/pooja/MazarsRepo/src/views/AssignmentTab/RejectModal.js":"233","/home/pooja/MazarsRepo/src/views/AssignmentTab/PaymentModal.js":"234","/home/pooja/MazarsRepo/src/views/ProposalTab/ViewComponent.js":"235","/home/pooja/MazarsRepo/src/views/QueriesTab/AdditionalQueryModal.js":"236","/home/pooja/MazarsRepo/src/pages/TP/NewPassword/ResendOtp.js":"237","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DeliveryFinalTab.js":"238","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportTab.js":"239","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AllAssignment.js":"240","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Unpaid.js":"241","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paid.js":"242","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/AllPayment.js":"243","/home/pooja/MazarsRepo/src/pages/TP/Message/PaymentModal.js":"244","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Demo.js":"245","/home/pooja/MazarsRepo/src/components/Search-Filter/tpfilter.js":"246","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AllProposal.js":"247","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/ProposalComponent.js":"248","/home/pooja/MazarsRepo/src/pages/TP/Proposal/InprogressProposal.js":"249","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AcceptedProposal.js":"250","/home/pooja/MazarsRepo/src/pages/TP/Proposal/DeclinedProposal.js":"251","/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/AllQuery.js":"252","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/PendingForAcceptence.js":"253","/home/pooja/MazarsRepo/src/pages/TP/InCompleteData/InCompleteData.js":"254","/home/pooja/MazarsRepo/src/pages/TP/CompleteData/CompleteData.js":"255","/home/pooja/MazarsRepo/src/pages/TP/DeclinedQuery/DeclinedQuery.js":"256","/home/pooja/MazarsRepo/src/pages/TP/Login/VerifyOtpLogin.js":"257","/home/pooja/MazarsRepo/src/components/AgoraVideoCall/index.jsx":"258","/home/pooja/MazarsRepo/src/pages/TP/meeting/index.jsx":"259","/home/pooja/MazarsRepo/src/views/AssignmentTab/Assignmodal.js":"260","/home/pooja/MazarsRepo/src/pages/TL/meeting/index.jsx":"261","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/FinalReportUpload.js":"262","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/ViewAllReport.js":"263","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DiscardReport.js":"264","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportUpload.js":"265","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/RejectedModal.js":"266","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ChatHistory.js":"267","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/Payment.js":"268","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/RejectedModal.js":"269","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/index.jsx":"270","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/RejectModal.js":"271","/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/index.jsx":"272","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/RecordingModal.js":"273","/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/RecordingModal.js":"274","/home/pooja/MazarsRepo/src/pages/TL/EditProposal/Payment.js":"275","/home/pooja/MazarsRepo/src/pages/TP/EditProposal/Payment.js":"276","/home/pooja/MazarsRepo/src/components/Common/EmailValidation.js":"277","/home/pooja/MazarsRepo/src/components/Common/Category.js":"278","/home/pooja/MazarsRepo/src/components/Common/CateFun.js":"279","/home/pooja/MazarsRepo/src/views/ThankYou/Thankyou.js":"280","/home/pooja/MazarsRepo/src/components/LoadingTime/LoadingTime.js":"281","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Tds.js":"282","/home/pooja/MazarsRepo/src/pages/TL/Proposal/serviceData.js":"283","/home/pooja/MazarsRepo/src/pages/TL/Proposal/PdfPrint.js":"284","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Invoice.js":"285","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InvoiceTab.js":"286","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Generated.js":"287","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayDetails.js":"288","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayModal.js":"289","/home/pooja/MazarsRepo/src/components/Search-Filter/InvoiceFilter.js":"290","/home/pooja/MazarsRepo/src/pages/TL/Report/Report.js":"291","/home/pooja/MazarsRepo/src/pages/TP/Report/Report.js":"292","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Invoice.js":"293","/home/pooja/MazarsRepo/src/pages/TP/Invoice/CreateInvoice.js":"294","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Generated.js":"295","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Tds.js":"296","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Invoice.js":"297","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Generated.js":"298","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Tds.js":"299","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/CreateInvoice.js":"300","/home/pooja/MazarsRepo/src/components/LoginForm/LoginForm.js":"301","/home/pooja/MazarsRepo/src/components/LoginForm/LoginFun.js":"302","/home/pooja/MazarsRepo/src/views/AddFressAssignment/WYSIWYGEditor.js":"303","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paydetails.js":"304","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paydetails.js":"305","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paydetails.js":"306","/home/pooja/MazarsRepo/src/views/QueriesTab/RejectedModal.js":"307","/home/pooja/MazarsRepo/src/views/ProposalView/RejectedModal22.js":"308"},{"size":548,"mtime":1637579231028,"results":"309","hashOfConfig":"310"},{"size":362,"mtime":1637579231028,"results":"311","hashOfConfig":"310"},{"size":19435,"mtime":1637744728860,"results":"312","hashOfConfig":"310"},{"size":800,"mtime":1637579231028,"results":"313","hashOfConfig":"310"},{"size":803,"mtime":1637579231028,"results":"314","hashOfConfig":"310"},{"size":782,"mtime":1637579231028,"results":"315","hashOfConfig":"310"},{"size":13765,"mtime":1637579231052,"results":"316","hashOfConfig":"310"},{"size":209,"mtime":1637579231036,"results":"317","hashOfConfig":"310"},{"size":6911,"mtime":1637592102856,"results":"318","hashOfConfig":"310"},{"size":11289,"mtime":1637579231080,"results":"319","hashOfConfig":"310"},{"size":8218,"mtime":1637750705108,"results":"320","hashOfConfig":"310"},{"size":25097,"mtime":1637579231088,"results":"321","hashOfConfig":"310"},{"size":1149,"mtime":1637579231084,"results":"322","hashOfConfig":"310"},{"size":3857,"mtime":1637579231084,"results":"323","hashOfConfig":"310"},{"size":18974,"mtime":1637579231080,"results":"324","hashOfConfig":"310"},{"size":3912,"mtime":1637579231084,"results":"325","hashOfConfig":"310"},{"size":4014,"mtime":1637579231080,"results":"326","hashOfConfig":"310"},{"size":3774,"mtime":1637579231080,"results":"327","hashOfConfig":"310"},{"size":12199,"mtime":1637579231084,"results":"328","hashOfConfig":"310"},{"size":9481,"mtime":1637579231084,"results":"329","hashOfConfig":"310"},{"size":10906,"mtime":1637579231080,"results":"330","hashOfConfig":"310"},{"size":380,"mtime":1637579231092,"results":"331","hashOfConfig":"310"},{"size":942,"mtime":1637579231084,"results":"332","hashOfConfig":"310"},{"size":306,"mtime":1637579231084,"results":"333","hashOfConfig":"310"},{"size":2584,"mtime":1637579231092,"results":"334","hashOfConfig":"310"},{"size":21887,"mtime":1637589796986,"results":"335","hashOfConfig":"310"},{"size":6197,"mtime":1637757059454,"results":"336","hashOfConfig":"310"},{"size":5700,"mtime":1637756427086,"results":"337","hashOfConfig":"310"},{"size":2900,"mtime":1637579231080,"results":"338","hashOfConfig":"310"},{"size":4441,"mtime":1637579231080,"results":"339","hashOfConfig":"310"},{"size":2830,"mtime":1637579231084,"results":"340","hashOfConfig":"310"},{"size":15051,"mtime":1637579231084,"results":"341","hashOfConfig":"310"},{"size":441,"mtime":1637579231048,"results":"342","hashOfConfig":"310"},{"size":6491,"mtime":1637592655464,"results":"343","hashOfConfig":"310"},{"size":12506,"mtime":1637579231044,"results":"344","hashOfConfig":"310"},{"size":17950,"mtime":1637676880080,"results":"345","hashOfConfig":"310"},{"size":4615,"mtime":1637579231048,"results":"346","hashOfConfig":"310"},{"size":18326,"mtime":1637677270820,"results":"347","hashOfConfig":"310"},{"size":9170,"mtime":1637589785668,"results":"348","hashOfConfig":"310"},{"size":11558,"mtime":1637579231048,"results":"349","hashOfConfig":"310"},{"size":22372,"mtime":1637677004076,"results":"350","hashOfConfig":"310"},{"size":3928,"mtime":1637579231048,"results":"351","hashOfConfig":"310"},{"size":22594,"mtime":1637677343056,"results":"352","hashOfConfig":"310"},{"size":3636,"mtime":1637579231044,"results":"353","hashOfConfig":"310"},{"size":2890,"mtime":1637579231048,"results":"354","hashOfConfig":"310"},{"size":6736,"mtime":1637579231048,"results":"355","hashOfConfig":"310"},{"size":7192,"mtime":1637579231048,"results":"356","hashOfConfig":"310"},{"size":4251,"mtime":1637579231044,"results":"357","hashOfConfig":"310"},{"size":3455,"mtime":1637579231044,"results":"358","hashOfConfig":"310"},{"size":7975,"mtime":1637579231048,"results":"359","hashOfConfig":"310"},{"size":8927,"mtime":1637579231048,"results":"360","hashOfConfig":"310"},{"size":5696,"mtime":1637579231048,"results":"361","hashOfConfig":"310"},{"size":446,"mtime":1637579231048,"results":"362","hashOfConfig":"310"},{"size":644,"mtime":1637648832947,"results":"363","hashOfConfig":"310"},{"size":5934,"mtime":1637808941062,"results":"364","hashOfConfig":"310"},{"size":7182,"mtime":1637579231044,"results":"365","hashOfConfig":"310"},{"size":2592,"mtime":1637579231048,"results":"366","hashOfConfig":"310"},{"size":7000,"mtime":1637579231048,"results":"367","hashOfConfig":"310"},{"size":5531,"mtime":1637579231048,"results":"368","hashOfConfig":"310"},{"size":441,"mtime":1637579231060,"results":"369","hashOfConfig":"310"},{"size":6175,"mtime":1637592960860,"results":"370","hashOfConfig":"310"},{"size":20183,"mtime":1637736152864,"results":"371","hashOfConfig":"310"},{"size":12653,"mtime":1637579231052,"results":"372","hashOfConfig":"310"},{"size":3454,"mtime":1637579231052,"results":"373","hashOfConfig":"310"},{"size":4722,"mtime":1637579231052,"results":"374","hashOfConfig":"310"},{"size":19829,"mtime":1637579231052,"results":"375","hashOfConfig":"310"},{"size":4789,"mtime":1637579231056,"results":"376","hashOfConfig":"310"},{"size":8607,"mtime":1637589873450,"results":"377","hashOfConfig":"310"},{"size":3645,"mtime":1637579231052,"results":"378","hashOfConfig":"310"},{"size":11437,"mtime":1637579231060,"results":"379","hashOfConfig":"310"},{"size":3904,"mtime":1637579231052,"results":"380","hashOfConfig":"310"},{"size":2822,"mtime":1637579231056,"results":"381","hashOfConfig":"310"},{"size":498,"mtime":1637579231060,"results":"382","hashOfConfig":"310"},{"size":3276,"mtime":1637579231052,"results":"383","hashOfConfig":"310"},{"size":4597,"mtime":1637579231056,"results":"384","hashOfConfig":"310"},{"size":9725,"mtime":1637579231056,"results":"385","hashOfConfig":"310"},{"size":2851,"mtime":1637579231060,"results":"386","hashOfConfig":"310"},{"size":13490,"mtime":1637579231052,"results":"387","hashOfConfig":"310"},{"size":3406,"mtime":1637579231056,"results":"388","hashOfConfig":"310"},{"size":2749,"mtime":1637579231060,"results":"389","hashOfConfig":"310"},{"size":9062,"mtime":1637579231056,"results":"390","hashOfConfig":"310"},{"size":5677,"mtime":1637808884817,"results":"391","hashOfConfig":"310"},{"size":7865,"mtime":1637579231052,"results":"392","hashOfConfig":"310"},{"size":1047,"mtime":1637579231060,"results":"393","hashOfConfig":"310"},{"size":16817,"mtime":1637757719622,"results":"394","hashOfConfig":"310"},{"size":13712,"mtime":1637757761239,"results":"395","hashOfConfig":"310"},{"size":14430,"mtime":1637757633099,"results":"396","hashOfConfig":"310"},{"size":800,"mtime":1637728175854,"results":"397","hashOfConfig":"310"},{"size":1042,"mtime":1637579231036,"results":"398","hashOfConfig":"310"},{"size":415,"mtime":1637579231036,"results":"399","hashOfConfig":"310"},{"size":296,"mtime":1637579231032,"results":"400","hashOfConfig":"310"},{"size":2483,"mtime":1637579231032,"results":"401","hashOfConfig":"310"},{"size":880,"mtime":1637579231032,"results":"402","hashOfConfig":"310"},{"size":14172,"mtime":1637680000862,"results":"403","hashOfConfig":"310"},{"size":2122,"mtime":1637579231056,"results":"404","hashOfConfig":"310"},{"size":1492,"mtime":1637579231056,"results":"405","hashOfConfig":"310"},{"size":7094,"mtime":1637579231060,"results":"406","hashOfConfig":"310"},{"size":277,"mtime":1637579231036,"results":"407","hashOfConfig":"310"},{"size":3050,"mtime":1637579231036,"results":"408","hashOfConfig":"310"},{"size":8718,"mtime":1637579231056,"results":"409","hashOfConfig":"310"},{"size":19750,"mtime":1637579231052,"results":"410","hashOfConfig":"310"},{"size":20123,"mtime":1637579231052,"results":"411","hashOfConfig":"310"},{"size":19888,"mtime":1637579231052,"results":"412","hashOfConfig":"310"},{"size":15240,"mtime":1637579231056,"results":"413","hashOfConfig":"310"},{"size":13154,"mtime":1637579231060,"results":"414","hashOfConfig":"310"},{"size":17662,"mtime":1637579231056,"results":"415","hashOfConfig":"310"},{"size":17443,"mtime":1637579231056,"results":"416","hashOfConfig":"310"},{"size":8810,"mtime":1637579231052,"results":"417","hashOfConfig":"310"},{"size":6546,"mtime":1637579231056,"results":"418","hashOfConfig":"310"},{"size":6406,"mtime":1637579231056,"results":"419","hashOfConfig":"310"},{"size":3073,"mtime":1637579231084,"results":"420","hashOfConfig":"310"},{"size":2567,"mtime":1637753536787,"results":"421","hashOfConfig":"310"},{"size":1671,"mtime":1637579231048,"results":"422","hashOfConfig":"310"},{"size":1670,"mtime":1637579231048,"results":"423","hashOfConfig":"310"},{"size":434,"mtime":1637579231032,"results":"424","hashOfConfig":"310"},{"size":2069,"mtime":1637579231032,"results":"425","hashOfConfig":"310"},{"size":438,"mtime":1637579231040,"results":"426","hashOfConfig":"310"},{"size":17322,"mtime":1637579231040,"results":"427","hashOfConfig":"310"},{"size":19838,"mtime":1637579231032,"results":"428","hashOfConfig":"310"},{"size":2635,"mtime":1637579231040,"results":"429","hashOfConfig":"310"},{"size":13173,"mtime":1637579231056,"results":"430","hashOfConfig":"310"},{"size":13058,"mtime":1637579231056,"results":"431","hashOfConfig":"310"},{"size":14134,"mtime":1637579231056,"results":"432","hashOfConfig":"310"},{"size":15388,"mtime":1637579231056,"results":"433","hashOfConfig":"310"},{"size":2018,"mtime":1637579231048,"results":"434","hashOfConfig":"310"},{"size":4698,"mtime":1637579231056,"results":"435","hashOfConfig":"310"},{"size":4872,"mtime":1637579231040,"results":"436","hashOfConfig":"310"},{"size":4776,"mtime":1637579231040,"results":"437","hashOfConfig":"310"},{"size":14287,"mtime":1637679873008,"results":"438","hashOfConfig":"310"},{"size":490,"mtime":1637579231040,"results":"439","hashOfConfig":"310"},{"size":1549,"mtime":1637579231048,"results":"440","hashOfConfig":"310"},{"size":13885,"mtime":1637757855120,"results":"441","hashOfConfig":"310"},{"size":15724,"mtime":1637757842605,"results":"442","hashOfConfig":"310"},{"size":2581,"mtime":1637753769376,"results":"443","hashOfConfig":"310"},{"size":2630,"mtime":1637579231056,"results":"444","hashOfConfig":"310"},{"size":2359,"mtime":1637579231048,"results":"445","hashOfConfig":"310"},{"size":14541,"mtime":1637579231040,"results":"446","hashOfConfig":"310"},{"size":2726,"mtime":1637579231056,"results":"447","hashOfConfig":"310"},{"size":1690,"mtime":1637579231036,"results":"448","hashOfConfig":"310"},{"size":1648,"mtime":1637579231056,"results":"449","hashOfConfig":"310"},{"size":4621,"mtime":1637579231032,"results":"450","hashOfConfig":"310"},{"size":1415,"mtime":1637579231036,"results":"451","hashOfConfig":"310"},{"size":6025,"mtime":1637579231040,"results":"452","hashOfConfig":"310"},{"size":2604,"mtime":1637579231036,"results":"453","hashOfConfig":"310"},{"size":1599,"mtime":1637579231036,"results":"454","hashOfConfig":"310"},{"size":2314,"mtime":1637579231036,"results":"455","hashOfConfig":"310"},{"size":4769,"mtime":1637579231036,"results":"456","hashOfConfig":"310"},{"size":361,"mtime":1637728180851,"results":"457","hashOfConfig":"310"},{"size":9943,"mtime":1637810669026,"results":"458","hashOfConfig":"310"},{"size":4813,"mtime":1637583970751,"results":"459","hashOfConfig":"310"},{"size":2618,"mtime":1637753696276,"results":"460","hashOfConfig":"310"},{"size":14146,"mtime":1637579231040,"results":"461","hashOfConfig":"310"},{"size":160,"mtime":1637579231028,"results":"462","hashOfConfig":"310"},{"size":23566,"mtime":1637741625903,"results":"463","hashOfConfig":"310"},{"size":1689,"mtime":1637579231032,"results":"464","hashOfConfig":"310"},{"size":6688,"mtime":1637753620962,"results":"465","hashOfConfig":"310"},{"size":4754,"mtime":1637579231060,"results":"466","hashOfConfig":"310"},{"size":3286,"mtime":1637579231052,"results":"467","hashOfConfig":"310"},{"size":8476,"mtime":1637579231052,"results":"468","hashOfConfig":"310"},{"size":3152,"mtime":1637579231052,"results":"469","hashOfConfig":"310"},{"size":14594,"mtime":1637757823462,"results":"470","hashOfConfig":"310"},{"size":14035,"mtime":1637579231044,"results":"471","hashOfConfig":"310"},{"size":14123,"mtime":1637579231044,"results":"472","hashOfConfig":"310"},{"size":16735,"mtime":1637579231044,"results":"473","hashOfConfig":"310"},{"size":6149,"mtime":1637579231032,"results":"474","hashOfConfig":"310"},{"size":4393,"mtime":1637579231036,"results":"475","hashOfConfig":"310"},{"size":5974,"mtime":1637579231036,"results":"476","hashOfConfig":"310"},{"size":2877,"mtime":1637579231044,"results":"477","hashOfConfig":"310"},{"size":7059,"mtime":1637579231036,"results":"478","hashOfConfig":"310"},{"size":3018,"mtime":1637579231052,"results":"479","hashOfConfig":"310"},{"size":8524,"mtime":1637579231044,"results":"480","hashOfConfig":"310"},{"size":8622,"mtime":1637579231036,"results":"481","hashOfConfig":"310"},{"size":8446,"mtime":1637579231044,"results":"482","hashOfConfig":"310"},{"size":9259,"mtime":1637579231044,"results":"483","hashOfConfig":"310"},{"size":4727,"mtime":1637579231048,"results":"484","hashOfConfig":"310"},{"size":2127,"mtime":1637579231084,"results":"485","hashOfConfig":"310"},{"size":1724,"mtime":1637579231080,"results":"486","hashOfConfig":"310"},{"size":7206,"mtime":1637579231044,"results":"487","hashOfConfig":"310"},{"size":7818,"mtime":1637579231084,"results":"488","hashOfConfig":"310"},{"size":1680,"mtime":1637579231080,"results":"489","hashOfConfig":"310"},{"size":1610,"mtime":1637579231084,"results":"490","hashOfConfig":"310"},{"size":794,"mtime":1637579231084,"results":"491","hashOfConfig":"310"},{"size":10202,"mtime":1637579231036,"results":"492","hashOfConfig":"310"},{"size":11992,"mtime":1637583257059,"results":"493","hashOfConfig":"310"},{"size":12084,"mtime":1637583225475,"results":"494","hashOfConfig":"310"},{"size":10895,"mtime":1637583194623,"results":"495","hashOfConfig":"310"},{"size":10125,"mtime":1637583150027,"results":"496","hashOfConfig":"310"},{"size":8270,"mtime":1637759319652,"results":"497","hashOfConfig":"310"},{"size":11443,"mtime":1637759337477,"results":"498","hashOfConfig":"310"},{"size":15637,"mtime":1637759293626,"results":"499","hashOfConfig":"310"},{"size":15217,"mtime":1637759263755,"results":"500","hashOfConfig":"310"},{"size":473,"mtime":1637579231080,"results":"501","hashOfConfig":"310"},{"size":6996,"mtime":1637579231084,"results":"502","hashOfConfig":"310"},{"size":14506,"mtime":1637579231084,"results":"503","hashOfConfig":"310"},{"size":18225,"mtime":1637817874157,"results":"504","hashOfConfig":"310"},{"size":5427,"mtime":1637582688235,"results":"505","hashOfConfig":"310"},{"size":1635,"mtime":1637579231088,"results":"506","hashOfConfig":"310"},{"size":2589,"mtime":1637579231092,"results":"507","hashOfConfig":"310"},{"size":321497,"mtime":1637579231092,"results":"508","hashOfConfig":"310"},{"size":2223,"mtime":1637579231040,"results":"509","hashOfConfig":"310"},{"size":4996,"mtime":1637579231080,"results":"510","hashOfConfig":"310"},{"size":5673,"mtime":1637579231032,"results":"511","hashOfConfig":"310"},{"size":779,"mtime":1637579231028,"results":"512","hashOfConfig":"310"},{"size":479,"mtime":1637579231028,"results":"513","hashOfConfig":"310"},{"size":474,"mtime":1637579231028,"results":"514","hashOfConfig":"310"},{"size":478,"mtime":1637579231028,"results":"515","hashOfConfig":"310"},{"size":532,"mtime":1637579231028,"results":"516","hashOfConfig":"310"},{"size":13705,"mtime":1637579231060,"results":"517","hashOfConfig":"310"},{"size":2689,"mtime":1637579231064,"results":"518","hashOfConfig":"310"},{"size":7246,"mtime":1637579231064,"results":"519","hashOfConfig":"310"},{"size":346,"mtime":1637579231060,"results":"520","hashOfConfig":"310"},{"size":3914,"mtime":1637579231060,"results":"521","hashOfConfig":"310"},{"size":5690,"mtime":1637808827000,"results":"522","hashOfConfig":"310"},{"size":7034,"mtime":1637579231060,"results":"523","hashOfConfig":"310"},{"size":1045,"mtime":1637579231064,"results":"524","hashOfConfig":"310"},{"size":2830,"mtime":1637579231064,"results":"525","hashOfConfig":"310"},{"size":19811,"mtime":1637579231060,"results":"526","hashOfConfig":"310"},{"size":3276,"mtime":1637579231060,"results":"527","hashOfConfig":"310"},{"size":2804,"mtime":1637579231060,"results":"528","hashOfConfig":"310"},{"size":9190,"mtime":1637579231064,"results":"529","hashOfConfig":"310"},{"size":12597,"mtime":1637579231060,"results":"530","hashOfConfig":"310"},{"size":5061,"mtime":1637579231060,"results":"531","hashOfConfig":"310"},{"size":527,"mtime":1637579231064,"results":"532","hashOfConfig":"310"},{"size":2363,"mtime":1637579231048,"results":"533","hashOfConfig":"310"},{"size":4801,"mtime":1637579231064,"results":"534","hashOfConfig":"310"},{"size":4634,"mtime":1637579231064,"results":"535","hashOfConfig":"310"},{"size":4599846,"mtime":1637579231092,"results":"536","hashOfConfig":"310"},{"size":7821,"mtime":1637589917933,"results":"537","hashOfConfig":"310"},{"size":6531,"mtime":1637592972408,"results":"538","hashOfConfig":"310"},{"size":467,"mtime":1637579231064,"results":"539","hashOfConfig":"310"},{"size":424,"mtime":1637579231056,"results":"540","hashOfConfig":"310"},{"size":10081,"mtime":1637579231080,"results":"541","hashOfConfig":"310"},{"size":3059,"mtime":1637579231080,"results":"542","hashOfConfig":"310"},{"size":4494,"mtime":1637579231080,"results":"543","hashOfConfig":"310"},{"size":2362,"mtime":1637579231084,"results":"544","hashOfConfig":"310"},{"size":3389,"mtime":1637819347658,"results":"545","hashOfConfig":"310"},{"size":1576,"mtime":1637579231064,"results":"546","hashOfConfig":"310"},{"size":18615,"mtime":1637579231060,"results":"547","hashOfConfig":"310"},{"size":19501,"mtime":1637579231060,"results":"548","hashOfConfig":"310"},{"size":19822,"mtime":1637579231060,"results":"549","hashOfConfig":"310"},{"size":17248,"mtime":1637579231064,"results":"550","hashOfConfig":"310"},{"size":15189,"mtime":1637579231064,"results":"551","hashOfConfig":"310"},{"size":17085,"mtime":1637579231064,"results":"552","hashOfConfig":"310"},{"size":2125,"mtime":1637579231064,"results":"553","hashOfConfig":"310"},{"size":13345,"mtime":1637680020177,"results":"554","hashOfConfig":"310"},{"size":14539,"mtime":1637579231040,"results":"555","hashOfConfig":"310"},{"size":14764,"mtime":1637579231064,"results":"556","hashOfConfig":"310"},{"size":17831,"mtime":1637579231064,"results":"557","hashOfConfig":"310"},{"size":13945,"mtime":1637579231064,"results":"558","hashOfConfig":"310"},{"size":12900,"mtime":1637579231064,"results":"559","hashOfConfig":"310"},{"size":14875,"mtime":1637579231064,"results":"560","hashOfConfig":"310"},{"size":8428,"mtime":1637579231064,"results":"561","hashOfConfig":"310"},{"size":6596,"mtime":1637579231064,"results":"562","hashOfConfig":"310"},{"size":6718,"mtime":1637579231060,"results":"563","hashOfConfig":"310"},{"size":4295,"mtime":1637579231060,"results":"564","hashOfConfig":"310"},{"size":3993,"mtime":1637579231060,"results":"565","hashOfConfig":"310"},{"size":4698,"mtime":1637579231060,"results":"566","hashOfConfig":"310"},{"size":16831,"mtime":1637592570618,"results":"567","hashOfConfig":"310"},{"size":2246,"mtime":1637579231068,"results":"568","hashOfConfig":"310"},{"size":3498,"mtime":1637579231080,"results":"569","hashOfConfig":"310"},{"size":2355,"mtime":1637579231060,"results":"570","hashOfConfig":"310"},{"size":3288,"mtime":1637579231060,"results":"571","hashOfConfig":"310"},{"size":8463,"mtime":1637579231060,"results":"572","hashOfConfig":"310"},{"size":2624,"mtime":1637753825609,"results":"573","hashOfConfig":"310"},{"size":3150,"mtime":1637579231060,"results":"574","hashOfConfig":"310"},{"size":2633,"mtime":1637579231064,"results":"575","hashOfConfig":"310"},{"size":1644,"mtime":1637579231064,"results":"576","hashOfConfig":"310"},{"size":4755,"mtime":1637579231064,"results":"577","hashOfConfig":"310"},{"size":2728,"mtime":1637579231064,"results":"578","hashOfConfig":"310"},{"size":22785,"mtime":1637593095862,"results":"579","hashOfConfig":"310"},{"size":3023,"mtime":1637579231060,"results":"580","hashOfConfig":"310"},{"size":22965,"mtime":1637592849595,"results":"581","hashOfConfig":"310"},{"size":6355,"mtime":1637579231060,"results":"582","hashOfConfig":"310"},{"size":6248,"mtime":1637579231052,"results":"583","hashOfConfig":"310"},{"size":4242,"mtime":1637579231052,"results":"584","hashOfConfig":"310"},{"size":4287,"mtime":1637579231060,"results":"585","hashOfConfig":"310"},{"size":3071,"mtime":1637579231032,"results":"586","hashOfConfig":"310"},{"size":2631,"mtime":1634535742788,"results":"587","hashOfConfig":"588"},{"size":1691,"mtime":1634535726656,"results":"589","hashOfConfig":"588"},{"size":610,"mtime":1637579231096,"results":"590","hashOfConfig":"310"},{"size":727,"mtime":1637579231040,"results":"591","hashOfConfig":"310"},{"size":20311,"mtime":1637757993774,"results":"592","hashOfConfig":"310"},{"size":3464,"mtime":1633523813144,"results":"593","hashOfConfig":"588"},{"size":418,"mtime":1633443779977,"results":"594","hashOfConfig":"588"},{"size":7604,"mtime":1637579231056,"results":"595","hashOfConfig":"310"},{"size":1980,"mtime":1637579231056,"results":"596","hashOfConfig":"310"},{"size":10247,"mtime":1637579231056,"results":"597","hashOfConfig":"310"},{"size":8957,"mtime":1637579231084,"results":"598","hashOfConfig":"310"},{"size":3391,"mtime":1637579231084,"results":"599","hashOfConfig":"310"},{"size":6520,"mtime":1637579231040,"results":"600","hashOfConfig":"310"},{"size":11930,"mtime":1637579231060,"results":"601","hashOfConfig":"310"},{"size":11650,"mtime":1637579231068,"results":"602","hashOfConfig":"310"},{"size":1921,"mtime":1637579231068,"results":"603","hashOfConfig":"310"},{"size":6823,"mtime":1637579231068,"results":"604","hashOfConfig":"310"},{"size":9532,"mtime":1637579231068,"results":"605","hashOfConfig":"310"},{"size":20426,"mtime":1637758015246,"results":"606","hashOfConfig":"310"},{"size":2010,"mtime":1637579231052,"results":"607","hashOfConfig":"310"},{"size":9233,"mtime":1637579231052,"results":"608","hashOfConfig":"310"},{"size":17852,"mtime":1637579231052,"results":"609","hashOfConfig":"310"},{"size":6182,"mtime":1637579231052,"results":"610","hashOfConfig":"310"},{"size":3355,"mtime":1637579231040,"results":"611","hashOfConfig":"310"},{"size":2226,"mtime":1637579231040,"results":"612","hashOfConfig":"310"},{"size":1147,"mtime":1635250490501,"results":"613","hashOfConfig":"588"},{"size":7469,"mtime":1637579231048,"results":"614","hashOfConfig":"310"},{"size":7471,"mtime":1637579231056,"results":"615","hashOfConfig":"310"},{"size":7468,"mtime":1637579231064,"results":"616","hashOfConfig":"310"},{"size":2780,"mtime":1637581823265,"results":"617","hashOfConfig":"310"},{"size":2807,"mtime":1637579231084,"results":"618","hashOfConfig":"310"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},"6ojwz3",{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"621"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"621"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"621"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"621"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"621"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"621"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"621"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"621"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"621"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"621"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"621"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"621"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"621"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"621"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"621"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"621"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"621"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"621"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"621"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"621"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"692","usedDeprecatedRules":"621"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"621"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"621"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"621"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"621"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713","usedDeprecatedRules":"621"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"621"},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"621"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"621"},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"621"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"621"},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"621"},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"621"},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"621"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"621"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"621"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"621"},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"621"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"621"},{"filePath":"753","messages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"621"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"621"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"621"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"621"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"621"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"621"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"621"},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"621"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"621"},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"784","usedDeprecatedRules":"621"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"787","usedDeprecatedRules":"621"},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"621"},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"621"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"621"},{"filePath":"799","messages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"801","usedDeprecatedRules":"621"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"621"},{"filePath":"805","messages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807","usedDeprecatedRules":"621"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810","usedDeprecatedRules":"621"},{"filePath":"811","messages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813","usedDeprecatedRules":"621"},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"621"},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"621"},{"filePath":"820","messages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"822","usedDeprecatedRules":"621"},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825","usedDeprecatedRules":"621"},{"filePath":"826","messages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828","usedDeprecatedRules":"621"},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"621"},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834","usedDeprecatedRules":"621"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837","usedDeprecatedRules":"621"},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"840","usedDeprecatedRules":"621"},{"filePath":"841","messages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"843","usedDeprecatedRules":"621"},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"621"},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"621"},{"filePath":"850","messages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"621"},{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"857","usedDeprecatedRules":"621"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860","usedDeprecatedRules":"621"},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"863","messages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"865","messages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"867","messages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"869","messages":"870","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871","usedDeprecatedRules":"621"},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"874","messages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878","usedDeprecatedRules":"621"},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881","usedDeprecatedRules":"621"},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"621"},{"filePath":"885","messages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"621"},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"621"},{"filePath":"891","messages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"621"},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898","usedDeprecatedRules":"621"},{"filePath":"899","messages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"901","usedDeprecatedRules":"621"},{"filePath":"902","messages":"903","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"904","usedDeprecatedRules":"621"},{"filePath":"905","messages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"907","usedDeprecatedRules":"621"},{"filePath":"908","messages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"910","usedDeprecatedRules":"621"},{"filePath":"911","messages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"913","usedDeprecatedRules":"621"},{"filePath":"914","messages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916","usedDeprecatedRules":"621"},{"filePath":"917","messages":"918","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"919","usedDeprecatedRules":"621"},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"922","usedDeprecatedRules":"621"},{"filePath":"923","messages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925","usedDeprecatedRules":"621"},{"filePath":"926","messages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"928","usedDeprecatedRules":"621"},{"filePath":"929","messages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"931","usedDeprecatedRules":"621"},{"filePath":"932","messages":"933","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"934","usedDeprecatedRules":"621"},{"filePath":"935","messages":"936","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"621"},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"942","usedDeprecatedRules":"621"},{"filePath":"943","messages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"945","messages":"946","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"947","usedDeprecatedRules":"621"},{"filePath":"948","messages":"949","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"950","messages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"621"},{"filePath":"953","messages":"954","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"621"},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"958","usedDeprecatedRules":"621"},{"filePath":"959","messages":"960","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"961","usedDeprecatedRules":"621"},{"filePath":"962","messages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"964","usedDeprecatedRules":"621"},{"filePath":"965","messages":"966","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"967","usedDeprecatedRules":"621"},{"filePath":"968","messages":"969","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"970","usedDeprecatedRules":"621"},{"filePath":"971","messages":"972","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"973","usedDeprecatedRules":"621"},{"filePath":"974","messages":"975","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"976","usedDeprecatedRules":"621"},{"filePath":"977","messages":"978","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"979","usedDeprecatedRules":"621"},{"filePath":"980","messages":"981","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"982","usedDeprecatedRules":"621"},{"filePath":"983","messages":"984","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"985","usedDeprecatedRules":"621"},{"filePath":"986","messages":"987","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"988","usedDeprecatedRules":"621"},{"filePath":"989","messages":"990","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"991","usedDeprecatedRules":"621"},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"994","messages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"996","messages":"997","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"998","messages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1000","usedDeprecatedRules":"621"},{"filePath":"1001","messages":"1002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1003","messages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1005","usedDeprecatedRules":"621"},{"filePath":"1006","messages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1008","usedDeprecatedRules":"621"},{"filePath":"1009","messages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1011","usedDeprecatedRules":"621"},{"filePath":"1012","messages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014","usedDeprecatedRules":"621"},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"621"},{"filePath":"1018","messages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1020","usedDeprecatedRules":"621"},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023","usedDeprecatedRules":"621"},{"filePath":"1024","messages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1026","usedDeprecatedRules":"621"},{"filePath":"1027","messages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1029","usedDeprecatedRules":"621"},{"filePath":"1030","messages":"1031","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1032","usedDeprecatedRules":"621"},{"filePath":"1033","messages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1035","usedDeprecatedRules":"621"},{"filePath":"1036","messages":"1037","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1038","messages":"1039","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"1040","messages":"1041","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1042","usedDeprecatedRules":"621"},{"filePath":"1043","messages":"1044","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1045","messages":"1046","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1047","usedDeprecatedRules":"621"},{"filePath":"1048","messages":"1049","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1050","messages":"1051","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1052","usedDeprecatedRules":"621"},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055","usedDeprecatedRules":"621"},{"filePath":"1056","messages":"1057","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1058","messages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1060","usedDeprecatedRules":"621"},{"filePath":"1061","messages":"1062","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1063","usedDeprecatedRules":"621"},{"filePath":"1064","messages":"1065","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1066","usedDeprecatedRules":"621"},{"filePath":"1067","messages":"1068","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1069","usedDeprecatedRules":"621"},{"filePath":"1070","messages":"1071","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1074","usedDeprecatedRules":"621"},{"filePath":"1075","messages":"1076","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1077","usedDeprecatedRules":"621"},{"filePath":"1078","messages":"1079","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1080","usedDeprecatedRules":"621"},{"filePath":"1081","messages":"1082","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1083","usedDeprecatedRules":"621"},{"filePath":"1084","messages":"1085","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1086","usedDeprecatedRules":"621"},{"filePath":"1087","messages":"1088","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1089","usedDeprecatedRules":"621"},{"filePath":"1090","messages":"1091","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1092","usedDeprecatedRules":"621"},{"filePath":"1093","messages":"1094","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1095","usedDeprecatedRules":"621"},{"filePath":"1096","messages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1098","usedDeprecatedRules":"621"},{"filePath":"1099","messages":"1100","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1101","usedDeprecatedRules":"621"},{"filePath":"1102","messages":"1103","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1104","usedDeprecatedRules":"621"},{"filePath":"1105","messages":"1106","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1107","usedDeprecatedRules":"621"},{"filePath":"1108","messages":"1109","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1110","usedDeprecatedRules":"621"},{"filePath":"1111","messages":"1112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1113","usedDeprecatedRules":"621"},{"filePath":"1114","messages":"1115","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1116","usedDeprecatedRules":"621"},{"filePath":"1117","messages":"1118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1119","usedDeprecatedRules":"621"},{"filePath":"1120","messages":"1121","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1122","usedDeprecatedRules":"621"},{"filePath":"1123","messages":"1124","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1125","usedDeprecatedRules":"621"},{"filePath":"1126","messages":"1127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1128","usedDeprecatedRules":"621"},{"filePath":"1129","messages":"1130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1131","usedDeprecatedRules":"621"},{"filePath":"1132","messages":"1133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1134","usedDeprecatedRules":"621"},{"filePath":"1135","messages":"1136","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1137","usedDeprecatedRules":"621"},{"filePath":"1138","messages":"1139","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1140","usedDeprecatedRules":"621"},{"filePath":"1141","messages":"1142","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1143","usedDeprecatedRules":"621"},{"filePath":"1144","messages":"1145","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1146","usedDeprecatedRules":"621"},{"filePath":"1147","messages":"1148","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1149","usedDeprecatedRules":"621"},{"filePath":"1150","messages":"1151","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1152","messages":"1153","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1154","messages":"1155","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1156","messages":"1157","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1158","messages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1160","messages":"1161","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162","usedDeprecatedRules":"621"},{"filePath":"1163","messages":"1164","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1165","usedDeprecatedRules":"621"},{"filePath":"1166","messages":"1167","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1168","messages":"1169","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1170","usedDeprecatedRules":"621"},{"filePath":"1171","messages":"1172","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1173","usedDeprecatedRules":"621"},{"filePath":"1174","messages":"1175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1176","usedDeprecatedRules":"621"},{"filePath":"1177","messages":"1178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1179","messages":"1180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1181","messages":"1182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1183","usedDeprecatedRules":"621"},{"filePath":"1184","messages":"1185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1186","usedDeprecatedRules":"621"},{"filePath":"1187","messages":"1188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1189","messages":"1190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1191","messages":"1192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1193","messages":"1194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1195","messages":"1196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1197","messages":"1198","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1199","usedDeprecatedRules":"621"},{"filePath":"1200","messages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1202","usedDeprecatedRules":"621"},{"filePath":"1203","messages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1205","usedDeprecatedRules":"621"},{"filePath":"1206","messages":"1207","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1208","usedDeprecatedRules":"621"},{"filePath":"1209","messages":"1210","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1211","usedDeprecatedRules":"621"},{"filePath":"1212","messages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1214","messages":"1215","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1216","usedDeprecatedRules":"621"},{"filePath":"1217","messages":"1218","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1219","usedDeprecatedRules":"621"},{"filePath":"1220","messages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1222","usedDeprecatedRules":"621"},{"filePath":"1223","messages":"1224","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1225","usedDeprecatedRules":"621"},{"filePath":"1226","messages":"1227","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1228","usedDeprecatedRules":"621"},{"filePath":"1229","messages":"1230","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1231","usedDeprecatedRules":"621"},{"filePath":"1232","messages":"1233","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1234","usedDeprecatedRules":"621"},{"filePath":"1235","messages":"1236","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1237","usedDeprecatedRules":"621"},{"filePath":"1238","messages":"1239","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1240","usedDeprecatedRules":"621"},{"filePath":"1241","messages":"1242","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1243","usedDeprecatedRules":"621"},{"filePath":"1244","messages":"1245","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1246","usedDeprecatedRules":"621"},{"filePath":"1247","messages":"1248","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1249","usedDeprecatedRules":"621"},{"filePath":"1250","messages":"1251","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1252","usedDeprecatedRules":"621"},{"filePath":"1253","messages":"1254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1255","messages":"1256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257","usedDeprecatedRules":"621"},{"filePath":"1258","messages":"1259","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1260","usedDeprecatedRules":"621"},{"filePath":"1261","messages":"1262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1263","messages":"1264","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1265","usedDeprecatedRules":"621"},{"filePath":"1266","messages":"1267","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1268","usedDeprecatedRules":"621"},{"filePath":"1269","messages":"1270","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1271","usedDeprecatedRules":"621"},{"filePath":"1272","messages":"1273","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1274","usedDeprecatedRules":"621"},{"filePath":"1275","messages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1277","usedDeprecatedRules":"621"},{"filePath":"1278","messages":"1279","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1280","messages":"1281","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1282","usedDeprecatedRules":"621"},{"filePath":"1283","messages":"1284","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1285","usedDeprecatedRules":"621"},{"filePath":"1286","messages":"1287","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288","usedDeprecatedRules":"621"},{"filePath":"1289","messages":"1290","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1291","usedDeprecatedRules":"621"},{"filePath":"1292","messages":"1293","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1294","usedDeprecatedRules":"621"},{"filePath":"1295","messages":"1296","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1297","usedDeprecatedRules":"621"},{"filePath":"1298","messages":"1299","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1300","usedDeprecatedRules":"621"},{"filePath":"1301","messages":"1302","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1303","usedDeprecatedRules":"621"},{"filePath":"1304","messages":"1305","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"621"},{"filePath":"1307","messages":"1308","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1309","usedDeprecatedRules":"621"},{"filePath":"1310","messages":"1311","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1312","usedDeprecatedRules":"621"},{"filePath":"1313","messages":"1314","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1315","usedDeprecatedRules":"621"},{"filePath":"1316","messages":"1317","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1318","usedDeprecatedRules":"621"},{"filePath":"1319","messages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1321","usedDeprecatedRules":"621"},{"filePath":"1322","messages":"1323","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1324","usedDeprecatedRules":"621"},{"filePath":"1325","messages":"1326","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1327","usedDeprecatedRules":"621"},{"filePath":"1328","messages":"1329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1330","usedDeprecatedRules":"621"},{"filePath":"1331","messages":"1332","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1333","usedDeprecatedRules":"621"},{"filePath":"1334","messages":"1335","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1336","usedDeprecatedRules":"621"},{"filePath":"1337","messages":"1338","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1339","usedDeprecatedRules":"621"},{"filePath":"1340","messages":"1341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"621"},{"filePath":"1343","messages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1345","usedDeprecatedRules":"621"},{"filePath":"1346","messages":"1347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1348","messages":"1349","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1350","usedDeprecatedRules":"621"},{"filePath":"1351","messages":"1352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1353","messages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1355","usedDeprecatedRules":"621"},{"filePath":"1356","messages":"1357","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1358","usedDeprecatedRules":"621"},{"filePath":"1359","messages":"1360","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1361","messages":"1362","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1363","usedDeprecatedRules":"621"},{"filePath":"1364","messages":"1365","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1366","usedDeprecatedRules":"621"},{"filePath":"1367","messages":"1368","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1369","usedDeprecatedRules":"621"},{"filePath":"1370","messages":"1371","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1372","usedDeprecatedRules":"621"},{"filePath":"1373","messages":"1374","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1375","usedDeprecatedRules":"621"},{"filePath":"1376","messages":"1377","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1378","usedDeprecatedRules":"621"},{"filePath":"1379","messages":"1380","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1381","usedDeprecatedRules":"621"},{"filePath":"1382","messages":"1383","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1384","usedDeprecatedRules":"621"},{"filePath":"1385","messages":"1386","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1387","usedDeprecatedRules":"621"},{"filePath":"1388","messages":"1389","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1390","usedDeprecatedRules":"621"},{"filePath":"1391","messages":"1392","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1393","usedDeprecatedRules":"621"},{"filePath":"1394","messages":"1395","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1396","usedDeprecatedRules":"621"},{"filePath":"1397","messages":"1398","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1399","usedDeprecatedRules":"621"},{"filePath":"1400","messages":"1401","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1402","usedDeprecatedRules":"1403"},"112pbrh",{"filePath":"1404","messages":"1405","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1406","usedDeprecatedRules":"1403"},{"filePath":"1407","messages":"1408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"621"},{"filePath":"1409","messages":"1410","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1411","usedDeprecatedRules":"621"},{"filePath":"1412","messages":"1413","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1414","messages":"1415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1416"},{"filePath":"1417","messages":"1418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1419","messages":"1420","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1421","usedDeprecatedRules":"621"},{"filePath":"1422","messages":"1423","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1424","usedDeprecatedRules":"621"},{"filePath":"1425","messages":"1426","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1427","usedDeprecatedRules":"621"},{"filePath":"1428","messages":"1429","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1430","usedDeprecatedRules":"621"},{"filePath":"1431","messages":"1432","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1433","usedDeprecatedRules":"621"},{"filePath":"1434","messages":"1435","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1436","usedDeprecatedRules":"621"},{"filePath":"1437","messages":"1438","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1439","usedDeprecatedRules":"621"},{"filePath":"1440","messages":"1441","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1442","usedDeprecatedRules":"621"},{"filePath":"1443","messages":"1444","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1445","usedDeprecatedRules":"621"},{"filePath":"1446","messages":"1447","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1448","usedDeprecatedRules":"621"},{"filePath":"1449","messages":"1450","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1451","usedDeprecatedRules":"621"},{"filePath":"1452","messages":"1453","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1454","messages":"1455","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1456","usedDeprecatedRules":"621"},{"filePath":"1457","messages":"1458","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1459","usedDeprecatedRules":"621"},{"filePath":"1460","messages":"1461","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1462","usedDeprecatedRules":"621"},{"filePath":"1463","messages":"1464","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1465","usedDeprecatedRules":"621"},{"filePath":"1466","messages":"1467","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1468","usedDeprecatedRules":"621"},{"filePath":"1469","messages":"1470","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1471","usedDeprecatedRules":"621"},{"filePath":"1472","messages":"1473","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1474","messages":"1475","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1476","usedDeprecatedRules":"621"},{"filePath":"1477","messages":"1478","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1479","usedDeprecatedRules":"621"},{"filePath":"1480","messages":"1481","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1482","usedDeprecatedRules":"621"},{"filePath":"1483","messages":"1484","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1485","usedDeprecatedRules":"621"},{"filePath":"1486","messages":"1487","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1488","usedDeprecatedRules":"621"},"/home/pooja/MazarsRepo/src/index.js",[],["1489","1490"],"/home/pooja/MazarsRepo/src/reportWebVitals.js",[],"/home/pooja/MazarsRepo/src/App.js",["1491"],"import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { positions, Provider, transitions } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport PageNotFound from './components/PageNotFound/PageNotFound'\n\n\n\n//user routes\nimport Login from './views/Login/Login'\nimport SignUp from './views/SignUpForm/SignUp'\nimport Dashboard from './views/Dashboard/Dashboard'\nimport MyAssingment from './views/MyAssingment/MyAssingment'\nimport AddFreshAssingment from './views/AddFressAssignment/AddFreshAssingment'\nimport SelectCategoryPage from './views/SelectCategoryPage/SelectCategoryPage'\nimport QueriesTab from './views/QueriesTab/QueriesTab'\nimport ProposalTab from './views/ProposalTab/ProposalTab'\nimport AssignmentTab from './views/AssignmentTab/AssignmentTab'\nimport ProposalReceived from './views/ProposalView/ProposalView'\nimport ForgetPassword from './views/ForgetPassword/ForgetPassword'\nimport NewPassword from './views/NewPassword/NewPassword'\nimport ChangePassword from './views/ChangePassword/ChangePassword'\nimport EditQuery from './views/EditQuery/EditQuery'\nimport VideoCall from './views/VideoCall/VideoCall'\nimport MeetingComponent from './views/MeetingComponent/MeetingComponent'\nimport schedule from './views/Schedule/schedule'\nimport ViewNotification from './views/ViewNotification/ViewNotification'\nimport Chatting from './views/Chatting/Chatting'\nimport Message from './views/Message/Message'\nimport ProposalView from './views/ProposalView/ProposalView'\nimport Feedback from './views/Feedback/Feedback'\nimport FeedbackData from './views/FeedbackData/FeedbackData'\nimport PaymentStatus from './views/PaymentStatus/PaymentStatus'\nimport PaymentGateway from \"./views/PaymentGateway.js/PaymentGateway\";\nimport ThankYou from \"./views/ThankYou/Thankyou\";\nimport payDetails from \"./views/PaymentStatus/PayDetails\";\n\n\n\n//admin routes\nimport AdminStart from './pages/Admin/Start/Start'\nimport AdminLogin from './pages/Admin/Login/Login'\nimport AdminDashboard from './pages/Admin/Dashboard/Dashboard'\nimport AdminNewTeamLeader from './pages/Admin/AddNewTeamLeader/AddNewTeamLeader'\nimport AdminNewTaxProf from './pages/Admin/AddNewTaxProf/AddNewTaxProf'\nimport AdminProposal from './pages/Admin/Proposal/Proposal'\nimport AdminQueriesRecevied from './pages/Admin/QueriesRecevied/QueriesRecevied'\nimport AdminQueryAssingment from './pages/Admin/QueryAssingment/QueryAssingment'\nimport AdminEditTL from './pages/Admin/EditTL/EditTL'\nimport AdminEditTP from './pages/Admin/EditTP/EditTP'\nimport AdminQueriesTab from './pages/Admin/QueriesTab/QueriesTab'\nimport AdminAssignmentTab from './pages/Admin/AssignmentTab/index'\nimport AdminPaymentStatusTab from './pages/Admin/PaymentStatusTab/PaymentStatusTab'\nimport AdminTeamLeaderTab from './pages/Admin/TeamLeaderTab/TeamLeaderTab'\nimport AdminTaxProfessionalsTab from './pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab'\nimport AdminFeedbackTab from './pages/Admin/FeedbackTab/FeedbackTab'\nimport AdminPendingRecevived from './pages/Admin/PendingReceived/PendingRecevived'\nimport AdminForgetPassword from './pages/Admin/ForgetPassword/ForgetPassword'\nimport AdminNewPassword from './pages/Admin/NewPassword/NewPassword'\nimport AdminQueryRejection from './pages/Admin/QueryRejection/QueryRejection'\nimport AdminSchedule from './pages/Admin/Schedule/Schedule'\nimport AdminMeetingComponent from './pages/Admin/MeetingComponent/MeetingComponent'\nimport AdminChatting from './pages/Admin/Chatting/Chatting'\nimport AdminMessage from './pages/Admin/Message/Message'\nimport AdminViewNotification from './pages/Admin/ViewNotification/ViewNotification'\nimport AdminRecording from './pages/Admin/Recording/Recording'\nimport adMeetingComponent from './pages/Admin/MeetingComponent/MeetingComponent'\nimport Customer from \"./pages/Admin/customer/Customer\";\nimport adminReport from \"./pages/Admin/Report/Report\";\nimport AdminInvoice from \"./pages/Admin/Invoice/Invoice\";\nimport AdpayDetails from \"./pages/Admin/PaymentStatusTab/Paydetails\";\n\nimport LoginFun from \"./components/LoginForm/LoginFun\";\n//TL routes\nimport TlStart from './pages/TL/Start/Start'\nimport TlLogin from './pages/TL/Login/Login'\nimport TlDashboard from './pages/TL/Dashboard/Dashboard'\nimport TlAddAssingmentStages from './pages/TL/AddAssingmentStages/AddAssingmentStages'\nimport TlAddNew from './pages/TL/AddNew/AddNew'\nimport TlAddTeamProf from './pages/TL/AddTeamProf/AddTeamProf'\nimport TlProposalTab from './pages/TL/Proposal/ProposalTab'\nimport TlQueriesRecevied from './pages/TL/QueriesRecevied/QueriesRecevied'\nimport TlQueryAssingment from './pages/TL/QueryAssingment/QueryAssingment'\nimport TlEditTP from './pages/TL/EditTP/EditTP'\nimport TlFeedbackTab from './pages/TL/FeedbackTab/FeedbackTab'\nimport TlPaymentStatus from './pages/TL/PaymentStatus/PaymentStatus'\nimport TlAssignmentTab from './pages/TL/AssignmentTab/AssignmentTab'\nimport TlSendProposal from './pages/TL/SendProposal/SendProposal'\nimport TlQueriesTab from './pages/TL/QueriesTab/QueriesTab'\nimport TlEditProposal from './pages/TL/EditProposal/EditProposal'\nimport TlPendingReceived from './pages/TL//PendingReceived/PendingReceived'\nimport TlAssignmentForm from './pages/TL/AssignmentForm/AssignmentForm'\nimport TlViewReport from './pages/TL/ViewReport/ViewReport'\nimport TlForgetPassword from './pages/TL/ForgetPassword/ForgetPassword'\nimport TlNewPassword from './pages/TL/NewPassword/NewPassword'\nimport TlViewNotification from './pages/TL/ViewNotification/ViewNotification'\nimport TlChatting from './pages/TL/Chatting/Chatting'\nimport TlMessage from './pages/TL/Message/Message'\nimport TlSchedule from './pages/TL/Schedule/Schedule'\nimport TlMeetingComponent from './pages/TL/MeetingComponent/MeetingComponent'\nimport TlRecording from './pages/TL/Recording/Recording'\nimport TlReport from \"./pages/TL/Report/Report\";\nimport TlInvoice from \"./pages/TL/Proposal/Invoice\"\nimport TlInvoiceTab from \"./pages/TL/Proposal/InvoiceTab\";\nimport TlpayDetails from \"./pages/TL/PaymentStatus/Paydetails\";\n// TP routes\nimport TpStart from './pages/TP/Start/Start'\nimport TpLogin from './pages/TP/Login/Login'\nimport TpQueriesRecevied from './pages/TP/QueriesRecevied/QueriesRecevied'\nimport TpQueriesTab from './pages/TP/QueriesTab/QueriesTab'\nimport TpProposalTab from './pages/TP/Proposal/ProposalTab'\nimport TpSendProposal from './pages/TP/SendProposal/SendProposal'\nimport TpEditProposal from './pages/TP/EditProposal/EditProposal'\nimport TpChangePassword from './pages/TP/ChangePassword/ChangePassword'\nimport TpDashboard from './pages/TP/Dashboard/Dashboard'\nimport TpForgetPassword from './pages/TP/ForgetPassword/ForgetPassword'\nimport TpNewPassword from './pages/TP/NewPassword/NewPassword'\nimport TpPaymentStatus from './pages/TP/PaymentStatus/PaymentStatus'\nimport TpAssignmentTab from './pages/TP/AssignmentTab/AssignmentTab'\nimport TpSchedule from './pages/TP/Schedule/Schedule'\nimport TpMessage from './pages/TP/Message/Message'\nimport TpChatting from './pages/TP/Chatting/Chatting'\nimport TpAddAssingmentStages from './pages/TP/AddAssingmentStages/AddAssingmentStages'\nimport TpFeedbackTab from './pages/TP/FeedbackTab/FeedbackTab'\nimport TpMeetingComponent from './pages/TP/MeetingComponent/MeetingComponent'\nimport TpViewNotification from './pages/TP/ViewNotification/ViewNotification'\nimport TpRecording from './pages/TP/Recording/Recording'\nimport TpReport from \"./pages/TP/Report/Report\";\nimport TpInvoice from \"./pages/TP/Invoice/Invoice.js\";\nimport TppayDetails from \"./pages/TP/PaymentStatus/Paydetails\";\n//private routes\nimport PrivateRouteUser from './Service/PrivateRouteUser'\nimport PrivateRouteAdmin from './Service/PrivateRouteAdmin'\nimport PrivateRouteTL from './Service/PrivateRouteTL'\nimport PrivateRouteTP from './Service/PrivateRouteTP'\nimport PublicRouteUser from './Service/PublicRouteUser'\nimport PublicRouteAdmin from './Service/PublicRouteAdmin'\nimport PublicRouteTL from './Service/PublicRouteTL'\nimport PublicRouteTP from './Service/PublicRouteTP'\n// import PayDetails from \"./views/PaymentStatus/PayDetails\";\n\n\nconst options = {\n  timeout: 4000,\n  position: positions.TOP_CENTER,\n  offset: \"80px\",\n  transition: transitions.SCALE,\n};\n\nfunction App() {\n \n\n  return (\n    <div>\n      <Provider template={AlertTemplate} {...options}>\n        <Router>\n          <Switch>\n\n            <PublicRouteUser exact path=\"/\" component={Login} />\n            <PublicRouteUser exact path=\"/customer/signup\" component={SignUp} />\n            <PublicRouteUser exact path=\"/customer/forget-password\" component={ForgetPassword} />\n            <PublicRouteUser exact path=\"/customer/new-password/:id\" component={NewPassword} />\n\n        \n            <PrivateRouteUser exact path=\"/customer/select-category\" component={SelectCategoryPage} />\n            <PrivateRouteUser exact path=\"/customer/dashboard\" component={Dashboard} />\n            <PrivateRouteUser exact path=\"/customer/my-assingment/:id\" component={MyAssingment} />\n            <PrivateRouteUser exact path=\"/customer/addfresh\" component={AddFreshAssingment} />\n            <PrivateRouteUser exact path=\"/customer/queries\" component={QueriesTab} />\n            <PrivateRouteUser exact path=\"/customer/proposal\" component={ProposalTab} />\n            <PrivateRouteUser exact path=\"/customer/assignment\" component={AssignmentTab} />\n            <PrivateRouteUser exact path=\"/customer/proposal-received/:id\" component={ProposalReceived} />\n            <PrivateRouteUser exact path=\"/customer/change-password\" component={ChangePassword} />\n            <PrivateRouteUser exact path=\"/customer/edit-query/:id\" component={EditQuery} />\n            <PrivateRouteUser exact path=\"/customer/video-call\" component={VideoCall} />\n            <PrivateRouteUser exact path=\"/customer/meeting\" component={MeetingComponent} />\n            <PrivateRouteUser exact path=\"/customer/schedule\" component={schedule} />\n            <PrivateRouteUser exact path=\"/customer/view-notification/:id\" component={ViewNotification} />\n            <PrivateRouteUser exact path=\"/customer/proposal_view/:id\" component={ProposalView} />\n            <PrivateRouteUser exact path=\"/customer/message\" component={Message} />\n            <PrivateRouteUser exact path=\"/customer/chatting/:id\" component={Chatting} />\n            <PrivateRouteUser exact path=\"/customer/feedback/:id\" component={Feedback} />\n            <PrivateRouteUser exact path=\"/customer/feedback-data\" component={FeedbackData} />\n            <PrivateRouteUser exact path=\"/customer/paymentstatus\" component={PaymentStatus} />\n            <PrivateRouteUser exact path=\"/customer/payment\" component={PaymentGateway} />\n            <PrivateRouteUser exact path=\"/customer/thankyou\" component={ThankYou} />  \n            <PrivateRouteUser exact path=\"/customer/paydetails/:id\" component={payDetails} />\n            <PublicRouteAdmin exact path=\"/admin/start\" component={AdminStart} />\n            <PublicRouteAdmin exact path=\"/admin/login\" component={AdminLogin} />\n            <PublicRouteAdmin exact path=\"/admin/forget-password\" component={AdminForgetPassword} />\n            <PublicRouteAdmin exact path=\"/admin/new-password/:id\" component={AdminNewPassword} />\n\n            <PrivateRouteAdmin exact path=\"/admin/dashboard\" component={AdminDashboard} />\n            <PrivateRouteAdmin exact path=\"/admin/addnewtl\" component={AdminNewTeamLeader} />\n            <PrivateRouteAdmin exact path=\"/admin/addnewtp\" component={AdminNewTaxProf} />\n            <PrivateRouteAdmin exact path=\"/admin/teamleaders\" component={AdminTeamLeaderTab} />\n            <PrivateRouteAdmin exact path=\"/admin/taxprofessionals\" component={AdminTaxProfessionalsTab} />\n            <PrivateRouteAdmin exact path=\"/admin/proposal\" component={AdminProposal} />\n            <PrivateRouteAdmin exact path=\"/admin/queries/:id\" component={AdminQueriesRecevied} />\n            <PrivateRouteAdmin exact path=\"/admin/queryassing/:id\" component={AdminQueryAssingment} />\n            <PrivateRouteAdmin exact path=\"/admin/queriestab\" component={AdminQueriesTab} />\n            <PrivateRouteAdmin exact path=\"/admin/feedback\" component={AdminFeedbackTab} />\n            <PrivateRouteAdmin exact path=\"/admin/paymentstatus\" component={AdminPaymentStatusTab} />\n            <PrivateRouteAdmin exact path=\"/admin/assignment\" component={AdminAssignmentTab} />\n            <PrivateRouteAdmin exact path=\"/admin/edittl/:id\" component={AdminEditTL} />\n            <PrivateRouteAdmin exact path=\"/admin/edittp/:id\" component={AdminEditTP} />\n            <PrivateRouteAdmin exact path=\"/admin/pending/:id\" component={AdminPendingRecevived} />\n            <PrivateRouteAdmin exact path=\"/admin/query_rejection/:id\" component={AdminQueryRejection} />\n            <PrivateRouteAdmin exact path=\"/admin/schedule\" component={AdminSchedule} />\n            <PrivateRouteAdmin exact path=\"/admin/meeting\" component={AdminMeetingComponent} />\n            <PrivateRouteAdmin exact path=\"/admin/chatting/:id\" component={AdminChatting} />\n            <PrivateRouteAdmin exact path=\"/admin/message\" component={AdminMessage} />\n            <PrivateRouteAdmin exact path=\"/admin/view-notification/:id\" component={AdminViewNotification} />\n            <PrivateRouteAdmin exact path=\"/admin/recording\" component={AdminRecording} />\n            <PrivateRouteAdmin exact path=\"/admin/meeting/:id\" component={adMeetingComponent} />\n            <PrivateRouteAdmin exact path=\"/admin/customers\" component={Customer} />\n            <PrivateRouteAdmin exact path=\"/admin/reports\" component={adminReport} />\n            <PrivateRouteAdmin exact path= \"/admin/adinvoice\" component={AdminInvoice}/>\n            <PrivateRouteAdmin exact path=\"/admin/paydetails/:id\" component={AdpayDetails} />\n\n            <PublicRouteTL exact path=\"/teamleader/start\" component={TlStart} />\n            <PublicRouteTL exact path=\"/teamleader/login\" component={TlLogin} />\n            <PublicRouteTL exact path=\"/teamleader/forget-password\" component={TlForgetPassword} />\n            <PublicRouteTL exact path=\"/teamleader/new-password/:id\" component={TlNewPassword} />\n          \n                  \n            <PrivateRouteTL exact path=\"/teamleader/dashboard\" component={TlDashboard} />\n            <PrivateRouteTL exact path=\"/teamleader/addnew\" component={TlAddNew} />\n            <PrivateRouteTL exact path=\"/teamleader/addteamprof\" component={TlAddTeamProf} />\n            <PrivateRouteTL exact path=\"/teamleader/proposal\" component={TlProposalTab} />\n            <PrivateRouteTL exact path=\"/teamleader/addassingment/:id\" component={TlAddAssingmentStages} />\n            <PrivateRouteTL exact path=\"/teamleader/queries/:id\" component={TlQueriesRecevied} />\n            <PrivateRouteTL exact path=\"/teamleader/queryassing/:id\" component={TlQueryAssingment} />\n            <PrivateRouteTL exact path=\"/teamleader/edittp/:id\" component={TlEditTP} />\n            <PrivateRouteTL exact path=\"/teamleader/feedback\" component={TlFeedbackTab} />\n            <PrivateRouteTL exact path=\"/teamleader/paymentstatus\" component={TlPaymentStatus} />\n            <PrivateRouteTL exact path=\"/teamleader/assignment\" component={TlAssignmentTab} />\n            <PrivateRouteTL exact path=\"/teamleader/sendproposal/:id\" component={TlSendProposal} />\n            <PrivateRouteTL exact path=\"/teamleader/queriestab\" component={TlQueriesTab} />\n            <PrivateRouteTL exact path=\"/teamleader/edit-proposal/:id\" component={TlEditProposal} />\n            <PrivateRouteTL exact path=\"/teamleader/pending/:id\" component={TlPendingReceived} />\n            <PrivateRouteTL exact path=\"/teamleader/assignment-form/:id\" component={TlAssignmentForm} />\n            <PrivateRouteTL exact path=\"/teamleader/meeting/:id\" component={TlMeetingComponent} />\n            <PrivateRouteTL exact path=\"/teamleader/view-report/:id\" component={TlViewReport} />\n            <PrivateRouteTL exact path=\"/teamleader/schedule\" component={TlSchedule} />\n            <PrivateRouteTL exact path=\"/teamleader/view-notification/:id\" component={TlViewNotification} />\n            <PrivateRouteTL exact path=\"/teamleader/chatting/:id\" component={TlChatting} />\n            <PrivateRouteTL exact path=\"/teamleader/message\" component={TlMessage} />\n            <PrivateRouteTL exact path=\"/teamleader/recording\" component={TlRecording} />\n            <PrivateRouteTL exact path=\"/teamleader/reports\" component={TlReport}/>\n            <PrivateRouteTL exact path=\"/teamleader/invoice\" component={TlInvoice}/>\n            <PrivateRouteTL exact path=\"/teamleader/tlinvoice\" component={TlInvoiceTab}/>\n            <PrivateRouteTL exact path=\"/teamleader/paydetails/:id\" component={TlpayDetails} />\n\n            <PublicRouteTP exact path=\"/taxprofessional/start\" component={TpStart} />\n            <PublicRouteTP exact path=\"/taxprofessional/login\" component={TpLogin} />\n            <PublicRouteTP exact path=\"/taxprofessional/new-password/:id\" component={TpNewPassword} />\n            <PublicRouteTP exact path=\"/taxprofessional/forget-password\" component={TpForgetPassword} />\n            \n            <PrivateRouteTP exact path=\"/taxprofessional/queries/:id\" component={TpQueriesRecevied} />\n            <PrivateRouteTP exact path=\"/taxprofessional/queriestab\" component={TpQueriesTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/proposal\" component={TpProposalTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/sendproposal/:id\" component={TpSendProposal} />\n            <PrivateRouteTP exact path=\"/taxprofessional/edit-proposal/:id\" component={TpEditProposal} />\n            <PrivateRouteTP exact path=\"/taxprofessional/change-password\" component={TpChangePassword} />\n            <PrivateRouteTP exact path=\"/taxprofessional/dashboard\" component={TpDashboard} />\n            <PrivateRouteTP exact path =\"/taxprofessional/chatting/:id\" component = {TpChatting} />\n            <PrivateRouteTP exact path=\"/taxprofessional/addassingment/:id\" component={TpAddAssingmentStages} />\n            <PrivateRouteTP exact path=\"/taxprofessional/paymentstatus\" component={TpPaymentStatus} />\n            <PrivateRouteTP exact path=\"/taxprofessional/assignment\" component={TpAssignmentTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/schedule\" component={TpSchedule} />\n            <PrivateRouteTP exact path=\"/taxprofessional/message\" component={TpMessage} />\n            <PrivateRouteTP exact path=\"/taxprofessional/feedback\" component={TpFeedbackTab} />\n            <PrivateRouteTP exact path=\"/taxprofessional/meeting/:id\" component={TpMeetingComponent} />\n            <PrivateRouteTP exact path=\"/taxprofessional/view-notification/:id\" component={TpViewNotification} />\n            <PrivateRouteTP exact path=\"/taxprofessional/recording\" component={TpRecording} />\n            <PrivateRouteTP exact path=\"/taxprofessional/reports\" component={TpReport}/>\n            <PrivateRouteTP exact path=\"/taxprofessional/tpinvoice\" component={TpInvoice}/>\n            <PrivateRouteTP exact path=\"/taxprofessional/paydetails/:id\" component={TppayDetails} />\n            <Route exact path=\"/*\" component={PageNotFound} />\n\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\n\nexport default App;\n\n\n\n// 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\n\n\n\n\n\n\n","/home/pooja/MazarsRepo/src/Service/PublicRouteTL.js",["1492"],"import React from \"react\";\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\n\n\nconst PublicRoutesTL = ({ component: Component, ...rest }) => {\n\n  \n    \n    return (\n        <Route\n            {...rest}\n            component={(props) => {\n                const token = window.localStorage.getItem(\"tlkey\");\n\n                if (token) {\n                    return (\n                        <>\n                            <Redirect to={\"/teamleader/dashboard\"} />\n                        </>\n                    )\n                } else {\n                    return (\n                        <>\n                            <Component {...props} />\n                        </>\n                    )\n                }\n            }}\n        />\n    );\n};\n\n\nexport default PublicRoutesTL;\n\n\n","/home/pooja/MazarsRepo/src/Service/PublicRouteTP.js",["1493"],"import React from \"react\";\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\n\n\nconst PublicRoutesTP = ({ component: Component, ...rest }) => {\n\n\n    \n    return (\n        <Route\n            {...rest}\n            component={(props) => {\n                const token = window.localStorage.getItem(\"tpkey\");\n\n                if (token) {\n                    return (\n                        <>\n                            <Redirect to={\"/taxprofessional/dashboard\"} />\n                        </>\n                    )\n                } else {\n                    return (\n                        <>\n                            <Component {...props} />\n                        </>\n                    )\n                }\n            }}\n        />\n    );\n};\n\n\nexport default PublicRoutesTP;\n\n\n","/home/pooja/MazarsRepo/src/Service/PublicRouteAdmin.js",[],"/home/pooja/MazarsRepo/src/pages/TL/EditProposal/EditProposal.js",["1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Payment from \"./Payment\";\nimport Select from \"react-select\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction EditComponent() {\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset, errors } = useForm();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [custId, setCustId] = useState(\"\");\n  const [store, setStore] = useState(null);\n  const [amount, setAmount] = useState();\n  const [date, setDate] = useState();\n  const [load, setLoad] = useState(true);\n\n  const[clearValue, setClearValue] = useState(true)\n  const [payment, setPayment] = useState([]);\n  const [installment, setInstallment] = useState([]);\n  const [error, setError] = useState('');\n  const [diserror, setdiserror] = useState(\"\")\n  const history = useHistory();\n  const { id } = useParams();\n  const [dateError, setDateError] = useState(false)\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n  const [proposal, setProposal] = useState({\n    query: \"\",\n    name: \"\",\n    fixed_amount: \"\",\n    payable: \"\",\n    description: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n    payment : \"\"\n  });\n\n\n  const { query, name, description, fixed_amount,\n    due_date, installment_amount } = proposal;\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n\n\n  const getQuery = () => {\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\n\n      if (res.data.code === 1) {\n        setProposal({\n          name: res.data.result.name,\n          query: res.data.result.assign_no,\n          fixed_amount: res.data.result.amount,\n          description: res.data.result.description,\n          installment_amount: res.data.result.installment_amount,\n          due_date: res.data.result.due_date,\n          payment : res.data.result.installment_amount\n        });\n\n        var payment_terms = res.data.result.payment_terms\n        var no_of_installment = res.data.result.no_of_installment\n\n        const data1 = {\n          label: payment_terms,\n          value: payment_terms,\n        }\n\n        const data2 = {\n          label: no_of_installment,\n          value: no_of_installment,\n        }\n\n        setPayment(data1);\n        setInstallment(data2);\n      }\n    });\n  };\n\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      setCustId(res.data.id);\n    };\n    getUser();\n  }, [id]);\n\n\n\n\n  const onSubmit = (value) => {\n \nif(diserror.length > 0){\n  return false\n}\nelse if(dateError === true){\n  Alerts.ErrorNormal(\"Date must be unique\")\n }\nelse{\n  var lumsum = value.p_inst_date\n    if (payment.label == \"lumpsum\") {\n      setDate(lumsum)\n    }\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", value.p_assingment);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tl\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"assign_id\", id);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"description\", value.description);\n    formData.append(\"amount_type\", \"fixed\");\n    formData.append(\"amount\", value.p_fixed);\n    formData.append(\"installment_amount\", amount);\n\n    formData.append(\"payment_terms\", payment.value);\n    formData.append(\"no_of_installment\", installment.value);\n\n    payment.label == \"lumpsum\" ?\n      formData.append(\"due_date\", lumsum) :\n      payment.label == \"installment\" ?\n        formData.append(\"due_date\", date) :\n        formData.append(\"due_date\", \"\")\n\n\n    if (payment.length < 1) {\n     \n    } else\n      if (payment.value == \"installment\") {\n        if (installment == \"\") {\n          Alerts.ErrorNormal(`Please select no of installment .`)\n        } else\n          if (!amount || !date) {\n            Alerts.ErrorNormal(`Please enter all fields.`)\n          } else if (amount && date) {\n\n            if (installment.value > 0) {\n              var a = Number(installment.value)\n             \n              for (let i = 0; i < a; i++) {\n\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\n                  Alerts.ErrorNormal(`Please enter amount`)\n                  return false\n                }\n                if (date[i] == \"\" || date[i] == undefined) {\n                  Alerts.ErrorNormal(`Please enter date`)\n                  return false\n                }\n              }\n              var sum = amount.reduce(myFunction)\n              function myFunction(total, value) {\n                return Number(total) + Number(value);\n              }\n              if (value.p_fixed != sum) {\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n\n              } else {\n               \n                setLoading(true)\n                axios({\n                  method: \"POST\",\n                  url: `${baseUrl}/tl/updateProposal`,\n                  data: formData,\n                })\n                  .then(function (response) {\n\n                    if (response.data.code === 1) {\n                      setLoading(false)\n                      var variable = \"Proposal Updated Successfully \"\n                      Alerts.SuccessNormal(variable)\n                      history.push(\"/teamleader/proposal\");\n                    } else if (response.data.code === 0) {\n                      setLoading(false)\n                    }\n                  })\n                  .catch((error) => {\n                  \n                  });\n              }\n            }\n          }\n      } else if (payment.label == \"lumpsum\") {\n\n        setLoading(true)\n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tl/updateProposal`,\n          data: formData,\n        })\n          .then(function (response) {\n         \n            if (response.data.code === 1) {\n              setLoading(false)\n              var variable = \"Proposal Updated Successfully \"\n              Alerts.SuccessNormal(variable)\n              history.push(\"/teamleader/proposal\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n          \n          });\n      }\n}\n    \n  };\n\n\n  const handleChange = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setdiserror(\"Please enter digit only\");\n    }\n    else if(e.target.value == \"0\"){\n      setdiserror(\"Amount should be greater than 0\")\n    }\n    else {\n      setdiserror(\"\");\n    }\n  };\n\n\n  const paymentAmount = (data) => {\n   \n\n    var array1 = []\n    Object.entries(data).map(([key, value]) => {\n      array1.push(value)\n    });\n    setAmount(array1.slice(0, installment.value));\n  };\n\n  const paymentDate = (data) => {\n   \n\n    var array2 = []\n    Object.entries(data).map(([key, value]) => {\n      array2.push(value)\n    });\n\n    setDate(array2.slice(0, installment.value));\n    if(new Set(array2).size !== array2.length){\n      setDateError(true)\n     Alerts.ErrorNormal(\"Date must be unique\")\n    }\n    else{\n      setDateError(false)\n    }\n  };\n\n  const installmentHandler = (key) => {\n\n    setInstallment(key)\n    setClearValue(false)\n  }\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Edit Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div style={{ display: \"flex\" }}>\n              <div class=\"col-md-6\">\n\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={query}\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fee</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_type\"\n                    onChange={(e) => setStore(e.target.value)}\n                  >\n                    <option value=\"fixed\">Fixed Price</option>\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"p_fixed\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fixed || diserror,\n                    })}\n                    ref={register({ required: true })}\n                    placeholder=\"Enter Fixed Price\"\n                    defaultValue={fixed_amount}\n                    onChange={handleChange}\n                  />\n                </div>\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\n\n                <div class=\"form-group\">\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\n                  <textarea\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    defaultValue={description}\n                    ref={register({ required: true })}\n                  ></textarea>\n                </div>\n              </div>\n\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={name}\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\n                  <Select\n                    closeMenuOnSelect={true}\n                    onChange={setPayment}\n                    value={payment}\n                    options={paymentsTerms}\n                  />\n                </div>\n\n                {payment.label == \"lumpsum\" ? (\n                  <div class=\"form-group\">\n                    <label>Due Dates</label>\n                    <input\n                      type=\"date\"\n                      name=\"p_inst_date\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_inst_date,\n                      })}\n                      ref={register({ required: true })}\n                      placeholder=\"Enter Hourly basis\"\n                      defaultValue={due_date}\n                    />\n                  </div>\n                ) :\n                  payment.label == \"installment\" ? (\n                    <div class=\"form-group\">\n                      <label>No of Installments</label>\n                      <Select\n                        closeMenuOnSelect={true}\n                        onChange={(e => installmentHandler(e))}\n                        value={installment}\n                        options={noInstallments}\n                      />\n                    </div>\n                  )\n                    : \"\"\n                }\n                {\n                  payment.label == \"lumpsum\"\n                    ?\n                    \"\"\n                    :\n                    installment_amount && due_date &&\n                    <Payment\n                      installment={installment.label}\n                      paymentAmount={paymentAmount}\n                      paymentDate={paymentDate}\n                      installment_amount={installment_amount}\n                      due_date={due_date}\n                      getQuery={getQuery}\n                      item={item}\n                      clearValue={clearValue}\n                    />\n                }\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-6\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" class=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n\n          <Mandatory />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditComponent;\n\nconst paymentsTerms = [\n  {\n    value: \"lumpsum\",\n    label: \"lumpsum\",\n  },\n  {\n    value: \"installment\",\n    label: \"installment\",\n  },\n];\n\nconst noInstallments = [\n  {\n    value: \"2\",\n    label: \"2\",\n  },\n  {\n    value: \"3\",\n    label: \"3\",\n  },\n  {\n    value: \"4\",\n    label: \"4\",\n  },\n];\n\n","/home/pooja/MazarsRepo/src/components/PageNotFound/PageNotFound.js",[],"/home/pooja/MazarsRepo/src/views/Login/Login.js",["1521","1522","1523"],"import { useRef, useState, useEffect } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer';\nimport { Button, Typography } from \"@material-ui/core\";\nimport './style.css';\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport VerifyOTP from \"./VerifyOTP\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport LoadingTime from \"../../components/LoadingTime/LoadingTime\";\nimport Cookies from \"js-cookie\";\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n  p_password: yup.string().required(\"\"),\n});\n\n\nfunction LoginForm() {\n  const { handleSubmit, register, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [show, setShow] = useState(false);\n  const [email, setEmail] = useState();\n  const [uid, setUid] = useState('')\n  const [time, setTime] = useState('');\n  const [load, setLoad] = useState(false);\n  const [disabled, setDisabled] = useState(false)\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n\n  const getTime = () => {\n\n    if (load) {\n      LoadingTime.timer2(setTime, setDisabled)\n    }\n\n  }\n\n  const onSubmit = (value) => {\n\n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.p_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setShow(true)\n          console.log(response.data.display_name)\n          setLoad(true)\n          Cookies.set(\"custName\", response.data.display_name)\n          setUid(response.data.user_id)\n        } else if (response.data.code === 0) {\n          Alerts.ErrorNormal(response.data.result)\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       ShowError.LoadingError(setLoading)\n      });\n  };\n\n\n  const handleChange = (e) => {\n   \n    setEmail(e.target.value);\n  };\n\n\n  return (\n    <>\n      <Header noSign=\"noSign\" />\n      <h1 style={{ \"textAlign\": \"center\", \"margin\": \"55px 0 30px 0\" }}>\n        Would you like to post a query\n      </h1>\n\n\n      <div className=\"StartPage\">\n        <div className=\"mainContent\">\n\n          <div className=\"signIn\">\n            <div className=\"signBtn\">\n              <div className=\"boxOverlay\">\n                <Typography variant=\"h4\" style={{ \"margin\": \"5px auto\", \"color\": \"#fff\" }}>\n                  For new customers\n                </Typography>\n                <button className=\"btn btn-success\">\n                  <Link className=\"SignUpLink\"\n                    to={{\n                      pathname: \"/customer/signup\",\n                    }}\n                  >\n                    Sign Up\n                  </Link>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"signUp\">\n            <Typography variant=\"h4\" style={{ \"margin\": \"5px auto\", \"color\": \"#2b345f\" }}>\n              For existing customers\n            </Typography>\n            {\n              show ? <div className=\"customForm\">\n\n                <VerifyOTP email={email} uid={uid} time={time} setLoad={setLoad}\n                  setDisabled={setDisabled} disabled={disabled} setLoading={setLoading}\n                  loading={loading} />\n              </div>\n                :\n                <div className=\"customForm\">\n                  <form onSubmit={handleSubmit(onSubmit)} className=\"signInForm\" autoComplete=\"off\">\n                    <div className=\"form-group\">\n                      <label className=\"form-label\">Email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                        placeholder=\"Enter Email\"\n                        onChange={(e) => handleChange(e)}\n                      />\n                    </div>\n\n                    <div className=\"form-group passForm \">\n                      <label className=\"form-label\">Password <span className=\"declined\">*</span></label>\n                      <input\n                        type={isPasswordShow ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_password,\n                        })}\n                        name=\"p_password\"\n                        placeholder=\"Enter Password\"\n                        ref={register}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                      />\n                      \n                      <i\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon-login`}\n                        onClick={togglePasssword}\n                      />\n                    </div>\n\n                    <div style={{ display: \"flex\", margin: \"0 0 30px 0\", justifyContent: \"flex-end\" }}>\n                      <Link\n                        to={{\n                          pathname: \"/customer/forget-password\",\n                          email: `${email}`,\n                        }}\n                      >\n                        Forgot Password\n                      </Link>\n                    </div>\n\n                    {\n                      loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <button className=\"btn btn-success\" type=\"submit\">\n                          Send OTP\n                        </button>\n                    }\n\n                  </form>\n                </div>\n            }\n            <Mandatory />\n          </div>\n\n        </div>\n      </div>\n\n\n      <Footer />\n    </>\n  );\n}\n\nexport default LoginForm;\n\n","/home/pooja/MazarsRepo/src/views/Dashboard/Dashboard.js",["1524","1525","1526","1527","1528","1529","1530","1531","1532"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\n\n\nfunction Dashboard() {\n  const userId = window.localStorage.getItem(\"userid\");\n\n\n  const [allQueries, setAllQueries] = useState({\n    total: '',\n    inprogress_queries: '',\n    inprogress_allocation: '',\n    inprogress_proposal: '',\n    inprogress_assignment: '',\n    complete_query: '',\n    declined_queries: '',\n    admin_declined_query: '',\n    customer_declined_Query: '',\n    customer_declined_proposal: '',\n    Customer_declined_payment: '',\n\n    allproposal: '',\n    accepted_proposals: '',\n    InProgress: '',\n    inprogress_preparation: '',\n    inprogress_acceptance: '',\n    declined: '',\n\n    allassignment: '',\n    inprogress: '',\n    complete: '',\n    customer_declined_Pay: '',\n\n\n    paid: '',\n    unpaid: '',\n    totalpayment: '',\n  });\n\n\n\n  const { total, inprogress_queries,\n    inprogress_allocation, inprogress_proposal,\n    inprogress_assignment, complete_query,\n    declined_queries, admin_declined_query,\n    customer_declined_Query, customer_declined_proposal,\n    Customer_declined_payment,\n    allproposal,\n    inprogress_preparation,\n    declined, inprogress_acceptance,\n    accepted_proposals, InProgress,\n    allassignment, inprogress, complete,\n    customer_declined_Pay,\n    paid, unpaid, totalpayment,\n  } = allQueries;\n\n\n\n  useEffect(() => {\n    const getAllQueries = () => {\n      axios\n        .get(`${baseUrl}/customers/totalComplete?uid=${JSON.parse(userId)}`)\n        .then((response) => {\n\n          if (response.data.code === 1) {\n            setAllQueries({\n              total: response.data.result.total,\n              inprogress_queries: response.data.result.inprogress_queries,\n              inprogress_allocation: response.data.result.inprogress_allocation,\n              inprogress_proposal: response.data.result.inprogress_proposal,\n              inprogress_assignment: response.data.result.inprogress_assignment,\n              complete_query: response.data.result.complete_query,\n              declined_queries: response.data.result.declined_queries,\n              admin_declined_query: response.data.result.admin_declined_query,\n              customer_declined_Query: response.data.result.customer_declined_Query,\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\n\n              allproposal: response.data.result.proposal.allproposal,\n              InProgress: response.data.result.proposal.InProgress,\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\n\n\n              allassignment: response.data.result.assignment.allassignment,\n              inprogress: response.data.result.assignment.inprogress,\n              complete: response.data.result.assignment.complete,\n              customer_declined_Pay: response.data.result.assignment.customer_declined_payment,\n\n\n\n              totalpayment: response.data.result.payments.totalpayment,\n              paid: response.data.result.payments.paid,\n              unpaid: response.data.result.payments.unpaid,\n\n\n            })\n          }\n        })\n        .catch((error) => {\n      \n        });\n    };\n\n\n    getAllQueries();\n  }, []);\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n\n      <div className=\"row\">\n        <div className=\"col-md-3 content_header\">\n          <table className=\"table table-striped first main_table\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\"> All Queries</th>\n                <th>{total}</th>\n              </tr>\n            </thead>\n          </table>\n          <table className=\"table table-striped second main_table\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">Inprogress; Queries</th>\n                <th>{inprogress_queries}</th>\n              </tr>\n            </thead>\n\n            <tbody className=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Inprogress; Allocation</td>\n                <td>{inprogress_allocation}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Inprogress; Proposals</td>\n                <td>{inprogress_proposal}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Inprogress; Assignments</td>\n                <td>{inprogress_assignment}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          {inprogress_queries != 0 || declined_queries != 0 ? <>\n            <table className=\"table table-striped third main_table\">\n              <thead className=\"query_thead\">\n                <tr>\n                  <th className=\"left_side\">Completed; Queries</th>\n                  <th>{complete_query}</th>\n                </tr>\n              </thead>\n              <tbody className=\"table_body\">\n                <tr>\n                  <td className=\"left_side\">Completed; Assignments</td>\n                  <td>{complete_query}</td>\n                </tr>\n              </tbody>\n            </table>\n            {complete_query != 0  || declined_queries != 0 ? <>\n\n              <table className=\"table table-striped forth main_table\">\n                <thead className=\"query_thead\">\n                  <tr>\n                    <th className=\"left_side\">Declined; Queries</th>\n                    <th>{declined_queries}</th>\n                  </tr>\n                </thead>\n\n                <tbody className=\"table_body\">\n                  <tr>\n                    <td className=\"left_side\">Admin Declined; Queries</td>\n                    <td>{admin_declined_query}</td>\n                  </tr>\n                  <tr>\n                    <td className=\"left_side\">Customer Declined; Queries</td>\n                    <td>{customer_declined_Query}</td>\n                  </tr>\n                  <tr>\n                    <td className=\"left_side\">Customer Declined; Proposals</td>\n                    <td>{customer_declined_proposal}</td>\n                  </tr>\n                  <tr>\n                    <td className=\"left_side\">Customer Declined; Payment</td>\n                    <td>{Customer_declined_payment}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </> : \"\"}   </> : \"\"}   </div>\n        {allproposal != 0 ? <>\n          <div className=\"col-md-3 content_header\">\n\n            <table className=\"table table-striped fifth main_table\">\n              <thead className=\"proposal_thead\">\n                <tr>\n                  <th className=\"left_side\">All Proposals</th>\n                  <th>{allproposal}</th>\n\n                </tr>\n              </thead>\n            </table>\n\n            <table className=\"table table-striped sixth main_table\">\n              <thead className=\"proposal_thead\">\n                <tr>\n                  <th className=\"left_side\">Inprogress; Proposals</th>\n                  <th>{InProgress}</th>\n                </tr>\n              </thead>\n              <tbody classNameName=\"table_body\">\n                <tr>\n                  <td className=\"left_side\">Inprogress; Preparation</td>\n                  <td>{inprogress_preparation}</td>\n                </tr>\n                <tr>\n                  <td className=\"left_side\">Inprogress; Acceptance</td>\n                  <td>{inprogress_acceptance}</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <table className=\"table table-striped seventh main_table\">\n              <thead className=\"proposal_thead\">\n                <tr>\n                  <th className=\"left_side\">Accepted; Proposals </th>\n                  <th>{accepted_proposals}</th>\n                </tr>\n              </thead>\n            </table>\n\n            <table className=\"table table-striped eight main_table\">\n              <thead className=\"proposal_thead\">\n                <tr>\n                  <th className=\"left_side\">Customer Declined; Proposals</th>\n                  <th>{declined}</th>\n                </tr>\n              </thead>\n            </table>\n          </div>\n          {allassignment != 0 ? <>\n            <div className=\"col-md-3 content_header\">\n              <table className=\"table table-striped ninth main_table\">\n                <thead className=\"assignment_thead\">\n                  <tr>\n                    <th className=\"left_side\">All Assignments</th>\n                    <th>{allassignment}</th>\n                  </tr>\n                </thead>\n              </table>\n\n              <table className=\"table table-striped tenth main_table\">\n                <thead className=\"assignment_thead\">\n\n                  <tr>\n                    <th className=\"left_side\">Inprogress; Assignments</th>\n                    <th>{inprogress}</th>\n                  </tr>\n                </thead>\n              </table>\n\n              <table className=\"table table-striped tenth main_table\">\n                <thead className=\"assignment_thead\">\n\n                  <tr>\n                    <th className=\"left_side\">Completed; Assignments</th>\n                    <th>{complete}</th>\n                  </tr>\n                </thead>\n              </table>\n\n              <table className=\"table table-striped tenth main_table\">\n                <thead className=\"assignment_thead\">\n\n                  <tr>\n                    <th className=\"left_side\">Customer Declined; Payment</th>\n                    <th>{customer_declined_Pay}</th>\n                  </tr>\n                </thead>\n              </table>\n            </div>\n            {totalpayment != 0 ? <>\n\n              <div className=\"col-md-3 content_header\">\n\n                <table className=\"table table-striped twelvth main_table\">\n                  <thead className=\"payment_thead\">\n                    <tr>\n                      <th className=\"left_side\">All Payments</th>\n                      <th>{totalpayment}</th>\n                    </tr>\n                  </thead>\n                </table>\n                <table className=\"table table-striped thirteen main_table\">\n                  <thead className=\"payment_thead2\">\n                    <tr>\n                      <th className=\"left_side\">Paid</th>\n                      <th>{paid}</th>\n                    </tr>\n                  </thead>\n                </table>\n\n                <table className=\"table table-striped thirteen main_table\">\n                  <thead className=\"payment_thead2\">\n                    <tr>\n                      <th className=\"left_side\">Unpaid</th>\n                      <th>{unpaid}</th>\n                    </tr>\n                  </thead>\n                </table>\n              </div>\n            </> : \"\"} </> : \"\"}  </> : \"\"}  </div>\n\n    </Layout>\n  );\n}\n\nexport default Dashboard;","/home/pooja/MazarsRepo/src/views/MyAssingment/MyAssingment.js",["1533","1534","1535","1536"],"/home/pooja/MazarsRepo/src/views/SignUpForm/SignUp.js",["1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553","1554","1555","1556","1557"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport { Spinner } from \"reactstrap\";\nimport { professionName, country, states } from './data';\nimport { cities } from './city';\nimport Alerts from \"../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport GetOTP from \"./GetOTP\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport EmailValidation from \"../../components/Common/EmailValidation\";\n\n\n\nfunction SignUp(props) {\n  const phone2 = useRef(null)\n  const alert = useAlert();\n  const { handleSubmit, register, errors, getValues } = useForm();\n\n\n  const [display, setDisplay] = useState(false);\n\n  const [load, setLoad] = useState(false);\n  const [store, setStore] = useState(0);\n  const [password, setPassword] = useState(false);\n  const [passError, setpassError] = useState()\n  const [repassword, setRepassword] = useState(false);\n  const [show, setShow] = useState(false);\n  const [changeNum, setChangeNum] = useState(false)\n  const [State, setState] = useState([]);\n  const [city, setCity] = useState([]);\n  const [countryCode, setCountryCode] = useState('')\n  const [showPlus, setShowPlus] = useState(false)\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [numExist, setNumExist] = useState(null)\n  const [numAvail, setNumAvail] = useState(null)\n  const [countryName, setCountryName] = useState(null)\n  const [stateName, setStateName] = useState(null)\n\n  const [countryId, setCountryId] = useState(null)\n  const [indNumError, setIndNumError] = useState(null)\n  const [zipCode, setZipCode] = useState('')\n  const [zipError, setZipError] = useState(null)\n\n  const [wEmail, setWemail] = useState();\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [valiOtp, setvaliOtp] = useState()\n  const [emailError, setEmailError] = useState(null)\n  const [phoneError, setPhoneError] = useState(null)\n  const [zipError1, setZipError1] = useState(null);\n  const [subm, setSub] = useState(false)\nconst [email2, setEmail2] = useState();\n  const [loading, setLoading] = useState(false);\n\n  //Css\n  const CountryNumStyle = {\n    \"display\": \"flex\",\n    \"width\": \"76px\",\n    \"textAlign\": \"center\"\n  }\n  // cusSub\n  const cusSub = {\n    \"display\": \"flex\",\n    \"alignItems\": \"center\"\n  }\n  // Toggle Password\n  const togglePasssword = () => {\n    setPassword(!password)\n  };\n\n  const togglePasssword2 = () => {\n    setRepassword(!repassword)\n  };\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n\n  const getTime = () => {\n    \n    if (load) {\n      var timerOn = true;\n      function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(remaining)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n        // setDisplay(false)\n      }\n      timer(180);\n    }\n  }\n\n  //get country\n  const getcountry = (key) => {\n    setCountryName(key)\n    setShowPlus(true)\n    setPhone(\"\")\n    setIndNumError(\"\")\n    setNumAvail(\"\")\n    // setInvalid(\"\")\n    if (key == 101) {\n      setCountryId(key)\n    }\n    else {\n      setCountryId(\"\")\n    }\n\n    var arrayState = []\n    states.filter((data) => {\n      if (data.country_id == key) {\n        arrayState.push(data)\n      }\n    });\n    setState(arrayState)\n\n    country.filter((data) => {\n      if (key == data.id) {\n        setCountryCode(data.phoneCode)\n        setCountryName(data.name)\n      }\n    })\n  };\n\n\n  //get city\n  const getCity = (key) => {\n    states.filter((p) => {\n      if (p.id == key) {\n        setStateName(p.name)\n      }\n    });\n\n    var arrayCity = []\n    cities.filter((data) => {\n      if (data.state_id === key) {\n        arrayCity.push(data)\n      }\n    });\n    setCity(arrayCity)\n  }\n\n\n\n\n  //phone onchange\n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n      setPhoneError(true)\n    }\n    else {\n      setPhoneError(false)\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n  //phone validaation with api\n  const phoneValidation = () => {\n    setPhoneError(false)\n    \n    if (countryId && phone.length > 10) {\n   \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 value should be enter\")\n      setPhoneError(true)\n    }\n    else if (countryId && phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 value should be enter\")\n      setPhoneError(true)\n    }\n    else if (!countryId && phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setPhoneError(true)\n      setIndNumError(\"Maximum 15 value should be enter\")\n    }\n\n    else {\n      setPhoneError(false)\n      setIndNumError(\"\")\n\n      let formData = new FormData();\n      formData.append(\"phone\", phone);\n      formData.append(\"type\", 2);\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData,\n      })\n        .then(function (response) {\n         \n          if (response.data.code === 1) {\n            // setValiphone(response.data.result)\n            \n            setPhoneError(false)\n            setNumExist('')\n            setNumAvail(response.data.result);\n\n          }\n          else if (response.data.code === 0) {\n            setPhoneError(true)\n            \n            setNumAvail('')\n            setNumExist(response.data.result)\n\n         \n          }\n\n        })\n        .catch((error) => {\n        \n        });\n    }\n  }\n\n\n\n  //zip oncahnge\n  const zipValue = (e) => {\n   \n    if (isNaN(e.target.value)) {\n\n      setZipError(\"Please enter number only\")\n      setZipError1(true)\n      e.target.value = \"\"\n    }\n    else if (e.target.value.length == 0) {\n      setZipError1(true)\n    }\n    else {\n      setZipCode(e.target.value)\n      setZipError(\"\")\n      setZipError1(false)\n    }\n  }\n\n\n  // onblur\n  const zipVali2 = (e) => {\n\n    if (countryId && zipCode && zipCode.length < 6) {\n      setZipError1(true)\n      setZipError(\"Minumum 6 digit should be there\")\n\n    }\n\n    else if (countryId && zipCode && zipCode.length > 6) {\n      setZipError1(true)\n      setZipError(\"Maximum 6 digit allowed\")\n    \n    }\n    else {\n      setZipError1(false)\n    }\n  }\n\n\n\n  const otpVali = (e) => {\n    if (isNaN(e.target.value)) {\n      setvaliOtp(\"Please enter number only\")\n      e.target.value = \"\"\n    }\n    else {\n      setvaliOtp(\"\")\n    }\n  }\n\n\n\n  const onSubmit = (value) => {\n\n\n    let formData = new FormData();\n    formData.append(\"name\", value.p_name);\n    formData.append(\"email\", email2);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"occupation\", value.p_profession);\n    formData.append(\"city\", value.p_city)\n    formData.append(\"pincode\", value.p_zipCode);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_otp);\n    formData.append(\"country\", countryName);\n    formData.append(\"state\", stateName);\n    formData.append(\"stdcode\", countryCode);\n    formData.append(\"gstin_no\", value.p_gstIn);\n\n    if (display === true && subm === false) {\n      setLoading(true)\n      let formData = new FormData();\n      formData.append(\"email\", email2);\n      formData.append(\"phone\", phone);\n      formData.append(\"p\", \"registration\");\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/forgototp`,\n        data: formData,\n      })\n        .then(function (response) {\n         \n          if (response.data.code === 1) {\n            setLoading(false)\n            setLoad(true)\n            setShow(true)\n            Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            Alerts.ErrorNormal(\"Error\")\n          }\n        })\n        .catch((error) => {\n        \n        });\n\n    }\n    else if (emailError === false && phoneError === false && zipError1 === false && subm === true) {\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/signup`,\n        data: formData,\n      })\n        .then(function (response) {\n         \n          if (response.data.code === 1) {\n            setLoading(false)\n            var variable = \"Signup successfully.\"\n            Alerts.SuccessNormal(variable)\n            localStorage.setItem(\"userid\", JSON.stringify(response.data.id));\n            localStorage.setItem(\"custEmail\", JSON.stringify(response.data.user_id));\n            props.history.push(\"/customer/select-category\");\n          } else if (response.data.code === 0) {\n            setLoading(false)\n          \n            setLoad(false);\n            Alerts.ErrorNormal(\"Incorrect OTP , please try again.\")\n          }\n        })\n        .catch((error) => {\n        \n        });\n    }\n\n  };\n\n\n  //setotp\n  const setOtp = () => {\n\n    setSub(true)\n  }\n\n  //get OTP\n  const getOtp = () => {\n    if (emailError === true || phoneError === true || zipError1 === true) {\n      setDisplay(false)\n    }\n    else {\n      setDisplay(true)\n    }\n  }\n\n// getEmailValue \n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Customer Register</h2>\n          </div>\n          <>\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Name<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_name\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Name\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                     <EmailValidation\n                     setWemail = {setWemail}\n                      wEmail = {wEmail} \n                      invalid = {invalid}\n                       setEmailError = {setEmailError}\n                        setValiemail = {setValiemail} \n                        emailError = {emailError} \n                        setInvalid = {setInvalid}  \n                        setEmail2 = {setEmail2} />\n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      }\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Occupation/ Profession<span className=\"declined\">*</span></label>\n                      <br />\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_profession,\n                        })}\n                        name=\"p_profession\"\n                        aria-label=\"Default select example\"\n                        ref={register({ required: true })}\n                      >\n                        <option value=\"\">--select--</option>\n                        {professionName.map((p, index) => (\n                          <option key={index} value={p.city}>\n                            {p.city}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Country<span className=\"declined\">*</span></label>\n                      <select\n                        id=\"state\"\n                        name=\"p_country\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_country,\n                        })}\n                        ref={register({ required: true })}\n                        onChange={(e) => getcountry(e.target.value)}\n                      >\n                        <option value=\"\">--select--</option>\n                        {country.map((p) => (\n                          <option key={p.id} value={p.id}>\n                            {p.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">State<span className=\"declined\">*</span></label>\n                      <select\n                        id=\"state\"\n                        name=\"p_state\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_state,\n                        })}\n                        ref={register({ required: true })}\n                        onChange={(e) => getCity(e.target.value)}\n                      >\n                        <option value=\"\">--select--</option>\n                        {State.map((p) => (\n                          <option key={p.id} value={p.id}>\n                            {p.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">City<span className=\"declined\">*</span></label>\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_city,\n                        })}\n                        name=\"p_city\"\n                        ref={register({ required: true })}\n                      >\n                        <option value=\"\">--select--</option>\n                        {city.map((p, index) => (\n                          <option key={index} value={p.city}>\n                            {p.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Mobile number<span className=\"declined\">*</span></label>\n                      <div className=\"mobNumber\" style={{ \"display\": \"flex\" }}>\n                        <select\n                          name=\"p_code\"\n                          disabled={true}\n                          ref={register({ required: true })}\n                        >\n                          <option>\n                            {showPlus ? \"+\" + countryCode : null}\n                          </option>\n                        </select>\n                        <input\n                          type=\"text\"\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_phone || phoneError === true || indNumError,\n                          })}\n                          name=\"p_phone\"\n                          value={phone}\n\n                          ref={register({ required: true })}\n                          placeholder=\"Mobile number\"\n                          onChange={(e) => phoneHandler(e)}\n                          onBlur={phoneValidation}\n                        />\n\n                      </div>\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Zipcode<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_zipCode || zipError1 === true || zipError,\n                        })}\n                        name=\"p_zipCode\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Zipcode\"\n                        onChange={(e) => zipValue(e)}\n                        onBlur={zipVali2}\n                      />\n                    </div>\n                    <p className=\"declined\">{zipError}</p>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">GST IN</label>\n                      <input\n                        type=\"text\"\n                       className=\"form-control\"\n                        name=\"p_gstIn\"\n                        ref={register}\n                        placeholder=\"Enter GST Code\"\n                       \n                      />\n                    </div>\n                    <p className=\"declined\">{zipError}</p>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n                      <input\n                        type={password ? \"text\" : \"password\"}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_password || passError,\n                        })}\n                        name=\"p_password\"\n                        placeholder=\"Enter Your Password\"\n                        ref={register({\n                          required: true,\n                          pattern: {\n                            value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                            message:\n                              \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                          },\n                        })}\n\n                        autocomplete=\"off\"\n                      />\n                      <i\n                        className={`fa ${password ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword}\n                      />\n                      {errors.p_password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                      <input\n                        type={repassword ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_confirm_password,\n                        })}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        placeholder=\"Confirm Password\"\n                        name=\"p_confirm_password\"\n                        ref={register({\n                          required: true,\n                          validate: (value) =>\n                            value === getValues(\"p_password\") ||\n                            \"password doesn 't match\",\n                        })}\n                        autocomplete=\"off\"\n                      />\n                      <i\n                        className={`fa ${repassword ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword2}\n                      />\n                      {errors.p_confirm_password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_confirm_password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {\n                    show ?\n                      <div class=\"col-md-6\">\n                        <div className=\"mb-3\">\n                          <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                          <input\n                            type=\"text\"\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.p_otp,\n                            })}\n                            name=\"p_otp\"\n                            ref={register({ required: true })}\n                            onChange={otpVali}\n                            placeholder=\"Enter your OTP\"\n                            autocomplete=\"off\"\n                          />\n                          <p className=\"declined\"> {valiOtp ? valiOtp : \"\"}</p>\n                          {\n                            disabled ? null\n                              :\n                              <small class=\"text-center\">\n                                Note: OTP is valid for {time} seconds.\n                              </small>\n                          }\n                        </div>\n                      </div>\n                      : null\n                  }\n                  {\n                    loading ?\n                      <div class=\"col-md-12\" style={cusSub}>\n                        <Spinner color=\"primary\" />\n                      </div>\n                      :\n                      <div class=\"col-md-6\" style={cusSub}>\n                        {\n                          show ?\n                            <div>\n                              {\n                                disabled ? null\n                                  :\n                                  <button type=\"submit\" className=\"btn btn-primary\" onClick={() => setOtp()}>Submit</button>\n                              }\n                            </div>\n                            :\n                            <button type=\"submit\" class=\"btn btn-success\" onClick={() => getOtp(\"otp\")}>SEND OTP</button>\n                        }\n                      </div>\n                  }\n                </div>\n              </form>\n\n              {\n                disabled ?\n                  <ResendOtp setDisabled={setDisabled} disabled={disabled} getTime={getTime}\n                    email={email} phone={phone} setLoad={setLoad} invalid={invalid} indNumError={indNumError}\n                    wEmail={wEmail} zipError={zipError} passError={passError}\n                    setLoading={setLoading} loading={loading}\n                    display={display}\n                    emailError={emailError}\n                    phoneError={phoneError} zipError1={zipError1} />\n                  :\n                  null\n              }\n              <Mandatory />\n            </div>\n          </>\n\n        </div>\n\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default SignUp;\n","/home/pooja/MazarsRepo/src/views/SelectCategoryPage/SelectCategoryPage.js",["1558","1559","1560"],"import React from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport CategorySelect from \"../../components/CategorySelect/CategorySelect\";\n\nfunction SelectCategoryPage() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <CategorySelect addfreshbtn=\"addfreshbtn\" />\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default SelectCategoryPage;\n","/home/pooja/MazarsRepo/src/views/QueriesTab/QueriesTab.js",["1561","1562","1563","1564","1565","1566"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\nimport AllQueriesData from \"./AllQueriesData\";\nimport InprogressAllocation from \"./InprogressAllocation\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport DeclinedQueries from \"./DeclinedQueries\";\n\n\n\n\nfunction QueriesTab(props) {\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\n  const [inprogressAllocation, setInprogressAllocation] = useState(\"\");\n  const [inprogressProposal, setInprogressProposal] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n\n\n  useEffect(() => {\n    CountAllQuery();\n    CountInprogressAllocation();\n    CountInprogressProposal();\n    CountDeclined();\n  }, []);\n\n\n  const CountAllQuery = (data) => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAllQueriesCount(res.data.result.length);\n        }\n      });\n  };\n\n  const CountInprogressAllocation = () => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setInprogressAllocation(res.data.result.length);\n      }\n    });\n  };\n\n  const CountInprogressProposal = () => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setInprogressProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const CountDeclined = () => {\n    axios.get(`${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setDeclined(res.data.result.length);\n      }\n    });\n  };\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Queries ({allQueriesCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Queries({inprogressAllocation})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Completed; Queries ({inprogressProposal})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Declined; Queries ({declined})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllQueriesData />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressAllocation />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedQueries />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/AddFressAssignment/AddFreshAssingment.js",["1567","1568","1569","1570","1571","1572","1573"],"import { useForm, useFieldArray ,  Controller } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Select from \"react-select\";\nimport './style.css'\nimport Swal from \"sweetalert2\";\nimport { purpose } from \"./data\";\nimport Layout from \"../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport classNames from \"classnames\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nfunction AddFreshAssingment(props) {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset, control } = useForm({\n    defaultValues: {\n      users: [{ query: \"\" }],\n    },\n  });\n\n  const { append, remove, fields} = useFieldArray({\n    control,\n    name: \"users\",\n  });\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n  // const userNameId = window.localStorage.getItem(\"name\");\n  const [custcheckError, setCheckerror] = useState(null);\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [purposeOption, setPurposeOption] = useState([]);\n  const [custError, setcustError] = useState([])\n  const [assessmentYear, setAssessmentYear] = useState([]);\n  const [det, addDet] = useState();\n\n  const [loading, setLoading] = useState(false);\n  const [selectError, setSelectError] = useState()\n  const [uploadOrDownloadCount, setUploadOrDownloadCount] = useState(10);\n\n  const remError = () => {\n    setCheckerror(\"\")\n  }\n \n  const purPoseQuery = (e) => {\n    setSelectError(\"\")\n    setPurposeOption(e)\n  }\n\n  useEffect(() => {\n    getAssementYear();\n  }, []);\n\n\n  const getAssementYear = () => {\n    axios\n      .get(`${baseUrl}/customers/getAssesmentYear`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setAssessmentYear(res.data.result);\n        }\n      });\n  };\n\n\n  const onSubmit = (value) => {\n   \n    const a = value.p_fact;\n    const b = value.users;\n    if (a == '') {\n      setcustError(\"\");\n     \n    }\n    else if (purposeOption < 1) {\n      setSelectError(\"At least one value should be enter\")\n    }\n    else if (value.p_format_word === false && value.p_format_digital === false && value.p_format_physically === false) {\n    \n      setCheckerror(\"Please select at least one.\")\n    }\n\n    else {\n      setLoading(true);\n      var uploadImg = value.uploadImg;\n      if(uploadImg === undefined){\n        uploadImg = 0;\n      }\n      let t = 100 * uploadImg.length;\n      const timer = setInterval(() => {\n    \n        setUploadOrDownloadCount(\n          (beforeValue) => (beforeValue >= 90 ? 90 \n                            : beforeValue + 10 ));\n      }, t);\n  \n      let formData = new FormData();\n     \n      if (uploadImg) {\n        for (var i = 0; i < uploadImg.length; i++) {\n          let file = uploadImg[i];\n          formData.append(\"upload_1[]\", file);\n        }\n      }\n   \n      formData.append(\"fact\", det);\n      formData.append(\"specific\", JSON.stringify(value.users));\n      formData.append(\"timelines\", value.p_timelines);\n      formData.append(\"user\", JSON.parse(userId));\n      formData.append(\"cid\", JSON.parse(category));\n      formData.append(\"softcopy_word\", Number(value.p_format_word));\n      formData.append(\n        \"softcopy_digitally_assigned\",\n        Number(value.p_format_digital)\n      );\n      formData.append(\n        \"printout_physically_assigned\",\n        Number(value.p_format_physically)\n      );\n      formData.append(\"case_name\", value.p_case_name);\n      formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n      formData.append(\"purpose\", JSON.stringify(purposeOption));\n      axios\n        .post(`${baseUrl}/customers/PostQuestion`, formData, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n            // 'Authorization': 'JWT fefege...'\n          },\n        })\n        .then(function (response) {\n       \n          if (response.data.code === 1) {\n            setUploadOrDownloadCount(100)\n            clearInterval(timer)\n            reset();\n            var message = response.data.message\n            var query_no = response.data.query_no\n            if (message == \"\") {\n              Swal.fire({\n                title: 'Success !',\n                html: `<p>Query no.- ${query_no} submitted successfully.\n                 Mazars team will contact you shortly.\n                </p>`,\n                icon: 'success',\n              })\n            } else if (message.invalid) {\n              Swal.fire({\n                title: 'Error !',\n                html: `<p class=\"text-danger\">${message.invalid}</p>`,\n              })\n            }\n            else if (message.faill) {\n              Swal.fire({\n                title: 'Success !',\n                html: `<p>Query no.- ${query_no} submitted successfully.\n                 Mazars team will contact you shortly.\n                </p> \n                <br/><p class=\"text-danger\">${message.faill}</p>`,\n                icon: 'success',\n              })\n            }\n            props.history.push(\"/customer/queries\");\n          } else {\n            ShowError.LoadingError(setLoading)\n            setLoading(false);\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         \n        });\n    }\n  };\n\n\n  return (\n    <>\n      <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"4\">\n                <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\n                  Go Back\n                </button>\n              </Col>\n              <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\n              </Col>\n            </Row>\n\n          </CardHeader>\n         \n            <div className=\"container\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 py-4\">\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Brief fact of the case <span className=\"declined\">*</span></label>\n\n                  <CKEditor\n                     editor={ ClassicEditor }\n                     config = {{\n\n                      highlight: {\n                        options: [\n                            {\n                                model: 'greenMarker',\n                                class: 'marker-green',\n                                title: 'Green marker',\n                                color: 'var(--ck-highlight-marker-green)',\n                                type: 'marker'\n                            },\n                            {\n                                model: 'redPen',\n                                class: 'pen-red',\n                                title: 'Red pen',\n                                color: 'var(--ck-highlight-pen-red)',\n                                type: 'pen'\n                            }\n                        ]\n                    },\n                      fontFamily: {\n                        options: [\n                            'default',\n                            'Ubuntu, Arial, sans-serif',\n                            'Ubuntu Mono, Courier New, Courier, monospace'\n                        ]\n                    },\n                    fontColor: {\n                      colors: [\n                          {\n                              color: 'hsl(0, 0%, 0%)',\n                              label: 'Black'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 30%)',\n                              label: 'Dim grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 60%)',\n                              label: 'Grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 90%)',\n                              label: 'Light grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 100%)',\n                              label: 'White',\n                              hasBorder: true\n                          },\n\n                          // ...\n                      ]\n                  },\n                    toolbar: [\n                   ' highlight', 'heading',  'bold', 'fontColor', 'italic',  'bulletedList', 'numberedList', 'undo', 'redo'\n                    ],\n                  \n                    }}\n                    \n                    \n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fact,\n                    })}\n                    id=\"textarea22\"\n                    rows=\"6\"\n                    name=\"p_fact\"\n                \n                    onChange={ ( event, editor ) => {\n                      addDet(editor.getData());\n                      setcustError(\"\")\n                    \n                  } }\n\n                ></CKEditor>\n                      </div>\n                    </div>\n</div>\n<div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"question_query mb-2\">\n                        <label className=\"form-label\">\n                          Specific Questions for advisory <span className=\"declined\">*</span>\n                        </label>\n                        <div\n                          className=\"btn btn-primary\"\n                          onClick={() => append({ query: \"\" })}\n                        >\n                          +\n                        </div>\n                      </div>\n\n                      {fields.length > 0 &&\n                        fields.map((item, index) => (\n                          <div\n                            className=\"question_query_field mb-2\"\n                            key={item.id}\n                          >\n                            <input\n                              type=\"text\"\n                              className={classNames(\"form-control\", {\n                                \"is-invalid\": errors.users,\n                              })}\n                              ref={register({ required: true })}\n                              name={`users[${index}].query`}\n                              placeholder=\"Specify your query\"\n                              defaultValue={`${item.query}`}\n                            />\n                            \n                            <div\n                              className=\"btn btn-primary ml-2\"\n                              onClick={() => remove(index)}\n                            >\n                              -\n                            </div>\n                          </div>\n                        ))}\n                      \n                    </div>\n\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                        Purpose of the query <span className=\"declined\">*</span>\n                        </label>\n                        <Select\n                          closeMenuOnSelect={false}\n                          className={selectError ? \"customError\" : \"\"}\n                          onChange={purPoseQuery}\n                          isMulti\n                          options={purpose}\n                        />\n\n                      </div>\n                     \n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Assessment year</label>\n                        <Select\n                          closeMenuOnSelect={false}\n                          onChange={setSelectedOption}\n                          isMulti\n                          options={assessmentYear}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <ImageUploads register={register} control={control} />\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Format in which Opinion is required <span className=\"declined\">*</span>\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a1\"\n                            className={classNames(\"form-check-input\", {\n                              \"is-invalid\": errors.p_format_word,\n                            })}\n                            ref={register}\n                            type=\"checkbox\"\n                            name=\"p_format_word\"\n                            onChange={remError}\n                            defaultChecked\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a1\">\n                            Softcopy - Word/ Pdf\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a2\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            name=\"p_format_digital\"\n                            ref={register}\n                            onChange={remError}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a2\">\n                            SoftCopy- Digitally Signed\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a3\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            name=\"p_format_physically\"\n                            ref={register}\n                            onChange={remError}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a3\">\n                            Printout- Physically Signed\n                          </label>\n                        </div>\n                        <p className=\"declined\">{custcheckError}</p>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">Case name</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_case_name\"\n                          ref={register}\n\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Timelines within which Opinion is Required\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Urgent, (4-5 Working Days)\"\n\n                          />\n                          <label>Urgent, (4-5 Working Days)</label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Regular (10-12 Working Days)\"\n                            defaultChecked\n                          />\n                          <label>Regular (10-12 Working Days)</label>\n                        </div>\n                      </div>\n                     \n                    </div>\n                  </div>\n\n                 \n                  {\n                      loading ?\n                   \n                        <Box position=\"relative\" display=\"inline-flex\">\n        <CircularProgress variant=\"determinate\" \n                          value={uploadOrDownloadCount} />\n        <Box\n          bottom={0}\n          right={0}\n          top={0}\n          justifyContent=\"center\"\n          left={0}\n          display=\"flex\"\n          alignItems=\"center\"\n          position=\"absolute\"\n        >\n          {`${Math.round(uploadOrDownloadCount)}%`}\n        </Box>\n      </Box>\n                        :\n                        <button className=\"btn btn-success\" type=\"submit\">\n                         Submit\n                        </button>\n                    }\n                </form>\n\n              </div>\n              <Mandatory />\n            </div>\n        \n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default AddFreshAssingment;\n\n\n\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn\" onClick={() => append({ pics: \"\" })}>\n        <PublishIcon color=\"secondary\" />\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n    <>\n    {index === 0 ? \n      <div className=\"question_query_field mb-2\" key={index}>\n      \n      \n     \n       <input\n            type=\"file\"\n            // name={`upload[${index}].pics`}\n            name= \"uploadImg\"\n            ref={register}\n            className=\"form-control-file manage_file\"\n            multiple\n            defaultValue={item.pics}\n          />\n      <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n        -\n      </div>\n    \n    </div> : \"\"}\n  \n    </>\n      ))}\n    </>\n  );\n};\n","/home/pooja/MazarsRepo/src/views/ProposalTab/ProposalTab.js",["1574","1575","1576","1577","1578"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport AllProposal from \"./AllProposal\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport AcceptedProposal from \"./AcceptedProposal\";\nimport DeclinedProposal from \"./DeclinedProposal\";\n\n\n\n\nfunction Proposal(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\n  const [inprogressProposalCount, setInprogressProposalCount] = useState(\"\");\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllProposal();\n    getInprogressProposal();\n    getAcceptedProposal();\n    getDeclinedProposal();\n  }, []);\n\n\n  const getAllProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n\n        setAllProposalCount(res.data.result.length);\n      });\n  };\n\n  const getInprogressProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`)\n      .then((response) => {\n      \n        if (response.data.code === 1) {\n          setInprogressProposalCount(response.data.result.length);\n        }\n      })\n  };\n\n  const getAcceptedProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAcceptedProposalCount(res.data.result.length);\n        }\n      });\n  };\n\n  const getDeclinedProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=3`)\n      .then((response) => {\n        \n        if (response.data.code === 1) {\n          setDeclinedProposalCount(response.data.result.length);\n        }\n      })\n  };\n\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Proposals ({allProposalCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Proposals ({inprogressProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Accepted; Proposals ({acceptedProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Declined; Proposals ({declinedProposalCount})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <AcceptedProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedProposal />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/AssignmentTab/AssignmentTab.js",["1579","1580","1581","1582","1583"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport AllAssignment from \"./AllAssignment\";\nimport InprogressAssignment from \"./InprogressAssignment\";\nimport CompletedAssignment from \"./CompletedAssignment\";\nimport CustomerDeclinedPayment from \"./CustomerDeclinedPayment\";\n\n\n\nfunction AssignmentTab(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const [allassignment, setAllAssignment] = useState(\"\");\n  const [inprogressAssignmentCount, setInprogressAssignmentCount] = useState(\"\");\n  const [completeAssignment, setCompleteAssignment] = useState(\"\");\n  const [declinedAssignment, setDeclinedAssignment] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllAssignment();\n    getInprogressAssignment();\n    getCompletedAssignment();\n    getCustomerDeclinedPayment();\n  }, []);\n\n\n  const getAllAssignment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`)\n      .then((res) => {\n        \n        setAllAssignment(res.data.result.length);\n      });\n  };\n\n  const getInprogressAssignment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=1`)\n      .then((response) => {\n       \n        if (response.data.code === 1) {\n          setInprogressAssignmentCount(response.data.result.length);\n        }\n      })\n  };\n\n  const getCompletedAssignment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=2`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setCompleteAssignment(res.data.result.length);\n        }\n      });\n  };\n\n  const getCustomerDeclinedPayment = () => {\n    axios\n      .get(`${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=3`)\n      .then((response) => {\n     \n        if (response.data.code === 1) {\n          setDeclinedAssignment(response.data.result.length);\n        }\n      })\n  };\n\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Assignment ({allassignment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Assignments ({inprogressAssignmentCount})\n            </Tab>\n\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Completed; Assignments ({completeAssignment})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Customer Declined; Payment ({declinedAssignment})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <CompletedAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <CustomerDeclinedPayment />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default AssignmentTab;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/ForgetPassword/ForgetPassword.js",["1584","1585","1586","1587"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Spinner } from \"reactstrap\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n});\n\n\nfunction ForgetPassword(props) {\n\n\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"p\", \"forgot\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your regsitered email address.\")\n          props.history.push(`/customer/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n       \n          Alerts.ErrorNormal(\"Invalid email.\")\n        }\n      })\n      .catch((error) => {\n       ShowError.LoadingError(setLoading)\n      });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"undefined\") {\n      \n    } else {\n      return item\n    }\n  }\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n\n         \n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    defaultValue={valueHandler()}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n                  )}\n                </div>\n                {\n                      loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <>\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                        Get OTP\n                      </button>\n                       <Link to=\"/\" style={{ \"margin\": \"10px\" }}>\n                       <button type=\"submit\" className=\"btn btn-secondary\">\n                         Cancel\n                       </button>\n                     </Link>\n                     </>\n                    }\n                \n               \n              </form>\n          \n          <Mandatory />\n        </div>\n\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/ProposalView/ProposalView.js",["1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport TermsConditions from \"./TermsConditions\";\nimport CommonServices from \"../../common/common\";\nimport Alerts from \"../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport Loader from \"../../components/Loader/Loader\";\nimport RejectedModal22 from \"./RejectedModal22\";\n\n\nfunction ProposalView(props) {\n  const { handleSubmit, register } = useForm();\n  const [loading, setLoading] = useState(false);\n  const userId = window.localStorage.getItem(\"userid\");\n  const [queryStatus, setQueryStatus] = useState(null);\n  const [custcheckError, setCheckerror] = useState(null);\n  const [valueCheckBox, setValueCheckBox] = useState(false);\n  const [rejectedBox, showRejectedBox] = useState(false)\n  const [assignNo2, setAssignNo2] = useState()\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    proposal_date: \"\",\n    name: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const { amount, proposal_date,\n    name, description,\n    amount_type, amount_fixed, amount_hourly,\n    payment_terms,\n    no_of_installment,\n    installment_amount,\n    due_date,\n  } = diaplayProposal\n\n\n  useEffect(() => {\n    getProposalDetails();\n  }, []);\n\n  const getProposalDetails = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/getQueryDetails?id=${id}`\n      )\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n        \n\n          if (res.data.result[0].query_status) {\n            setQueryStatus(res.data.result[0].query_status);\n          }\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              proposal_date: res.data.proposal_queries[0].created,\n              name: res.data.proposal_queries[0].tlname,\n              description: res.data.proposal_queries[0].description,\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount_fixed,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n            });\n          }\n\n        }\n      });\n  };\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  var nfObject = new Intl.NumberFormat('hi-IN')\n  const readTerms = () => {\n \n    setPaymentModal(!addPaymentModal);\n  };\n\n\n  const updateCheckbox = ({ checked }) => {\n    setValueCheckBox(checked)\n    setPaymentModal(checked);\n    setCheckerror(\"\")\n  }\n\n\n  const onSubmit = (value) => {\n  \n\n    if (valueCheckBox === false) {\n     \n      setCheckerror(\"Please , You have to select\")\n    }\n    else {\n      setLoading(true)\n      let formData = new FormData();\n      formData.append(\"id\", id);\n      formData.append(\"status\", 5);\n      formData.append(\"terms_condition\", Number(value.p_terms_condition));\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/ProposalAccept`,\n        data: formData,\n      })\n        .then(function (response) {\n       \n          if (response.data.code === 1) {\n            setLoading(false)\n            var variable = \"Proposal accepted successfully.\"\n            Alerts.SuccessNormal(variable)\n            history.push({\n              pathname: `/customer/proposal`,\n              index: 0,\n            });\n          } if (response.data.code === 0) {\n            setLoading(false)\n          }\n\n        })\n        .catch((error) => {\n       \n        });\n    }\n\n  };\n\n\n  const installAmount = (data) => {\n    var item = data.split(',')\n   \n\n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n   \n    return dataItem;\n   \n  }\n\n\n  //rejected\n  const rejected = (id) => {\n   \n    if (valueCheckBox === false) {\n   \n      setCheckerror(\"Please , You have to select\")\n    } else {\n      Swal.fire({\n        title: \"Are you sure to reject proposal?\",\n        // text: \"Want to reject proposal ?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, rejected it!\",\n      }).then((result) => {\n        if (result.value) {\n          deleteCliente(id);\n        }\n      });\n    }\n  };\n\n\n  // delete data\n  const deleteCliente = (key) => {\n    setAssignNo2(id)\n    showRejectedBox(!rejectedBox)\n    \n  };\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Proposal Details</p>\n            </Col>\n            <Col\n              md=\"4\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            ></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Name of Team Leader</th>\n                <td>{name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date of Allocation</th>\n                <td>{CommonServices.removeTime(proposal_date)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposed Amount</th>\n                <td>{nfObject.format(amount)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Scope of Work</th>\n                <td>{description}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Amount</th>\n                <td>\n                  <tr>\n                    <th>Amount Type</th>\n                    <th>Price</th>\n                  </tr>\n                  <tr>\n                    <td>{CommonServices.capitalizeFirstLetter(amount_type)}</td>\n                    <td>\n                      {\n                        amount_type == \"fixed\" ?\n                          nfObject.format(amount)\n                          :\n                          amount_type == \"hourly\" ?\n                            nfObject.format(amount_hourly)\n                            :\n                            amount_type == \"mixed\" ?\n                              <div>\n                                <p>Fixed : {nfObject.format(amount)}</p>\n                                <p>Hourly : {nfObject.format(amount_hourly)}</p>\n                              </div>\n                              :\n                              \"\"\n                      }\n                    </td>\n                  </tr>\n                </td>\n              </tr>\n\n              <tr>\n                <th scope=\"row\">Payment Terms</th>\n                {\n                  payment_terms == \"lumpsum\" ?\n                    <td>\n                      <tr>\n                        <th>Payment Type</th>\n                        <th>Due Dates</th>\n                      </tr>\n                      <tr>\n                        <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\n                        <td>\n                          {CommonServices.removeTime(due_date)}\n                        </td>\n                      </tr>\n                    </td>\n                    :\n                    payment_terms == \"installment\" ?\n                      <td>\n                        <tr>\n                          <th>Payment Type</th>\n                          <th>No of Installments</th>\n                          <th>Installment Amount</th>\n                          <th>Due Dates</th>\n                        </tr>\n                        <tr>\n                          <td>{payment_terms}</td>\n                          <td>{no_of_installment}</td>\n                          <td>{installAmount(installment_amount)}</td>\n                          <td>{installAmount(due_date)}</td>\n                        </tr>\n                      </td>\n                      :\n                      \"\"\n                }\n\n\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposal Status</th>\n                <td>\n                  {queryStatus == \"4\" && \"Inprogress\"}\n                  {queryStatus == \"6\" && \"Declined\"}\n                  {(queryStatus == \"5\" || queryStatus > 6) && \"Accepted\"}\n                </td>\n              </tr>\n            </tbody>\n\n          </table>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <div className=\"form-check\">\n                  <input\n                    id=\"terms_condition\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    name=\"p_terms_condition\"\n                    ref={register}\n                    onChange={(e) => updateCheckbox(e.target)}\n                  />\n                  <label\n                    htmlFor=\"terms_condition\"\n                    className=\"form-check-label\"\n                    title=\"Read\"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    Engagement Letter\n                  </label>\n                  <p className=\"declined\">{custcheckError}</p>\n                </div>\n                <br />\n\n                {\n                  loading ?\n                    <Loader />\n                    :\n                    <>\n                      <div className=\"form-check\">\n                        {\n                          valueCheckBox ?\n                            <div>\n                              <button type=\"submit\" className=\"btn btn-primary\">\n                                Accept\n                              </button>\n                              <button type=\"button\" className=\"btn btn-danger ml-2\" onClick={() => rejected(id)}>\n                                Reject\n                              </button>\n                            </div>\n                            :\n                            <div>\n                              <button type=\"submit\" className=\"btn btn-primary\" disabled>\n                                Accept\n                              </button>\n                              <button type=\"button\" className=\"btn btn-danger ml-2\" disabled>\n                                Reject\n                              </button>\n                            </div>\n                        }\n                      </div>\n                    </>\n                }\n              </div>\n            </div>\n\n          </form>\n\n\n        </CardBody>\n\n        <TermsConditions\n          readTerms={readTerms}\n          addPaymentModal={addPaymentModal}\n          id={id}\n        />\n         <RejectedModal22\n                    showRejectedBox = {showRejectedBox} \n                    rejectedBox = {rejectedBox}\n                    // getQueriesData = {getQueriesData}\n                    assignNo={assignNo2}\n                    deleteCliente = {deleteCliente}/>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ProposalView;\n","/home/pooja/MazarsRepo/src/views/NewPassword/NewPassword.js",["1603","1604","1605","1606","1607","1608"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [load, setLoad] = useState(true);\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n  const getTime = () => {\n    if (load) {\n      var timerOn = true;\n      function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(remaining)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n      }\n      setLoad(false)\n      timer(180);\n    }\n\n  }\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n   \n    formData.append(\"email\", value.p_email);\n    formData.append(\"code\", value.p_code);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password reset successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          \n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n        }\n      })\n      .catch((error) => {\n        ShowError.LoadingError(setLoading)\n      });\n  };\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: \"This field is required\",\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                    })}\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                </div>\n              </div>\n            </div>\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"btn btn-primary\" >\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id} setDisabled={setDisabled} getTime={getTime}\n                setLoad={setLoad} setLoading={setLoading} />\n              :\n              null\n          }\n\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default NewPassword;\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/customer/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"btn btn-secondary\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}\n\n","/home/pooja/MazarsRepo/src/views/ChangePassword/ChangePassword.js",["1609","1610","1611"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\n\nfunction ChangePassword(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n  const [disabled, setDisabled] = useState(false)\n  const [show, setShow] = useState(false);\n  const [display, setDisplay] = useState(false);\n  const [time, setTime] = useState('')\n  const [load, setLoad] = useState(false);\n  const [email, setEmail] = useState('');\n\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n  const getTime = () => {\n\n\n    if (load) {\n      var timerOn = true;\n      function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(remaining)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n      }\n      timer(180);\n    }\n  }\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    setEmail(value.p_email)\n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userId));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_otp);\n\n\n    if (display) {\n      let formData = new FormData();\n      formData.append(\"email\", value.p_email);\n      formData.append(\"uid\", JSON.parse(userId));\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/regenrateotp`,\n        data: formData,\n      })\n        .then(function (response) {\n         \n          if (response.data.code === 1) {\n            setLoading(false)\n            setLoad(true)\n            setShow(true)\n            Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            Alerts.ErrorNormal(\"Please enter correct details\")\n          }\n        })\n        .catch((error) => {\n        ShowError.LoadingError(setLoading)\n        });\n      return false\n    }\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/passChange`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          props.history.push(\"/customer/dashboard\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        \n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n        }\n      })\n      .catch((error) => {\n       ShowError.LoadingError(setLoading)\n      });\n  };\n\n\n\n  //setotp\n  const setOtp = () => {\n    setDisplay(false)\n  }\n\n  //get OTP\n  const getOtp = () => {\n    setDisplay(true)\n  }\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Change Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter email id\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}{\" \"}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    name=\"p_password\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"UPassword should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    autocomplete=\"off\"\n                  />\n\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    autocomplete=\"off\"\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              {\n                show ?\n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_otp,\n                        })}\n                        name=\"p_otp\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter your OTP\"\n                        autocomplete=\"off\"\n                      />\n                      {\n                        disabled ? null\n                          :\n                          <small class=\"text-center\">\n                            Note: OTP is valid for {time} seconds.\n                          </small>\n                      }\n                    </div>\n                  </div>\n                  : null\n              }\n\n              {\n                loading ?\n                  <div class=\"col-md-12\">\n                    <Spinner color=\"primary\" />\n                  </div>\n                  :\n                  <div class=\"col-md-6\">\n                    {\n                      show ?\n                        <div>\n                          {\n                            disabled ? null\n                              :\n                              <>\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => setOtp()}>Submit</button>\n                                <Cancel />\n                              </>\n                          }\n                        </div>\n                        :\n                        <>\n                          <button type=\"submit\" class=\"btn btn-success\" onClick={() => getOtp(\"otp\")}>Get OTP</button>\n                          <Cancel />\n                        </>\n                    }\n                  </div>\n              }\n            </div>\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp setDisabled={setDisabled} getTime={getTime}\n                email={email} setLoad={setLoad} setLoading={setLoading} loading={loading} />\n              :\n              null\n          }\n\n          <Mandatory />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n\n\n\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/customer/dashboard\" style={{ \"margin\": \"10px\" }}>\n        <Button variant=\"contained\" color=\"secondary\">\n          Cancel\n        </Button>\n      </Link>\n    </>\n  );\n}\n\n","/home/pooja/MazarsRepo/src/views/VideoCall/VideoCall.js",["1612","1613"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport Index from \"../../components/InputRoom/index\";\n\nfunction VideoCall() {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n        <Index />\n    </Layout>\n  );\n}\n\nexport default VideoCall;\n","/home/pooja/MazarsRepo/src/views/Schedule/schedule.js",["1614","1615","1616","1617","1618","1619","1620"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Demo from \"./demo\";\nimport Swal from \"sweetalert2\";\n\nconst thankyour = () => {\n  Swal.fire({\n    \"title\" : \"Scuuess\",\n    html : `<h1>Thank you </h1>`,\n    icon : \"success\"\n  })\n}\nfunction Schedule() {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n        <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Schedule </CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n      \n         \n        </CardHeader>\n    \n      <Demo />\n      \n      </Card>\n    </Layout>\n  );\n}\n\nexport default Schedule;\n","/home/pooja/MazarsRepo/src/views/MeetingComponent/MeetingComponent.js",["1621","1622"],"import React from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport Meeting from \"../../components/meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  return (\n    \n      <Meeting />\n   \n  );\n}\n\nexport default MeetingComponent;\n","/home/pooja/MazarsRepo/src/views/ViewNotification/ViewNotification.js",["1623","1624","1625","1626","1627"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../common/common\";\n\nfunction ViewNotification() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userId));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  \n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> Sender</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                  {data.type}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/home/pooja/MazarsRepo/src/views/EditQuery/EditQuery.js",["1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638","1639"],"\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl, ImageUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader, Row, Col } from \"reactstrap\";\nimport Select from \"react-select\";\nimport DeleteQuery from \"./DeleteQuery\";\nimport Swal from \"sweetalert2\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport classNames from \"classnames\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nimport { Markup } from 'interweave';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nfunction EditQuery(props) {\n\n  const history = useHistory();\n  const { id } = useParams();\n  \n  const { handleSubmit, register, errors, reset, control, setValue } = useForm({\n    defaultValues: {\n      users: [{ query: \"\" }],\n    },\n  });\n\n  const { append, remove, fields } = useFieldArray({\n    control,\n    name: \"users\",\n  });\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n  const [loading, setLoading] = useState(false);\n  const [custcheckError, setCheckerror] = useState(null);\n  const [queryDocs, setQueryDocs] = useState([]);\n const [qno, setQno] = useState()\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [purposeOption, setPurposeOption] = useState([]);\n  const [selectError, setSelectError] = useState()\n  const [assessmentYear, setAssessmentYear] = useState([]);\n    const [value2 , setValue2] = useState();\n    const [val3, setVal3] = useState()\n    const [uploadOrDownloadCount, setUploadOrDownloadCount] = useState(10);\n  const purPoseQuery = (e) => {\n    setSelectError(\"\")\n    setPurposeOption(e)\n\n  }\n  const remError = () => {\n    setCheckerror(\"\")\n  }\n \n  useEffect(() => {\n    getAssementYear();\n    getQuery();\n   \n  }, []);\n\n \n  const getAssementYear = () => {\n    axios\n      .get(`${baseUrl}/customers/getAssesmentYear`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setAssessmentYear(res.data.result);\n        }\n      });\n  };\n  const getQuery = () => {\n    axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\n\n      if (res) {\n        var specific = res.data.result[0].specific_query;\n        if (specific == \"undefined\") {\n        } else var sepData = JSON.parse(specific);\n        reset({\n          users: sepData,\n        });\n         setQno(res.data.result[0].assign_no)\n        var value = res.data.result[0].assessment_year;\n        var purposeItem = res.data.result[0].purpose_opinion;\n\n\n        try {\n         \n          var myPurpose = JSON.parse(purposeItem);\n\n         \n          setPurposeOption(myPurpose);\n        } catch (e) {\n          \n        }\n        try {\n          var myObj = JSON.parse(value);\n         \n\n          setSelectedOption(myObj);\n        \n        } catch (e) {\n          \n        }\n       \n        setValue2(res.data.result[0].fact_case);\n     \n      //  setValue(\"fact_case\", res.data.result[0].fact_case);\n        setValue(\"case_name\", res.data.result[0].case_name);\n        setValue(\"p_Softcopy_word\", Boolean(+res.data.result[0].softcopy_word));\n        setValue(\n          \"p_Softcopy_digital\",\n          Boolean(+res.data.result[0].softcopy_digitally_assigned)\n        );\n        setValue(\n          \"p_Softcopy_physical\",\n          Boolean(+res.data.result[0].printout_physically_assigned)\n        );\n        setValue(\"p_timelines\", res.data.result[0].Timelines);\n        setQueryDocs(res.data.queries_document);\n      }\n    });\n  };\n\n  const onSubmit = (value) => {\n  \n    \n    if (purposeOption < 1) {\n      setSelectError(\"At least one value should be enter\")\n    }\n    else if (value.p_Softcopy_word === false && value.p_Softcopy_digital === false && value.p_Softcopy_physical === false) {\n    \n      setCheckerror(\"Please select at least one.\")\n    }\n    else {\n      const timer = setInterval(() => {\n        setUploadOrDownloadCount(\n          (beforeValue) => (beforeValue >= 90 ? 90 \n                            : beforeValue + 10));\n      }, 800);\n      setLoading(true)\n     \n\n      var uploadImg = value.uploadImg;\n      if(uploadImg === undefined){\n        uploadImg = 0;\n      }\n      let formData = new FormData();\n     \n      if (uploadImg) {\n        for (var i = 0; i < uploadImg.length; i++) {\n          let file = uploadImg[i];\n          formData.append(\"upload_1[]\", file);\n        }\n      }\n   \n      formData.append(\"fact\", value2);\n      formData.append(\"specific\", JSON.stringify(value.users));\n      formData.append(\"timelines\", value.p_timelines);\n      formData.append(\"user\", JSON.parse(userId));\n      formData.append(\"id\", id);\n      formData.append(\"cid\", JSON.parse(category));\n      formData.append(\"softcopy_word\", Number(value.p_Softcopy_word));\n      formData.append(\n        \"softcopy_digitally_assigned\",\n        Number(value.p_Softcopy_digital)\n      );\n      formData.append(\n        \"printout_physically_assigned\",\n        Number(value.p_Softcopy_physical)\n      );\n      formData.append(\"case_name\", value.case_name);\n      formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n      formData.append(\"purpose\", JSON.stringify(purposeOption));\n\n      axios\n        .post(`${baseUrl}/customers/PostEditQuestion`, formData, {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            setUploadOrDownloadCount(100)\n            var message = response.data.message\n            if (message == \"\") {\n              Swal.fire(\n                \"Success\",\n                `Query updated successfully.`,\n                \"success\"\n              )\n            } else if (message.invalid) {\n              Swal.fire({\n                title: 'Error !',\n                html: `<p class=\"text-danger\">${message.invalid}</p>`,\n              })\n            }\n            else if (message.faill) {\n              Swal.fire({\n                title: 'Success !',\n                html: `<p>Query Updated Successfully.</p>\n                <br/><p class=\"text-danger\"> ${message.faill}</p>`,\n                icon: 'success',\n              })\n            }\n            props.history.push(\"/customer/queries\");\n          } else {\n            setLoading(true)\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n        });\n    }\n  };\n\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Update Query - {qno}</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <DeleteQuery id={id} setLoading={setLoading}/>\n            </Col>\n          </Row>\n         \n        </CardHeader>\n\n        <CardHeader>\n         \n            <div className=\"container-fluid\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 py-4\">\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Facts of the case <span className=\"declined\">*</span></label>\n                     \n                        <CKEditor\n                     editor={ ClassicEditor }\n                     config = {{\n\n                      highlight: {\n                        options: [\n                            {\n                                model: 'greenMarker',\n                                class: 'marker-green',\n                                title: 'Green marker',\n                                color: 'var(--ck-highlight-marker-green)',\n                                type: 'marker'\n                            },\n                            {\n                                model: 'redPen',\n                                class: 'pen-red',\n                                title: 'Red pen',\n                                color: 'var(--ck-highlight-pen-red)',\n                                type: 'pen'\n                            }\n                        ]\n                    },\n                      fontFamily: {\n                        options: [\n                            'default',\n                            'Ubuntu, Arial, sans-serif',\n                            'Ubuntu Mono, Courier New, Courier, monospace'\n                        ]\n                    },\n                    fontColor: {\n                      colors: [\n                          {\n                              color: 'hsl(0, 0%, 0%)',\n                              label: 'Black'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 30%)',\n                              label: 'Dim grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 60%)',\n                              label: 'Grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 90%)',\n                              label: 'Light grey'\n                          },\n                          {\n                              color: 'hsl(0, 0%, 100%)',\n                              label: 'White',\n                              hasBorder: true\n                          },\n\n                          // ...\n                      ]\n                  },\n                    toolbar: [\n                   ' highlight', 'heading',  'bold', 'fontColor', 'italic',  'bulletedList', 'numberedList', 'undo', 'redo'\n                    ],\n                  \n                    }}\n                    \n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fact,\n                    })}\n                    id=\"textarea22\"\n                    rows=\"6\"\n                    name=\"p_fact\"\n                   data={value2}\n                    onChange={ ( event, editor ) => {\n                      setValue2(editor.getData());\n                      // setcustError(\"\")\n                    \n                  } }\n                    //ref={register({ required: true })}\n                >\n                  \n                  </CKEditor>\n                      </div>\n                    </div>\n</div>\n<div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"question_query mb-2\">\n                        <label className=\"form-label\">\n                          Specific Questions for advisory <span className=\"declined\">*</span>\n                        </label>\n                        <div\n                          className=\"btn btn-primary\"\n                          onClick={() => append({ query: \"\" })}\n                        >\n                          +\n                        </div>\n                      </div>\n\n                      {fields.map((item, index) => (\n                        <div className=\"question_query_field mb-2\" key={item.id}>\n                          <input\n                            type=\"text\"\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.users,\n                            })}\n                            ref={register}\n                            name={`users[${index}].query`}\n                            defaultValue={`${item.query}`}\n                            placeholder=\"Specify your query\"\n                            ref={register({ required: true })}\n                          />\n                          <div\n                            className=\"btn btn-primary ml-2\"\n                            onClick={() => remove(index)}\n                          >\n                            -\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Purpose for which Opinion is sought <span className=\"declined\">*</span>\n                        </label>\n                        <Select\n                          closeMenuOnSelect={false}\n                          className={selectError ? \"customError\" : \"\"}\n                          onChange={purPoseQuery}\n                          value={purposeOption}\n                          isMulti\n                          options={purpose}\n                        />\n                      </div>\n                     \n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Assessment year</label>\n\n                        <Select\n                          closeMenuOnSelect={false}\n                          onChange={setSelectedOption}\n                          value={selectedOption}\n                          isMulti\n                          options={assessmentYear}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <ImageUploads register={register} control={control} />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Format in which Opinion is required\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a1\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            onChange={remError}\n                            name=\"p_Softcopy_word\"\n                            ref={register}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a1\">\n                            Softcopy - Word/ Pdf\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a2\"\n                            className=\"form-check-input\"\n                            onChange={remError}\n                            type=\"checkbox\"\n                            name=\"p_Softcopy_digital\"\n                            ref={register}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a2\">\n                            SoftCopy- Digitally Signed\n                          </label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            id=\"a3\"\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            onChange={remError}\n                            name=\"p_Softcopy_physical\"\n                            ref={register}\n                          />\n                          <label className=\"form-check-label\" htmlFor=\"a3\">\n                            Printout- Physically Signed\n                          </label>\n                        </div>\n                        <p className=\"declined\">{custcheckError}</p>  </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">\n                          Timelines within which Opinion is Required\n                        </label>\n                        <br />\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Urgent, (4-5 Working Days)\"\n                          // disabled\n                          />\n                          <label>Urgent, (4-5 Working Days)</label>\n                        </div>\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"p_timelines\"\n                            ref={register}\n                            value=\"Regular (10-12 Working Days)\"\n                          // disabled\n                          />\n                          <label>Regular (10-12 Working Days)</label>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <div className=\"mb-3\">\n                        <label className=\"form-label\">Display Documents</label>\n                        <br />\n\n                        <>\n                          <div>\n                            {queryDocs.map((p, i) => (\n                              <ul style={{listStyle : \"none\"}}>\n                                <li>\n                                  <a\n                                    href={`${ImageUrl}/${p.assign_no}/${p.name}`}\n                                    target=\"_blank\"\n                                  >\n                                  <em>\n                                    {++i}\n                                    </em>  <i\n                                      class=\"fa fa-photo\"\n                                      style={{ width: \"50\", height: \"20\" }}\n                                    ></i>\n                                    <span style={{ marginLeft: \"10px\" }}>{p.name}</span>\n                                  </a>\n                                </li>\n                              </ul>\n                            ))}\n\n                          </div>\n                        </>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">Case name</label>\n                        <input\n                          type=\"text\"\n                          name=\"case_name\"\n                          ref={register}\n                          className=\"form-control\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  {\n                      loading ?\n                      <Box position=\"relative\" display=\"inline-flex\">\n                      <CircularProgress variant=\"determinate\" \n                                        value={uploadOrDownloadCount} />\n                      <Box\n                        bottom={0}\n                        right={0}\n                        top={0}\n                        justifyContent=\"center\"\n                        left={0}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        position=\"absolute\"\n                      >\n                        {`${Math.round(uploadOrDownloadCount)}%`}\n                      </Box>\n                    </Box>\n                            \n                        :\n                        <button className=\"btn btn-success\" type=\"submit\">\n                          Update\n                        </button>\n                    }\n                </form>\n\n              </div>\n\n              <Mandatory />\n            </div>\n       \n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditQuery;\n\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn\" onClick={() => append({ pics: \"\" })}>\n        <PublishIcon color=\"secondary\" />\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n        <>\n        {index === 0 ? \n        <div className=\"question_query_field mb-2\" key={index}>\n        <input\n          type=\"file\"\n          name= \"uploadImg\"\n          multiple={true}\n          ref={register()}\n          className=\"form-control-file manage_file\"\n          defaultValue={item.pics}\n        />\n        <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n          -\n        </div>\n      </div> : \"\"}\n        </>\n      ))}\n    </>\n  );\n};\n\n\nconst purpose = [\n  { value: \"Assessment\", label: \"Assessment\" },\n  { value: \"Appeal\", label: \"Appeal\" },\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\n  {\n    value: \"Filing before any Authority\",\n    label: \"Filing before any Authority\",\n  },\n  { value: \"Others\", label: \"Others\" },\n];\n\n","/home/pooja/MazarsRepo/src/views/Chatting/Chatting.js",["1640","1641","1642","1643","1644"],"/home/pooja/MazarsRepo/src/views/Message/Message.js",["1645","1646","1647","1648","1649","1650","1651"],"/home/pooja/MazarsRepo/src/views/FeedbackData/FeedbackData.js",["1652","1653","1654","1655","1656"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction FeedbackData(props) {\n\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [query, setQuery] = useState([]);\n\n\n    useEffect(() => {\n        getMessage();\n    }, []);\n\n\n    const getMessage = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/getFeedback?uid=${JSON.parse(userId)}`\n            )\n            .then((res) => {\n            \n                if (res.data.code === 1) {\n                    setQuery(res.data.result);\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"10px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"60px\" };\n            },\n          \n        },\n\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        {row.assign_no}\n\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Feedback\",\n            dataField: \"feedback\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"150px\" };\n            },\n        },\n    ];\n\n\n\n\n    return (\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"9\">\n                            <CardTitle tag=\"h4\">Feedback</CardTitle>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={query}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                </CardBody>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default FeedbackData;\n       ","/home/pooja/MazarsRepo/src/views/Feedback/Feedback.js",["1657","1658"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport Mandatory from \"../../components/Common/Mandatory\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\n\n\nconst Schema = yup.object().shape({\n  p_feedback: yup.string().required(\"\"),\n});\n\n\n\nfunction Feedback() {\n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const history = useHistory();\n  const { id } = useParams();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [loading, setLoading] = useState(false);\n \n\n  const onSubmit = (value) => {\n\n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"assign_no\", id);\n    formData.append(\"feedback\", value.p_feedback);\n    formData.append(\"user_id\", JSON.parse(userId));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostUserFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n    \n        if (response.data.code === 1) {\n          setLoading(false)\n          reset();\n          Alerts.SuccessNormal(\"Feedback sent successfully.\")\n          history.push({\n            pathname: `/customer/queries`,\n            index: 0,\n          });\n        } if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n      ShowError.LoadingError(setLoading)\n      });\n  };\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <ArrowBackIcon />\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Feedback</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n         \n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={id}\n                          disabled\n                        />\n                      </div>\n\n\n                      <div class=\"form-group\">\n                        <label>Feedback</label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_feedback,\n                          })}\n                          placeholder=\"Feedback text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_feedback\"\n                        ></textarea>\n                        {errors.p_feedback && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_feedback.message}\n                          </div>\n                        )}\n                      </div>\n                       \n                  {\n                      loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                         Submit\n                        </button>\n                    }\n                    </div>\n                  </div>\n\n                </form>\n                <Mandatory />\n              </>\n          \n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Feedback;\n","/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentStatus.js",["1659","1660","1661","1662"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport Unpaid from \"./Unpaid\";\nimport Paid from \"./Paid\";\nimport AllPayment from \"./AllPayment\";\n\n\n\nfunction PaymentStatus(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}`)\n      .then((res) => {\n      \n        setAllPayment(res.data.result.length);\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=1`)\n      .then((res) => {\n      \n        setPaid(res.data.result.length);\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=2`)\n      .then((res) => {\n      \n        setUnpaid(res.data.result.length);\n      });\n  };\n\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Paid ({unpaid})\n            </Tab>\n\n          </TabList>\n\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default PaymentStatus;\n\n\n\n\n","/home/pooja/MazarsRepo/src/views/PaymentGateway.js/PaymentGateway.js",["1663","1664","1665"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { baseUrl } from \"../../config/config\";\nfunction PaymentGateway(){\n    const { handleSubmit, register, errors, getValues } = useForm();\n    const info = {\n      \"state\" : \"Haryana\",\n      \"email\" : \"singhnishantrana@gmail.com\", \n      \"gender\" : \"\", \n      \"dob\" : \"01-11-1990\",\n      \"city\" : \"Gurugoan\",\n      \"pincode\" : \"122017\", \n      \"status\" : \"1\",\n      \"first_name\" : \"Nishant Rana\",\n      \"last_name\" : \"\",\n      \"address_line_1\" : \"A-22, A Block\",\n      \"address_line_2\" : \"Sector 109\",\n      \"plan_name\" : \"TPIN_100Mbps_Combo\"\n    }\n    const billdes = {\n      // \"HSN_SAC_code\": \"11040\",\n        \"Desc\": \"Bill for Mazars\",\n        \"Qty\": \"1\",\n        \"UoM\": \"NA\",\n        \"Rate\": \"11620.0\",\n        \"Total\": \"1.0\",\n        \"Discount\": \"0\",\n        \"Delivery_Charges\": \"0\",\n        \"Net_Tax_Val\": \"0\",\n        \"CGST_Rate\": \"0\",\n        \"CGST_Amount\": \"0\",\n        \"SGST_Rate\": \"0\",\n        \"SGST_Amount\": \"0\",\n        \"IGST_Rate\": \"0\",\n        \"IGST_Amount\": \"0\",\n        \"Total_Amount\": \"1.0\"\n    }\n    const onSubmit = (value) => {\n\n \n    let formData = new FormData()\n    formData.append(\"token\", \"09f3b52d937b320e929ad45153ef745d\");\n    formData.append(\"timestamp\", \"09-09-2021 13:52:02\");\n    formData.append(\"mobile\", \"9818685050\");\n    formData.append(\"type\", \"F\");\n    formData.append(\"userInfo\" , JSON.stringify(info));\n    formData.append(\"billDescription\", JSON.stringify(billdes));\n    formData.append(\"ekycStatus\", 0);\n    formData.append(\"public_key\", \"791E14FF-6243-4A73-A6E1\");\n    formData.append(\"Bill_no\", \"11189974221\");\n    formData.append(\"Balance\", \"100\");\n    formData.append(\"Bill_due_date\",  \"24-09-2021\");\n    formData.append(\"user_id\", \"9818685050\");\n    formData.append(\"merchant_id\", \"T10012\");\n    formData.append(\"agent_id\", \"8595923172\");\n    formData.append(\"caf_number\", \"\");\n\n  \n    var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nvar raw = JSON.stringify({\n  \"token\": \"09f3b52d937b320e929ad45153ef745d\",\n  \"timestamp\": \"09-09-2021 13:52:02\",\n  \"mobile\": \"7703954008\",\n  \"type\": \"F\",\n  \"userInfo\": {\n    \"state\": \"Haryana\",\n    \"email\": \"na@gmail.com\",\n    \"gender\": \"\",\n    \"dob\": \"\",\n    \"city\": \"Gurgaon\",\n    \"pincode\": \"122002\",\n    \"status\": \"1\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"Test\",\n    \"address_line_1\": \"Test, Tower - A, Ground Floor\",\n    \"address_line_2\": \"DLF Phase I\",\n    \"plan_name\": \"20 Mbps free\"\n  },\n  \"billDescription\": {\n    \"HSN_SAC_code\": \"15684\",\n    \"Desc\": \"20 Mbps free\",\n    \"Qty\": \"1\",\n    \"UoM\": \"NA\",\n    \"Rate\": \"10.0\",\n    \"Total\": \"10.0\",\n    \"Discount\": \"0\",\n    \"Delivery_Charges\": \"0\",\n    \"Net_Tax_Val\": \"0\",\n    \"CGST_Rate\": \"0\",\n    \"CGST_Amount\": \"0\",\n    \"SGST_Rate\": \"0\",\n    \"SGST_Amount\": \"0\",\n    \"IGST_Rate\": \"0\",\n    \"IGST_Amount\": \"0\",\n    \"Total_Amount\": \"10.0\"\n  },\n  \"ekycStatus\": \"1\",\n  \"public_key\": \"791E14FF-6243-4A73-A6E1\",\n  \"Bill_no\": \"15293997\",\n  \"Balance\": \"10.0\",\n  \"Bill_due_date\": \"20-09-2021\",\n  \"user_id\": \"7703954008\",\n  \"merchant_id\": \"T10001\",\n  \"agent_id\": \"8689003344\",\n  \"caf_number\": \"TP-EC-44882\"\n});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://pay.mobilpay.in/index.php/getUserBillData\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n    }\n      return(\n        <div className=\"container\">\n\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Customer Register</h2>\n          </div>\n          <>\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n    \n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Mobile<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_mobile\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Mobile Number\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_mobile,\n                        })}\n                      />\n                    </div>\n                  </div>\n    \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_type\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_type,\n                        })}\n                        \n                        placeholder=\"Enter type\"\n                        ref={register({ required: true })}\n                      />\n                      \n                    </div>\n                  </div>\n               </div>\n\n               <div className=\"row\">\n                  <div className=\"col-md-6\">\n    \n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">User Information<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_userInfo\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter User Information\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_userInfo,\n                        })}\n                      />\n                    </div>\n                  </div>\n    \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Bill Description<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"p_billDescription\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_billDescription,\n                        })}\n                        \n                        placeholder=\"Enter Your Description\"\n                        ref={register({ required: true })}\n                      />\n                      \n                    </div>\n                  </div>\n               </div>\n\n             <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Ekyc Status<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_ekycStatus ,\n                        })}\n                        name=\"p_zipCode\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Ekyc Status\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Public Key<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_publicKey ,\n                        })}\n                        name=\"p_publicKey\"\n                        placeholder=\"Enter Public Key\"\n                        ref={register}\n    \n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">\n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Bill Number<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.bill_no,\n                        })}\n                        \n                        placeholder=\"Bill Number\"\n                        name=\"bill_no\"\n                        ref={register}\n                        autocomplete=\"off\"\n                      />\n                    </div>\n                  </div>\n    \n                      <div class=\"col-md-6\">\n                        <div className=\"mb-3\">\n                          <label className=\"form-label\">Balance<span className=\"declined\">*</span></label>\n                          <input\n                            type=\"text\"\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.balance,\n                            })}\n                            name=\"balance\"\n                            ref={register({ required: true })}\n                           \n                            placeholder=\"Enter Amount\"\n                            autocomplete=\"off\"\n                          />\n                         \n                        </div>\n                      </div>\n              </div>\n              <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Bill Due Date<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.bill_dueDate ,\n                        })}\n                        name=\"bill_dueDate\"\n                        ref={register({ required: true })}\n                        placeholder=\"Due Date\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">User Id<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.user_id ,\n                        })}\n                        name=\"user_id\"\n                        placeholder=\"Enter your user id\"\n                        ref={register}\n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Agent Id<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.agent_id ,\n                        })}\n                        name=\"agent_id\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Ekyc Status\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Merchant Id<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.merchant_id ,\n                        })}\n                        name=\"merchant_id\"\n                        placeholder=\"Enter Public Key\"\n                        ref={register}\n    \n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">     \n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">CAF Number<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.caf_number ,\n                        })}\n                        name=\"caf_number\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Ekyc Status\"\n                       \n                      />\n                    </div>\n                   \n                  </div>\n    \n                  <div class=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.email ,\n                        })}\n                        name=\"email\"\n                        placeholder=\"Enter Email\"\n                        ref = {register}\n    \n                        autocomplete=\"off\"\n                      />\n                     \n                     \n                    </div>\n                  </div>\n             </div>\n             <div className=\"row\">\n             <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">DOB<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.dob ,\n                        })}\n                        name=\"dob\"\n                        ref={register({ required: true })}\n                        placeholder=\"Enter Date of Birth\"/>\n                    </div> \n                  </div>\n                  <div className=\"col-md-6\">\n                    <button type=\"submit\" className=\"btn btn-lg btn-primary justify\">Submit</button>\n                  </div>\n             </div>\n              </form>\n    \n              </div>\n          </>\n    \n        </div>\n    \n      </div>\n      )\n   \n}\nexport default PaymentGateway;","/home/pooja/MazarsRepo/src/pages/Admin/Start/Start.js",[],"/home/pooja/MazarsRepo/src/pages/Admin/Login/Login.js",["1666","1667"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\nimport { Spinner } from \"reactstrap\";\nimport {useHistory} from 'react-router-dom';\nimport Cookies from \"js-cookie\"\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction Login(props) {\n  const alert = useAlert();\n  let history = useHistory()\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [email, setEmail] = useState(null);\n  const [show, setShow] = useState(false);\n  const [uid, setUid] = useState('')\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n \n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"userid\", value.p_email);\n      formData.append(\"password\", value.password);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/login`,\n        data: formData,\n      })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          setLoading(false)\n          setShow(true)\n          Cookies.set(\"adminName\", response.data.display_name)\n          Swal.fire({\n            \"title\" : \"success\", \n            \"html\" : \"As per your request, OTP has been sent to your registered email address.\",\n            \"icon\" : \"success\"\n          })\n          // Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setUid(response.data[\"user id\"])\n          logout()\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Invalid email or password.\")\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n  const logout = () => {\n    setTimeout(() => {\n      localStorage.removeItem(\"adminkey\");\n      localStorage.removeItem(\"adminEmail\");\n      history.push(\"/admin/login\");\n    }, 36000000)\n  }\n  const handleChange = (e) => {\n  \n    setEmail(e.target.value);\n  };\n\n  return (\n    <>\n      <Header mtp=\"mtp\" />\n      <div class=\"container\">\n\n        {\n          show ? <div>\n            <VerifyOtpLogin email={email} uid={uid}\n              loading={loading}\n              setLoading={setLoading} />\n          </div>\n            :\n            <div class=\"form\">\n              <div class=\"heading\">\n                <h2>ADMIN LOGIN</h2>\n              </div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                        placeholder=\"Enter Email\"\n                        autocomplete=\"off\"\n                        onChange={(e) => handleChange(e)}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n                      <input\n                        type={isPasswordShow ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.password,\n                        })}\n                        name=\"password\"\n                        placeholder=\"Enter Password\"\n                        ref={register}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                      />\n                      <i\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword}\n                      />\n                      {errors.password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                {\n                  loading ?\n                    <div class=\"col-md-12\">\n                      <Spinner color=\"primary\" />\n                    </div>\n                    :\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                }\n\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n                  <Link\n                    to={{\n                      pathname: \"/admin/forget-password\",\n                      email: `${email}`,\n                    }}\n                  >\n                    Forgot Password\n                  </Link>\n                </div>\n\n                <Mandatory />\n              </form>\n            </div>\n        }\n\n\n      </div>\n      <Footer />\n    </>\n  );\n}\nexport default Login;","/home/pooja/MazarsRepo/src/pages/Admin/Dashboard/Dashboard.js",["1668"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index1.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\n\n\n\nfunction Dashboard() {\n  const userId = window.localStorage.getItem(\"adminkey\");\n\n  const [allQueries, setAllQueries] = useState({\n    total: '',\n    inprogress_queries: '',\n    inprogress_allocation: '',\n    inprogress_proposal: '',\n    inprogress_assignment: '',\n    complete_query: '',\n    declined_queries: '',\n    admin_declined_query: '',\n    customer_declined_Query: '',\n    customer_declined_proposal: '',\n    Customer_declined_payment: '',\n\n    allproposal: '',\n    accepted_proposals: '',\n    InProgress: '',\n    inprogress_preparation: '',\n    inprogress_acceptance: '',\n    declined: '',\n  });\n\n\n  const [assignment, setAssignment] = useState({\n    inprogress: '',\n    complete: '',\n    client_discussion: '',\n    draft_report: '',\n    final_discussion: '',\n    final_report: '',\n    complete_inprocess: '',\n    customer_declined_payment: ''\n  });\n\n  const [payment, setPayment] = useState({\n    paid: '',\n    unpaid: '',\n  });\n\n  const { total, inprogress_queries,\n    inprogress_allocation, inprogress_proposal,\n    inprogress_assignment, complete_query,\n    declined_queries, admin_declined_query,\n    customer_declined_Query, customer_declined_proposal,\n    Customer_declined_payment,\n    allproposal,\n    inprogress_preparation,\n    declined, inprogress_acceptance,\n    accepted_proposals, InProgress } = allQueries;\n\n\n  const {\n    inprogress,\n    complete, client_discussion, draft_report, final_discussion,\n    final_report, complete_inprocess,\n    customer_declined_payment } = assignment;\n\n  const {\n    paid,\n    unpaid } = payment;\n\n\n  useEffect(() => {\n    const getAllQueries = () => {\n      axios\n        .get(`${baseUrl}/admin/totalComplete`)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setAllQueries({\n              total: response.data.result.total,\n              inprogress_queries: response.data.result.inprogress_queries,\n              inprogress_allocation: response.data.result.inprogress_allocation,\n              inprogress_proposal: response.data.result.inprogress_proposal,\n              inprogress_assignment: response.data.result.inprogress_assignment,\n              complete_query: response.data.result.complete_query,\n              declined_queries: response.data.result.declined_queries,\n              admin_declined_query: response.data.result.admin_declined_query,\n              customer_declined_Query: response.data.result.customer_declined_Query,\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\n\n              allproposal: response.data.result.proposal.allproposal,\n              InProgress: response.data.result.proposal.InProgress,\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\n            })\n          }\n        })\n        .catch((error) => {\n         \n        });\n    };\n\n    const getAssignment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsCount`)\n        .then((response) => {\n         \n          if (response.data.code === 1) {\n            setAssignment({\n              inprogress: response.data.result.inprogress,\n              complete: response.data.result.complete,\n              client_discussion: response.data.result.client_discussion,\n              draft_report: response.data.result.draft_report,\n              final_discussion: response.data.result.final_discussion,\n              final_report: response.data.result.final_report,\n              complete_inprocess: response.data.result.complete_inprocess,\n              customer_declined_payment: response.data.result.customer_declined_payment,\n            })\n          }\n        })\n        .catch((error) => {\n         \n        });\n    };\n\n    const getPayment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount`)\n        .then((response) => {\n        \n          if (response.data.code === 1) {\n            setPayment({\n              paid: response.data.result.paid,\n              unpaid: response.data.result.unpaid,\n            })\n          }\n        })\n        .catch((error) => {\n         \n        });\n    };\n\n    getAllQueries();\n    getPayment();\n    getAssignment();\n  }, []);\n\n  \n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n\n      <div className=\"row\">\n        <div className=\"col-md-3 content_header\">\n          <table className=\"table table-striped first main_table mb-1\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">All Queries</th>\n                <th>{total}</th>\n              </tr>\n            </thead>\n          </table>\n          <table className=\"table table-striped second main_table mb-1\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">Inprogress; Queries</th>\n                <th>{inprogress_queries}</th>\n              </tr>\n            </thead>\n\n            <tbody className=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Inprogress; Allocation</td>\n                <td>{inprogress_allocation}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Inprogress; Proposals</td>\n                <td>{inprogress_proposal}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Inprogress; Assignments</td>\n                <td>{inprogress_assignment}</td>\n              </tr>\n            </tbody>\n          </table>\n\n\n          <table className=\"table table-striped third main_table mb-1\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">Completed; Queries</th>\n                <th>{complete_query}</th>\n              </tr>\n            </thead>\n            <tbody className=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Completed; Assignments</td>\n                <td>{complete_query}</td>\n              </tr>\n            </tbody>\n          </table>\n\n\n          <table className=\"table table-striped forth main_table mb-1\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">Declined; Queries</th>\n                <th>{declined_queries}</th>\n              </tr>\n            </thead>\n\n            <tbody className=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Admin Declined; Queries</td>\n                <td>{admin_declined_query}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\"> Customer Declined; Queries</td>\n                <td>{customer_declined_Query}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Customer Declined; Proposals</td>\n                <td>{customer_declined_proposal}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Customer Declined; Payment</td>\n                <td>{Customer_declined_payment}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"col-md-3 content_header\">\n\n          <table className=\"table table-striped fifth main_table mb-1\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">All Proposals</th>\n                <th>{allproposal}</th>\n\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped sixth main_table mb-1\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">Inprogress; Proposals</th>\n                <th>{InProgress}</th>\n              </tr>\n            </thead>\n            <tbody classNameName=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Inprogress; Preparation</td>\n                <td>{inprogress_preparation}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Inprogress; Acceptance</td>\n                <td>{inprogress_acceptance}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <table className=\"table table-striped seventh main_table mb-1\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">Accepted; Proposals </th>\n                <th>{accepted_proposals}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped eight main_table mb-1\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">Customer Declined; Proposals</th>\n                <th>{declined}</th>\n              </tr>\n            </thead>\n          </table>\n\n\n        </div>\n\n        <div className=\"col-md-3 content_header\">\n          <table className=\"table table-striped ninth main_table mb-1\">\n            <thead className=\"assignment_thead\">\n              <tr>\n                <th className=\"left_side\">All Assignments</th>\n                <th>{inprogress + complete + +(customer_declined_payment)}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped tenth main_table mb-1\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Inprogress; Assignments</th>\n                <th>{inprogress}</th>\n              </tr>\n            </thead>\n\n            <tbody classNameName=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Client Discussion</td>\n                <td>{client_discussion}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Draft Reports</td>\n                <td>{draft_report}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Final Discussion</td>\n                <td>{final_discussion}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Delivery of Final Reports</td>\n                <td>{final_report}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Awaiting Completion</td>\n                <td>{complete_inprocess}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <table className=\"table table-striped tenth main_table mb-1\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Completed; Assignments</th>\n                <th>{complete}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped tenth main_table mb-1\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Customer Declined; Payment</th>\n                <th>{customer_declined_payment}</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n\n\n        <div className=\"col-md-3 content_header\">\n\n          <table className=\"table table-striped twelvth main_table mb-1\">\n            <thead className=\"payment_thead\">\n              <tr>\n                <th className=\"left_side\">All Payments</th>\n                <th>{unpaid + paid}</th>\n              </tr>\n            </thead>\n          </table>\n          <table className=\"table table-striped thirteen main_table mb-1\">\n            <thead className=\"payment_thead2\">\n              <tr>\n                <th className=\"left_side\">Paid</th>\n                <th>{paid}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped thirteen main_table mb-1\">\n            <thead className=\"payment_thead2\">\n              <tr>\n                <th className=\"left_side\">Unpaid</th>\n                <th>{unpaid}</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n      </div>\n\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js",["1669","1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685","1686","1687","1688","1689","1690","1691","1692","1693","1694"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Select from \"react-select\";\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport EmailValidation from \"../../../components/Common/EmailValidation\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n\n});\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [nn, setNn] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [mcategory, setmcategory] = useState([]);\n  const [store, setStore] = useState([]);\n  const [subData, subCategeryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [custCate2, setCustcate2] = useState([])\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [categoryData, setCategoryData] = useState([])\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState([]);\n  const [emailPost, setEmailPost] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [valiEmailPost, setValiemailPost] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [invalidPost, setInvalidPost] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [wEmailPost, setWemailPost] = useState();\n  const [loading, setLoading] = useState(false);\n  const [emailError, setEmailError] = useState(null);\n  const [display, setDisplay] = useState(false);\n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  const [dd, setDd] = useState({\n    direct: [],\n    indirect: [],\n  });\n\n  var kk = []\n  var vv = []\n\n\n\n  const options = tax.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.details\n    }))\n\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n\n\n\n  useEffect(() => {\n    const getCategory = async () => {\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        if (res.data.code === 1) {\n          \n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n\n\n  useEffect(() => {\n    const getSubCategory = async () => {\n\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n\n        if (res.data.code === 1) {\n          setTax2(res.data.result)\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  // OnSubmit Function\n\n  const onSubmit = (value) => {\n   \n   \n    var categeryList = []\n    var categeryName = []\n    var categeryName = []\n    var kk = []\n    var parentCategoryName = []\n  \n    subData.map((i) => {\n   \n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n    categoryData.map((i) => {\n      kk.push(i.value)\n      parentCategoryName.push(i.label)\n    })\n   \n    if (custCate.length < 1) {\n      setError(\"Please select at least one value\")\n    }\n    else if (subData.length < 1) {\n\n      setError2(\"Please select at least one value\")\n    }\n    else if (invalid || wEmail || indNumError || posError.exits) {\n      setDisplay(false)\n    }\n\n    else {\n      setDisplay(true)\n      setLoading(true)\n    \n      let formData = new FormData();\n\n      formData.append(\"personal_email\", value.p_email);\n      formData.append(\"name\", value.p_name);\n      formData.append(\"phone\", value.p_phone);\n      formData.append(\"type\", \"tl\");\n      formData.append(\"cat_id\", categeryList)\n      formData.append(\"post_name\", value.post_name)\n      formData.append(\"email\", email)\n      formData.append(\"pcat_id\", kk)\n      formData.append(\"allpcat_id\", parentCategoryName)\n      formData.append(\"allcat_id\", JSON.stringify(dd))\n\n\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/AddTeamLead`,\n        data: formData,\n      })\n\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            setLoading(false)\n            Swal.fire({\n              \"title\": \"Success\",\n              \"html\": \"Team Leader created successfully.\",\n              \"icon\": \"success\"\n            })\n\n            history.goBack();\n          }\n          if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n\n        })\n        .catch((error) => {\n\n        });\n    }\n\n  };\n  var allData1 = {}\n  var dir = []\n  var indir = []\n  // Sub Category Function\n  const subCategory = (e) => {\n  \n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n  \n    e.map((i) => {\n\n      i.value < 8 ? dir.push(i.label) : indir.push(i.label)\n    })\n    // allData1 = e.map(v => ({\n    //   \"direct Tax\" : dir,\n    //   \"indirect Tax\" : indir\n    // }))\n    setDd({\n      direct: dir,\n      indirect: indir\n    })\n  }\n\n\n  // Category Function\n  const category = (v) => {\n\n    setCategoryData(v)\n    setNn((oldData) => {\n      return [...oldData, mcategory]\n    })\n    setError(\"\")\n    setCustcate(v)\n    v.map((val) => {\n      vv.push(val.value)\n      setmcategory(val.value);\n      setmcatname((oldData) => {\n        return [...oldData, val.label]\n      })\n      setStore(val.value)\n    })\n\n\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n       \n      }\n      else if (vv.includes(\"1\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n    }\n\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n\n  }\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digit should be enter\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n\n    }\n  }\n\n  //eamil onchange\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n  \n    if (e.target.value.length < 1) {\n      setWemail(\"\")\n    }\n  };\n\n\n  //email validaation with api\n  const emailValidation = (key) => {\n\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (email.match(validRegex)) {\n      setWemail(\"\");\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/validateregistration`,\n        data: formData,\n      })\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            setValiemail(response.data.result)\n            setInvalid('')\n          } else if (response.data.code === 0) {\n            setInvalid(response.data.result)\n            setValiemail('')\n          }\n        })\n        .catch((error) => {\n\n        });\n    }\n    else {\n      setWemail(\"invalid email\")\n    }\n\n  }\n \n  const checktlPost = (e) => {\n  setPostName(e.target.value)\n  let a = e.target.value;\n  let formData = new FormData();\n  formData.append(\"tlpost\", a)\n\n  axios({\n    method: \"POST\",\n    url : `${baseUrl}/tl/validateTLPost`,\n    data: formData,\n  })\n  .then(function (res) {\n    if(res.data.code === 1){\n      setposError({\n        available : \"Post Available\"\n      })\n    }\n    else{\n      setposError({\n        exits : \"Post already exits\"\n      })\n    }\n  })\n  }\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Add New Team Leader</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                    <label>Teamleader Post Name <span className=\"declined\">*</span></label>\n                      \n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name || posError.exits,\n                        })}\n                        onBlur={(e) => checktlPost(e)}\n                        name=\"post_name\"\n                        ref={register}\n                      />\n                    {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                    <label>Teamleader Post Email <span className=\"declined\">*</span></label>\n                    \n                   \n                    <EmailValidation\n                     setWemail = {setWemail}\n                      wEmail = {wEmail} \n                      invalid = {invalid}\n                       setEmailError = {setEmailError}\n                        setValiemail = {setValiemail} \n                        emailError = {emailError} \n                        setInvalid = {setInvalid}  \n                        setEmail2 = {setEmail} \n                        name=\"teamleader\"/>\n                        \n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } \n                     \n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Name <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        name=\"p_name\"\n                        ref={register}\n                      />\n\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Phone Number <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone ,\n                        })}\n                        name=\"p_phone\"\n                        ref={register}\n                        onChange={(e) => phoneHandler(e)}\n                         onBlur={phoneValidation}\n                      />\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n                    </div>\n                  </div>\n                </div>\n              \n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Category <span className=\"declined\">*</span></label>\n                      <Select isMulti options={options}\n                        className={error ? \"customError\" : \"\"}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        onChange={category}>\n                      </Select>\n\n\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Sub Category <span className=\"declined\">*</span></label>\n                      <Select isMulti options={options2}\n                        className={error2 ? \"customError\" : \"\"}\n                        onChange={subCategory}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value > 8\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        value={subData}>\n                      </Select>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-md-12\">\n                    <div class=\"form-group\">\n                      <label>Email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                        // onChange={(e) => emailHandler(e)}\n                        // onBlur={emailValidation}\n                      />\n                      {/* {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } */}\n                    </div>\n                  </div>\n                </div>\n                {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button> }\n              </form>\n            </div>\n            <div class=\"col-lg-2 col-xl-2 col-md-12\">\n\n            </div>\n\n            <Mandatory />\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n\n\n\n\n","/home/pooja/MazarsRepo/src/pages/Admin/Proposal/Proposal.js",["1695","1696","1697","1698"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\nimport AllProposalComponent from \"../AllProposalComponent/AllProposalComponent\";\nimport PendingForAcceptence from \"../../../components/PendingForAcceptence/PendingForAcceptence\";\nimport AcceptedProposal from \"../AcceptedProposal/AcceptedProposal\";\nimport DeclinedPropoal from \"../DeclinedProposal/DeclinedPropoal\";\n\nfunction Proposal(props) {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\n\n\n\n  useEffect(() => {\n    const getAllProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals`)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setAllProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    const getAcceptedProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?status1=2`)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setAcceptedProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    const getDeclinedProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?&status=6`)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setDeclinedProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    const getPendingForAcceptence = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?status1=1`)\n        .then((response) => {\n          \n          if (response.data.code === 1) {\n            setPendingProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          \n        });\n    };\n\n    getAllProposal();\n    getAcceptedProposal();\n    getDeclinedProposal();\n    getPendingForAcceptence();\n  }, []);\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Proposals ({allProposalCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Proposals ({pendingProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Accepted; Proposals ({acceptedProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Customer Declined; Proposals ({declinedProposalCount})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllProposalComponent />\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForAcceptence />\n          </TabPanel>\n\n          <TabPanel>\n            <AcceptedProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedPropoal />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n\n\n// const allProposal = (data) => {\n//   setAllProposalCount(data);\n// };\n\n// const pendingProposal = (data) => {\n//   setPendingProposalCount(data);\n// };\n\n// const acceptedProposal = (data) => {\n//   setAcceptedProposalCount(data);\n// };\n\n// const declinedProposal = (data) => {\n//   setDeclinedProposalCount(data);\n// };\n","/home/pooja/MazarsRepo/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js",["1699","1700","1701","1702","1703","1704","1705","1706","1707","1708","1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719","1720","1721"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Select from \"react-select\";\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport EmailValidation from \"../../../components/Common/EmailValidation\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  // p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n\n});\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [nn, setNn] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [mcategory, setmcategory] = useState([]);\n  const [store, setStore] = useState([]);\n  const [subData, subCategeryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [custCate2, setCustcate2] = useState([])\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [categoryData, setCategoryData] = useState([])\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [display, setDisplay] = useState(false);\n  const [teamleader, setTeamLeader] = useState([]);\n  const [tl, setTl] = useState([])\n  const [post1, setPost1] = useState([])\n  const [post_na, setPost_na] = useState()\n  const [tpEmail, setTpEmail] = useState('')\n  const [loading, setLoading] = useState(false);\n  const [emailError, setEmailError] = useState(null);\n  const [email2, setEmail2] = useState([]);\n  \n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  var kk = []\n  var vv = []\n  var post_name;\n  const options = tax.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.details\n    }))\n\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n  const teamleader1 = teamleader.map(v => (\n  {\n      \"value\": v.id,\n      \"label\": v.name\n    }))\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      \n        if (res.data.code === 1) {\n          setTeamLeader(res.data.result);\n        }\n      });\n    };\n    getTeamLeader();\n  }, []);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n     \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  // OnSubmit Function\n  const onSubmit = (value) => {\n\n    var categeryList = []\n    var categeryName = []\n    var categeryName = []\n    var kk = []\n\n    var parentCategoryName = []\n    subData.map((i) => {\n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n   \n    if (custCate.length < 1) {\n      setError(\"Please select at least one value\")\n    }\n    else if (subData.length < 1) {\n\n      setError2(\"Please select at least one value\")\n    }\n    else if (invalid || wEmail || indNumError) {\n      setDisplay(false)\n    }\n\n    else {\n\n      setLoading(true)\n    \n      let formData = new FormData();\n      formData.append(\"personal_email\", value.personal_email)\n      formData.append(\"name\", value.p_name);\n      formData.append(\"phone\", value.p_phone);\n      formData.append(\"tp_id\", tl);\n      formData.append(\"email\", email2);\n      formData.append(\"post_name\", value.post_name)\n      formData.append(\"cat_id\", mcategory);\n      formData.append(\"pcat_id\", categeryList);\n      formData.append(\"allpcat_id\", categoryData.label)\n      formData.append(\"allcat_id\", categeryName)\n      formData.append(\"type\", \"tp\");\n      formData.append(\"tlpost\", post_na)\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tp/AddTaxProfessional`,\n        data: formData,\n      })\n        .then(function (response) {\n        \n          if (response.data.code === 1) {\n            setLoading(false)\n    \n           \n\n            Swal.fire({\n              \"title\": \"success\",\n              \"html\": \"Tax Professional Created Successfully\",\n              \"icon\": \"success\"\n            })\n \n            history.goBack();\n            \n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n        })\n        .catch((error) => {\n       \n        });\n    };\n  }\n\n\n  // Sub Category Function\n  const subCategory = (e) => {\n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n  }\n\n\n  // Category Function\n  const category = (v) => {\n\n    setCategoryData(v)\n    setNn((oldData) => {\n      return [...oldData, mcategory]\n    })\n    setError(\"\")\n    setCustcate(v)\n    setStore(v.value)\n    vv.push(v.value);\n    setmcategory(v.value)\n    setmcatname((oldData) => {\n      return [...oldData, v.label]\n    })\n\n\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n\n      }\n      else if (vv.includes(\"1\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n    }\n\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n\n  }\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n    \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digit should be enter\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n\n    }\n  }\n\n \n  // Tl Function \n  const tlFun = (e) => {\n    var a;\n \n    teamleader.filter((p) => {\n\n      if (p.id == e) {\n      \n        setTpEmail(p.email)\n        setTl(p.id)\n        setPost_na(p.post_name)\n        a = p.post_name\n       \n      }\n    })\n\n    \n  }\n\n  const checktlPost = (e) => {\n    setPostName(e.target.value)\n    let a = e.target.value;\n    let formData = new FormData();\n    formData.append(\"tlpost\", a)\n  \n    axios({\n      method: \"POST\",\n      url : `${baseUrl}/tl/validateTLPost`,\n      data: formData,\n    })\n    .then(function (res) {\n      if(res.data.code === 1){\n        setposError({\n          available : \"Post Available\"\n        })\n      }\n      else{\n        setposError({\n          exits : \"Post already exits\"\n        })\n      }\n    })\n    }\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Add New Tax Professionals</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Teamleader post name <span className=\"declined\">*</span></label>\n\n                      <select\n                        name=\"p_teamleader\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_teamleader,\n                        })}\n                        onChange={(e) => tlFun(e.target.value)}\n                        ref={register}\n                      >\n                        <option value=\"\">--select--</option>\n                        {teamleader.map((p) =>\n                        (\n\n                          <option key={p.Id} value={p.id}>\n                            {p.post_name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_teamleader && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_teamleader.message}\n                        </div>\n                      )}\n\n                    </div>\n\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label> Teamleader post email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"email\"\n                        name=\"post_email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_email,\n                        })}\n                        disabled\n                        defaultValue={tpEmail}\n                       \n                        ref={register}\n\n                      />\n\n\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>TP post name <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"post_name\"\n                        onBlur={(e) => checktlPost(e)}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_name,\n                        })}\n                        ref={register}\n                      />\n {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n\n\n                      <label> TP post email <span className=\"declined\">*</span></label>\n                      \n                       <EmailValidation\n                     setWemail = {setWemail}\n                      wEmail = {wEmail} \n                      invalid = {invalid}\n                       setEmailError = {setEmailError}\n                        setValiemail = {setValiemail} \n                        emailError = {emailError} \n                        setInvalid = {setInvalid}  \n                        setEmail2 = {setEmail2}\n                        name = \"taxprofessional\" />\n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      }\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Category <span className=\"declined\">*</span></label>\n                      <Select options={options}\n                        className={error ? \"customError\" : \"\"}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n                        onChange={category}>\n                      </Select>\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Sub Category <span className=\"declined\">*</span></label>\n                      <Select isMulti options={options2}\n                        className={error2 ? \"customError\" : \"\"}\n                        onChange={subCategory}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value > 8\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        value={subData}>\n\n                      </Select>\n\n                    </div>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Phone Number <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone,\n                        })}\n                        name=\"p_phone\"\n                        ref={register}\n                        onChange={(e) => phoneHandler(e)}\n                        onBlur={phoneValidation}\n                      />\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n                    </div>\n                  </div>\n                 \n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Name <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        name=\"p_name\"\n                        ref={register}\n                      />\n\n                    </div>\n                  </div>\n\n\n                </div>\n\n                <div className=\"row\">\n\n                <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n\n\n                      <label> Email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        name=\"personal_email\"\n                        ref={register}\n\n\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_email,\n                        })}\n                      />\n\n                    </div>\n                  </div>\n\n\n                                 </div>\n                {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button> }\n              </form>\n            </div>\n            <div class=\"col-lg-2 col-xl-2 col-md-12\">\n            </div>\n\n            <Mandatory />\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\nexport default AddNew;","/home/pooja/MazarsRepo/src/pages/Admin/QueriesRecevied/QueriesRecevied.js",["1722","1723","1724","1725","1726","1727","1728","1729","1730","1731","1732","1733"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\nimport moment from 'moment';\nfunction QueriesRecevied(props) {\n \n\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [accept, setAccept] = useState();\n  const [tlName2, setTlname] = useState();\n  const[tp22, setTp22] = useState();\n  const [tpStatus, setTpstatus] = useState();\n  const [declined2, setDeclined2] = useState();\n  const [declinedStatus, setDeclinedStatus] = useState(false)\n  const [finalDate, setFinalDate] = useState()\n  const [qstatus, setqStatus] = useState();\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\n       \n        if (res.data.code === 1) {\n          \n         setqStatus(res.data.result[0].query_status)\n          setTpstatus(res.data.result[0].tp_status);\n          setAccept(res.data.result[0].query_status)\n          setTlname(res.data.result[0].tlname);\n          setTp22(res.data.result[0].tpname);\n          if(res.data.history_queries[0] === undefined){\n\n          }\n          else{\n            setDisplayHistory({\n              tlname: res.data.proposal_queries,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n            let a = moment(res.data.result[0].final_date);\n            let b = moment(res.data.history_queries[0].acpt_reject_time)\n            let c = a.diff(b)\n            let d = moment.duration(c)\n            let finalDate = d.days() + 1;\n           setFinalDate(finalDate)\n          }\n         \n         if(res.data.result[0].status ==\"Declined Query\"){\n        \n         let a = res.data.result[0].declined_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\n           setDeclined2(a)\n          setDeclinedStatus(true)\n         }\n        \n          if (res.data.result) {\n            if (res.data.result[0].name == null) {\n             \n            }\n            else {\n              setSubmitData(res.data.result);\n            }\n          }\n          \n          if (res.data.additional_queries) {\n            setDisplaySpecific(res.data.additional_queries);\n          }\n          if (res.data.payment_detail) {\n            setPaymentDetails(res.data.payment_detail);\n          }\n          if (res.data.feedback_detail) {\n            setFeedback(res.data.feedback_detail);\n          }\n          if (res.data.result[0].assign_no) {\n            setAssingmentNo(res.data.result[0].assign_no);\n          }\n\n          if (res.data.reports) {\n            setReports(res.data.reports);\n          }\n         \n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n         \n          \n          \n          try {\n           \n            var myYear = JSON.parse(assementItem);\n           \n            setYear(myYear);\n          } catch (e) {\n           \n          }\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            \n            setPurpose(myPurpose);\n           \n          } catch (e) {\n           \n          }\n         \n          if (res.data.proposal_queries.length > 0) {\n           \n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n            });\n          \n           \n          }\n\n          if (res.data.assignment.length > 0) {\n          \n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          // if (res.data.history_queries.length > 0) {\n          //   setDisplayHistory({\n          //     tlname: res.data.history_queries[0].tlname,\n          //     date_of_allocation:\n          //       res.data.history_queries[0].date_of_allocation,\n          //   });\n          // }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n\n\n        }\n      });\n    };\n  //  getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  // const getQuery = () => {\n  //  if(assingNo === undefined){\n  //    return false;\n  //  }\n  //  else{\n  //   axios\n  //   .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n  //   .then((res) => {\n     \n  //     if (res.data.code === 1) {\n  //       setDisplayQuery(res.data.result);\n  //     }\n  //   });\n  //  }\n  // };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"schedule\">\n            <h3>Query Detail</h3>\n          </div>\n        </div>\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n            <div\n              class=\"card-header\"\n              id=\"headingOne\"\n              style={{ padding: \".5rem .1rem\" }}\n            >\n              <h2 class=\"mb-0 query ml-3\">\n                <Link\n                  to={{\n                    pathname: `/admin/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n                 {/* <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n              \n                Go Back\n              </button> */}\n              </h2>\n            </div>\n\n            {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                qstatus={qstatus}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n                accept = {accept}\n                tlName2={tlName2}\n                tp22 = {tp22}\n                tpStatus={tpStatus}\n                declined2={declined2}\n                declinedStatus={declinedStatus}\n                finalDate={finalDate}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n","/home/pooja/MazarsRepo/src/pages/Admin/QueryAssingment/QueryAssingment.js",["1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, Redirect } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Schema = yup.object().shape({\n  p_taxprof: yup.string().required(\"\"),\n  p_expdeldate: yup.string().required(\"\"),\n});\n\n\nfunction QueryAssingment(props) {\n  let history22 = useHistory()\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [taxLeaderDisplay, setTaxLeaderDisplay] = useState([]);\n  const [teamID, setTeamID] = useState(null);\n  const [teamName, setTeamName] = useState(\"\");\n  const [query, setQuery] = useState(true);\n\n  const [expectedDate, setExpectedDate] = useState(\"\");\n\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const tlkey = window.localStorage.getItem(\"tlkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n  });\n\n  const { queryNo, timelines, custId } = queryData;\n\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n\n  useEffect(() => {\n    getTaxLeader();\n    getQueryData();\n  }, []);\n\n  const getTaxLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      \n      if (res.data.code === 1) {\n        setTaxLeaderDisplay(res.data.result);\n      }\n    });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      \n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n        });\n        // expectedDeliveryDate(res.data.result[0].Timelines);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/CheckIfAssigned?assignno=${queryNo}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setQuery(false);\n          setHideQuery({\n            name: res.data.meta[0].name,\n            timeline: res.data.meta[0].timeline,\n            date_allocation: res.data.meta[0].date_allocation,\n            expdeliverydate: res.data.meta[0].expdeliverydate,\n          });\n        }\n      });\n  };\n\n  const handleChange = (e) => {\n   \n    setTeamID(e.target.value);\n    var value = taxLeaderDisplay.filter(function (item) {\n      return item.id == e.target.value;\n    });\n    \n    setTeamName(value[0].name);\n  };\n\n  const onSubmit = (value) => {\n    setLoading(true)\n  \n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", teamID);\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"admin\");\n    formData.append(\"types\", \"tl\");\n    formData.append(\"name\", teamName);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", value.p_expdeldate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddQueryAssignment`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Query assigned successfully.\"\n          Alerts.SuccessNormal(variable)\n        //  getQuery();\n          // props.history.push({\n          //   pathname: `/admin/queriestab`,\n          //   index: 2,\n          // });\n          history22.push(\"/admin/queriestab\")\n        } if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  const expectedDeliveryDate = (key) => {\n  \n\n    const d = new Date();\n\n    if (key == \"Urgent, (4-5 Working Days)\") {\n      const d2 = new Date(d.getTime() + 432000000);\n      const new_date =\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\n      // d2.getDate() + \"/\" + (d2.getMonth() + 1) + \"/\" + d2.getFullYear();\n\n     \n      setExpectedDate(new_date);\n    } else if (key == \"Regular (10-12 Working Days)\") {\n      const d2 = new Date(d.getTime() + 1296000000);\n      const new_date =\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\n     \n      setExpectedDate(new_date);\n    }\n  };\n\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <Link\n                to={{\n                  pathname: `/admin/queriestab`,\n                  index: 1,\n                }}\n              >\n                <button class=\"btn btn-success ml-3\">\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\n                  Go Back\n                </button>\n              </Link>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h2>Query Allocation</h2>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <div class=\"row mt-3\">\n                  <div class=\"col-md-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <table class=\"table\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">Query No.</th>\n                            <th scope=\"col\">Team Leaders<span className=\"declined\">*</span></th>\n                            <th scope=\"col\">Expected Timeline</th>\n                            <th scope=\"col\">Exp. Delivery Date<span className=\"declined\">*</span></th>\n                            <th scope=\"col\">Action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {query ? (\n                            <tr>\n                              <th scope=\"row\">{queryNo}</th>\n                              <td>\n                                <select\n                                  className={classNames(\"form-control\", {\n                                    \"is-invalid\": errors.p_taxprof,\n                                  })}\n                                  name=\"p_taxprof\"\n                                  ref={register}\n                                  onChange={(e) => handleChange(e)}\n                                >\n                                  <option value=\"\">-select-</option>\n                                  {taxLeaderDisplay.map((p, index) => (\n                                    <option key={index} value={p.id}>\n                                      {p.postname}\n                                    </option>\n                                  ))}\n                                </select>\n                                {errors.p_taxprof && (\n                                  <div className=\"invalid-feedback\">\n                                    {errors.p_taxprof.message}\n                                  </div>\n                                )}\n                              </td>\n\n                              <td>\n                                <input\n                                  type=\"text\"\n                                  ref={register}\n                                  name=\"p_timelines\"\n                                  value={timelines}\n                                  class=\"form-control\"\n                                />\n                              </td>\n                              <td>\n                                <input\n                                  type=\"date\"\n                                  ref={register}\n                                  name=\"p_expdeldate\"\n                                  className={classNames(\"form-control\", {\n                                    \"is-invalid\": errors.p_expdeldate,\n                                  })}\n                                  min={item}\n                                />\n                                {errors.p_expdeldate && (\n                                  <div className=\"invalid-feedback\">\n                                    {errors.p_expdeldate.message}\n                                  </div>\n                                )}\n                              </td>\n\n                              <td>\n                                <button type=\"submit\" class=\"btn btn-success\">\n                                  Assign\n                                </button>\n                              </td>\n                            </tr>\n                          ) : (\n                            <tr>\n                              <th scope=\"row\">{queryNo}</th>\n                              <td>\n                                <select class=\"form-control w-75 p-0\" disabled>\n                                  <option>{hideQuery.name}</option>\n                                </select>\n                              </td>\n\n                              <td>\n                                <input\n                                  type=\"text\"\n                                  ref={register}\n                                  name=\"p_timelines\"\n                                  class=\"form-control\"\n                                  value={hideQuery.timeline}\n                                  disabled\n                                />\n                              </td>\n                              <td>\n                                <input\n                                  type=\"text\"\n                                  ref={register}\n                                  name=\"p_expdeldate\"\n                                  class=\"form-control\"\n                                  value={hideQuery.expdeliverydate}\n                                  disabled\n                                />\n                              </td>\n                              <td>\n                                <button class=\"btn btn-success\" disabled>\n                                  Assigned\n                                </button>\n                              </td>\n                            </tr>\n                          )}\n                        </tbody>\n                      </table>\n                    </form>\n                    <Mandatory />\n\n                  </div>\n                </div>\n              </>\n          }\n\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/EditTL.js",["1750","1751","1752","1753","1754","1755","1756","1757","1758","1759","1760","1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779","1780","1781","1782","1783","1784","1785","1786","1787","1788","1789","1790","1791","1792","1793","1794","1795","1796","1797"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from 'sweetalert2'\nimport { useParams, useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Reset from \"./Reset\";\nimport { Form, Input, Button } from \"antd\";\nimport Select from \"react-select\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from \"reactstrap\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\n\nfunction EditTL() {\n  const { Option } = Select;\n  const { id } = useParams();\n  \n  const alert = useAlert();\n  let history = useHistory();\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n  const [mcategory, setmcategory] = useState([]);\n  const [mdata, setmdata] = useState([]);\n  const [mdataName, setMdataname] = useState([]);\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [display, setDisplay] = useState(false);\n  const [subData, subCategeryData] = useState([])\n  const [categoryData, setCategoryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [custCate2, setCustcate2] = useState([])\n  const [loading, setLoading] = useState(false);\n const [showDel, setShowDel] = useState(null)\n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [dd, setDd] = useState({\n    direct: [],\n    indirect: [],\n  });\n\n  var kk = []\n  var vv = []\n  var a;\n  var subdefval;\n  var dirvalue = []\n  var indirvalue = []\n  var allsubcatvalue = []\n  \n  const options = tax.map(d => ({\n    \"value\": d.id,\n    \"label\": d.details\n  }))\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n\n  useEffect(() => {\n    getTeamLeader();\n  }, [id]);\n\n  useEffect(() => {\n    axios.get(`${baseUrl}/tl/AddTeamLead`).then((res) => {\n      if (res.data.code === 1) {\n       \n      }\n      else {\n       \n      }\n    })\n  }, [])\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader?id=${id}`).then((res) => {\n \n      if (res.data.code === 1) {\n        setValue(res.data.result[0]);\n        setStore(res.data.result[0].pcat_id);\n        setShowDel(res.data.result[0].is_delete)\n       \n      }\n    });\n  };\n \n  const data1 = value.name;\n  const data2 = value.personal_email;\n  const data3 = value.phone;\n  const data4 = value.allpcat_id;\n  const data5 = value.allcat_id;\n  var data6 = value.post_name;\n  var data7 = value.email;\n  const data8 = value.cat_id;\n  const data9 = value.pcat_id;\n   \n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n\n  const onFinish = (value) => {\n\n\n    var categeryList = []\n    var categeryName = []\n    var kk = []\n    var parentCategoryName = []\n    subData.map((i) => {\n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n    categoryData.map((i) => {\n      kk.push(i.value)\n      parentCategoryName.push(i.label)\n    })\n\n    if (custCate.length < 1 && data4.length < 1) {\n      setError(\"Please select at least one value\")\n    }\n    else if (subData.length < 1 && data5.length < 1) {\n      setError2(\"Please select at least one value\")\n    }\n    else if (invalid || wEmail || indNumError || posError.exits) {\n      setDisplay(false)\n    }\n    else {\n      setLoading(true)\n      setDisplay(true)\n      let formData = new FormData();\n      formData.append(\"personal_email\", value.email);\n      formData.append(\"name\", value.name);\n      formData.append(\"phone\", value.phone);\n     {email.length > 1 ? \n      formData.append(\"email\", email) :\n      formData.append(\"email\", data7)}\n      {postValue.length > 1 ?  \n        formData.append(\"post_name\", postValue) :\n        formData.append(\"post_name\", data6)}\n     {categeryList.length > 1 ?  formData.append(\"cat_id\", categeryList) : \n     formData.append(\"cat_id\", data8) }\n     {kk.length === 0 ?  formData.append(\"pcat_id\", data9) : \n     formData.append(\"pcat_id\", kk) }\n      { parentCategoryName.length > 0 ?\n      formData.append(\"allpcat_id\", parentCategoryName) : \n      formData.append(\"allpcat_id\", data4) } \n     { categeryName.length > 0 ? formData.append(\"allcat_id\", JSON.stringify(dd)) : \n     formData.append(\"allcat_id\", data5) }\n      formData.append(\"id\", id);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/updateTeamLeader`,\n        data: formData,\n      })\n        .then(function (response) {\n       \n          if (response.data.code === 1) {\n            setLoading(false)\n            Swal.fire({\n              \"title\": \"Success\",\n              \"html\": \"Team Leader Updated Successfully\",\n              \"icon\": \"success\"\n            })\n            history.goBack();\n         \n           \n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n       \n        })\n        .catch((error) => {\n         \n        });\n    }\n  };\n\n\n\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digit should be enter\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n      \n    }\n  }\n  var allData1 = {}\n  var dir = []\n  var indir = []\n\n  // Sub Category Function\n  const subCategory = (e) => {\n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n    e.map((i) => {\n\n      i.value < 8 ? dir.push(i.label) : indir.push(i.label)\n    })\n    setDd({\n      direct: dir,\n      indirect: indir\n    })\n  }\n\n\n  // Category Function\n  const category = (v) => {\n   \n    setCategoryData(v)\n\n    setError(\"\")\n    setCustcate(v)\n\n    v.map((val) => {\n      vv.push(val.value)\n      setmcategory((oldData) => {\n        return [...oldData, val.value]\n      })\n      setmcatname((oldData) => {\n        return [...oldData, val.label]\n      })\n      setStore(val.value)\n    })\n\n\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n      \n      }\n      else if (vv.includes(\"1\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n    }\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n  }\n\n //eamil onchange\n const emailHandler = (e) => {\n   data7 = e.target.value;\n  setEmail(e.target.value);\n \n  if (e.target.value.length < 1) {\n    setWemail(\"\")\n  }\n};\n\n\n//email validaation with api\nconst emailValidation = (key) => {\n\n  var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (email.match(validRegex)) {\n    setWemail(\"\");\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"type\", 1);\n    formData.append(\"id\", id)\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/validateEditRegistration`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setValiemail(response.data.result)\n          setInvalid('')\n        } else if (response.data.code === 0) {\n          setInvalid(response.data.result)\n          setValiemail('')\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n  else {\n    setWemail(\"invalid email\")\n  }\n}\nvar e = 1;\nconst defValue = () => {\n  const data55 = data4.split(\",\")\n \n   a = data55.map((i => ({\n    \"value\" : ++e,\n    \"label\" : i\n  }) ))\n\n\n}\nconst defSubValue = () => {\n var dir1;\n var dir2;\n var kk = []\n var d = 3;\n var ind = 9;\n\n var subcatgerydefvalue = JSON.parse(value.allcat_id);\n indirvalue = subcatgerydefvalue.indirect;\n dirvalue = subcatgerydefvalue.direct;\n dirvalue.map((i) => {\n   allsubcatvalue.push(i)\n })\n indirvalue.map((o) => {\n   allsubcatvalue.push(o)\n })\n \n dir1 = subcatgerydefvalue.direct.map((i => ({\n  \"value\" : ++d,\n  \"label\" : i\n}) ))\ndir2 = subcatgerydefvalue.indirect.map((i => ({\n  \"value\" : ++ind,\n  \"label\" : i\n}) ))\nsubdefval = [...dir1, ...dir2]\n\n}\n\n\nif(data4 != undefined){\n  defValue();\n}\nif(data5 != undefined){\n  defSubValue();\n}\nconst checktlPost = (e) => {\n  setPostName(e.target.value)\n  data6 = e.target.value;\n  let a = e.target.value;\n  let formData = new FormData();\n  formData.append(\"tlpost\", a)\n  formData.append(\"id\", id )\n  axios({\n    method: \"POST\",\n    url : `${baseUrl}/tl/validateTLEditPost`,\n    data: formData,\n  })\n  .then(function (res) {\n    if(res.data.code === 1){\n      setposError({\n        available : \"Post Available\"\n      })\n    }\n    else{\n      setposError({\n        exits : \"Post already exits\"\n      })\n    }\n  })\n  }\n const tlName22 = (e) => {\n   \n   data6 = e.target.value\n }\n const del = (e) => {\n   Swal.fire({\n    title: \"Are you sure?\",\n    text: \"It will permanently deleted !\",\n    type: \"warning\",\n    showCancelButton : true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, delete it!\",\n   }).then((result) => {\n    if (result.value) {\n      deleteCliente(id);\n    }\n  });\n }\n const deleteCliente = (id) => {\n  axios\n    .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n    .then(function (response) {\n      \n      if (response.data.code === 1) {\n        Swal.fire(\"Teamleader has been deleted successfully\");\n        history.goBack();\n        getTeamLeader();\n      } else {\n        Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        history.goBack();\n      }\n\n    })\n    .catch((error) => {\n      \n    });\n};\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex justify-content-between\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Team Leader</h4>\n            </div>\n            <div>\n             {showDel == \"0\" ?  <button className=\"btn btn-danger\" onClick={(e) => del(e)}>Delete</button> : \"\"}\n              </div>\n          </div>\n        </CardHeader>\n\n        {!data1 ? (\n          <CardHeader>loading ...</CardHeader>\n        ) : (\n          <CardHeader>\n            <div class=\"row mt-3\">\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                <Form\n                autoComplete=\"off\"\n                  name=\"basic\"\n                  initialValues={{\n                    name: `${data1}`,\n                    email: `${data2}`,\n                    phone: `${data3}`,\n                    category: `${data4}`,\n                    sub_category: `${data5}`,\n                  }}\n                  onFinish={onFinish}\n                >\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      <label>Teamleader Post Name <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_name\"\n                          onBlur={(e) => checktlPost(e)}\n                          defaultValue={data6}\n                         disabled = {showDel == \"1\" ? true : \"\"}\n                          onChange = {(e) => tlName22(e)}\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_name || posError.exits,\n                          })}\n                        />\n                          {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      <label>Teamleader Post Email <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_email\"\n                          onBlur={(e) => emailValidation(e)}\n                          disabled = {showDel == \"1\" ? true : \"\"}\n                          defaultValue={data7}\n                          onChange={(e) => emailHandler(e)}\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_email,\n                          })}\n                        />\n                                              {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } \n                      </div>\n                    </div>\n                  </div>\n\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"name\">\n                          <Input\n                       required\n                           className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_name,\n                          })} />\n                        </Form.Item>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone  <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"phone\">\n                          <Input\n                           className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_phone || indNumError || numExist,\n                          })}\n                            onChange={(e) => phoneHandler(e)}\n                            onBlur={phoneValidation}\n                             />\n                        </Form.Item>\n                      </div>\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> : <>\n                        {\n                          numAvail ?\n                            <p className=\"completed\"> {numAvail}\n                            </p>\n                            :\n                            <p className=\"declined\">{numExist}</p>\n                        }\n                      </>}\n\n                    </div>\n                  </div>\n\n                \n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category <span className=\"declined\">*</span></label>\n                        <div class=\"form-group\">\n\n                          <Select isMulti options={options}\n                            defaultValue={a} onChange={category}\n                            styles={{\n                              option: (styles, { data }) => {\n                                return {\n                                  ...styles,\n                                  color: data.value == 2\n                                    ? \"blue\"\n                                    : \"green\"\n                                };\n                              },\n                              multiValueLabel: (styles, { data }) => ({\n                                ...styles,\n                                color: data.value  == 2\n                                    ? \"blue\"\n                                    : \"green\"\n                              }),\n                            }}\n                           \n                          >\n                          </Select>\n                         \n\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category <span className=\"declined\">*</span></label>\n                        <Select isMulti options={options2}\n                      onChange={subCategory}\n                            defaultValue = {subdefval}\n                            styles={{\n                              option: (styles, { data }) => {\n                                return {\n                                  ...styles,\n                                  color: data.value > 8\n                                    ? \"green\"\n                                    : \"blue\"\n                                };\n                              },\n                              multiValueLabel: (styles, { data }) => ({\n                                ...styles,\n                                color: data.value > 8\n                                    ? \"green\"\n                                    : \"blue\"\n                              }),\n                            }}\n                          >\n                          </Select>\n                        {/* <Select isMulti options={options2}\n                          onChange={subCategory} \n                          value={subData}  \n                          defaultValue={subdefval}>\n                        </Select> */}\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Email <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"email\">\n                          <Input\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.email,\n                          })}\n                        //  onBlur={emailValidation} \n                       //  onChange={(e) => emailHandler(e)}\n                          />\n                        </Form.Item>\n                        {/* {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } */}\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                        <Form.Item>\n                          <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                          </Button>\n                        </Form.Item>  }\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </CardHeader>\n        )}\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTL;\n","/home/pooja/MazarsRepo/src/pages/Admin/QueriesTab/QueriesTab.js",["1798","1799","1800","1801","1802"],"import React, { useState, useEffect, useLayoutEffect , createContext} from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport PendingForAllocation from \"../../../components/PendingForAllocation/PendingForAllocation\";\nimport PendingForProposals from \"../../../components/PendingForProposals/PendingForProposals\";\nimport DeclinedQueries from \"../../../components/DeclinedQueries/DeclinedQueries\";\nimport AllQueriesData from \"../../../components/AllQueriesData/AllQueriesData\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\nfunction QueriesTab(props) {\n  \n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [allData, setAllData] = useState()\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n  const [inprogressAllocation, setInprogressAllocation] = useState();\n\n\n  useEffect(() => {\n    CountAllQuery();\n    CountInprogressAllocation();\n    CountInprogressProposal();\n    CountDeclined();\n  }, []);\n\n\n  const CountAllQuery = (data) => {\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setAllQueriesCount(res.data.result.length);\n        setAllData(res.data.result);\n      }\n    });\n  };\n\n  const CountInprogressAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setInprogressAllocation(res.data.result.length);\n      }\n    });\n  };\n\n  const CountInprogressProposal = () => {\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setPendingProposalCount(res.data.result.length);\n      }\n    });\n  };\n\n  const CountDeclined = () => {\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setDeclined(res.data.result.length);\n      }\n    });\n  };\n\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n    \n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Queries ({allQueriesCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Allocation ({inprogressAllocation})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Inprogress; Proposals ({pendingProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Declined Queries ({declined})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllQueriesData allData={allData}/>\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForAllocation />\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForProposals />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedQueries />\n          </TabPanel>\n        </Tabs>\n      </div>\n     \n    </Layout>\n  );\n}\n\nexport default QueriesTab;","/home/pooja/MazarsRepo/src/pages/Admin/EditTP/EditTP.js",["1803","1804","1805","1806","1807","1808","1809","1810","1811","1812","1813","1814","1815","1816","1817","1818","1819","1820","1821","1822","1823","1824","1825","1826","1827","1828","1829","1830","1831","1832","1833","1834","1835","1836","1837","1838","1839","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858"],"import React, { useState, useEffect , useRef} from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nimport { Form, Input, Button } from \"antd\";\nimport Select from \"react-select\";\n\nimport { Spinner } from \"reactstrap\";\nimport Swal from \"sweetalert2\";\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\n\nfunction EditTP() {\n  const { Option } = Select;\n  const { id } = useParams();\n  const history = useHistory();\n  const alert = useAlert();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n  const [mcategory, setmcategory] = useState([]);\n  const [mdata, setmdata] = useState([]);\n  const [mdataName, setMdataname] = useState([]);\n  const [numExist, setNumExist] = useState(null)\n  const [phone, setPhone] = useState('');\n  const [numAvail, setNumAvail] = useState(null)\n  const [indNumError, setIndNumError] = useState(null)\n  const [postValue, setPostName] = useState([]);\n  const [email, setEmail] = useState('');\n  const [valiEmail, setValiemail] = useState(null)\n  const [invalid, setInvalid] = useState(null)\n  const [wEmail, setWemail] = useState();\n  const [display, setDisplay] = useState(false);\n  const [subData, subCategeryData] = useState([])\n  const [categoryData, setCategoryData] = useState([])\n  const [custCate, setCustcate] = useState([])\n  const [mcatname, setmcatname] = useState([]);\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [custCate2, setCustcate2] = useState([])\n  const [teamleader, setTeamLeader] = useState([]);\n  const [tl, setTl] = useState([])\n  const [post1, setPost1] = useState([])\n  const [show, setShow] = useState([])\n  const [post_na, setPost_na] = useState()\n  const [loading, setLoading] = useState(false);\n  const [showDel, setShowDel] = useState(null)\n  const [posError, setposError] = useState({\n    available : '',\n    exits : ''\n  });\n  const selectInputRef = useRef();\n  const selectInputRef2 = useRef();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  var kk = []\n  var vv = []\n  var a;\n  var subdefval;\n  var dirvalue = []\n  var indirvalue = []\n  var allsubcatvalue = []\n  var vv = []\n  const options = tax.map(d => ({\n    \"value\": d.id,\n    \"label\": d.details\n  }))\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n\n\n \n\n  \n  var data1 = value.name;\n  var data2 = value.personal_email;\n  var data3 = value.phone;\n  var data4 = {\n    \"value\" : value.allpcat_id,\n    \"label\" : value.allpcat_id\n  }\n  var data5 = value.allcat_id;\n  var data6 = value.post_name;\n  var data7 = value.email;\n  var data8 = value.cat_id;\n  var data9 = value.pcat_id\n  var data10 = value.tl_id\n  var data11 = value.tl_name\n  var postEmmail = value.tl_post_email;\n \n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n  useEffect(() => {\n    getTutorial(id);\n  }, [id]);\n\n  const getTutorial = (id) => {\n   axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setValue(res.data.result[0]);\n          setStore(res.data.result[0].pcat_id);\n          setShowDel(res.data.result[0].is_delete)\n          categoryData(res.data.result[0].allcat_id)\n        }\n      })\n      .catch((e) => {\n     \n      });\n  };\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n  const onFinish = (value) => {\n\n\n    var categeryList = []\n    var categeryName = []\n    var kk = []\n    var parentCategoryName = []\n    subData.map((i) => {\n      categeryList.push(i.value)\n      categeryName.push(i.label)\n    })\n   \n    if (custCate.length < 1 && data4.length < 1) {\n      setError(\"Please select at least one value\")\n    }\n    else if (subData.length < 1 && data5.length < 1) {\n\n      setError2(\"Please select at least one value\")\n    }\n    else if (invalid || wEmail || indNumError) {\n      setDisplay(false)\n    }\n\n    else {\n      setDisplay(true)\n     setLoading(true)\n      let formData = new FormData();\n      formData.append(\"personal_email\", value.email);\n      formData.append(\"name\", value.name);\n      formData.append(\"phone\", value.phone);\n    \n      formData.append(\"tp_id\", data10);\n      {email.length > 1 ? \n        formData.append(\"email\", email) :\n        formData.append(\"email\", data7)}\n        {postValue.length > 1 ?  \n          formData.append(\"post_name\", postValue) :\n          formData.append(\"post_name\", data6)}\n      // {\n      //   categeryList.length > 1 ? formData.append(\"pcat_id\", store) :\n      //   formData.append(\"pcat_id\", data8)\n      // }\n      {\n        categeryList.length === 0 ? formData.append(\"pcat_id\", data9)\n        : formData.append(\"pcat_id\", store)\n      }\n     \n\n\n      {\n        categoryData.length === 0 ? formData.append(\"cat_id\", data8) :\n        formData.append(\"cat_id\", categeryList)\n      }\n\n\n      {\n        categoryData.length === 0 ?\n        formData.append(\"allpcat_id\", data4.label) :\n        formData.append(\"allpcat_id\", categoryData.label)\n      }\n\n      {\n        categeryName.length > 0 ? formData.append(\"allcat_id\",categeryName) :\n        formData.append(\"allcat_id\", data5)\n      }\n      formData.append(\"id\", id);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tp/updateTP`,\n        data: formData,\n      })\n        .then(function (response) {\n        \n          if (response.data.code === 1) {\n           setLoading(false)\n          \n            Swal.fire({\n              \"title\": \"Success\",\n              \"html\": \"Tax Professional details updated successfully\",\n              \"icon\": \"success\"\n            })\n            history.goBack();\n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n            response.data.message.map((i) => {\n              Swal.fire({\n                \"title\": \"Error\",\n                \"html\": \"Something went wrong, please try again.\",\n                \"icon\": \"error\"\n              })\n            })\n            history.goBack();\n          }\n       \n        })\n        .catch((error) => {\n         \n        });\n    }\n  };\n\n\n\n  // Phone onChange \n  const phoneHandler = (e) => {\n\n    if (isNaN(e.target.value)) {\n      setIndNumError(\"\")\n      setNumAvail(\"\");\n      setNumExist('Please enter number only')\n      e.target.value = \"\"\n      setPhone(\"\")\n    }\n    else {\n      setNumAvail(\"\");\n      setNumExist(\"\");\n      setPhone(e.target.value)\n    }\n  };\n\n\n  // Phone Validation function \n  const phoneValidation = () => {\n   \n    if (phone.length > 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 10 digit should be enter\")\n    }\n    else if (phone.length < 10) {\n     \n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Minimum 10 digit should be enter\")\n    }\n    else if (phone.length > 15) {\n      setNumAvail(\"\")\n      setNumExist(\"\")\n      setIndNumError(\"Maximum 15 digit should be enter\")\n    }\n\n    else {\n      setIndNumError(\"\")\n     \n    }\n  }\n\n  // Sub Category Function\n  const subCategory = (e) => {\n    subCategeryData(e)\n    setCustcate2(e)\n    setError2(\"\")\n  }\n\n\n  // Category Function\n  const category = (v) => {\n    \n    selectInputRef.current.select.clearValue();\n   \n    setCategoryData(v)\n    setError(\"\")\n    setCustcate(v)\n    setStore(v.value)\n    vv.push(v.value);\n    setmcategory(v.value)\n    setmcatname((oldData) => {\n      return [...oldData, v.label]\n    })\n    subdefval = {}\n    if (vv.length > 0) {\n      if (vv.includes(\"1\") && vv.includes(\"2\")) {\n        \n      }\n      else if (vv.includes(\"1\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value < 9) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n      else if (vv.includes(\"2\")) {\n\n        for (let i = 0; i < subData.length; i++) {\n          if (subData[i].value > 8) {\n            kk.push(subData[i])\n          }\n        }\n        subCategeryData(kk)\n      }\n    }\n    else if (vv.length === 0) {\n      subCategeryData(\"\")\n    }\n  }\n\n  //eamil onchange\n  const emailHandler = (e) => {\n    setEmail(e.target.value);\n    data7 = e.target.value\n    if (e.target.value.length < 1) {\n      setWemail(\"\")\n    }\n  };\n\n\n  //email validaation with api\n  const emailValidation = (key) => {\n\n    var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (email.match(validRegex)) {\n      setWemail(\"\");\n      let formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"type\", 1);\n      formData.append(\"id\", id)\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/validateEditRegistration`,\n        data: formData,\n      })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          setValiemail(response.data.result)\n          setInvalid('')\n        } else if (response.data.code === 0) {\n          setInvalid(response.data.result)\n          setValiemail('')\n        }\n      })\n      .catch((error) => {\n\n      });\n    }\n    else {\n      setWemail(\"Invalid email\")\n    }\n  }\n\n  \n const defSubValue = () => {\n var k;\n \n   var subcatgerydefvalue = value.allcat_id.split(\",\");\n   value.allpcat_id.includes(\"Indirect\") === true  ? k = 8 : k = 2\n \n  subdefval = subcatgerydefvalue.map((i => ({\n   \"value\" : ++k,\n   \"label\" : i\n }) ))\n \n  }\n \n if(data5 != undefined){\n   defSubValue();\n }\n\n const checktlPost = (e) => {\n  setPostName(e.target.value)\n  data6 = e.target.value;\n  let a = e.target.value;\n  let formData = new FormData();\n  formData.append(\"tlpost\", a)\n  formData.append(\"id\", id )\n  axios({\n    method: \"POST\",\n    url : `${baseUrl}/tl/validateTLEditPost`,\n    data: formData,\n  })\n  .then(function (res) {\n    if(res.data.code === 1){\n      setposError({\n        available : \"Post Available\"\n      })\n    }\n    else{\n      setposError({\n        exits : \"Post already exits\"\n      })\n    }\n  })\n  }\n  const del = (e) => {\n    Swal.fire({\n     title: \"Are you sure?\",\n     text: \"It will permanently deleted !\",\n     type: \"warning\",\n     showCancelButton : true,\n     confirmButtonColor: \"#3085d6\",\n     cancelButtonColor: \"#d33\",\n     confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n     if (result.value) {\n       deleteCliente(id);\n     }\n   });\n  }\n  const deleteCliente = (id) => {\n   axios\n     .get(`${baseUrl}/tp/deleteTP?id=${id}`)\n     .then(function (response) {\n       \n       if (response.data.code === 1) {\n         Swal.fire(\"Taxprofessional has been deleted successfully\");\n         history.goBack();\n       } else {\n         Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n         history.goBack();\n       }\n \n     })\n     .catch((error) => {\n       \n     });\n };\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex justify-content-between\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Tax Professional</h4>\n            </div>\n            <div>\n             {showDel == \"0\" ?  <button className=\"btn btn-danger\" onClick={(e) => del(e)}>Delete</button> : \"\"}\n              </div>\n          </div>\n        </CardHeader>\n\n        {!data1 ? (\n          <CardHeader>loading ...</CardHeader>\n        ) : (\n          <CardHeader>\n            <div class=\"row mt-3\">\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                <Form\n                  name=\"basic\"\n                  autoComplete=\"off\"\n                  initialValues={{\n                    name: `${data1}`,\n                    email: `${data2}`,\n                    phone: `${data3}`,\n                    category: `${data4}`,\n                    sub_category: `${data5}`,\n                  }}\n                  onFinish={onFinish}\n                >\n                   <div class=\"row\">\n                  <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                  <label>Teamleader post name <span className=\"declined\">*</span></label>\n                  <input type=\"text\" className = \"form-control\" \n                  defaultValue = {data11} \n              disabled />   \n                    </div>\n                  </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      <label> Teamleader post email <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_email\"\n                          defaultValue = {postEmmail}\n                         disabled\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_email,\n                          })}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n\n                  <div class=\"row\">\n                  <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      \n                      <label>TP post name <span className=\"declined\">*</span></label>\n                        <input\n                          type=\"text\"\n                          name=\"post_name\"\n                          onBlur={(e) => checktlPost(e)}\n                          disabled = {showDel == \"1\" ? true : \"\"}\n                          defaultValue={data6}\n                          onChange={(e) => data6= e.target.value}\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.post_name,\n                          })}\n                        />\n                         {posError.available ? \n                    <p className=\"completed\"> {posError.available}</p> : \n                    <p className=\"declined\">{posError.exits}</p>}\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                    \n                  \n                    <label> TP post email <span className=\"declined\">*</span></label>\n                      <input\n                        type=\"email\"\n                        name=\"p_email\"\n                        ref={register}\n                        disabled = {showDel == \"1\" ? true : \"\"}\n                      defaultValue={data7}\n                     \n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.post_email,\n                        })}\n                        onChange={(e) => emailHandler(e)}\n                        onBlur={emailValidation}\n                      />\n                      {\n                        wEmail ? <p className=\"declined\">{wEmail}</p> : <>\n                          {valiEmail ?\n                            <p className=\"completed\">\n                              {valiEmail}\n                            </p>\n                            :\n                            <p className=\"declined\">{invalid}</p>}\n                        </>\n                      } \n                    </div>\n                  </div>\n                   \n                    \n                  </div>\n\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"name\">\n                          <input\n                            required\n                           \n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.p_name,\n                            })} />\n                        </Form.Item>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone  <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"phone\">\n                          <Input\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.p_phone || indNumError || numExist,\n                            })}\n                            onChange={(e) => phoneHandler(e)}\n                            onBlur={phoneValidation} />\n                        </Form.Item>\n                      </div>\n                      {indNumError ? <p className=\"declined\">{indNumError}</p> :\"\"}\n\n                    </div>\n                  </div>\n\n               \n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category <span className=\"declined\">*</span></label>\n                        <div class=\"form-group\">\n\n                          <Select  options={options}\n                            defaultValue={data4} onChange={category}\n                            styles={{\n                              option: (styles, { data }) => {\n                                return {\n                                  ...styles,\n                                  color: data.value == 2\n                                    ? \"green\"\n                                    : \"blue\"\n                                };\n                              },\n                              multiValueLabel: (styles, { data }) => ({\n                                ...styles,\n                                color: data.value  == 2\n                                    ? \"green\"\n                                    : \"blue\"\n                              }),\n                            }}\n                            ref={selectInputRef2}\n                            // onFocus = {(e) => {\n                            //   selectInputRef2.current.select.clearValue();\n                            // }}\n                          >\n                          </Select>                  \n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category <span className=\"declined\">*</span></label>\n\n                        <Select isMulti options={options2}\n                          onChange={subCategory}\n                          defaultValue = { subdefval}\n                          ref={selectInputRef}\n\n                          // value = {subData}\n                          styles={{\n                            option: (styles, { data }) => {\n                              return {\n                                ...styles,\n                                color: data.value > 8\n                                  ? \"green\"\n                                  : \"blue\"\n                              };\n                            },\n                            multiValueLabel: (styles, { data }) => ({\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            }),\n                          }}\n                         >\n                        </Select>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Email <span className=\"declined\">*</span></label>\n                        <Form.Item name=\"email\">\n                          <Input\n                          type=\"email\"\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.email || wEmail ,\n                            })}/>\n                        </Form.Item>\n                        {\n                          wEmail ? <p className=\"declined\">{wEmail}</p> : \"\"\n                           \n                        }\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                      {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                        <Form.Item>\n                          <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                          </Button>\n                        </Form.Item>  }\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </CardHeader>\n        )}\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTP;","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/index.js",["1859","1860","1861"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\nimport AssignmentComponent from \"./AllAssignment\";\nimport DraftReport from \"./DraftReport\";\nimport FinalReport from \"./FinalReport\";\n\nfunction AssignmentTab(props) {\n \n\n    const userid = window.localStorage.getItem(\"adminkey\");\n\n    const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\n    const [draft, setDraft] = useState(\"\");\n    const [final, setFinal] = useState();\n\n\n    useEffect(() => {\n        CountAllAssignment();\n        CountDraftReport();\n        CountFinalReport();\n    }, []);\n\n\n    const CountAllAssignment = (data) => {\n        axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\n         \n            if (res.data.code === 1) {\n                setAllAssignmentCount(res.data.result.length);\n            }\n        });\n    };\n\n    const CountDraftReport = () => {\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\n          ;\n            if (res.data.code === 1) {\n                setDraft(res.data.result.length);\n            }\n        });\n    };\n\n    const CountFinalReport = () => {\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\n          ;\n            if (res.data.code === 1) {\n                setFinal(res.data.result.length);\n            }\n        });\n    };\n\n    const [tabIndex, setTabIndex] = useState(0);\n    useLayoutEffect(() => {\n        setTabIndex(props.location.index || 0);\n    }, [props.location.index]);\n\n\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n\n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n            <div>\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                            All Assignments ({allAssignmentCount})\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                            Inprogress; Draft Reports  ({draft})\n                        </Tab>\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n                        Inprogress; Delivery of Final Reports ({final})\n                        </Tab>\n\n                    </TabList>\n\n                    <TabPanel>\n                        <AssignmentComponent />\n                    </TabPanel>\n\n                    <TabPanel>\n                        <DraftReport />\n                    </TabPanel>\n\n                    <TabPanel>\n                        <FinalReport />\n                    </TabPanel>\n                </Tabs>\n            </div>\n        </Layout>\n    );\n}\n\nexport default AssignmentTab;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js",["1862","1863","1864"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport AllPayment from \"./AllPayment\";\nimport Paid from \"./Paid\";\nimport Unpaid from \"./Unpaid\";\n\n\n\n\nfunction PaymentStatus(props) {\n  const userId = window.localStorage.getItem(\"adminkey\");\n\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setAllPayment(res.data.result.length);\n        }\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?status=1`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setPaid(res.data.result.length);\n        }\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?status=2`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setUnpaid(res.data.result.length);\n        }\n      });\n  };\n\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Paid ({unpaid})\n            </Tab>\n          </TabList>\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default PaymentStatus;\n","/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js",["1865","1866","1867","1868","1869","1870","1871","1872","1873","1874","1875","1876"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Swal from \"sweetalert2\";\nimport History from './History.js';\nfunction TeamLeaderTab() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [tlCount, setTlCount] = useState(\"\");\n  const [subCat, setsubCat] = useState([])\n  const [history, setHistory] = useState([]);\n  const userid = window.localStorage.getItem(\"adminkey\");\n  var kk = []\n  var pp = []\n  \n\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n   \n    setModal(!modal);\n\n   if(typeof(key) == \"object\") {\n    \n   }\n   else{\n    {\n      fetch(`${baseUrl}/admin/userhistory?id=${key}`, {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/vnd.github.cloak-preview\",\n        }),\n      })\n        .then((res) => res.json())\n        .then((response) => {\n         \n          setHistory(response.result);\n        })\n        .catch((error) => console.log(error));\n    };\n   }\n   \n   \n  }\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"post_name\",\n      text: \"TL post name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n\n    {\n      dataField: \"email\",\n      text: \"TL post email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name of TL\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"personal_email\",\n      text: \"Email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Mobile No\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        var digit2 = [];\n        digit2 = row.allpcat_id.split(\",\")\n        \n        return (\n          <>\n\n            {\n              digit2.map((e) => {\n                return (\n                  <>\n                    <p className={e.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e}</p>\n                  </>\n                )\n              })\n            }\n          </>\n        )\n      }\n    },\n    {\n      dataField: \"allcat_id\",\n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        var digit = [];\n\n         digit = JSON.parse(row.allcat_id);\nlet k, pp;\n\nif(digit.direct.length -1 == \"1\"){\n  k = \", \";\n}\nelse{\n  k = \"\";\n}\nif(digit.indirect.length -1 == \"1\"){\n  pp = \", \";\n}\nelse{\n  pp = \"\";\n}\n        return (\n          <>\n           {digit.direct.length == \"0\" ? \"\" : \n            <p style={{ \"color\": \"blue\", \"diplay\": \"block\" }}>{digit.direct + k} </p> }\n           {digit.indirect.length == \"0\" ? \"\" :\n            <p style={{ \"color\": \"green\", \"display\": \"block\" }}>{digit.indirect + pp}</p>}\n          </>\n\n        )\n      }\n    },\n\n    {\n      dataField: \"\",\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <Link to={`/admin/edittl/${row.id}`}>\n              <i\n                className=\"fa fa-edit\"\n                style={{\n                  fontSize: 18,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                }}\n              ></i>\n            </Link>\n          \n          </>\n        );\n\n      },\n\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n  useEffect(() => {\n    getTeamLeader();\n\n  }, []);\n\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n    \n      var dd = []\n      if (res.data.code === 1) {\n        pp.push(res.data.result)\n        setData((res.data.result));\n        setTlCount(res.data.result.length);\n      }\n    });\n  };\n\n\n  //check\n  const del = (id) => {\n   \n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"It will permanently deleted !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  // delete data\n  const deleteCliente = (id) => {\n    axios\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getTeamLeader();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n\n\n  return (\n\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n     \n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Team Leaders ({tlCount})</CardTitle>\n            </Col>\n            <Col md=\"2\">\n              <Link to={\"/admin/addnewtl\"} className=\"btn btn-primary\">\n                Add New\n              </Link>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n      <History history={history} toggle={toggle} modal={modal} />\n    </Layout>\n  );\n}\n\nexport default TeamLeaderTab","/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js",["1877","1878","1879","1880","1881","1882"],"import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\nimport History from './History.js';\nfunction TaxProfessionalsTab() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [tpCount, setTpCount] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [myPurpose, setPurpose] = useState([])\n  var digit2 = [];\n  useEffect(() => {\n    getTaxProf();\n  }, []);\n\n  const getTaxProf = () => {\n    axios.get(`${baseUrl}/tp/getTaxProfessional`).then((res) => {\n    ;\n      if (res.data.code === 1) {\n        setData(res.data.result);\n        setTpCount(res.data.result.length);\n      }\n    });\n  };\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n   \n    setModal(!modal);\n    if(typeof(key) == \"object\") {\n     \n    }\n    else{\n      fetch(`${baseUrl}/admin/userhistory?id=${key}`, {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/vnd.github.cloak-preview\",\n        }),\n      })\n        .then((res) => res.json())\n        .then((response) => {\n         \n          setHistory(response.result);\n        })\n        .catch((error) => console.log(error));\n    }\n    \n   \n  };\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL post name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"tl_post_email\",\n      text: \"TL post email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"post_name\",\n      text: \"TP post name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n\n    {\n      dataField: \"email\",\n      text: \"TP post email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name of TP\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"personal_email\",\n      text: \"Email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Mobile No\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      // dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter : function nameFormatter(cell, row) {\n       \n        digit2 = row.allpcat_id.split(\",\")\n       \n        return(\n          <>\n          \n          {\n             digit2.map((e) => {\n             return(\n               <>\n            <p className= {e.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e}</p>  \n               </>\n             ) \n           })\n          }\n           </>\n        )\n      }\n    },\n   \n   \n    {\n      \n     \n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter : function nameFormatter(cell, row) {\n        var digit = [];\n         \n        digit = row.allcat_id.split(\",\")\n      let kk;\n      if(digit.length > 1){\n        kk = \",\"\n      }\n      else{\n        kk = \"\"\n      }\n      \n        return(\n          <>\n          \n         {\n            digit.map((e) => {\n            return(\n              <>\n             <p className= {row.allpcat_id.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e + kk}</p>  \n              </>\n            ) \n          })\n         }\n          </>\n        )\n      }\n    },\n   \n   \n    {\n      dataField: \"\",\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <Link to={`/admin/edittp/${row.id}`}>\n              <i\n                className=\"fa fa-edit\"\n                style={{\n                  fontSize: 18,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                }}\n              ></i>\n            </Link>\n            {/* <i\n              className=\"fa fa-trash\"\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" }}\n              onClick={() => del(row.id)}\n            ></i> */}\n          </>\n        );\n      },\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n  //check\n  const del = (id) => {\n  \n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"It will permanently deleted !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  // delete data\n  const deleteCliente = (id) => {\n  \n    axios\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getTaxProf();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Tax Professionals ({tpCount})</CardTitle>\n            </Col>\n            <Col md=\"2\">\n              <Link to={\"/admin/addnewtp\"} class=\"btn btn-primary\">\n                Add New\n              </Link>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n      <History history={history} toggle={toggle} modal={modal} />\n    </Layout>\n  );\n}\n\nexport default TaxProfessionalsTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/Admin/FeedbackTab/FeedbackTab.js",["1883","1884","1885","1886","1887"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n// import FeedbackService from \"../../../config/services/QueryDetails\";\nimport CommonServices from \"../../../common/common\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router\";\n\nfunction FeedbackTab() {\n  const alert = useAlert();\n  const history = useHistory();\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [feedbackData, setFeedBackData] = useState([]);\n  const [feedbackNumber, setfeedbackNumber] = useState();\n  useEffect(() => {\n    getFeedback();\n  }, [userid]);\n\n  const getFeedback = () => {\n    axios.get(`${baseUrl}/customers/getFeedback`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setFeedBackData(res.data.result);\n       if(res.data.result != undefined){\n         setfeedbackNumber(res.data.result.length)\n       }\n      }\n    });\n  };\n\n \n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"10px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"60px\" };\n      },\n     \n    },\n\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"40px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        \n        return <>{row.assign_no}</>;\n      },\n    },\n    {\n      text: \"Feedback\",\n      dataField: \"feedback\",\n   \n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"150px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        \n        return (\n          <>\n            <div>\n              {\n                row.admin_read == \"0\" ?\n                  <div\n                    style={{\n                      cursor: \"pointer\",\n                      display: \"flex\", justifyContent: \"space-between\"\n                    }}\n                   \n                    title=\"unread\"\n                  >\n                    <p  onClick={() => readNotification(row.id)}>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                  </div>\n                  :\n                  <div\n                    style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\n                    title=\"read\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                  </div>\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  // readnotification\n  const readNotification = (id) => {\n\n  \n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"type\", \"admin\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/markReadFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n       \n          getFeedback();\n          history.push(\"/admin/feedback\")\n        }\n    \n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <>\n      <Layout adminDashboard=\"adminDashboard\" adminUserId={userid} feedbackNumber = {feedbackNumber}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={feedbackData}\n              columns={columns}\n              rowIndex\n            />\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n","/home/pooja/MazarsRepo/src/pages/Admin/ForgetPassword/ForgetPassword.js",["1888","1889","1890","1891","1892"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\n\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\n\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n          props.history.push(`/admin/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n          Alerts.ErrorNormal(\"Please enter correct email address.\")\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n\n    \n    if (item == \"null\") {\n     \n    } else {\n      return item\n    }\n  }\n\n  return (\n    <>\n      <Header admin=\"admin\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n\n          {\n            loading ?\n              <div class=\"col-md-12\">\n                <Spinner color=\"primary\" />\n              </div>\n              :\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    defaultValue={valueHandler()}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Get OTP\n                </button>\n                <Link to=\"/admin/login\" style={{ \"margin\": \"10px\" }}>\n                  <button type=\"submit\" className=\"btn btn-secondary\">\n                    Cancel\n                  </button>\n                </Link>\n                <Mandatory />\n              </form>\n          }\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/home/pooja/MazarsRepo/src/pages/Admin/PendingReceived/PendingRecevived.js",["1893","1894","1895","1896","1897","1898","1899"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { baseUrl2 } from '../../../config/config';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n        \n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setAssingmentNo(res.data.result[0].assign_no);\n        }\n      });\n    };\n\n    getSubmittedAssingment();\n    // getQuery();\n  }, [assingNo]);\n\n \n\n  // const getQuery = () => {\n  //  if(assingNo === undefined){\n  //    return false\n  //  }\n  //  else{\n  //   axios\n  //   .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n  //   .then((res) => {\n      \n  //     if (res.data.code === 1) {\n  //       setDisplayQuery(res.data.result);\n  //     }\n  //   });\n  //  }\n  // };\n\n     //change date format\n     function ChangeFormateDate(oldDate) {\n     \n      if (oldDate == null) {\n        return null;\n      }\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    }\n    \n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              {/* <p>{assingNo}</p> */}\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarsapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Action</th>\n                    <td>\n                    {p.allocation_status == \"0\" || p.allocation_status == \"3\"  ? (\n                        <Link to={`/admin/queryassing/${p.id}`}>\n                        <i class=\"fa fa-share\"></i>\n                      </Link>\n                      ) : (                  \n                       null\n                      )}\n                    </td>\n                  </tr>\n                 \n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`${baseUrl2}/mazarsapi/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/NewPassword.js",["1900","1901","1902","1903"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport LoadingTime from \"../../../components/LoadingTime/LoadingTime\";\n\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    LoadingTime.timer2(setTime, setDisabled)\n  }, []);\n\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_code);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/admin/login\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Please enter correct details\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <>\n      <Header admin=\"admin\" />\n      <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address.\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    ref={register({ required: true })}\n                    autocomplete=\"off\"\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  {disabled === false ? \n                  <small class=\"text-center\">\n                  Note: OTP is valid for {time} seconds.\n                </small> : \"\"}\n                </div>\n              </div>\n            </div>\n\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"btn btn-primary\" >\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id} setDisabled={setDisabled}\n              setTime={setTime}  loading = {loading} getTime={LoadingTime.timer2} setLoading={setLoading} />\n              :\n              null\n          }\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default NewPassword;\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/admin/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"btn btn-secondary\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}\n\n\n\n","/home/pooja/MazarsRepo/src/pages/Admin/QueryRejection/QueryRejection.js",["1904","1905","1906","1907","1908","1909","1910","1911"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, Redirect } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n    Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\n\nconst Schema = yup.object().shape({\n    p_notes: yup.string().required(\"\"),\n});\n\n\nfunction QueryRejection(props) {\n    const { id } = useParams();\n\n    const { handleSubmit, register, errors, reset } = useForm({\n        resolver: yupResolver(Schema),\n    });\n\n    const userId = window.localStorage.getItem(\"adminkey\");\n    const [loading, setLoading] = useState(false);\n\n\n    const onSubmit = (value) => {\n      \n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"id\", id);\n        formData.append(\"notes\", value.p_notes);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/admin/setAdminreject`,\n            data: formData,\n        })\n            .then(function (response) {\n               \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"Query declined successfully.\")\n                    props.history.push({\n                        pathname: `/admin/queriestab`,\n                        index: 1,\n                    });\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                }\n            })\n            .catch((error) => {\n                \n            });\n    };\n\n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"4\">\n                            <Link\n                                to={{\n                                    pathname: `/admin/queriestab`,\n                                    index: 1,\n                                }}\n                            >\n                                <button class=\"btn btn-success ml-3\">\n                                    <i class=\"fas fa-arrow-left mr-2\"></i>\n                                    Go Back\n                                </button>\n                            </Link>\n                        </Col>\n                        <Col md=\"4\">\n                            <div style={{ textAlign: \"center\" }}>\n                                <h2>Decline Query</h2>\n                            </div>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                {\n                    loading ?\n                        <Loader />\n                        :\n                        <>\n                            <CardHeader>\n                                <div class=\"row mt-3\">\n                                    <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n                                    <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                                        <form onSubmit={handleSubmit(onSubmit)}>\n                                            <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label>Notes<span className=\"declined\">*</span></label>\n                                                        <textarea\n                                                            className={classNames(\"form-control\", {\n                                                                \"is-invalid\": errors.p_notes,\n                                                            })}\n                                                            id=\"textarea\"\n                                                            rows=\"6\"\n                                                            name=\"p_notes\"\n                                                            ref={register}\n                                                        ></textarea>\n                                                        {errors.p_notes && (\n                                                            <div className=\"invalid-feedback\">\n                                                                {errors.p_notes.message}\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <button type=\"submit\" className=\"btn btn-primary\">\n                                                Submit\n                                            </button>\n                                        </form>\n                                    </div>\n                                    <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n                                </div>\n                                <Mandatory />\n                            </CardHeader>\n                        </>\n                }\n            </Card>\n        </Layout>\n    );\n}\n\nexport default QueryRejection;","/home/pooja/MazarsRepo/src/pages/Admin/MeetingComponent/MeetingComponent.js",["1912","1913","1914","1915"],"\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const adminEmail = window.localStorage.getItem(\"adminkey\");\n\n  return (\n   \n      <Meeting id={props.match.params.id}\n      adminEmail = {adminEmail} />\n   \n   \n  );\n}\n\nexport default MeetingComponent;","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Schedule.js",["1916","1917","1918","1919","1920","1921","1922","1923","1924","1925","1926","1927","1928"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Recording from \"../Recording/Recording\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\nimport \"../../Admin/AdminStyle/style.css\";\nfunction Schedule() {\n    const userid = window.localStorage.getItem(\"adminkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n\n  \n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n     <Demo />\n    </Layout>\n    );\n}\n\nexport default Schedule;","/home/pooja/MazarsRepo/src/pages/Admin/Message/Message.js",["1929","1930","1931","1932","1933","1934","1935","1936"],"/home/pooja/MazarsRepo/src/pages/Admin/Chatting/Chatting.js",["1937","1938","1939","1940","1941"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\n\n\n\nconst Schema = yup.object().shape({\n  message_type: yup.string().required(\"\"),\n  p_message: yup.string().required(\"\"),\n  p_to: yup.string().required(\"\"),\n});\n\n\n\nfunction Chatting(props) {\n\n \n\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const { query_id, query_No, routes } = data\n\n\n\n\n  useEffect(() => {\n\n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataAdmin\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataAdmin\");\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, [item]);\n\n\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.message_type);\n    formData.append(\"message\", value.p_message);\n    formData.append(\"to\", value.p_to);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          setLoading(false)\n          var variable = \"Message sent successfully. \"\n          Alerts.SuccessNormal(variable)\n          props.history.push(routes);\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={query_No}\n                          disabled\n                        />\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message Type</label>\n                        {\n                          item &&\n                          <select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.message_type,\n                            })}\n                            name=\"message_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            defaultValue={item}\n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n                        }\n                        {errors.message_type && (\n                          <div className=\"invalid-feedback\">\n                            {errors.message_type.message}\n                          </div>\n                        )}\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>To<span className=\"declined\">*</span></label>\n                        <select\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_to,\n                          })}\n                          name=\"p_to\"\n                          ref={register}\n                          style={{ height: \"33px\" }}\n                        >\n                          <option value=\"\">--select--</option>\n                          <option value=\"customer\">Customer</option>\n                          <option value=\"tl\">Team Leader</option>\n                          <option value=\"both\">Both</option>\n                        </select>\n                        {errors.p_to && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_to.message}\n                          </div>\n                        )}\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message<span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          placeholder=\"Message text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_message\"\n                        ></textarea>\n                        {errors.p_message && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_message.message}\n                          </div>\n                        )}\n                      </div>\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Send\n                      </button>\n                    </div>\n                  </div>\n\n                </form>\n                <Mandatory />\n              </>\n          }\n        </CardBody>\n\n      </Card>\n    </Layout >\n  );\n}\n\nexport default Chatting;\n","/home/pooja/MazarsRepo/src/pages/Admin/ViewNotification/ViewNotification.js",["1942","1943","1944","1945","1946"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\nfunction ViewNotification() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> Sender</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                 {data.type}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/home/pooja/MazarsRepo/src/pages/Admin/Recording/Recording.js",["1947","1948"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n   \n} from \"reactstrap\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-modal-video/scss/modal-video.scss\";\nimport ReactPlayer from \"react-player\";\nimport { useParams } from \"react-router\";\nimport {Link} from 'react-router-dom'\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\n\n\n\n\nfunction Recording() {\n    const getId = useParams()\n    const userid = window.localStorage.getItem(\"adminkey\");\n    const [feedbackData, setFeedBackData] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [videoid, setVideoId] = useState(null);\n    const [records, setRecords] = useState([]);\n    const openModal = (videoContent) => {\n      \n        setIsOpen(true);\n        setVideoId(videoContent);\n    };\n\n    useEffect(() => {\n        getRecording();\n    }, []);\n    const videoIcon = {\n        display : \"flex\", \n        justifyContent : \"space-around\", \n        alignItems : \"center\"\n    }\n    const getRecording = () => {\n        axios\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\n            .then((res) => {\n             \n                if (res.data.code === 1) {\n                    setFeedBackData(res.data.result);\n                    setRecords(res.data.result.length)\n                }\n            });\n    };\n    const modalBox = {\n        display : \"flex\",\n        position : \"absolute\",\n        top : \"10%\",\n        left : \"0%\",\n        botttom: \"0%\", \n        right: \"0%\",\n       \n        width : \"100%\", \n        height: \"auto\"\n    }\nconst canBtn = {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"10px\",\n    left: \"90%\",\n    padding: \"20px\",\n    cursor : \"pointer\", \n    color : \"red\"\n}\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            dataField: \"created_date\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n            formatter : function formatter(cell, row){\n                let a = row.assign_id.split(\"-\")[row.assign_id.split(\"-\").length - 1]\n                return <>\n                <Link\n                to = {{\n                    pathname : `/admin/queries/${a}`,\n                    routes : \"recording\"\n                }}>\n                {row.assign_id}\n                </Link>\n                </>\n            }\n        },\n        \n\n        {\n            text: \"Participants\",\n            dataField: \"participants\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n        },\n       \n        {\n            text: \"Summary of Discussion\",\n            dataField: \"message\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"80px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n                \n            },\n            formatter: function nameFormatter(cell, row) {\n             \n                var recording = row.file.split(\",\");\n                let a = 1;\n                return (\n                    <>\n                        <div>\n                            {\n                                recording.map((record) => {\n                                   return(\n                                <>\n                                <p style={videoIcon}>\n                                <span>{a++}</span>   <i\n                                    className=\"material-icons\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        color: \"red\",\n                                        fontSize: \"25px\",\n                                    }}\n                                    onClick={() => openModal(record)}\n                                >\n                                    play_circle_outline\n                                 \n                                </i>\n                                </p>\n                                </>\n                                   )\n                                })\n                            }\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n    return (\n     <>\n       <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n           <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\n                <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"7\">\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\n                        </Col>\n                        <Col md=\"5\"></Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                <RecordingFilter\n                       setData={setFeedBackData}\n                    //    getData={getInCompleteAssingment}\n                       SearchQuery=\"SearchQuery\"\n                      setRecords={setRecords}\n                       records={records} \n                       userid = {userid}\n                       getRecording = {getRecording}\n                    /> \n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={feedbackData}\n                        columns={columns}\n                        rowIndex\n                    />\n                </CardBody>\n\n            </Card>\n          \n           </div>\n            \n           {isOpen === true ?\n          \n                 \n                 <div style={modalBox}>\n                 <span style={canBtn} onClick= {() => setIsOpen(false)}> <CloseIcon color=\"red\" /> </span>\n                \n       \n          <div style={{margin: \"50px 0 0 0\"}}>\n          <ReactPlayer\n            url={videoid}\n            controls={true}\n            playing={true}\n            width='100%'\n            height='100%'\n           />\n              </div>\n            \n           </div>\n         : \"\"}\n         </Layout>\n           </>\n\n    );\n}\n\nexport default Recording;","/home/pooja/MazarsRepo/src/pages/Admin/customer/Customer.js",["1949","1950","1951","1952","1953","1954","1955","1956","1957","1958"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport CustomerListFilter from \"../../../components/Search-Filter/CustomerListFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\nimport History from \"./CustHistory\";\n\nfunction Customer() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [tpCount, setTpCount] = useState(\"\");\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [myPurpose, setPurpose] = useState([])\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  var digit2 = [];\n  useEffect(() => {\n    getCustomer();\n  }, []);\n\n  const getCustomer = () => {\n    axios.get(`${baseUrl}/admin/getAllList`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setData(res.data.result);\n        setTpCount(res.data.result.length);\n      }\n    });\n  };\n\n \n\n  const toggle = (key) => {\n   \n    setModal(!modal);\n    if(typeof(key) == \"object\") {\n    \n    }\n    else{\n      fetch(`${baseUrl}/admin/userhistory?id=${key}`, {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/vnd.github.cloak-preview\",\n        }),\n      })\n        .then((res) => res.json())\n        .then((response) => {\n          \n          setHistory(response.result);\n        })\n        .catch((error) => console.log(error));\n    }\n    \n   \n  };\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n        dataField: \"email\",\n        text: \"Email\",\n        sort: true,\n        headerStyle: () => {\n          return { fontSize: \"12px\", cursor: \"pointer\" };\n        },\n        \n      },\n      {\n        dataField: \"phone\",\n        text: \"Mobile No\",\n       \n        headerStyle: () => {\n          return { fontSize: \"12px\" };\n        },\n      },\n      {\n        dataField: \"occupation\",\n        text: \"Occupation\",\n        sort: true,\n        headerStyle: () => {\n          return { fontSize: \"12px\" };\n        },\n      },\n    {\n      dataField: \"country\",\n      text: \"Country\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"state\",\n      text: \"State\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n\n    {\n      dataField: \"city\",\n      text: \"City\",\n      sort: true,\n      headerStyle: () => {\n       return { fontSize: \"12px\" };\n      },\n    },\n   \n    {\n      dataField: \"created\",\n      text: \"Date of Registration\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    \n  \n   \n    {\n      dataField: \"\",\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n           \n            <i\n              className=\"fa fa-eye\"\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" , color : \"green\"}}\n              onClick={() => show(row.id)}\n            ></i>\n          </>\n        );\n      },\n    },\n   \n  ];\n\n  //check\n  const show = (key) => {\n \n    setModal(!modal);\n\n   if(typeof(key) == \"object\") {\n    \n   }\n   else{\n    {\n      axios.\n      get(`${baseUrl}/customers/totalComplete?uid=${key}`)\n        \n        .then((response) => {\n         \n         if(response.data.code === 1){\n        \n           setHistory(response.data.result)\n         }\n        })\n        .catch((error) => console.log(error));\n    };\n   }\n   \n  \n  };\n\n  // delete data\n  const deleteCliente = (id) => {\n  \n    axios\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getCustomer();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"6\">\n              <CardTitle tag=\"h4\">Customer ({tpCount})</CardTitle>\n            </Col>\n           <Col md=\"6\">\n           \n           </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n        <CustomerListFilter\n        setData={setData}\n        searchQuery = \"SearchQuery\"\n        setRecords={setTpCount}\n         records={tpCount} \n         getCustomer = {getCustomer} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n      <History history={history} toggle={toggle} modal={modal} />\n    </Layout>\n  );\n}\n\nexport default Customer;\n\n","/home/pooja/MazarsRepo/src/pages/TL/Start/Start.js",[],"/home/pooja/MazarsRepo/src/pages/TL/Login/Login.js",["1959","1960","1961"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\nimport { Spinner } from \"reactstrap\";\nimport { useHistory } from \"react-router\";\nimport Cookies from \"js-cookie\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n  password: yup\n    .string()\n    .required(\"\")\n});\n\nfunction Login(props) {\n  let history = useHistory()\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState(null);\n  const [show, setShow] = useState(false);\n  const [uid, setUid] = useState('')\n  const [isPasswordShow, setPasswordShow] = useState(false);\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/login`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n         \n          logout();\n          setShow(true)\n          setLoading(false)\n          Cookies.set(\"tlName\", response.data.display_name)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setUid(response.data.user_id)\n         \n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Invalid email or password.\")\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  const handleChange = (e) => {\n    \n    setEmail(e.target.value);\n  };\n  const logout = () => {\n    setTimeout(() => {\n      localStorage.removeItem(\"adminkey\");\n      localStorage.removeItem(\"adminEmail\");\n      history.push(\"/admin/login\");\n    }, 36000000)\n  }\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n\n        {\n          show ? <div>\n            <VerifyOtpLogin email={email} uid={uid} loading={loading}\n              setLoading={setLoading} />\n          </div>\n            :\n            <div className=\"form\">\n              <div className=\"heading\">\n                <h2>MTL Login</h2>\n              </div>\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email</label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                        placeholder=\"Enter Email\"\n                        onChange={(e) => handleChange(e)}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Password</label>\n                      <input\n                        type={isPasswordShow ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.password,\n                        })}\n                        name=\"password\"\n                        placeholder=\"Enter Password\"\n                        autocomplete=\"off\"\n                        ref={register}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                      />\n                      <i\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword}\n                      />\n                      {errors.password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                {\n                  loading ?\n                    <div class=\"col-md-12\">\n                      <Spinner color=\"primary\" />\n                    </div>\n                    :\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                }\n\n\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n                  <Link\n                    to={{\n                      pathname: \"/teamleader/forget-password\",\n                      email: `${email}`,\n                    }}\n                  >\n                    Forgot Password\n                  </Link>\n                </div>\n\n                <Mandatory />\n              </form>\n            </div>\n        }\n\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/home/pooja/MazarsRepo/src/pages/Admin/Report/Report.js",["1962","1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useState , useEffect} from 'react';\nimport classNames from \"classnames\";\nimport { baseUrl } from \"../../../config/config\";\nimport './Admin.css';\nimport Select from 'react-select';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Typography } from '@material-ui/core';\nimport Mandatory from '../../../components/Common/Mandatory';\nimport { useHistory } from 'react-router';\nconst Report = () => {\n    const userid = window.localStorage.getItem(\"adminkey\");\n  \n  \n    const [subCategory, setSubCategory] = useState([]);\n    const [subData, subCategeryData] = useState([])\n    const [custCate, setCustcate] = useState([])\n    const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store, setStore] = useState([]);\n  const [error, setError] = useState()\n  const [error2, setError2] = useState();\n  const [mcatname, setmcatname] = useState([]);\n  const [nn, setNn] = useState([])\n  const [mcategory, setmcategory] = useState([]);\n  const [categoryData, setCategoryData] = useState([])\n  const [custCate2, setCustcate2] = useState([]);\n  const [data, setData] = useState([]);\n  const [data2, setData2] = useState([]);\n  const [taxId, setTaxId] = useState(\"\");\n  const [teamleader44, setTeamleader44] = useState(\"\") \n  const [taxprofessional44, setTaxprofessional44] = useState(\"\")\n  const [custData, setcustData] = useState();\n  var kk = []\n  var pp = []\n  var vv = []\n  var allData1 = {}\n  var dir = []\n  var indir = []\n  const [dd, setDd] = useState([]);\nconst history = useHistory()\n    const { handleSubmit, register, errors, getValues } = useForm();\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n\n  useEffect(() => {\n    const getCategory = async () => {\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        if (res.data.code === 1) {\n       \n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = async () => {\n\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n\n        if (res.data.code === 1) {\n          setTax2(res.data.result)\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  useEffect(() => {\n    getTeamLeader();\n    getData();\n\n  }, []);\n\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n    \n      var dd = []\n      if (res.data.code === 1) {\n        pp.push(res.data.result)\n        setData((res.data.result));\n       \n      }\n    });\n  };\n\n  useEffect(() => {\n    getTaxProf();\n  }, [taxId]);\n\n  const getTaxProf = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${taxId}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setData2(res.data.result);\n         \n        }\n      });\n  };\n\n\n  const getData = () => {\n    axios\n    .get(`${baseUrl}/tl/videoScheduler?tl_id=1`)\n      .then((res) => {\n       \n        var a = res.data.result.items;\n        if (a) {\n          setcustData(a.map(mapAppointmentData));\n        }\n      });\n  };\n\nconst mapAppointmentData = ((appiontmentData) => ({\n\"label\" : appiontmentData.id,\n\"value\" : appiontmentData.id\n}))\n  const options = tax.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.details\n    }))\n\n  const options2 = tax2.map(v => ({\n    \"value\": v.id,\n    \"label\": v.details\n  }))\n  const options3 = data.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.name\n    }))\n    const options4 = data2.map(d => (\n      {\n        \"value\": d.id,\n        \"label\": d.name\n      }))\n\n    const onSubmit = (value) => {\n     let basic_info = false\n     let proposal_info = false\n     let assignment_info = false\n     let payment_info = false\n     if(value.assessment || value.purpose_p || value.p_format || value.t_requested || value.spc_que || value.doa){\n      basic_info = true\n     }\n     if(value.dateProposal || value.proposedAmount || value.paymentTerms || value.proposal_status || value.acceptedAmount\n      || value.paymentDeclinedReason || value.date_acceptance || value.amountOutstanding\n      || value.amount_overdue || value.declinedDate){\n        proposal_info = true\n      }\n   if(value.assignDate || value.completionDate || value.assignStatus || value.completionQuery || value.assignTime){\n     assignment_info = true\n   }\n   if(value.receiptDate || value.amountReceived){\n     payment_info = true\n   }\n        let formData = new FormData();\n        formData.append(\"basic_info\", Number(basic_info));\n        formData.append(\"proposal_info\", Number(proposal_info));\n        formData.append(\"assignment_info\", Number(assignment_info));\n        formData.append(\"payment_info\", Number(payment_info))\n        formData.append(\"from\", value.p_from);\n        formData.append(\"to\", value.p_to);\n        formData.append(\"teamleader\", teamleader44);\n        formData.append(\"taxprofessional\", taxprofessional44);\n        formData.append(\"category\", mcatname);\n        formData.append(\"subCategory\", dd);\n        formData.append(\"q_no\", Number(value.qno));\n        formData.append(\"date_query\", Number(value.dataQuery));\n        formData.append(\"cust_id\", Number(value.cust_id));\n        formData.append(\"basic_category\", Number(value.basicCategory));\n        formData.append(\"basic_sub_category\", Number(value.basic_sub_category));\n        formData.append(\"assessment\", Number(value.assessment));\n        formData.append(\"purpose\", Number(value.purpose_p));\n        formData.append(\"p_format\", Number(value.p_format));\n        formData.append(\"t_requested\", Number(value.t_requested));\n        formData.append(\"spc_que\", Number(value.spc_que));\n        formData.append(\"date_allocation\", Number(value.doa));\n        formData.append(\"teamleader\", Number(value.tl_name));\n        formData.append(\"taxprofessional\", Number(value.tp_name));\n        formData.append(\"date_proposal\", Number(value.dateProposal));\n        formData.append(\"proposed_amount\", Number(value.proposedAmount));\n        formData.append(\"payment_terms\", Number(value.paymentTerms));\n        formData.append(\"proposal_status\", Number(value.proposal_status));\n        formData.append(\"accepted_amount\", Number(value.acceptedAmount));\n        formData.append(\"payment_declined_reasen\", Number(value.paymentDeclinedReason));\n        formData.append(\"date_of_acceptance\", Number(value.date_acceptance));\n        // formData.append(\"amount_received\", value.amountReceived);\n        formData.append(\"amount_outstanding\", Number(value.amountOutstanding));\n        formData.append(\"amount_overdue\", Number(value.amount_overdue));\n        formData.append(\"payment_declined\", Number(value.declinedDate));\n        // formData.append(\"assignment_number\", Number(value.assignNumber));\n        formData.append(\"assign_date\", Number(value.assignDate));\n        formData.append(\"proposed_completion_date\", Number(value.completionDate));\n        formData.append(\"assignment_status\", Number(value.assignStatus));\n        formData.append(\"date_complation\", Number(value.completionQuery));\n        formData.append(\"assign_time\", Number(value.assignTime));\n        formData.append(\"payment_recived_date\", Number(value.receiptDate));\n        formData.append(\"amount_received\", Number(value.amountReceived));\n   axios({\n     method : \"POST\",\n     url : `${baseUrl}/report/generateReport`,\n     data : formData\n\n   })\n   .then(function (response) {\n if(response.data.result === 1){\n  window.location.assign(`${baseUrl}/report/generateReport`)\n }\n else{\n   return false\n }\n   })\n   .catch((error) => {\n  \n   });\n    }\n\n    // Category \n    const category2 = (v) => {\nlet cc = []\n      setCategoryData(v)\n      setNn((oldData) => {\n        return [...oldData, mcategory]\n      })\n      setError(\"\")\n      setCustcate(v)\n      v.map((val) => {\n        vv.push(val.value)\n        cc.push(val.value)\n        setmcategory(val.value);\n       \n        setStore(val.value)\n      })\n  \n  setmcatname(cc)\n      if (vv.length > 0) {\n        if (vv.includes(\"1\") && vv.includes(\"2\")) {\n       \n        }\n        else if (vv.includes(\"1\")) {\n  \n          for (let i = 0; i < subData.length; i++) {\n            if (subData[i].value < 9) {\n              kk.push(subData[i])\n            }\n          }\n          subCategeryData(kk)\n        }\n        else if (vv.includes(\"2\")) {\n  \n          for (let i = 0; i < subData.length; i++) {\n            if (subData[i].value > 8) {\n              kk.push(subData[i])\n            }\n          }\n          subCategeryData(kk)\n        }\n      }\n  \n      else if (vv.length === 0) {\n        subCategeryData(\"\")\n      }\n  \n    }\n\n    // Sub Category Function \n    const subCategory22 = (e) => {\n  let kk = []\n      subCategeryData(e)\n      setCustcate2(e)\n      setError2(\"\")\n     \n      e.map((i) => {\n  \n      kk.push(i.value)\n      })\n     setDd(kk)\n      \n    }\n  const teamLeader = (a) => {\n let tk = []\n    a.map((i) => {\n    \n      setTaxId(i.value) \n     tk.push(i.value)\n    })\n    setTeamleader44(tk)\n  \n  }\n  const taxProfessional = (e) => {\n    let kk2 = []\n    e.map((i) => {\n      \n      kk2.push(i.value)\n    })\n    setTaxprofessional44(kk2)\n  }\n    return (\n        <>\n          <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n          <div className=\"adminForm\">\n          <Typography variant=\"h4\">Admin Report</Typography>\n  <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n    <div className=\"row\">\n      <div className=\"col-md-3\">\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\">From</label>\n          <input\n            type=\"date\"\n            name=\"p_from\"\n            ref={register}\n            placeholder=\"Enter Mobile Number\"\n            className={classNames(\"form-control\", {\n              \"is-invalid\": errors.p_mobile,\n            })}\n            defaultValue={item}\n          />\n        </div>\n      </div>\n\n      <div className=\"col-md-3\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">To</label>\n          <input\n            type=\"date\"\n            name=\"p_to\"\n            className={classNames(\"form-control\", {\n              \"is-invalid\": errors.p_type,\n            })}\n            defaultValue={item}\n            max={item}\n            placeholder=\"Enter type\"\n            ref={register({ required: true })}\n          />\n        </div>\n       \n      </div>\n      <div className=\"col-md-3\">\n      <div className=\"mb-3\">\n          <label className=\"form-label\">Customer Id</label>\n         <Select isMulti options={custData}>\n\n         </Select>\n        </div>\n          </div>\n    \n   </div> \n   <div className=\"row\">\n   <div className=\"col-md-3\">\n\n<div className=\"mb-3\">\n<label className=\"form-label\">Teamleader</label>\n<Select  isMulti={true}\noptions={options3}\nonChange= {(e) =>teamLeader(e)}/>\n</div>\n</div>\n\n<div className=\"col-md-3\">\n<div className=\"mb-3\">\n<label className=\"form-label\">Taxprofessional</label>\n<Select isMulti = {true} \n options={options4} onChange={(e) => taxProfessional(e)}/>\n\n</div>\n</div>\n       <div className=\"col-md-3\">\n           <label className=\"form-label\">Category</label>\n           <Select isMulti options={options}\n                        className={error ? \"customError\" : \"\"}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        onChange={category2}>\n                      </Select>\n        </div>\n        <div className=\"col-md-3\">\n            <label className=\"form-label\">Sub Category</label>\n            <Select isMulti options={options2}\n                        className={error2 ? \"customError\" : \"\"}\n                        onChange={subCategory22}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value > 8\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value > 8\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n\n                        value={subData}>\n                      </Select>\n            </div>\n   </div>\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n           <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Basic Query Details</legend>\n            <div className=\"basicFeild\">\n            <span>\n               <input type=\"checkbox\" name=\"sno\" id=\"sno\" checked disabled ref={register}></input>\n               <label htmlFor=\"sno\">S.No</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" name=\"qno\" ref={register} id=\"qno\" checked disabled></input>\n               <label htmlFor=\"qno\">Query No</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" ref={register} name=\"dataQuery\" id=\"dataQuery\" checked disabled></input>\n               <label htmlFor=\"dataQuery\">Query Date </label>\n               </span>\n               <span>\n               <input type=\"checkbox\" ref={register} name=\"cust_id\" id=\"cust_id\" checked disabled></input>\n               <label htmlFor=\"cust_id\">Customer Id</label>\n            </span>\n            <span>\n               <input type=\"checkbox\" ref={register} name=\"basicCategory\" id=\"basicCategory\" checked disabled></input>\n               <label htmlFor=\"basicCategory\">Category</label>\n             </span>\n             <span>\n               <input type=\"checkbox\" ref={register} name=\"basic_sub_category\" id=\"basic_sub_category\" checked disabled></input>\n               <label htmlFor=\"basic_sub_category\">Sub Category</label>\n               </span>\n               <span> \n<input type=\"checkbox\" ref={register} name=\"tl_name\" id=\"tl_name\" checked disabled></input>\n<label htmlFor=\"tl_name\">Name of Team Leader</label>\n\n</span>\n<span>\n<input type=\"checkbox\"  ref={register}name=\"tp_name\" id=\"tp_name\" checked disabled></input>\n<label htmlFor=\"tp_name\">Name of Tax Professional</label>\n</span> \n               <span>\n<input type=\"checkbox\" name=\"assessment\" ref={register} id=\"assessment\"></input>\n<label htmlFor=\"assessment\">Assignment Year(s)</label>\n</span>\n           \n<span>\n<input type=\"checkbox\" ref={register} name=\"purpose_p\" id=\"purpose_p\"></input>\n<label htmlFor=\"purpose_p\">Purpose for which Opinion is sought</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"p_format\" id=\"p_format\"></input>\n<label htmlFor=\"p_format\">Format in which Opinion is required</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"t_requested\" id=\"t_requested\"></input>\n<label htmlFor=\"t_requested\">Timeline Requested</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"spc_que\" id=\"spc_que\"></input>\n<label htmlFor=\"spc_que\">Specific questions</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"doa\" id=\"doa\"></input>\n<label htmlFor=\"doa\">Date of Allocation of Query</label>\n</span>\n</div>\n</fieldset>\n</div>\n</div>\n\n\n   {/* Proposal */}\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Proposal</legend>\n            <div className=\"basicFeild\">\n<span>\n<input type=\"checkbox\" ref={register} name=\"dateProposal\" id=\"dateProposal\"></input>\n<label htmlFor=\"dateProposal\">Date of Proposal</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"proposedAmount\" id=\"proposedAmount\"></input>\n<label htmlFor=\"proposedAmount\">Proposed Amount</label>\n</span>\n<span>\n<input type=\"checkbox\"  ref={register} name=\"paymentTerms\" id=\"paymentTerms\"></input>\n<label htmlFor=\"paymentTerms\">Payment Terms</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"proposal_status\" id=\"proposal_status\"></input>\n<label htmlFor=\"proposal_status\">Proposal Status</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"acceptedAmount\" id=\"acceptedAmount\"></input>\n<label htmlFor=\"acceptedAmount\">Accepted Amount </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"paymentDeclinedReason\" id=\"paymentDeclinedReason\"></input>\n<label htmlFor=\"paymentDeclinedReason\">Payment decline reason </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"date_acceptance\" id=\"date_acceptance\"></input>\n<label htmlFor=\"date_acceptance\">Date of Acceptance / Decline</label>\n</span>\n{/* <span>\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\n<label htmlFor=\"amountReceived\">Total Amount Received</label>\n</span> */}\n<span>\n    <input type=\"checkbox\" ref={register} name=\"amountOutstanding\" id=\"amountOutstanding\"></input>\n<label htmlFor=\"amountOutstanding\">Total Amount Outstanding</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"amount_overdue\" id=\"amount_overdue\"></input>\n<label htmlFor=\"amount_overdue\">Total Amount Overdue</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"declinedDate\" id=\"declinedDate\"></input>\n<label htmlFor=\"declinedDate\">Payment decline date</label>\n</span>             \n            </div>      \n           </fieldset>\n           </div>\n   </div>\n\n   {/* Assignment */}\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Assignment</legend>\n            <div className=\"basicFeild\">\n           \n<span>\n<input type=\"checkbox\" ref={register} name=\"assignDate\" id=\"assignDate\"></input>\n<label htmlFor=\"assignDate\">Assignment Date</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"completionDate\" id=\"completionDate\"></input>\n<label htmlFor=\"completionDate\">Proposed Date of Completion/ Expected Date of Delivery</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"assignStatus\" id=\"assignStatus\"></input>\n<label htmlFor=\"assignStatus\">Assignment Status</label>\n</span>\n\n<span>  <input type=\"checkbox\" ref={register} name=\"completionQuery\" id=\"completionQuery\"></input>\n<label htmlFor=\"completionQuery\">Date of Completion of Query </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"assignTime\" id=\"assignTime\"></input>\n<label htmlFor=\"assignTime\">Time taken to complete the assignment</label>\n</span>\n            </div>    \n           </fieldset>\n           </div>\n   </div>\n\n\n   {/* Payment Receipt */}\n\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Payment Receipt</legend>  \n            <div className=\"basicFeild\">\n            <span>\n<input type=\"checkbox\" ref={register} name=\"receiptDate\" id=\"receiptDate\"></input>\n<label htmlFor=\"receiptDate\">Date of Receipt</label>\n</span>   \n<span>\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\n<label htmlFor=\"amountReceived\">Amount Received</label>\n</span>\n            </div>\n           </fieldset>\n           </div>\n   </div>\n   <button type=\"submit\" class=\"btn btn-success btn-lg my-3\">Generate Report</button>\n   <Mandatory />\n  </form>\n  </div>\n            </Layout>\n              </>\n       );\n   }\nexport default Report;","/home/pooja/MazarsRepo/src/pages/TL/Dashboard/Dashboard.js",["1982","1983","1984","1985","1986"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [allQueries, setAllQueries] = useState({\n    total: '',\n    inprogress_queries: '',\n    inprogress_allocation: '',\n    inprogress_proposal: '',\n    inprogress_assignment: '',\n    complete_query: '',\n    declined_queries: '',\n    admin_declined_query: '',\n    customer_declined_Query: '',\n    customer_declined_proposal: '',\n    Customer_declined_payment: '',\n\n    allproposal: '',\n    accepted_proposals: '',\n    InProgress: '',\n    inprogress_preparation: '',\n    inprogress_acceptance: '',\n    declined: '',\n  });\n\n\n  const [assignment, setAssignment] = useState({\n    inprogress: '',\n    complete: '',\n    client_discussion: '',\n    draft_report: '',\n    final_discussion: '',\n    final_report: '',\n    complete_inprocess: '',\n    customer_declined_payment: ''\n  });\n\n  const [payment, setPayment] = useState({\n    paid: '',\n    unpaid: '',\n    totalpayment: '',\n  });\n\n  const { total, inprogress_queries,\n    inprogress_allocation, inprogress_proposal,\n    inprogress_assignment, complete_query,\n    declined_queries, admin_declined_query,\n    customer_declined_Query, customer_declined_proposal,\n    Customer_declined_payment,\n    allproposal,\n    inprogress_preparation,\n    declined, inprogress_acceptance,\n    accepted_proposals, InProgress } = allQueries;\n\n\n  const {\n    inprogress,\n    complete, client_discussion, draft_report, final_discussion,\n    final_report, complete_inprocess,\n    customer_declined_payment } = assignment;\n\n  const {\n    paid,\n    unpaid,\n    totalpayment } = payment;\n\n\n  useEffect(() => {\n\n    const getAllQueries = () => {\n      axios\n        .get(`${baseUrl}/admin/totalComplete?tl_id=${JSON.parse(userid)}`)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setAllQueries({\n              total: response.data.result.total,\n              inprogress_queries: response.data.result.inprogress_queries,\n              inprogress_allocation: response.data.result.inprogress_allocation,\n              inprogress_proposal: response.data.result.inprogress_proposal,\n              inprogress_assignment: response.data.result.inprogress_assignment,\n              complete_query: response.data.result.complete_query,\n              declined_queries: response.data.result.declined_queries,\n              admin_declined_query: response.data.result.admin_declined_query,\n              customer_declined_Query: response.data.result.customer_declined_Query,\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\n\n              allproposal: response.data.result.proposal.allproposal,\n              InProgress: response.data.result.proposal.InProgress,\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\n            })\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n\n    const getAssignment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsCount?tl_id=${JSON.parse(userid)}`)\n        .then((response) => {\n        \n          if (response.data.code === 1) {\n            setAssignment({\n              inprogress: response.data.result.inprogress,\n              complete: response.data.result.complete,\n              client_discussion: response.data.result.client_discussion,\n              draft_report: response.data.result.draft_report,\n              final_discussion: response.data.result.final_discussion,\n              final_report: response.data.result.final_report,\n              complete_inprocess: response.data.result.complete_inprocess,\n              customer_declined_payment: response.data.result.customer_declined_payment,\n            })\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n\n    const getPayment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount?tl_id=${JSON.parse(userid)}`)\n        .then((response) => {\n         \n          if (response.data.code === 1) {\n            setPayment({\n              paid: response.data.result.paid,\n              unpaid: response.data.result.unpaid,\n              totalpayment: response.data.result.totalpayment,\n            })\n          }\n        })\n        .catch((error) => {\n         \n        });\n    };\n\n    getAllQueries();\n    getPayment();\n    getAssignment();\n  }, []);\n\n\n\n  var todaysDate = new Date();\n \n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n\n      <div className=\"row\">\n\n\n        <div className=\"col-md-3 content_header\">\n          <table className=\"table table-striped first main_table\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">All Queries</th>\n                <th>{total}</th>\n              </tr>\n            </thead>\n          </table>\n          <table className=\"table table-striped second main_table\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">Inprogress; Queries</th>\n                <th>{inprogress_queries}</th>\n              </tr>\n            </thead>\n\n            <tbody className=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Inprogress; Allocation</td>\n                <td>{inprogress_allocation}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Inprogress; Proposals</td>\n                <td>{inprogress_proposal}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Inprogress; Assignments</td>\n                <td>{inprogress_assignment}</td>\n              </tr>\n            </tbody>\n          </table>\n\n\n          <table className=\"table table-striped third main_table\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">Completed; Queries</th>\n                <th>{complete_query}</th>\n              </tr>\n            </thead>\n            <tbody className=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Completed; Assignments</td>\n                <td>{complete_query}</td>\n              </tr>\n            </tbody>\n          </table>\n\n\n          <table className=\"table table-striped forth main_table\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">Declined; Queries</th>\n                <th>{declined_queries}</th>\n              </tr>\n            </thead>\n\n            <tbody className=\"table_body\">\n              {/* <tr>\n                <td className=\"left_side\">Admin Declined; Queries</td>\n                <td>{admin_declined_query}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\"> Customer Declined; Queries</td>\n                <td>{customer_declined_Query}</td>\n              </tr> */}\n              <tr>\n                <td className=\"left_side\">Customer Declined; Proposals</td>\n                <td>{customer_declined_proposal}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Customer Declined; Payment</td>\n                <td>{Customer_declined_payment}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"col-md-3 content_header\">\n\n          <table className=\"table table-striped fifth main_table\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">All Proposals</th>\n                <th>{allproposal}</th>\n\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped sixth main_table\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">Inprogress; Proposals</th>\n                <th>{InProgress}</th>\n              </tr>\n            </thead>\n            <tbody classNameName=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Inprogress; Preparation</td>\n                <td>{inprogress_preparation}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Inprogress; Acceptance</td>\n                <td>{inprogress_acceptance}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <table className=\"table table-striped seventh main_table\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">Accepted; Proposals </th>\n                <th>{accepted_proposals}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped eight main_table\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">Customer Declined; Proposals</th>\n                <th>{declined}</th>\n              </tr>\n            </thead>\n          </table>\n\n\n        </div>\n\n        <div className=\"col-md-3 content_header\">\n          <table className=\"table table-striped ninth main_table\">\n            <thead className=\"assignment_thead\">\n              <tr>\n                <th className=\"left_side\">All Assignments</th>\n                <th>{inprogress + complete + +(customer_declined_payment)}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped tenth main_table\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Inprogress; Assignments</th>\n                <th>{inprogress}</th>\n              </tr>\n            </thead>\n\n            <tbody classNameName=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Client Discussion</td>\n                <td>{client_discussion}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Draft Reports</td>\n                <td>{draft_report}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Final Discussion</td>\n                <td>{final_discussion}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Delivery of Final Reports</td>\n                <td>{final_report}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Awaiting Completion</td>\n                <td>{complete_inprocess}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <table className=\"table table-striped tenth main_table\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Completed; Assignments</th>\n                <th>{complete}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped tenth main_table\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Customer Declined; Payment</th>\n                <th>{customer_declined_payment}</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n\n\n        <div className=\"col-md-3 content_header\">\n\n          <table className=\"table table-striped twelvth main_table\">\n            <thead className=\"payment_thead\">\n              <tr>\n                <th className=\"left_side\">All Payments</th>\n                <th>{totalpayment}</th>\n              </tr>\n            </thead>\n          </table>\n          <table className=\"table table-striped thirteen main_table\">\n            <thead className=\"payment_thead2\">\n              <tr>\n                <th className=\"left_side\">Paid</th>\n                <th>{paid}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped thirteen main_table\">\n            <thead className=\"payment_thead2\">\n              <tr>\n                <th className=\"left_side\">Unpaid</th>\n                <th>{unpaid}</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n      </div>\n\n\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/AddNew/AddNew.js",["1987","1988","1989"],"import React from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import './index.css'\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\"; \nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const onSubmit = (value) => {\n    \n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AddTaxProfessional`,\n      data: formData,\n    })\n      .then(function (response) {\n           \n        if (response.data.code === 1) {\n          alert.success(\"TP created  !\");\n          reset();\n        }\n      })\n      .catch((error) => {\n      \n      });\n\n  };\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Add New Tax Professionals</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n          <form onSubmit={handleSubmit(onSubmit)}>   \n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      ref={register}\n                    />\n                   \n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                    ref={register}\n                    />\n                    \n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      ref={register}\n                    />\n                    \n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n","/home/pooja/MazarsRepo/src/pages/TL/AddTeamProf/AddTeamProf.js",["1990","1991","1992","1993"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nfunction AddTeamProf() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getTaxProf();\n  }, []);\n\n  const getTaxProf = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setData(res.data.result);\n          setCount(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n   \n    {\n      dataField: \"post_name\",\n      text: \"TP post name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n\n    {\n      dataField: \"email\",\n      text: \"TP post email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name of TP\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"personal_email\",\n      text: \"Email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Mobile No\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      // dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter : function nameFormatter(cell, row) {\n        var digit2 = [];\n        digit2 = row.allpcat_id.split(\",\")\n       \n        return(\n          <>\n          \n          {\n             digit2.map((e) => {\n             return(\n               <>\n            <p className= {e.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e + \",\"}</p>  \n               </>\n             ) \n           })\n          }\n           </>\n        )\n      }\n    },\n   \n   \n    {\n      \n     \n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter : function nameFormatter(cell, row) {\n        var digit = [];\n         \n        digit = row.allcat_id.split(\",\")\n      \n      \n        return(\n          <>\n          \n         {\n            digit.map((e) => {\n            return(\n              <>\n             <p className= {row.allpcat_id.includes(\"Indirect\") === true ? \"dirCla\" : \"indirCla\"}> {e + \",\"}</p>  \n              </>\n            ) \n          })\n         }\n          </>\n        )\n      }\n    },\n   \n  ]\n  // delete data\n  const del = (id) => {\n    \n\n    axios\n      .get(`${baseUrl}/delete/TaxLead/${id}`)\n      .then(function (response) {\n                alert.success(\"successfully deleted \");\n        getTaxProf();\n      })\n      .catch((error) => {\n              });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Tax Professionals ({count})</CardTitle>\n            </Col>\n            <Col md=\"2\"></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n          />\n\n          {/* <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone No.</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((p, i) => (\n                <tr>\n                  <th scope=\"row\">{i + 1}</th>\n                  <td>{p.name}</td>\n                  <td>{p.email}</td>\n                  <td>{p.phone}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table> */}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddTeamProf;\n","/home/pooja/MazarsRepo/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js",["1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport { result } from \"lodash\";\n\nfunction AddAssingmentStages() {\n\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [assignmentStages, setAssignmentstages] = useState([]);\n  const [clientDiscussion, setClientDiscussion] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}&uid=${JSON.parse(userid)}`)\n      .then((res) => {\n       \n\n        if (res.data.code === 1) {\n            setAssignmentstages(res.data.result);\n          reset(res.data.result[0]);\n          setClientDiscussion(res.data.result[0].client_discussion)\n        }\n      });\n  };\n\n  const onSubmit = (value) => {\n  \n   \n    if(assignmentStages[0].paid_status=='0' && value.other_stage=='completed')\n    {    \n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Query no- \"+assignmentStages[0].assign_no+\" payment is due,Do you still want to process to complete this query !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.value === true) {\n        setLoading(true)\n        let formData = new FormData();\n    \n        formData.append(\"q_id\", id);\n        formData.append(\"user_id\", JSON.parse(userid));\n        formData.append(\"stage_1_status\", value.client_discussion);\n        formData.append(\"stage_2_status\", value.draft_report);\n        formData.append(\"stage_3_status\", value.final_discussion);\n        formData.append(\"stage_4_status\", value.delivery_report);\n        formData.append(\"stage_5_status\", value.other_stage);\n    \n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tl/postAssignmentStages`,\n          data: formData,\n        })\n          .then(function (response) {\n           \n            if (response.data.code === 1) {\n              setLoading(false)\n              Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\n              getAssignmentList();\n              history.push(\"/teamleader/assignment\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n            \n          });\n      }\n      else{\n\n        history.push(\"/teamleader/assignment\");\n       return false;\n      }\n    });\n\treturn false;\n    }\n    else{\n      setLoading(true)\n      let formData = new FormData();\n  \n      formData.append(\"q_id\", id);\n      formData.append(\"user_id\", JSON.parse(userid));\n      formData.append(\"stage_1_status\", value.client_discussion);\n      formData.append(\"stage_2_status\", value.draft_report);\n      formData.append(\"stage_3_status\", value.final_discussion);\n      formData.append(\"stage_4_status\", value.delivery_report);\n      formData.append(\"stage_5_status\", value.other_stage);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/postAssignmentStages`,\n        data: formData,\n      })\n        .then(function (response) {\n        \n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\n            getAssignmentList();\n            history.push(\"/teamleader/assignment\");\n          } else if (response.data.code === 0) {\n            setLoading(false)\n          }\n        })\n        .catch((error) => {\n       \n        });\n    }\n  \n  };\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Assignment Stages</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            {assignmentStages.map((p, i) => (\n              <>\n                {p.client_discussion == \"completed\" &&\n                  p.delivery_report == \"completed\" &&\n                  p.draft_report == \"completed\" &&\n                  p.final_discussion == \"completed\" &&\n                  p.other_stage == \"completed\" ? (\n                  <div class=\"col-md-12\">\n                    <div class=\"col-md-8\">\n                      <br />\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Client Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.client_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Draft Report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.draft_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Final Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.final_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Delivery of report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.delivery_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Awaiting Completion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.other_stage}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <br />\n                        <div class=\"form-group\">\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary\"\n                            disabled\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                ) : (\n                  <div class=\"col-md-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Client Discussion\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"client_discussion\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              \n                            </select>\n                          </div>\n                        </div>\n\n                        {/* <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div>\n                              <Link\n                                to={{\n                                  pathname: `/teamleader/assignment-form/${p.assign_id}`,\n                                  clients:`${clientDiscussion}`,\n                                }}\n                              >\n                                View Details\n                              </Link>\n                            \n                            </div>\n                          </div>\n                        </div> */}\n\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Draft Report\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"draft_report\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              \n                            </select>\n                          </div>\n                        </div>\n                        {/* <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div>\n                              <Link\n                                to={`/teamleader/view-report/${p.assign_no}`}\n                              >\n                                View Report\n                              </Link>\n                            </div>\n                          </div>\n                        </div> */}\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Final Discussion\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"final_discussion\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                             \n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Delivery of report\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"delivery_report\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              \n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Awaiting Completion\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"other_stage\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <br />\n                      <div class=\"form-group\">\n                        {\n                          loading ?\n                            <Spinner color=\"primary\" />\n                            :\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                              Submit\n                            </button>\n                        }\n                      </div>\n                    </form>\n                  </div>\n                )}\n              </>\n            ))}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddAssingmentStages;\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/ProposalTab.js",["2009","2010","2011","2012","2013"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllProposal from \"./AllProposal\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport AcceptedProposal from \"./AcceptedProposal\";\nimport DeclinedProposal from \"./DeclinedProposal\";\n\n\n\n\nfunction ProposalTab(props) {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n\n\n    const [allProposal, setAllProposal] = useState(\"\");\n    const [inprogressProposal, setInprogressProposal] = useState(\"\");\n    const [acceptedProposal, setAcceptedProposal] = useState(\"\");\n    const [declinedProposal, setDeclinedProposal] = useState(\"\");\n\n\n\n\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n\n\n    useLayoutEffect(() => {\n        setTabIndex(props.location.index || 0);\n    }, [props.location.index]);\n\n\n\n    useEffect(() => {\n\n        const AllProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAllProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const InprogressProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setInprogressProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const AcceptedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAcceptedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const DeclinedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setDeclinedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        AllProposal();\n        InprogressProposal();\n        AcceptedProposal();\n        DeclinedProposal();\n    }, []);\n\n\n\n    return (\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n            <div>\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                            All Proposals ({allProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                            Inprogress; Proposals ({inprogressProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n                            Accepted; Proposals ({acceptedProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n                            Customer Declined; Proposals ({declinedProposal})\n                        </Tab>\n                    </TabList>\n\n                    <TabPanel>\n                        <AllProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <InprogressProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <AcceptedProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <DeclinedProposal />\n                    </TabPanel>\n                </Tabs>\n            </div>\n        </Layout>\n    );\n}\n\nexport default ProposalTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/QueriesRecevied/QueriesRecevied.js",["2014","2015","2016","2017","2018"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\nimport moment from 'moment';\nfunction QueriesRecevied(props) {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [accept, setAccept] = useState();\n  const [tlName2, setTlname] = useState();\n  const[tp22, setTp22] = useState();\n  const [tpStatus, setTpstatus] = useState();\n  const [declined2, setDeclined2] = useState();\n  const [declinedStatus, setDeclinedStatus] = useState(false)\n  const [finalDate, setFinalDate] = useState()\n  const [qstatus, setqStatus] = useState();\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\n      \n        if (res.data.code === 1) {\n          setqStatus(res.data.result[0].query_status)\n          setTpstatus(res.data.result[0].tp_status);\n          setAccept(res.data.result[0].query_status)\n          setTlname(res.data.result[0].tlname);\n          setTp22(res.data.result[0].tpname);\n          if(res.data.history_queries[0] === undefined){\n\n          }\n          else{\n            setDisplayHistory({\n              tlname: res.data.proposal_queries,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n            let a = moment(res.data.result[0].final_date);\n            let b = moment(res.data.history_queries[0].acpt_reject_time)\n            let c = a.diff(b)\n            let d = moment.duration(c)\n            let finalDate = d.days() + 1;\n           setFinalDate(finalDate)\n          }\n          if(res.data.result[0].status ==\"Declined Query\"){\n          let a = res.data.result[0].declined_date.split(\" \")[0].split(\"-\").reverse().join(\"-\")\n            setDeclined2(a)\n           setDeclinedStatus(true)\n          }\n          if (res.data.result) {\n            if (res.data.result[0].name == null) {\n            \n            }\n            else {\n              setSubmitData(res.data.result);\n            }\n          }\n\n          if (res.data.additional_queries) {\n            setDisplaySpecific(res.data.additional_queries);\n          }\n          if (res.data.payment_detail) {\n            setPaymentDetails(res.data.payment_detail);\n          }\n          if (res.data.feedback_detail) {\n            setFeedback(res.data.feedback_detail);\n          }\n          if (res.data.result[0].assign_no) {\n            setAssingmentNo(res.data.result[0].assign_no);\n          }\n\n          if (res.data.reports) {\n            setReports(res.data.reports);\n          }\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n\n          \n          try {\n           \n            var myYear = JSON.parse(assementItem);\n           \n            setYear(myYear);\n          } catch (e) {\n           \n          }\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            \n            setPurpose(myPurpose);\n           \n          } catch (e) {\n           \n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n            });\n           \n          \n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          // if (res.data.history_queries.length > 0) {\n          //   setDisplayHistory({\n          //     tlname: res.data.history_queries[0].tname,\n          //     date_of_allocation:\n          //       res.data.history_queries[0].date_of_allocation,\n          //   });\n          // }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n   if(assingNo === undefined){\n     return false\n   }\n   else{\n    axios\n    .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n    .then((res) => {\n\n      if (res.data.code === 1) {\n        setDisplayQuery(res.data.result);\n      }\n    });\n   }\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"schedule\">\n            <h3>Query Detail</h3>\n          </div>\n        </div>\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n            <div\n              class=\"card-header\"\n              id=\"headingOne\"\n              style={{ padding: \".5rem .1rem\" }}\n            >\n              <h2 class=\"mb-0 query ml-3\">\n                <Link\n                  to={{\n                    pathname: `/teamleader/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              </h2>\n            </div>\n            {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                getQuery={getQuery}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n                accept = {accept}\n                tpStatus={tpStatus}\n                tlName2={tlName2}\n                tp22 = {tp22}\n                finalDate={finalDate}\n                qstatus={qstatus}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n\n","/home/pooja/MazarsRepo/src/pages/TL/EditTP/EditTP.js",["2019","2020"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction EditTP() {\n  const { id } = useParams();\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const { name, email, phone } = user;\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n\n      axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\n      \n        if (res.data.code === 1) {\n          setUser({\n            name: res.data.result[0].name,\n            email: res.data.result[0].email,\n            phone: res.data.result[0].phone,\n          });\n        }\n      });\n    };\n    getTeamLeader();\n  }, [id]);\n\n\n  const onSubmit = (value) => {\n \n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"id\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/updateTP`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          alert.success(\"TL updated  !\");\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Edit Tax Professional</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      defaultValue={name}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                      defaultValue={email}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      defaultValue={phone}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default EditTP;\n","/home/pooja/MazarsRepo/src/pages/TL/QueryAssingment/QueryAssingment.js",["2021","2022","2023","2024","2025","2026","2027","2028","2029"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport CommonServices from \"../../../common/common\"\n\n\nconst Schema = yup.object().shape({\n  p_taxprof: yup.string().required(\"\"),\n  p_expdeldate: yup.string().required(\"\"),\n});\n\n\nfunction QueryAssingment() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [taxProfessionDisplay, setTaxProfessionDisplay] = useState([]);\n  const [taxID, setTaxID] = useState(null);\n  const [teamName, setTeamName] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const [query, setQuery] = useState(true);\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const tpkey = window.localStorage.getItem(\"tpkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n    expect_dd: \"\",\n  });\n\n  const { queryNo, timelines, custId, expect_dd } = queryData;\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n\n\n  useEffect(() => {\n    getTaxProfession();\n    getQueryData();\n  }, []);\n\n  const getTaxProfession = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userId)}&&q_id=${id}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setTaxProfessionDisplay(res.data.result);\n        }\n      });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      \n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n          expect_dd: CommonServices.changeFormateDate(res.data.result[0].Exp_Delivery_Date),\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${queryNo}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setQuery(false);\n          // setHideQuery(res.data.meta);\n          setHideQuery({\n            name: res.data.meta[0].name,\n            timeline: res.data.meta[0].timeline,\n            date_allocation: res.data.meta[0].date_allocation,\n            expdeliverydate: res.data.meta[0].expdeliverydate,\n          });\n        }\n      });\n  };\n\n  const handleChange = (e) => {\n   \n    setTaxID(e.target.value)\n    var value = taxProfessionDisplay.filter(function (item) {\n      return item.id == e.target.value\n    })\n  \n    setTeamName(value[0].name)\n  }\n\n\n  const onSubmit = (value) => {\n \n    setLoading(true)\n\n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", taxID);\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"tp\");\n    formData.append(\"types\", \"tp\");\n    formData.append(\"name\", teamName);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", expdeliverydate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddQueryAssignment`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Query assigned successfully.\"\n          Alerts.SuccessNormal(variable)\n         \n          getQuery();\n          reset();\n          history.push('/teamleader/queriestab')\n        } if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <Link\n                to={{\n                  pathname: `/teamleader/queriestab`,\n                  index: 3,\n                }}\n              >\n                <button\n                  class=\"btn btn-success ml-3\"\n                >\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\n                  Go Back\n                </button>\n              </Link>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h2>Query Allocation</h2>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        {\n          loading ?\n            <Loader />\n            :\n            <>\n              <CardHeader>\n                <div class=\"row mt-3\">\n                  <div class=\"col-xl-12 col-lg-12 col-md-12\">\n                    <div class=\"col-md-12\">\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <table class=\"table\">\n                          <thead>\n                            <tr>\n                              <th scope=\"col\">Query No.</th>\n                              <th scope=\"col\">Tax Professional<span className=\"declined\">*</span></th>\n                              <th scope=\"col\">Expected Timeline</th>\n                              <th scope=\"col\">Exp. Delivery Date<span className=\"declined\">*</span></th>\n                              <th scope=\"col\">Action</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {query ? (\n                              <tr>\n                                <th scope=\"row\">{queryNo}</th>\n                                <td>\n                                  <select\n                                    className={classNames(\"form-control\", {\n                                      \"is-invalid\": errors.p_taxprof,\n                                    })}\n                                    name=\"p_taxprof\"\n                                    ref={register}\n                                    onChange={(e) => handleChange(e)}\n                                  >\n                                    <option value=\"\">--select--</option>\n                                    {taxProfessionDisplay.map((p, index) => (\n                                      <option key={index} value={p.id}>\n                                        { p.post_name + \"-\"   + p.name}\n                                      </option>\n                                    ))}\n                                  </select>\n                                  {errors.p_taxprof && (\n                                    <div className=\"invalid-feedback\">\n                                      {errors.p_taxprof.message}\n                                    </div>\n                                  )}\n                                </td>\n\n                                <td>\n                                  <input\n                                    type=\"text\"\n                                    ref={register}\n                                    name=\"p_timelines\"\n                                    value={timelines}\n                                    class=\"form-control\"\n                                  />\n                                </td>\n                                <td>\n                                  <input\n                                    type=\"text\"\n                                    ref={register}\n                                    name=\"p_expdeldate\"\n                                    className={classNames(\"form-control\", {\n                                      \"is-invalid\": errors.p_expdeldate,\n                                    })}\n                                    value={expect_dd}\n                                    min={item}\n                                  />\n                                  {errors.p_expdeldate && (\n                                    <div className=\"invalid-feedback\">\n                                      {errors.p_expdeldate.message}\n                                    </div>\n                                  )}\n                                </td>\n\n                                <td>\n                                  <button type=\"submit\" class=\"btn btn-success\">\n                                    Assign\n                                  </button>\n                                </td>\n                              </tr>\n                            ) : (\n                              <tr>\n                                <th scope=\"row\">{queryNo}</th>\n                                <td>\n                                  <select class=\"form-control w-75 p-0\" disabled>\n                                    <option>{hideQuery.name}</option>\n                                  </select>\n                                </td>\n\n                                <td>\n                                  <input\n                                    type=\"text\"\n                                    ref={register}\n                                    name=\"p_timelines\"\n                                    value={hideQuery.timeline}\n                                    disabled\n                                    class=\"form-control\"\n                                  />\n                                </td>\n                                <td>\n                                  <input\n                                    type=\"date\"\n                                    ref={register}\n                                    name=\"p_expdeldate\"\n                                    value={hideQuery.expdeliverydate}\n                                    disabled\n                                    class=\"form-control\"\n                                  />\n                                </td>\n\n                                <td>\n                                  <button class=\"btn btn-success\" disabled>\n                                    Assigned\n                                  </button>\n                                </td>\n                              </tr>\n                            )}\n                          </tbody>\n                        </table>\n                      </form>\n                      <Mandatory />\n                    </div>\n                  </div>\n                </div>\n              </CardHeader>\n            </>\n        }\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n\n// var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n","/home/pooja/MazarsRepo/src/pages/TL/FeedbackTab/FeedbackTab.js",["2030","2031","2032","2033","2034"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router\";\nfunction FeedbackTab() {\n  const alert = useAlert();\nconst history = useHistory();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [feedbackData, setFeedBackData] = useState([]);\n\n  useEffect(() => {\n    getFeedback();\n  }, []);\n\n  const getFeedback = () => {\n    axios\n      .get(`${baseUrl}/customers/getFeedback?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setFeedBackData(res.data.result);\n        }\n      });\n  };\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"10px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"60px\" };\n      },\n    \n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"40px\" };\n      },\n    },\n    {\n      text: \"Feedback\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"150px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n    \n        return (\n          <>\n            <div>\n              {\n                row.tl_read == \"0\" ?\n                  <div\n                    style={{\n                      cursor: \"pointer\",\n                      display: \"flex\", justifyContent: \"space-between\"\n                    }}\n                    onClick={() => readNotification(row.id)}\n                    title=\"unread\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                  </div>\n\n                  :\n                  <div\n                    style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\n                    title=\"read\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                  </div>\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  // readnotification\n  const readNotification = (id) => {\n\n  \n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/markReadFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          // alert.success(\"successfully read!\");\n          getFeedback()\n          history.push(\"/teamleader/feedback\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={feedbackData}\n              columns={columns}\n              rowIndex\n            />\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/PaymentStatus.js",["2035","2036","2037","2038"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllPayment from \"./AllPayment\";\nimport Unpaid from \"./Unpaid\";\nimport Paid from \"./Paid\";\n\n\n\nfunction QueriesTab(props) {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n       \n        setAllPayment(res.data.result.length);\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}&status=1`)\n      .then((res) => {\n       \n        setPaid(res.data.result.length);\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userId)}&status=2`)\n      .then((res) => {\n       \n        setUnpaid(res.data.result.length);\n      });\n  };\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Paid ({unpaid})\n            </Tab>\n\n          </TabList>\n\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/SendProposal.js",["2039","2040"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {  useParams } from \"react-router-dom\";\nimport ProposalComponent from \"./ProposalComponent\";\n\n\nfunction SendProposal() {\n    const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <ProposalComponent id={id}/>\n      </Layout>\n    </>\n  );\n}\n\nexport default SendProposal;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AssignmentTab.js",["2041","2042","2043","2044"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\n\nimport AllAssignment from \"./AllAssignment\";\nimport DraftReportTab from \"./DraftReportTab\";\nimport DeliveryFinalTab from \"./DeliveryFinalTab\";\n\n\n\nfunction QueriesTab(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n\n  const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\n  const [draft, setDraft] = useState(\"\");\n  const [final, setFinal] = useState();\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n\n  useEffect(() => {\n\n    const AllAssignment = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setAllAssignmentCount(res.data.result.length);\n          }\n        });\n    };\n\n    const getDraftReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setDraft(res.data.result.length);\n          }\n        });\n    };\n\n    const getFinalReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setFinal(res.data.result.length);\n          }\n        });\n    };\n\n    AllAssignment();\n    getDraftReports();\n    getFinalReports();\n  }, []);\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Assignments ({allAssignmentCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Draft Reports ({draft})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Inprogress; Delivery of Final ({final})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <DraftReportTab />\n          </TabPanel>\n\n          <TabPanel>\n            <DeliveryFinalTab />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/QueriesTab.js",["2045","2046","2047","2048","2049","2050"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\nimport CompleteData from \"../CompleteData/CompleteData\";\nimport AllQuery from \"./AllQuery\";\n\n\n\nfunction QueriesTab(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setcomplete] = useState(\"\");\n\n  const [allQuery, setAllQuery] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n  useEffect(() => {\n    const AllQuery = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setAllQuery(res.data.result.length);\n          }\n        });\n    };\n\n    const getPendindForAccepttence = () => {\n      axios\n        .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setPendingForAcceptence(res.data.result.length);\n          }\n        });\n    };\n\n    const getIncomplete = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setIncomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const getComplete = () => {\n      axios\n      .get(`${baseUrl}/tl/pendingAllocation?uid=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setcomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const Declined = () => {\n      axios\n        .get(`${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setDeclined(res.data.result.length);\n          }\n        });\n    };\n\n    getPendindForAccepttence();\n    getIncomplete();\n    getComplete();\n    AllQuery();\n    Declined()\n  }, []);\n\n  const updateTab = (key) => {\n    setTabIndex(key)\n  }\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Query ({allQuery})\n            </Tab>\n           \n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Queries ({incomplete})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Pending For Acceptence ({pendindForAccepttence})\n            </Tab>\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n            Pending for assignment ({complete})\n            </Tab>\n            \n          </TabList>\n\n\n          <TabPanel>\n            <AllQuery\n            />\n          </TabPanel>\n         \n          <TabPanel>\n            <InCompleteData\n            />\n          </TabPanel>\n          <TabPanel>\n            <PendingForAcceptence\n              updateTab={updateTab}\n            />\n          </TabPanel>\n          <TabPanel>\n            <CompleteData\n            />\n          </TabPanel>\n         \n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n  // const CountPendingForAcceptence = (data) => {\n  //   setPendingForAcceptence(data);\n  // };\n\n  // const CountIncomplete = (data) => {\n  //   setIncomplete(data);\n  // };\n\n  // const CountComplete = (data) => {\n  //   setComplete(data);\n  // };","/home/pooja/MazarsRepo/src/pages/TL/PendingReceived/PendingReceived.js",["2051","2052","2053","2054","2055"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl , baseUrl2} from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const alert = useAlert();\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getQueryDetails();\n    getAdditionalQuery();\n  }, [assingNo]);\n\n  const getQueryDetails = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setSubmitData(res.data.result);\n        setDisplaySpecific(res.data.additional_queries);\n        setAssingmentNo(res.data.result[0].assign_no);\n      }\n    });\n  };\n\n  const getAdditionalQuery = () => {\n  if(assingNo === undefined){\n    return false\n  }\n  else{\n    axios\n    .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n    .then((res) => {\n     \n      if (res.data.code === 1) {\n        setDisplayQuery(res.data.result);\n      }\n    });\n  }\n  };\n\n\n\n\n  const acceptHandler = (key) => {\n    \n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          alert.success(\"Query accepted\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n    \n      });\n  };\n\n  const rejectHandler = (key) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          alert.success(\"Query rejected\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n    \n      });\n  };\n\n \n\n     //change date format\n     function ChangeFormateDate(oldDate) {\n      \n      if (oldDate == null) {\n        return null;\n      }\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    }\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              {/* <p>{assingNo}</p> */}\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`${baseUrl2}/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <th scope=\"row\">Accept / Reject</th>\n                    <td>\n                    <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-evenly\",\n                          color: \"#6967ce\",\n                          cursor: \"pointer\",\n                        }}\n                        id=\"div1\"\n                      >\n                        <div\n                          id=\"accept\"\n                          title=\"Accept Assignment\"\n                          onClick={() => acceptHandler(p)}\n                        >\n                          <i class=\"fa fa-check\" style={{ color: \"green\" }}></i>\n                        </div>\n                        <div\n                          id=\"reject\"\n                          title=\"Reject Assignment\"\n                          onClick={() => rejectHandler(p)}\n                        >\n                          <i class=\"fa fa-times\" style={{ color: \"red\" }}></i>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/home/pooja/MazarsRepo/src/pages/TL/ViewReport/ViewReport.js",["2056","2057","2058","2059","2060","2061"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nfunction ViewReport() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { id } = useParams();\n  const history = useHistory();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getReport();\n  }, []);\n\n  const getReport = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          setData(response.data.result);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>ViewReport</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <div class=\"my-3\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"row\">S.No</th>\n                  <th scope=\"row\">Report</th>\n                </tr>\n              </thead>\n              {data.length > 0\n                ? data.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>\n                        {p.document && (\n                          <p style={{ display: \"flex\" }}>\n                            <a\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\n                              target=\"_blank\"\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))\n                : null}\n            </table>\n          </div>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentForm/AssignmentForm.js",["2062","2063","2064","2065","2066","2067","2068","2069","2070","2071","2072","2073"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl,ReportUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\n\nfunction AssignmentForm(props) {\n\n\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset, setValue } = useForm();\n  const history = useHistory();\n  const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [assignNo, setAssignNo] = useState(null);\n  const [data, setData] = useState([]);\n  const [store, setStore] = useState(null);\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          setAssignNo(res.data.result[0].assign_no);\n        }\n      });\n  };\n\n  useEffect(() => {\n    getDetails();\n  }, [assignNo]);\n\n  const getDetails = (value) => {\n  \n    let formData = new FormData();\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", \"client_discussion\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  const onSubmit = (value) => {\n   \n    let formData = new FormData();\n    formData.append(\"assign_id\", id);\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", \"client_discussion\");\n    formData.append(\"notes\", value.p_notes);\n    formData.append(\"receive_sent_date\", value.p_date);\n    formData.append(\"notes_type\", value.p_type);\n    formData.append(\"type_info\", value.p_info);\n    formData.append(\"upload\", value.p_upload[0]);\n    formData.append(\"send_received\", item);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/addAssignmentStages`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          alert.success(<Msg />);\n          getDetails();\n          reset();\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>success</p>\n      </>\n    );\n  };\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Client Discussion Information</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          {props.location.clients == \"completed\" ? (\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Titles</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"2\"\n                        name=\"p_notes\"\n                        ref={register}\n                        disabled\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Date</label>\n                      <input\n                        type=\"date\"\n                        name=\"p_date\"\n                        className=\"form-control\"\n                        ref={register}\n                        disabled\n                      />\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Upload Documents</label>\n                      <input\n                        type=\"file\"\n                        name=\"p_upload\"\n                        ref={register}\n                        className=\"form-control-file\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Send/Received</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setItem(e.target.value)}\n                        disabled\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"send\">Send</option>\n                        <option value=\"received\">Received</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Notes Type</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setStore(e.target.value)}\n                        disabled\n                      >\n                        <option value=\"\">--select type--</option>\n                        <option value=\"email\">Email</option>\n                        <option value=\"phone\">Phone</option>\n                        <option value=\"other\">Other</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-2\">\n                    <div class=\"form-group\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block\"\n                        disabled\n                      >\n                        submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          ) : (\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Titles</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"2\"\n                        name=\"p_notes\"\n                        ref={register}\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Date</label>\n                      <input\n                        type=\"date\"\n                        name=\"p_date\"\n                        className=\"form-control\"\n                        ref={register}\n                      />\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Upload Documents</label>\n                      <input\n                        type=\"file\"\n                        name=\"p_upload\"\n                        ref={register}\n                        className=\"form-control-file\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Send/Received</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setItem(e.target.value)}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"send\">Send</option>\n                        <option value=\"received\">Received</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Notes Type</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--select type--</option>\n                        <option value=\"email\">Email</option>\n                        <option value=\"phone\">Phone</option>\n                        <option value=\"other\">Other</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  {store == \"email\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  {store == \"phone\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Phone</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n                  {store == \"other\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Notes info</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-2\">\n                    <div class=\"form-group\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block\"\n                      >\n                        submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          )}\n        </CardHeader>\n\n        <CardBody>\n          <CardHeader>\n            <Row>\n              <Col md=\"4\">\n                <h4>List</h4>\n              </Col>\n            </Row>\n          </CardHeader>\n          <div class=\"my-3\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"row\">S.No</th>\n                  <th scope=\"row\">Documents</th>\n                  <th scope=\"row\">Titles</th>\n                  <th scope=\"row\">Notes type</th>\n                  <th scope=\"row\">Notes Info</th>\n                  <th scope=\"row\">Date</th>\n                  <th scope=\"row\">send/Received</th>\n                </tr>\n              </thead>\n              {data.length > 0\n                ? data.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>\n                        {p.document && (\n                          <p style={{ display: \"flex\" }}>\n\n                            <a\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\n                              target=\"_blank\"\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </p>\n                        )}\n                      </td>\n                      <td>{p.notes}</td>\n                      <td>{p.notes_type}</td>\n                      <td>{p.type_info}</td>\n                      <td>{p.receive_sent_date}</td>\n                      <td>{p.send_received}</td>\n                    </tr>\n                  </tbody>\n                ))\n                : null}\n            </table>\n          </div>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentForm;\n","/home/pooja/MazarsRepo/src/pages/TL/ForgetPassword/ForgetPassword.js",["2074","2075","2076","2077"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Link } from \"react-router-dom\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\n\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"\"),\n});\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n          props.history.push(`/teamleader/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n          Alerts.ErrorNormal(\"Please enter correct email address.\")\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"null\") {\n     \n    } else {\n      return item\n    }\n\n  }\n\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n          {\n            loading ?\n              <div class=\"col-md-12\">\n                <Spinner color=\"primary\" />\n              </div>\n              :\n              <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    defaultValue={valueHandler()}\n\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Get OTP\n                </button>\n                <Link to=\"/teamleader/login\" style={{ \"margin\": \"10px\" }}>\n                  <button type=\"submit\" className=\"btn btn-secondary\">\n                    Cancel\n                  </button>\n                </Link>\n\n                <Mandatory />\n              </form>\n          }\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/home/pooja/MazarsRepo/src/pages/TL/ViewNotification/ViewNotification.js",["2078","2079","2080","2081","2082"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\nfunction ViewNotification() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n;\n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            {/* <thead>\n              <tr>\n                <th scope=\"col\">Titles</th>\n                <th scope=\"col\">Data</th>\n              </tr>\n            </thead> */}\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> Sender</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                  {data.type}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/home/pooja/MazarsRepo/src/pages/TL/NewPassword/NewPassword.js",["2083","2084","2085","2086","2087"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\n\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    getTime()\n  }, []);\n\n\n  const getTime = () => {\n    var timerOn = true;\n    function timer(remaining) {\n      var s = remaining % 60;\n      s = s < 10 ? '0' + s : s;\n      setTime(remaining)\n      remaining -= 1;\n      if (remaining >= 0 && timerOn) {\n        setTimeout(function () {\n          timer(remaining);\n        }, 1000);\n        return;\n      }\n      setDisabled(true)\n    }\n    timer(180);\n  }\n\n\n  const onSubmit = (value) => {\n\n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_code);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/teamleader/login\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Please enter correct details\")\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address.\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    autocomplete=\"off\"\n                    ref={register({ required: true })}\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                </div>\n              </div>\n            </div>\n\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"btn btn-primary\" >\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id} setDisabled={setDisabled} getTime={getTime} setLoading={setLoading} />\n              :\n              null\n          }\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default NewPassword;\n\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/teamleader/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"btn btn-secondary\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}","/home/pooja/MazarsRepo/src/pages/TL/Message/Message.js",["2088","2089","2090","2091","2092","2093","2094"],"/home/pooja/MazarsRepo/src/pages/TL/Chatting/Chatting.js",["2095","2096","2097","2098","2099","2100","2101","2102","2103"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\n\nconst Schema = yup.object().shape({\n  msg_type: yup.string().required(\"\"),\n  p_message: yup.string().required(\"\"),\n});\n\n\n\nfunction Chatting(props) {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const { message_type, query_id, query_No, routes } = data\nconst [showTl, setShowTl] = useState(false)\n\n  useEffect(() => {\n   \n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataTL\");\n\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, []);\n\n  useEffect(() => {\n    checkAssigned();\n  }, [item]);\n\n  const checkAssigned = () => {\n    axios\n    .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${query_No}`).then((res) => {\n           if(res.data.code === 0){\n                setShowTl(false)\n           }\n           else{\n             setShowTl(true)\n           }\n         })\n  };\n\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.msg_type);\n    formData.append(\"message\", value.p_message);\n\n    {\n      value.p_to != undefined ?\n    \n    formData.append(\"to\", value.p_to)\n  : formData.append(\"to\", \"customer\") }\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          reset();\n          setLoading(false)\n          var variable = \"Message sent successfully.\"\n          Alerts.SuccessNormal(variable)\n          props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={query_No}\n                          disabled\n                        />\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message Type</label>\n                        {\n                          item &&\n                          <select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.msg_type,\n                            })}\n                            name=\"msg_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            defaultValue={item}\n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n                        }\n                        {errors.msg_type && (\n                          <div className=\"invalid-feedback\">\n                            {errors.msg_type.message}\n                          </div>\n                        )}\n\n                      </div>\n                      {showTl === true ?\n                      <div class=\"form-group\">\n                        <label>To<span className=\"declined\">*</span></label>\n                        <select\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_to,\n                          })}\n                          name=\"p_to\"\n                          ref={register}\n                          style={{ height: \"33px\" }}\n                        >\n                          <option value=\"\">--select--</option>\n                          <option value=\"customer\">Customer</option>\n                        \n                          <>\n                          <option value=\"tp\">Tax Professional</option>\n                          <option value=\"both\">Both</option> \n                          </>\n                        </select>\n                        {errors.p_to && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_to.message}\n                          </div>\n                        )}\n                      </div>\n: \n<div class=\"form-group\">\n\n<input \ntype=\"text\"\n  className={classNames(\"form-control\", {\n    \"is-invalid\": errors.p_to,\n  })}\n  disabled\n  hidden\n  value=\"customer\"\n  name=\"pcustomer_to\"\n  ref={register}\n  style={{ height: \"33px\" }}/>\n  \n\n</div> }\n                      <div class=\"form-group\">\n                        <label>Message<span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          placeholder=\"Message text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_message\"\n                        ></textarea>\n                        {errors.p_message && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_message.message}\n                          </div>\n                        )}\n                      </div>\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Send\n                      </button>\n                    </div>\n                  </div>\n                </form>\n                <Mandatory />\n              </>\n          }\n        </CardBody>\n\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Chatting;\n","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Schedule.js",["2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Recording from \"../Recording/Recording\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\nimport \"../../Admin/AdminStyle/style.css\";\nfunction Schedule() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n      backgroundColor: \"grey\",\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n    const myStyle2 = {\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      backgroundColor: \"blue\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n  \n    return (\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n     <Demo />\n    </Layout>\n    );\n}\n\nexport default Schedule;","/home/pooja/MazarsRepo/src/views/PaymentStatus/Paid.js",["2119","2120","2121","2122","2123","2124","2125","2126"],"/home/pooja/MazarsRepo/src/views/PaymentStatus/Unpaid.js",["2127","2128","2129","2130","2131","2132","2133","2134","2135","2136"],"/home/pooja/MazarsRepo/src/views/PaymentStatus/AllPayment.js",["2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147"],"/home/pooja/MazarsRepo/src/config/config.js",[],"/home/pooja/MazarsRepo/src/components/Layout/Layout.js",["2148"],"import Sidebar from \"../Admin-Sidebar/Admin-Sidebar\";\nimport Header from \"../Admin-Header/Admin-Header\";\nimport Footer from \"../Admin-Footer/Admin-Footer\";\n\n\n\nfunction Layout(props) {\n\n  const {\n    custDashboard, adminDashboard, TLDashboard,\n    TPDashboard,\n    custUserId, adminUserId, TLuserId, TPuserId, feedbackNumber } = props\n    \n  return (\n    <>\n      <Header\n        custUserId={custUserId}\n        adminUserId={adminUserId}\n        TLuserId={TLuserId}\n        TPuserId={TPuserId}\n        feedbackNumber = {feedbackNumber}\n      />\n\n      <Sidebar\n        custDashboard={custDashboard}\n        adminDashboard={adminDashboard}\n        TLDashboard={TLDashboard}\n        TPDashboard={TPDashboard}\n        feedbackNumber = {feedbackNumber}\n      />\n\n      <div class=\"app-content content\" style={{ marginTop: \"75px\" }}>\n        <div class=\"content-wrapper\">\n          <div class=\"content-body\">\n            {props.children}\n          </div>\n        </div>\n      </div>\n\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default Layout;\n","/home/pooja/MazarsRepo/src/components/Loader/Loader.js",[],"/home/pooja/MazarsRepo/src/components/Common/Mandatory.js",[],"/home/pooja/MazarsRepo/src/common/Alerts.js",["2149"],"import Swal from \"sweetalert2\";\n\n// SuccessLogin\nconst SuccessLogin = () => {\n    return (\n        Swal.fire(\n            'Success',\n            'Login Successfully',\n            'success'\n        )\n    )\n}\n\n\n// ErrorLogin\nconst ErrorLogin = () => {\n    return (\n        Swal.fire(\n            \"Oops...\",\n            \"Error : Incorrect Email OR Password\",\n            \"error\"\n        )\n    )\n}\n\n\n// ErrorLogin\nconst ErrorOTP = (variable) => {\n    return (\n        Swal.fire(\n            \"Oops...\",\n            ` ${variable} </br> `,\n            \"error\"\n        )\n    )\n}\n\n\n// Success\nconst SuccessMsg = (variable, key) => {\n    return (\n        Swal.fire(\n            'Success',\n            ` ${variable ? variable : \"\"} </br> </br>\n             ${key.faill ? key.faill : \"\"} </br></br> \n              ${key.success ? key.success : \"\"}`,\n            'success'\n        )\n    )\n}\n\n\n// Success\nconst SuccessReport = (message) => {\n    if (message.invalid) {\n        Swal.fire(\n            \"Error\",\n            `${message.invalid}`,\n            \"error\"\n        )\n    } else if (message.faill && message.success) {\n        Swal.fire(\n            'Success',\n            ` ${message.faill} <br/><br/> \n            ${message.success}`,\n            'success'\n        )\n    } else if (message.success) {\n        Swal.fire(\n            'Success',\n            ` ${message.success}`,\n            'success'\n        )\n    }\n    else if (message.faill) {\n        Swal.fire(\n            'Error',\n            ` ${message.faill} <br/>`,\n            'error'\n        )\n    }\n}\n\n\n\n\n// ErrorLogin\nconst ErrorDelete = () => {\n    return (\n        Swal.fire(\n            \"Error\",\n            \"Permission denied.\",\n            \"error\"\n        )\n    )\n}\n\n// ErrorLogin\nconst ErrorEdit = () => {\n    return (\n        Swal.fire(\n            \"Error\",\n            \"Permission denied.\",\n            \"error\"\n        )\n    )\n}\n\n\n// SuccessNormal\nconst SuccessNormal = (variable) => {\n    return (\n        Swal.fire(\n            'Success',\n            ` ${variable} </br> `,\n            'success'\n        )\n    )\n}\n\n\n// ErrorNormal\nconst ErrorNormal = (variable) => {\n    return (\n        Swal.fire(\n            'Error',\n            ` ${variable} </br> `,\n            'error'\n        )\n    )\n}\n\n\n\nexport default {\n    SuccessLogin,\n    ErrorLogin,\n    SuccessMsg,\n    SuccessNormal,\n    SuccessReport,\n    ErrorDelete,\n    ErrorEdit,\n    ErrorNormal,\n    ErrorOTP,\n};\n\n\n\n\n// Swal.fire(`oops : ${response.data.result}`)","/home/pooja/MazarsRepo/src/common/common.js",["2150","2151"],"//change date format\n\nconst changeFormateDate = (oldDate) => {\n  if (oldDate == null) {\n    return null;\n  }\n  return oldDate.toString().split(\"-\").reverse().join(\"-\");\n};\n\n\n\n\n//remove time with date\nconst removeTime = (oldDate) => {\n  if (oldDate == null) {\n    return null;\n  }\n  return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n};\n\n\n\n\n//removeDATE with TIME\nconst removeDate = (oldDate) => {\n  if (oldDate == null) {\n    return null;\n  } else {\n    var split = oldDate.split(\" \");\n    var a = split[0];\n    var b = split[1];\n    return b;\n  }\n};\n\n\n//capitalizeFirstLetter\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n\nexport default {\n  changeFormateDate,\n  removeTime,\n  removeDate,\n  capitalizeFirstLetter\n};\n\n// var updatedate = oldDate.split(\" \")[0];\n// var updatedate = oldDate.slice(0, 10);\n","/home/pooja/MazarsRepo/src/pages/TL/Schedule/Demo.js",["2152","2153","2154","2155","2156","2157","2158","2159","2160","2161","2162","2163","2164","2165"],"import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  Resources,\n  MonthView,\n  Appointments,\n  AppointmentTooltip,\n  AppointmentForm,\n  EditRecurrenceMenu,\n  DragDropProvider,\n  WeekView,\n  DayView,\n  DateNavigator,\n  ViewSwitcher,\n  TodayButton,\n  Toolbar,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as Cookies from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport Alerts from \"../../../common/Alerts\";\nimport Loader from \"../../../components/Loader/Loader\";\n\n\n\nfunction Demo() {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const userEmail = window.localStorage.getItem(\"tlEmail\")\n  const em = JSON.parse(userEmail)\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [assignmentdata, setAssignmentData] = useState([]);\n  const [owner, setOwner] = useState([]);\n  const [read, setRead] = useState(false);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n  var date = new Date();\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n  const [currentDate, setCurrentDate] = useState(convert(date));\n\n  useEffect(() => {\n    getData();\n    getAssignmentNo();\n    getUsers();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=${JSON.parse(userId)}`)\n      .then((res) => {\n       \n        var a = res.data.result.items;\n        if (a) {\n          setData(a.map(mapAppointmentData));\n        }\n      });\n  };\n\n  const mapAppointmentData = (appointment) => ({\n    id: appointment.id,\n    startDate: appointment.start,\n    endDate: appointment.end,\n    title: appointment.title,\n    notes: appointment.summary,\n    question_id: appointment.question_id,\n    vstart: appointment.vstart,\n    vend: appointment.vend,\n    user: appointment.user.split(','),\n    owner: appointment.owner,\n    username: appointment.username,\n  });\n\n  const getAssignmentNo = () => {\n    axios\n      .get(`${baseUrl}/admin/getAllQuery?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          var data = res.data.result;\n\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n            text,\n            ...rest,\n          }));\n         \n          setAssignmentData(newArrayOfObj);\n        }\n      });\n  };\n\n  const getUsers = () => {\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\n      \n      if (res.data.code === 1) {\n        var data = res.data.result;\n        const newOwners = data.map(({ name: text, ...rest }) => ({\n          text,\n          ...rest,\n        }));\n       \n        setOwner(newOwners);\n      }\n    });\n  };\n\n  const resources = [\n    {\n      fieldName: \"question_id\",\n      title: \"Query No\",\n      instances: assignmentdata,\n    },\n    {\n      fieldName: \"user\",\n      title: \"Users\",\n      instances: owner,\n      allowMultiple: true,\n    },\n  ];\n\n  const styles = (theme) => ({\n    button: {\n      color: theme.palette.background.default,\n      padding: 0,\n    },\n    text: {\n      paddingTop: theme.spacing(1),\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n\n  const B = (key) => {\n    setRead(!key)\n  }\n\n  const AppointmentBase = ({\n    children,\n    data,\n    onClick,\n    classes,\n    onAppointmentMetaChange,\n    ...restProps\n  }) => (\n    <div onDoubleClick={() => B(data.owner)}>\n    \n      <Appointments.Appointment {...restProps}>\n        <div style={{ display: \"flex\" }}>\n        <i\n          onClick={() => handleJoin(data)}\n            class=\"fa fa-video-camera\"\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\n          ></i>\n          <div>{children}</div>\n          \n        </div>\n      </Appointments.Appointment>\n    </div>\n  );\n\n  \n\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\n    AppointmentBase\n  );\n\n  const myAppointment = (props) => {\n    return (\n      <Appointment\n        {...props}\n      // onAppointmentMetaChange={onAppointmentMetaChange}\n      />\n    );\n  };\n\n\n  //handleJoin\n  const handleJoin = (data) => {\n//     // console.log(\"data\", data);\n// //  console.log(\"data\", data)\n// // console.log(data.startDate)\n// var dt = new Date(data.startDate)\n// var dt2 = new Date()\n// let ck = dt.getMonth();\n\n// let pp = dt2.getMonth();\n// let rr = dt2.getHours();\n// let ss = dt.getHours()\n// let mm = dt2.getMinutes() + 20\n// let dd = dt.getMinutes()\n// let ee = dt.getDate();\n// let eee = dt2.getDate()\n// //   console.log(\"dt\", dt)\n// //   console.log(dt2.getDate())\n// //  console.log(dt.getMinutes())\n// //  console.log(dt2.getMinutes() + 20)\n// //  console.log(\"ck\", ck)\n// //   console.log(\"dt2\", dt2)\n// //   console.log(\"pp\", pp)\n// //   console.log(\"mm\", mm)\n// //   console.log(\"dd\", dd)\n// //   console.log(\"ss\", ss)\n// //   console.log(\"rr\", rr)\n// //   console.log(ck == pp)\n// //   console.log(ee === eee)\n// //   console.log(ss == rr)\n// //   console.log(mm > dd)\n\n\n// if(ck == pp && ss == rr && ee == eee){\n\n\n// if(mm > dd){\n//   console.log(\"passed\")\n  \n//   Cookies.set(\"channel_2\", data.question_id);\n//   Cookies.set(\"baseMode_2\", baseMode);\n//   Cookies.set(\"transcode_2\", transcode);\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\n//   Cookies.set(\"videoProfile_2\", videoProfile);\n//   // history.push(\"/teamleader/meeting/\");\n//   history.push(`/teamleader/meeting/${data.id}`);\n\n// }\n// else{\n// // return false\n// Cookies.set(\"channel_2\", data.question_id);\n//   Cookies.set(\"baseMode_2\", baseMode);\n//   Cookies.set(\"transcode_2\", transcode);\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\n//   Cookies.set(\"videoProfile_2\", videoProfile);\n//   // history.push(\"/teamleader/meeting/\");\n//   history.push(`/teamleader/meeting/${data.id}`);\n\n// }\n  //}\n  console.log(\"data\", data.id)\nCookies.set(\"channel_2\", data.question_id);\nCookies.set(\"baseMode_2\", baseMode);\nCookies.set(\"transcode_2\", transcode);\nCookies.set(\"attendeeMode_2\", attendeeMode);\nCookies.set(\"videoProfile_2\", videoProfile);\nCookies.set(\"tlid\", data.id)\n// history.push(\"/teamleader/meeting/\");\nhistory.push(`/teamleader/meeting/${data.id}`);\n\n\n\n\n  };\n\n  const changeFormat = (d) => {\n    console.log(\"d ---\", d);\n\n    if (typeof d === 'object') {\n      console.log(\"GMT\");\n      return (\n        d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \" \" +\n        d.toString().split(\" \")[4]\n      );\n    } else {\n      console.log(\"d\");\n      return d;\n    }\n  };\n\n  const commitChanges = ({ added, changed, deleted, cancel }) => {\n\n    if (added) {\n      setLoading(true)\n      console.log(\"added - \", added);\nconsole.log(\"cancle\", cancel)\n      var startDate = added.startDate;\n      var endDate = added.endDate;\n\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", added.question_id);\n      formData.append(\"time\", changeFormat(startDate));\n      formData.append(\"endtime\", changeFormat(endDate));\n      formData.append(\"title\", added.title);\n      formData.append(\"notes\", added.notes);\n      formData.append(\"user\", added.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res post-\", response);\n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"New call scheduled successfully.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n\n          getData();\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n    if (changed) {\n      console.log(\"changed\", changed);\n      setLoading(true)\n      const data2 = data.map((appointment) =>\n        changed[appointment.id]\n          ? { ...appointment, ...changed[appointment.id] }\n          : appointment\n      );\n      console.log(\"data2 - \", data2);\n\n      let valuesArray = Object.entries(changed);\n      let id = valuesArray[0][0];\n      console.log(\"id -\", id);\n      let dataIttem;\n\n      for (var i = 0; i < data2.length; i++) {\n        if (data2[i].id === id) {\n          dataIttem = data2[i];\n        }\n      }\n      console.log(\"owner\", dataIttem.owner);\n\n      var a = dataIttem.startDate\n      var b = dataIttem.endDate\n\n\n      if (!dataIttem.owner) {\n        var variable = \"Error\"\n        Alerts.ErrorEdit(variable)\n        return false;\n      }\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", dataIttem.question_id);\n      formData.append(\"id\", dataIttem.id);\n      formData.append(\"time\", changeFormat(a));\n      formData.append(\"endtime\", changeFormat(b));\n      formData.append(\"title\", dataIttem.title);\n      formData.append(\"notes\", dataIttem.notes);\n      formData.append(\"user\", dataIttem.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res post-\", response);\n\n          if (response.data.code === 1) {\n            setLoading(false)\n            var msg = \"Call details updated successfully.\"\n            Alerts.SuccessNormal(msg)\n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n            console.log(\"call 0 code\")\n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n          getData();\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n\n    if (deleted !== undefined) {\n      console.log(\"deleted f\", deleted);\n      setLoading(true)\n      var value;\n      data.filter((data) => {\n        if (data.id == deleted) {\n          console.log(\"owner\", data.owner);\n          value = data.owner\n        }\n      });\n\n      // console.log(\"value\", value);\n      if (!value) {\n        var variable = \"Error\"\n        Alerts.ErrorDelete(variable)\n        return false;\n      }\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"It will be permanently deleted !\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\n            console.log(\"res -\", res);\n            if (res.data.code === 1) {\n              setLoading(false)\n              Swal.fire(\"Deleted!\", \"Scheduled call has been deleted.\", \"success\");\n              getData();\n            } else {\n              setLoading(false)\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n            }\n          });\n        }\n      });\n    }\n  };\n\n\n  const BooleanEditor = (props) => {\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\n      return null;\n    }\n    return <AppointmentForm.BooleanEditor {...props} />;\n  };\n\n  const TextEditor = (props) => {\n    return <AppointmentForm.TextEditor {...props} />;\n  };\n\n  //basic layout\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\n    console.log(\"appointmentData\", appointmentData);\n    return (\n      <AppointmentForm.BasicLayout\n        appointmentData={appointmentData}\n        onFieldChange={onFieldChange}\n        {...restProps}\n      >\n\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\n        <AppointmentForm.TextEditor\n          value={appointmentData.username}\n          readOnly\n        />\n\n      </AppointmentForm.BasicLayout>\n    );\n  };\n\n\n  return (\n    <>\n      {\n        loading ?\n          <Loader />\n          :\n          <>\n       <div style ={{display : \"flex\", height : \"700px\"}}>\n          <Paper>\n              <Scheduler data={data} >\n                <ViewState\n                  defaultCurrentDate={currentDate}\n                  defaultCurrentViewName=\"Week\"\n                />\n                <EditingState onCommitChanges={commitChanges} />\n                <EditRecurrenceMenu />\n\n                <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\n                <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\n                \n                <Appointments appointmentComponent={myAppointment} />\n\n                <Toolbar />\n                <DateNavigator />\n                <TodayButton />\n                <ViewSwitcher />\n\n                <AppointmentTooltip showOpenButton />\n\n                {\n                  read ?\n                    <AppointmentForm\n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                      readOnly\n                    />\n                    :\n                    <AppointmentForm\n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                    />\n                }\n\n                <Resources\n                  data={resources}\n                />\n              </Scheduler>\n            </Paper>\n          </div>\n           \n          \n          </>\n          \n      }\n    </>\n  );\n}\n\nexport default Demo;","/home/pooja/MazarsRepo/src/pages/TL/Message/PaymentModal.js",["2166","2167","2168","2169"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  data,\n  // getProposalData,\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n\n  const onSubmit = (value) => {\n\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", id);\n    formData.append(\"message_type\",\"information\");\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          alert.success(\" message successfully send!\");\n          paymentHandler()\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/pages/TL/NewPassword/ResendOtp.js",["2170","2171"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Alerts from \"../../../common/Alerts\";\n\n\n\nfunction ResendOtp({ id, setDisabled, getTime, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"email\", id);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime();\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n                }\n            })\n            .catch((error) => {\n              \n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/pages/TL/Recording/Recording.js",["2172","2173","2174","2175"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport ModalVideo from \"react-modal-video\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport ReactPlayer from \"react-player\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n    Button,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-modal-video/scss/modal-video.scss\";\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\nimport {Link} from 'react-router-dom'\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\n\n\n\nfunction Recording() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [feedbackData, setFeedBackData] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [videoid, setVideoId] = useState(null);\n    const [records, setRecords] = useState([]);\n    const openModal = (videoContent) => {\n        setIsOpen(true);\n        setVideoId(videoContent);\n    };\n\n    useEffect(() => {\n        getRecording();\n    }, []);\nconst videoIcon = {\n    display : \"flex\", \n    justifyContent : \"space-around\", \n    alignItems : \"center\"\n}\n    const getRecording = () => {\n        axios\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\n            .then((res) => {\n             \n                if (res.data.code === 1) {\n                    setFeedBackData(res.data.result);\n                    setRecords(res.data.result.length)\n                }\n            });\n    };\n    const modalBox = {\n        display : \"flex\",\n        position : \"absolute\",\n        top : \"10%\",\n        left : \"0%\",\n        botttom: \"0%\", \n        right: \"0%\",\n       \n        width : \"100%\", \n        height: \"auto\"\n    }\nconst canBtn = {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"10px\",\n    left: \"90%\",\n    padding: \"20px\",\n    cursor : \"pointer\",\n    color : \"red\"\n}\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            dataField: \"created_date\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n            formatter : function formatter(cell, row){\n                let a = row.assign_id.split(\"-\")[row.assign_id.split(\"-\").length - 1]\n                return <>\n                <Link\n                to = {{\n                    pathname : `/teamleader/queries/${a}`,\n                    routes : \"recording\"\n                }}>\n                {row.assign_id}\n                </Link>\n                </>\n            }\n        },\n        \n        {\n            text: \"Participants\",\n            dataField: \"participants\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n        },\n        \n        {\n            text: \"Summary of Discussion\",\n            dataField: \"message\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"80px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n                \n            },\n            formatter: function nameFormatter(cell, row) {\n             \n                var recording = row.file.split(\",\");\n                let a = 1;\n                return (\n                    <>\n                        <div>\n                            {\n                                recording.map((record) => {\n                                   return(\n                                <>\n                                <p style={videoIcon}>\n                                <span>{a++}</span>   <i\n                                    className=\"material-icons\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        color: \"red\",\n                                        fontSize: \"25px\",\n                                    }}\n                                    onClick={() => openModal(record)}\n                                >\n                                    play_circle_outline\n                                 \n                                </i>\n                                </p>\n                                </>\n                                   )\n                                })\n                            }\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n\n    return (\n        <>\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n            <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\n                 <Card>\n                 <CardHeader>\n                     <Row>\n                         <Col md=\"7\">\n                             <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\n                         </Col>\n                         <Col md=\"5\"></Col>\n                     </Row>\n                 </CardHeader>\n                 <CardBody>\n                 <RecordingFilter\n                        setData={setFeedBackData}\n                     //    getData={getInCompleteAssingment}\n                        SearchQuery=\"SearchQuery\"\n                       setRecords={setRecords}\n                        records={records} \n                        userid = {userid}\n                        getRecording = {getRecording}\n                     /> \n                     <BootstrapTable\n                         bootstrap4\n                         keyField=\"id\"\n                         data={feedbackData}\n                         columns={columns}\n                         rowIndex\n                     />\n                 </CardBody>\n \n             </Card>\n           \n            </div>\n             \n            {isOpen === true ?\n           \n                  \n                  <div style={modalBox}>\n                  <span style={canBtn} onClick= {() => setIsOpen(false)}> <CloseIcon color=\"red\" /> </span>\n                 \n        \n           <div style={{margin: \"50px 0 0 0\"}}>\n           <ReactPlayer\n             url={videoid}\n             controls={true}\n             playing={true}\n             width='100%'\n             height='100%'\n            />\n               </div>\n             \n            </div>\n          : \"\"}\n          </Layout>\n            </>\n \n     );\n }\n export default Recording;","/home/pooja/MazarsRepo/src/components/Footer/Footer.js",[],"/home/pooja/MazarsRepo/src/components/Header/Header.js",["2176"],"import { Link, useHistory } from \"react-router-dom\";\nimport \"../../assets/css/style.css\";\nimport mazars from \"../../assets/images/mazars-logo.png\";\n\nfunction Header({ id, cust_sign, admin, mtl, mtp, noSign, loginOTP }) {\n  let history = useHistory();\n\n  const custLogout = () => {\n    localStorage.removeItem(\"userid\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"uid\");\n    localStorage.removeItem(\"category\");\n    history.push(\"/customer/signin\");\n  }\n\n \n\n  return (\n    <>\n      <div class=\"header\">\n        {id && (\n          <div>\n            <Link to=\"/customer/questionnaire-page\">\n              <img src={mazars} class=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        {cust_sign && (\n          <div>\n            <Link to=\"/\">\n              <img src={mazars} class=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        {noSign && (\n          <div>\n            <Link to=\"/\">\n              <img src={mazars} class=\"logo\" alt=\"mazar\" style={{ marginBottom: \"12px\" }} />\n            </Link>\n          </div>\n        )}\n\n\n        {loginOTP && (\n          <div>\n            <img src={mazars} class=\"logo\" alt=\"mazar\" style={{ marginBottom: \"12px\" }} />\n          </div>\n        )}\n\n        {admin && (\n          <div>\n            <Link to=\"/admin/start\">\n              <img src={mazars} class=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        {mtl && (\n          <div>\n            <Link to=\"/teamleader/start\">\n              <img src={mazars} class=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        {mtp && (\n          <div>\n            <Link to=\"/taxprofessional/start\">\n              <img src={mazars} class=\"logo\" alt=\"mazar\" />\n            </Link>\n          </div>\n        )}\n\n        <div>\n          {id && (\n            <ul class=\"menu\">\n              <li style={{ color: \"#fff\" }}>{id}</li>\n              <li onClick={custLogout} style={{ color: \"#fff\" }}>\n                <i class=\"fa fa-sign-out\">logout</i>\n              </li>\n            </ul>\n          )}\n\n          {cust_sign && (\n            <div>\n              <ul class=\"menu\">\n                <li>\n                  <Link to=\"/\">Signin</Link>\n                </li>             \n              </ul>\n            </div>\n          )}\n         \n          {admin && (\n            <ul class=\"menu\">\n              <li>\n                <Link to=\"/admin/login\">Signin</Link>\n              </li>\n            </ul>\n          )}\n\n          {mtl && (\n            <ul class=\"menu\">\n              <li>\n                <Link to=\"/teamleader/login\">Signin</Link>\n              </li>\n            </ul>\n          )}\n\n          {mtp && (\n            <ul class=\"menu\">\n              <li>\n                <Link to=\"/taxprofessional/login\">Signin</Link>\n              </li>\n            </ul>\n          )}\n\n\n\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Header;\n {/* <li>\n                  <Link to=\"/customer/signup\">SignUp</Link>\n                </li> */}","/home/pooja/MazarsRepo/src/pages/TL/QueriesTab/AllQuery.js",["2177","2178","2179","2180","2181","2182","2183","2184","2185","2186"],"import React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction AllQuery() {\n\n    const userid = window.localStorage.getItem(\"tlkey\");\n\n    const [incompleteData, setInCompleteData] = useState([]);\n    const [records, setRecords] = useState([]);\n\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getInCompleteAssingment();\n    }, []);\n\n    const getInCompleteAssingment = () => {\n        axios\n            .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n            .then((res) => {\n\n                if (res.data.code === 1) {\n                    setInCompleteData(res.data.result);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.created.split(\"-\").reverse().join(\"-\")\n              \n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n                        {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index: 0,\n                                routes: \"queriestab\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"Customer Name\",\n            dataField: \"name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"\tExp. Delivery Date\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress Query\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Declined Query\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Completed Query\" ?\n                                            <p className=\"completed\">\n\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n              \n                return (\n                    <>\n                      {row.status_code == \"1\" ? null :\n                      \n                      <div\n                      style={{\n                          display: \"flex\",\n                          justifyContent: \"space-evenly\",\n                          color: \"green\",\n                      }}\n                  >\n                     \n\n                      {row.status == \"Declined Query\" ? null :\n                      <div title=\"Send Message\">\n                      <Link\n                          to={{\n                              pathname: `/teamleader/chatting/${row.id}`,\n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/teamleader/proposal`\n                              }\n                          }}\n                      >\n                          <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                  fontSize: 16,\n                                  cursor: \"pointer\",\n                                  marginLeft: \"8px\",\n                                  color: \"blue\"\n                              }}\n                          ></i>\n                      </Link>\n                  </div>}\n\n                      <div title=\"View Discussion Message\">\n                          <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                  fontSize: 16,\n                                  cursor: \"pointer\",\n                                  color: \"orange\"\n                              }}\n                              onClick={() => ViewDiscussionToggel(row.assign_no)}\n                          ></i>\n                      </div>\n                  </div>\n}                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setInCompleteData}\n                        getData={getInCompleteAssingment}\n                        AllQuery=\"AllQuery\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={incompleteData}\n                        columns={columns}\n                        rowIndex\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getInCompleteAssingment}\n                    />\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllQuery;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DeliveryFinalTab.js",["2187","2188","2189","2190","2191","2192","2193","2194","2195","2196","2197","2198","2199","2200","2201","2202","2203","2204","2205","2206","2207","2208"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport moment from \"moment\";\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tlkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [finalId, setFinalId] = useState(\"\");\n\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n    const [hide, setHide] = useState();\n\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n\n    const [item] = useState(current_date);\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [fianlModal, setFianlModal] = useState(false);\n    const [dataItem, setDataItem] = useState({});\n\n    const [report, setReport] = useState();\n    const [reportModal, setReportModal] = useState(false);\n    var rowStyle2 = {}\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n            if(selectedData != undefined){\n                axios\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n                .then((res) => {\n                    \n                    if (res.data.code === 1) {\n                        setTax2(res.data.result);\n                    }\n                });\n            }\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n       \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n       \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n       \n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n       \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n    const assingmentStatus = (value) => {\n       \n        setStatus(value);\n    };\n    const uploadFinalReport = (id) => {\n       \n        setFianlModal(!fianlModal);\n        setFinalId(id);\n      };\n// view report \nconst ViewReport = (key) => {\n   \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.q_id}`,\n                                index : 2,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            dataField: \"status\",\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"200px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                                {row.client_discussion}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                                {row.draft_report}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                                {row.final_discussion}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                                {row.delivery_report}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\n                                {row.other_stage}\n                            </p>\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n          {\n            text: \"Assignment Stage\",\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                   {row.paid_status == \"2\" ? null : \n                    <Link to={`/teamleader/addassingment/${row.q_id}`}>\n                    <i class=\"fa fa-tasks\"></i>\n                  </Link> }\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n              return { fontSize: \"12px\", width: \"90px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n               {\n                 row.paid_status == \"2\" ? \n               \"\" : \n                 <div\n                 style={{\n                   display: \"flex\",\n                   justifyContent: \"space-between\",\n                 }}\n               >\n                 \n                 \n                    \n      {\n       row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n      \n      <div title=\"upload Pdf\">\n       <p\n         style={{ cursor: \"pointer\", color: \"red\" }}\n         onClick={() => uploadFinalReport(row)}\n       >\n       \n             <div>\n               <i\n                 class=\"fa fa-upload\"\n                 style={{ fontSize: \"16px\" }}\n               ></i>\n               final\n             </div>\n          \n       </p>\n      </div> : null\n      }\n                \n      \n                 <div title=\"View Discussion Message\">\n                   <i\n                     class=\"fa fa-comments-o\"\n                     style={{\n                       fontSize: 16,\n                       cursor: \"pointer\",\n                       color: \"orange\"\n                     }}\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\n                   ></i>\n                 </div>\n                 <div title=\"Send Message\">\n                   <Link\n                     to={{\n                       pathname: `/teamleader/chatting/${row.q_id}`,\n                       obj: {\n                         message_type: \"3\",\n                         query_No: row.assign_no,\n                         query_id: row.q_id,\n                         routes: `/teamleader/assignment`\n                       }\n                     }}\n                   >\n                     <i\n                       class=\"fa fa-comments-o\"\n                       style={{\n                         fontSize: 16,\n                         cursor: \"pointer\",\n                         marginLeft: \"8px\",\n                         color: \"blue\"\n                       }}\n                     ></i>\n                   </Link>\n                 </div>\n      \n               </div>\n               }\n                </>\n              );\n            },\n          },\n    ];\n\n\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n       \n    \n        if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n        else if(row.paid_status != \"2\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n    \n    const onSubmit = (data) => {\n      \n        axios\n            .get(\n                `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n                    userid\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n                }&assignment_status=${status}&stages_status=${data.p_status\n                }&pcat_id=${selectedData}`\n            )\n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n                                    {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btn btn-primary mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={assignment}\n                        columns={columns}\n                        rowStyle={ rowStyle2 }\n                        rowIndex\n                    />\n <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentList}\n                    />\n                     <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n          />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportTab.js",["2209","2210","2211","2212","2213","2214","2215","2216","2217","2218","2219","2220","2221","2222","2223","2224","2225","2226","2227","2228","2229","2230","2231","2232","2233"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport moment from \"moment\";\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tlkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [finalId, setFinalId] = useState(\"\");\n\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n    const [hide, setHide] = useState();\n\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n   \n    const [item] = useState(current_date);\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [draftModal, setDraftModal] = useState(false);\n    const [dataItem, setDataItem] = useState({});\n    const [report, setReport] = useState();\n    const [reportModal, setReportModal] = useState(false);\n    var rowStyle2 = {}\n    const uploadDraftReport = (id) => {\n    \n      setDraftModal(!draftModal);\n      setId(id);\n    };\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n            if(selectedData != undefined){\n                axios\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n                .then((res) => {\n                    \n                    if (res.data.code === 1) {\n                        setTax2(res.data.result);\n                    }\n                });\n            }\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n        \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n        \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n       \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n    const assingmentStatus = (value) => {\n        \n        setStatus(value);\n    };\n// view report \nconst ViewReport = (key) => {\n   \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n// row Style \nrowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n    else if(row.paid_status != \"2\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.q_id}`,\n                                index : 1,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            dataField: \"status\",\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"200px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                                {row.client_discussion}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                                {row.draft_report}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                                {row.final_discussion}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                                {row.delivery_report}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\n                                {row.other_stage}\n                            </p>\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n        {\n            text: \"Assignment Stage\",\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                   {row.paid_status == \"2\" ? null : \n                    <Link to={`/teamleader/addassingment/${row.q_id}`}>\n                    <i class=\"fa fa-tasks\"></i>\n                  </Link> }\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n              return { fontSize: \"12px\", width: \"90px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n               {\n                 row.paid_status == \"2\" ? \n                \"\" : \n                 <div\n                 style={{\n                   display: \"flex\",\n                   justifyContent: \"space-between\",\n                 }}\n               >\n                 \n                 \n                    {\n                    row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\n                    <div title=\"upload Pdf\">\n                    <p\n                      style={{ cursor: \"pointer\", color: \"green\" }}\n                      onClick={() => uploadDraftReport(row.id)}\n                    >\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                      draft\n                    </p>\n                  </div> : null\n                 }\n                  {\n                    row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\n                    <div title=\"upload Pdf\">\n                    <p\n                      style={{ cursor: \"pointer\", color: \"green\" }}\n                      onClick={() => uploadDraftReport(row.id)}\n                    >\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                      draft\n                    </p>\n                  </div> : null\n                 }\n                \n      \n                 <div title=\"View Discussion Message\">\n                   <i\n                     class=\"fa fa-comments-o\"\n                     style={{\n                       fontSize: 16,\n                       cursor: \"pointer\",\n                       color: \"orange\"\n                     }}\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\n                   ></i>\n                 </div>\n                 <div title=\"Send Message\">\n                   <Link\n                     to={{\n                       pathname: `/teamleader/chatting/${row.q_id}`,\n                       obj: {\n                         message_type: \"3\",\n                         query_No: row.assign_no,\n                         query_id: row.q_id,\n                         routes: `/teamleader/assignment`\n                       }\n                     }}\n                   >\n                     <i\n                       class=\"fa fa-comments-o\"\n                       style={{\n                         fontSize: 16,\n                         cursor: \"pointer\",\n                         marginLeft: \"8px\",\n                         color: \"blue\"\n                       }}\n                     ></i>\n                   </Link>\n                 </div>\n      \n               </div>\n               }\n                </>\n              );\n            },\n          },\n    ];\n\n\n    const onSubmit = (data) => {\n      \n        axios\n            .get(\n                `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n                    userid\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n                }&assignment_status=\"Draft_Report\"&stages_status=1\n               &pcat_id=${selectedData}`\n            )\n            .then((res) => {\n                \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n                                    {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btn btn-primary mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={assignment}\n                        columns={columns}\n                        rowStyle={ rowStyle2 }\n                        rowIndex\n                    />\n  <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n          />\n <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentList}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/AllAssignment.js",["2234","2235","2236","2237","2238","2239","2240","2241","2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2252","2253","2254","2255","2256","2257","2258","2259","2260","2261","2262","2263","2264","2265","2266","2267","2268","2269","2270","2271","2272","2273","2274"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport * as Cookies from \"js-cookie\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\n\n\nfunction AssignmentTab() {\n\n  const history = useHistory();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [count, setCount] = useState(\"\");\n  const [assignment, setAssignment] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [finalId, setFinalId] = useState(\"\");\n\n  const [records, setRecords] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [hide, setHide] = useState();\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n\n  const [item] = useState(current_date);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n  const [dataItem, setDataItem] = useState({});\n\n  const [report, setReport] = useState();\n  const [reportModal, setReportModal] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  var rowStyle2 = {}\n  const ViewReport = (key) => {\n   \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n  \n  \n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAssignment(res.data.result);\n          setCount(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n     if(selectedData != undefined){\n      axios\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n     }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n \n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentList();\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentList();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n    \n    setStatus(value);\n  };\n\n\n  //columns\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n    \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.q_id}`,\n                index : 0,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected date of delivery\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Actual date of delivery\",\n      dataField: \"final_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => ViewReport(row)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"Assignment Stage\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              title=\"Add Assignment stages\"\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\n            >\n             {row.paid_status == \"2\" ? null : \n              <Link to={`/teamleader/addassingment/${row.q_id}`}>\n              <i class=\"fa fa-tasks\"></i>\n            </Link> }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"90px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n         {\n           row.paid_status == \"2\" ? \"\" : \n           <div\n           style={{\n             display: \"flex\",\n             justifyContent: \"space-between\",\n           }}\n         >\n           \n           \n              {\n              row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\n              <div title=\"upload Pdf\">\n              <p\n                style={{ cursor: \"pointer\", color: \"green\" }}\n                onClick={() => uploadDraftReport(row.id)}\n              >\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                draft\n              </p>\n            </div> : null\n           }\n            {\n              row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\n              <div title=\"upload Pdf\">\n              <p\n                style={{ cursor: \"pointer\", color: \"green\" }}\n                onClick={() => uploadDraftReport(row.id)}\n              >\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                draft\n              </p>\n            </div> : null\n           }\n{\n row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n\n<div title=\"upload Pdf\">\n <p\n   style={{ cursor: \"pointer\", color: \"red\" }}\n   onClick={() => uploadFinalReport(row)}\n >\n \n       <div>\n         <i\n           class=\"fa fa-upload\"\n           style={{ fontSize: \"16px\" }}\n         ></i>\n         final\n       </div>\n    \n </p>\n</div> : null\n}\n          \n\n           <div title=\"View Discussion Message\">\n             <i\n               class=\"fa fa-comments-o\"\n               style={{\n                 fontSize: 16,\n                 cursor: \"pointer\",\n                 color: \"orange\"\n               }}\n               onClick={() => ViewDiscussionToggel(row.assign_no)}\n             ></i>\n           </div>\n           <div title=\"Send Message\">\n             <Link\n               to={{\n                 pathname: `/teamleader/chatting/${row.q_id}`,\n                 obj: {\n                   message_type: \"3\",\n                   query_No: row.assign_no,\n                   query_id: row.q_id,\n                   routes: `/teamleader/assignment`\n                 }\n               }}\n             >\n               <i\n                 class=\"fa fa-comments-o\"\n                 style={{\n                   fontSize: 16,\n                   cursor: \"pointer\",\n                   marginLeft: \"8px\",\n                   color: \"blue\"\n                 }}\n               ></i>\n             </Link>\n           </div>\n\n         </div>\n         }\n          </>\n        );\n      },\n    },\n  ];\n\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n    else if(row.paid_status != \"2\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n\n  // draft modal\n  const [draftModal, setDraftModal] = useState(false);\n  const uploadDraftReport = (id) => {\n    \n    setDraftModal(!draftModal);\n    setId(id);\n  };\n\n\n  // final modal\n  const [fianlModal, setFianlModal] = useState(false);\n  const uploadFinalReport = (id) => {\n    \n    setFianlModal(!fianlModal);\n    setFinalId(id);\n  };\n\n\n  const onSubmit = (data) => {\n  \n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&assignment_status=${status}&stages_status=${data.p_status\n        }&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignment(res.data.result);\n            setRecords(res.data.result.length);\n\n          }\n        }\n      });\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n  const disabledHandler = (e) => {\n    setHide(e.target.value);\n  };\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <select\n                  className=\"form-select form-control\"\n                  name=\"p_status\"\n                  ref={register}\n                  style={{ height: \"33px\" }}\n                  onChange={(e) => disabledHandler(e)}\n                >\n                  <option value=\"\">--select--</option>\n                  <option value=\"1\">Pending</option>\n                  <option value=\"2\">Complete</option>\n                  <option value=\"3\">Payment Decline</option>\n                </select>\n              </div>\n\n              {\n                hide == \"3\" ?\n                  \"\"\n                  :\n                  <div class=\"form-group mx-sm-1  mb-2\">\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: 210 }}\n                      placeholder=\"Select stages\"\n                      defaultValue={[]}\n                      onChange={assingmentStatus}\n                      value={status}\n                      allowClear\n                    >\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Client Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">Draft report</div>\n                      </Option>\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Final Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Delivery of report\n                        </div>\n                      </Option>\n                      <Option value=\"Completed\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">Completed</div>\n                      </Option>\n                    </Select>\n                  </div>\n              }\n\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">Total Records : {records}</label>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignment}\n            columns={columns}\n            rowStyle={ rowStyle2 }\n            rowIndex\n          />\n\n          <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n          />\n\n          <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n          />\n\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentList}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AssignmentTab;\n\n\n\n\n\n\n\n\n\n\n\n","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paid.js",["2275","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n\n    const [assignNo, setAssignNo] = useState(\"\");\n\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const rejectHandler = (key) => {\n      \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}&status=2`).then((res) => {\n           \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n  \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    const toggle = (key) => {\n      \n        setModal(!modal);\n\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n            \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n    };\n\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n          \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 2, \n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n          \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text: \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                            <div title=\"Payment History\"\n                                onClick={() => toggle(row.assign_id)}\n                                style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                            >\n                               <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                                onClick={() => toggle(row.assign_id)}></i>\n                            </div>\n                            <div title=\"Send Message\">\n                                <Link\n                                    to={{\n                                        pathname: `/teamleader/chatting/${row.assign_id}`,\n                                        obj: {\n                                            message_type: \"5\",\n                                            query_No: row.assign_no,\n                                            query_id: row.assign_id,\n                                            routes: `/teamleader/proposal`\n                                        }\n                                    }}\n                                >\n                                    <i\n                                        class=\"fa fa-comments-o\"\n                                        style={{\n                                            fontSize: 18,\n                                            cursor: \"pointer\",\n                                            color: \"blue\"\n                                        }}\n                                    ></i>\n                                </Link>\n                            </div>\n                            <div>\n                                {\n                                    row.paid_status == \"0\" ?\n                                        <div title=\"Payment decline\"\n                                            onClick={() => rejectHandler(row)}\n                                            style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\n                                        >\n                                            <PaymentIcon />\n                                        </div>\n                                        : null\n                                }\n                            </div>\n\n\n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n\n                        </div>\n                    </>\n                );\n            },\n        },\n      \n    ];\n\n\n    return (\n        <>\n            <Card>             \n                <CardHeader>\n                    <TeamFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Paid=\"Paid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={payment}\n                        columns={columns}\n                        classes=\"table-responsive\"\n                    />\n\n<DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date</th>\n                                        <th scope=\"row\">Amount</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;\n","/home/pooja/MazarsRepo/src/pages/TL/SendProposal/ProposalComponent.js",["2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2305","2306","2307","2308","2309","2310","2311"],"import React, { useState, useEffect } from \"react\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Alert,\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport Payment from \"./Payment\";\nimport Select from \"react-select\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from 'reactstrap';\nimport Swal from \"sweetalert2\";\n\n\n\nfunction ProposalComponent(props) {\n  const { id } = props;\n  const history = useHistory();\n  const { handleSubmit, register, errors } = useForm();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n  const [store, setStore] = useState(null);\n  const [diserror, setdiserror] = useState(\"\")\n  const [payment, setPayment] = useState([]);\n  const [installment, setInstallment] = useState([]);\n  const [error, setError] = useState('');\n  const [totalAmount, setTotalAmount] = useState(null);\n  const [paymentError, setpaymentError] = useState();\n\n  const [date, setDate] = useState();\n  const [amount, setAmount] = useState();\n  const [dateError, setDateError] = useState(false)\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n\n\n  useEffect(() => {\n    const getQuery = () => {\n      axios\n        .get(\n          `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\n            userid\n          )}&assign_id=${id}`\n        )\n        .then((res) => {\n          if (res.data.code === 1) {\n            if (res.data.result.length > 0) {\n              setAssingNo(res.data.result[0].assign_no);\n              setAssignID(res.data.result[0].id);\n            }\n          }\n        });\n    };\n    getQuery();\n  }, []);\n\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n\n    getUser();\n  }, [id]);\n\n\n  const onSubmit = (value) => {\n  \n\n   if(diserror.length > 0 ){\n     return false\n   }\n   else if(dateError === true){\n    Alerts.ErrorNormal(\"Date must be unique\")\n   }\n   else{\n    var lumsum = value.p_inst_date\n    if (payment.label == \"lumpsum\") {\n      setDate(lumsum)\n    }\n    \n    // var arrAmount = []\n    // var arrDate = []\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tl\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"assign_id\", assignId);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"description\", value.description);\n    formData.append(\"amount_type\", \"fixed\");\n    formData.append(\"amount\", value.p_fixed);\n    formData.append(\"installment_amount\", amount);\n\n    formData.append(\"payment_terms\", payment.value);\n    formData.append(\"no_of_installment\", installment.value);\n\n    payment.label == \"lumpsum\" ?\n      formData.append(\"due_date\", lumsum) :\n      payment.label == \"installment\" ?\n        formData.append(\"due_date\", date) :\n        formData.append(\"due_date\", \"\")\n\n    if (payment.length < 1) {\n     \n      setpaymentError(\"Please select at lease one\")\n    } else\n      if (payment.value == \"installment\") {\n        if (installment == \"\") {\n          Alerts.ErrorNormal(`Please select no of installment .`)\n        \n        } \n        else if (!amount || !date) {\n            Alerts.ErrorNormal(`Please enter all fields.`)\n            \n          } else if (amount && date) {\n            \n            if (installment.value > 0) {\n              var a = Number(installment.value)\n              for (let i = 0; i < a; i++) {\n                // arrAmount.push(amount[i])\n                // arrDate.push(date[i])\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\n                  Alerts.ErrorNormal(`Please enter amount`)\n               \n                  return false\n                }\n                if (date[i] == \"\" || date[i] == undefined) {\n                  Alerts.ErrorNormal(`Please enter date`)\n                \n                  return false\n                }\n              }\n              var sum = amount.reduce(myFunction)\n              function myFunction(total, value) {\n                return Number(total) + Number(value);\n              }\n              if (value.p_fixed != sum) {\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n              \n              } else {\n               \n                setLoading(true)\n                axios({\n                  method: \"POST\",\n                  url: `${baseUrl}/tl/uploadProposal`,\n                  data: formData,\n                })\n                  .then(function (response) {\n               \n                    if (response.data.code === 1) {\n                      setLoading(false)\n                      Alerts.SuccessNormal(\"Proposal sent successfully.\")\n                      history.push(\"/teamleader/proposal\");\n                    } else if (response.data.code === 0) {\n                      setLoading(false)\n                    }\n                  })\n                  .catch((error) => {\n                   \n                  });\n              }\n            }\n          }\n      } else if (payment.label == \"lumpsum\") {\n     \n        setLoading(true)\n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tl/uploadProposal`,\n          data: formData,\n        })\n          .then(function (response) {\n          \n            if (response.data.code === 1) {\n              setLoading(false)\n              var variable = \"Proposal sent successfully. \"\n              Alerts.SuccessNormal(variable)\n              history.push(\"/teamleader/proposal\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n          \n          });\n      }\n\n\n\n   }\n  };\n\n\n\n  const paymentAmount = (data) => {\n   \n\n    var array1 = []\n    Object.entries(data).map(([key, value]) => {\n      array1.push(value)\n    });\n    setAmount(array1);\n  };\n\n  const paymentDate = (data) => {\n  \n   \n    var array2 = []\n    Object.entries(data).map(([key, value]) => {\n      array2.push(value)\n    });\n    setDate(array2);\n   \n    if(new Set(array2).size !== array2.length){\n      setDateError(true)\n     Alerts.ErrorNormal(\"Date must be unique\")\n    }\n    else{\n      setDateError(false)\n    }\n   \n  };\n\n\n  const handleChange = (e) => {\n   \n    if (isNaN(e.target.value)) {\n      setdiserror(\"Please enter number only.\");\n    }\n    else if(e.target.value == \"0\"){\n      setdiserror(\"Amount should be greater than 0\")\n    }\n    else {\n      setdiserror(\"\");\n    }\n    setTotalAmount(e.target.value);\n  };\n\n  const installmentHandler = (key) => {\n   \n    setInstallment(key)\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div>\n                <h4>Prepare Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <p style={{ color: \"red\" }}>{error}</p>\n            <div style={{ display: \"flex\" }}>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    className=\"form-control\"\n                    value={assingNo}\n                    ref={register}\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <label>Fee</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_type\"\n                    onChange={(e) => setStore(e.target.value)}\n                  >\n                    <option value=\"fixed\">Fixed Price</option>\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"p_fixed\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fixed || diserror,\n                    })}\n                    ref={register({ required: true })}\n                    placeholder=\"Enter Fixed Price\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </div>\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\n                <div class=\"form-group\">\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\n                  <textarea\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    ref={register({ required: true })}\n                    placeholder=\"Enter Proposal Description\"\n                  ></textarea>\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    className=\"form-control\"\n                    value={custname}\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\n                  <Select\n                    className={paymentError ? \"customError\" : \"\"}\n                    onChange={(e) => {\n                      setPayment(e)\n                      setpaymentError(\"\")\n                    }}\n                    options={payment_terms}\n                  />\n\n                </div>\n\n                {payment.label == \"lumpsum\" ? (\n                  <div class=\"form-group\">\n                    <label>Due Dates</label>\n                    <input\n                      type=\"date\"\n                      name=\"p_inst_date\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_inst_date\n                      })}\n                      ref={register({ required: true })}\n                      placeholder=\"Enter Hourly basis\"\n                      min={item}\n                    />\n                  </div>\n                ) :\n                  payment.label == \"installment\" ? (\n                    <div class=\"form-group\">\n                      <label>No of Installments</label>\n                      <Select\n                        onChange={(e => installmentHandler(e))}\n                        options={no_installments}\n                      />\n                    </div>\n                  )\n                    : \"\"\n                }\n\n                {\n                  payment.label == \"lumpsum\"\n                    ?\n                    \"\"\n                    :\n                    <Payment\n                      installment={installment.label}\n                      paymentAmount={paymentAmount}\n                      paymentDate={paymentDate}\n                      totalAmount={totalAmount}\n                      min={item}\n                      item={item}\n                      dateError = {dateError}\n                    />\n                }\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group col-md-6\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" class=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n\n          </form>\n          <Mandatory />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default ProposalComponent;\n\n\nconst payment_terms = [\n  {\n    value: \"lumpsum\",\n    label: \"lumpsum\",\n  },\n  {\n    value: \"installment\",\n    label: \"installment\",\n  },\n];\n\nconst no_installments = [\n  {\n    value: \"2\",\n    label: \"2\",\n  },\n  {\n    value: \"3\",\n    label: \"3\",\n  },\n  {\n    value: \"4\",\n    label: \"4\",\n  },\n];\n","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Unpaid.js",["2312","2313","2314","2315","2316","2317","2318","2319","2320","2321","2322","2323","2324","2325","2326"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport moment from 'moment';\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n    const [addPaymentModal, setPaymentModal] = useState(false);\n\n    // UseState end \n    // Global veriable \n    var rowStyle2 = {}\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n    \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}&status=1`).then((res) => {\n            \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n       \n        setModal(!modal);\n\n        if(typeof(key) == \"object\"){\n\n        }\n        else{\n            fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n                \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n        }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\n        style.backgroundColor = \"#c1d8f2\";\n        style.color = \"#000111\"\n    }\n   \n    return style;\n  }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n                        {/* <Link to={`/teamleader/queries/${row.assign_id}`}>\n              {row.assign_no}\n            </Link> */}\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p style={{color : \"red\"}}>{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                       {row.paid_status === \"2\" ? \n                       <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                       <div title=\"Payment History\"\n                         \n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                       >\n                           <i\n                           class=\"fa fa-credit-card\"\n                           onClick={() => toggle(row.assign_id)}\n                           style={{ color: \"green\", fontSize: \"16px\" }}></i>\n                       </div>\n                      \n\n\n                       <div title=\"View Discussion Message\">\n                           <i\n                               class=\"fa fa-comments-o\"\n                               style={{\n                                   fontSize: 16,\n                                   cursor: \"pointer\",\n                                   color: \"orange\"\n                               }}\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\n                           ></i>\n                       </div>\n\n                   </div>\n                       :  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                       <div title=\"Payment History\"\n                         \n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                       >\n                            <Link\n              to={{\n                pathname: `/teamleader/paydetails/${row.id}`,\n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.id,\n                  routes: `/teamleader/paymentstatus`\n                }\n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                                // onClick={() => toggle(row.assign_id)}\n                            ></i>\n                            </Link>\n                       </div>\n                       <div title=\"Send Message\">\n                           <Link\n                               to={{\n                                   pathname: `/teamleader/chatting/${row.assign_id}`,\n                                   obj: {\n                                       message_type: \"5\",\n                                       query_No: row.assign_no,\n                                       query_id: row.assign_id,\n                                       routes: `/teamleader/proposal`\n                                   }\n                               }}\n                           >\n                               <i\n                                   class=\"fa fa-comments-o\"\n                                   style={{\n                                       fontSize: 18,\n                                       cursor: \"pointer\",\n                                       color: \"blue\"\n                                   }}\n                               ></i>\n                           </Link>\n                       </div>\n                       <div>\n                           {\n                               row.paid_status == \"0\" ?\n                                   <div title=\"Payment decline\"\n                                       onClick={() => rejectHandler(row)}\n                                       style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\n                                   >\n                                       <PaymentIcon />\n                                   </div>\n                                   : null\n                           }\n                       </div>\n\n\n                       <div title=\"View Discussion Message\">\n                           <i\n                               class=\"fa fa-comments-o\"\n                               style={{\n                                   fontSize: 16,\n                                   cursor: \"pointer\",\n                                   color: \"orange\"\n                               }}\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\n                           ></i>\n                       </div>\n\n                   </div>}                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>\n\n                <CardHeader>\n                    <TeamFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Unpaid=\"Unpaid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={payment}\n                        columns={columns}\n                        rowStyle = {rowStyle2}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/AllPayment.js",["2327","2328","2329","2330","2331","2332","2333","2334","2335","2336","2337","2338","2339","2340","2341"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n    const [addPaymentModal, setPaymentModal] = useState(false); \n\n\n    // Use State end\n    //Global veriable\n    var rowStyle2 = {}\n\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}`).then((res) => {\n        \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n   \n        setModal(!modal);\n\n       if(typeof(key) == \"object\"){\n\n       }\n       else{\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n              \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n       }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\n        style.backgroundColor = \"#c1d8f2\";\n        style.color = \"#000111\"\n    }\n   \n    return style;\n  }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p style={{color : \"red\"}}>{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n\n                       {row.paid_status === \"2\" ? \n                       <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                       <div title=\"Payment History\"\n                         \n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                       >\n                           <i\n                           class=\"fa fa-credit-card\"\n                           onClick={() => toggle(row.assign_id)}\n                           style={{ color: \"green\", fontSize: \"16px\" }}></i>\n                       </div>\n                       \n\n\n                       <div title=\"View Discussion Message\">\n                           <i\n                               class=\"fa fa-comments-o\"\n                               style={{\n                                   fontSize: 16,\n                                   cursor: \"pointer\",\n                                   color: \"orange\"\n                               }}\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\n                           ></i>\n                       </div>\n\n                   </div>\n                       :  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                       <div title=\"Payment History\"\n                         \n                           style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                       >\n                          <Link\n              to={{\n                pathname: `/teamleader/paydetails/${row.id}`,\n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.id,\n                  routes: `/teamleader/paymentstatus`\n                }\n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                                // onClick={() => toggle(row.assign_id)}\n                            ></i>\n                            </Link>\n                       </div>\n                       <div title=\"Send Message\">\n                           <Link\n                               to={{\n                                   pathname: `/teamleader/chatting/${row.assign_id}`,\n                                   obj: {\n                                       message_type: \"5\",\n                                       query_No: row.assign_no,\n                                       query_id: row.assign_id,\n                                       routes: `/teamleader/proposal`\n                                   }\n                               }}\n                           >\n                               <i\n                                   class=\"fa fa-comments-o\"\n                                   style={{\n                                       fontSize: 18,\n                                       cursor: \"pointer\",\n                                       color: \"blue\"\n                                   }}\n                               ></i>\n                           </Link>\n                       </div>\n                       <div>\n                           {\n                               row.paid_status == \"0\" ?\n                                   <div title=\"Payment decline\"\n                                       onClick={() => rejectHandler(row)}\n                                       style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\n                                   >\n                                       <PaymentIcon />\n                                   </div>\n                                   : null\n                           }\n                       </div>\n\n\n                       <div title=\"View Discussion Message\">\n                           <i\n                               class=\"fa fa-comments-o\"\n                               style={{\n                                   fontSize: 16,\n                                   cursor: \"pointer\",\n                                   color: \"orange\"\n                               }}\n                               onClick={() => ViewDiscussionToggel(row.assign_no)}\n                           ></i>\n                       </div>\n\n                   </div>}\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        AllPayment=\"AllPayment\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={payment}\n            columns={columns}\n            \n            classes = \"table-responsive\"\n            rowStyle={ rowStyle2 }\n            rowIndex\n          />\n\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TL/CompleteData/CompleteData.js",["2342","2343","2344","2345","2346","2347","2348","2349","2350","2351","2352","2353"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport History from \"../../../components/PendingForAllocation/History\";\nimport Swal from \"sweetalert2\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nfunction CompletedQuery() {\n  const userid = window.localStorage.getItem(\"tlkey\");\nconst hist = useHistory();\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n \n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const ViewDiscussionToggel = (key) => {\n      setViewDiscussion(!ViewDiscussion);\n      setAssignNo(key)\n  }\n\n\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n  const toggle = (key) => {\n  \n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}&uid=${JSON.parse(userid)}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n     \n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingAllocation?uid=${JSON.parse(userid)}`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter : function(cell, row){\n        let dueDate=row.created.split(\"-\").reverse().join(\"-\")\n     \n        return(\n           \n            <>\n      {dueDate}\n            </>\n        )\n    }\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 3,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date / Actual Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n          return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n          return (\n              <>\n                  <div>\n                      {row.status}/\n                      {\n                          row.status == \"Inprogress Query\" ?\n                              <p className=\"inprogress\">\n\n                                  {row.statusdescription}\n                              </p>\n                              :\n                              row.status == \"Declined Query\" ?\n                                  <p className=\"declined\">\n\n                                      {row.statusdescription}\n                                  </p> :\n                                  row.status == \"Completed Query\" ?\n                                      <p className=\"completed\">\n\n                                          {row.statusdescription}\n                                      </p> : \n                                      null\n                                  \n                                    \n                      }\n                  </div>\n              </>\n          );\n      },\n  },\n  \n  {\n    text: \"Action\",\n    dataField: \"\",\n    headerStyle: () => {\n      return { fontSize: \"12px\" };\n    },\n    formatter: function (cell, row) {\n      return (\n        <>\n          {row.statuscode === \"0\" || row.statuscode === \"3\"? (\n           \n           <i onClick ={() => assignConfirm(row.id, row.assign_no)} class=\"fa fa-share\" style={{color : \"blue\", cursor : \"pointer\"}}></i>\n          ) : (\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n              {/* <div title=\"Assign to\">\n               \n\n              </div>\n              <div title=\"Decline Query\">\n                <Link\n                  to={`/teamleader/query_rejection/${row.id}`}\n                >\n                  <i\n                    className=\"fa fa-trash\"\n                  ></i>\n                </Link>\n              </div> */}\n  <p style={{ color: \"green\", fontSize: \"10px\" }}>\n\n Allocated to {row.tname} on\n<p>{row.allocation_time}</p>\n</p>\n              {/* <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/teamleader/chatting/${row.id}`,\n                    obj: {\n                      message_type: \"4\",\n                      query_No: row.assign_no,\n                      query_id: row.id,\n                      routes: `/teamleader/queriestab`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div> */}\n\n            </div>\n\n\n\n          )}\n        </>\n      );\n    },\n  },\n  {\n    text: \"History\",\n    dataField: \"\",\n    headerStyle: () => {\n      return { fontSize: \"12px\" };\n    },\n    formatter: function (cell, row) {\n      return (\n        <>\n          <button\n            type=\"button\"\n            class=\"btn btn-info btn-sm\"\n            onClick={() => toggle(row.id)}\n          >\n            History\n          </button>\n        </>\n      );\n    },\n  },\n  ];\n\n\n\n  const  assignConfirm = (id, assign_number) => {\n \n   \nSwal.fire({\n  title: \"Are you sure?\",\n   text: `do you want to assign ${assign_number} to taxprofessional`,\n        type: 'warning',\n        showCloseButton:true,\n        showCancelButton: true,\n        confirmButtonColor: '\"#3085d6\"',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, assign it!',\n        cancelButtonText: 'No'\n    }).then(function(result){\n        if(result.value){\n          hist.push(`/teamleader/queryassing/${id}`)\n        }else if(result.dismiss == 'cancel'){\n          \n           axios.get(`${baseUrl}/tl/workby?uid=${JSON.parse(userid)}&qid=${id}`).then((res) => {\n                   if(res.data.code === 1){\n                     hist.push(`/teamleader/proposal`)\n                   \n                   }\n                 })\n        }\n\n    });\n\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            inCompleteQuery=\"inCompleteQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n            <History history={history} toggle={toggle} modal={modal} />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default CompletedQuery;\n","/home/pooja/MazarsRepo/src/pages/TL/InCompleteData/InCompleteData.js",["2354","2355","2356","2357","2358","2359","2360","2361","2362"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\nfunction InCompleteData({ CountIncomplete }) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter : function(cell, row){\n        let dueDate=row.created.split(\"-\").reverse().join(\"-\")\n      \n        return(\n           \n            <>\n      {dueDate}\n            </>\n        )\n    }\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n       \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date / Acutal Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}{row.statusdescription && \"/\"}\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {row.status_code == \"1\" ? null :\n            <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-evenly\",\n              color: \"green\",\n            }}\n          >\n            <div title=\"Send Message\">\n              <Link\n                to={{\n                  pathname: `/teamleader/chatting/${row.id}`,\n                  obj: {\n                    message_type: \"4\",\n                    query_No: row.assign_no,\n                    query_id: row.id,\n                    routes: `/teamleader/proposal`\n                  }\n                }}\n              >\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                    color: \"blue\"\n                  }}\n                ></i>\n              </Link>\n            </div>\n\n            <div title=\"View Discussion Message\">\n              <i\n                class=\"fa fa-comments-o\"\n                style={{\n                  fontSize: 16,\n                  cursor: \"pointer\",\n                  color: \"orange\"\n                }}\n                onClick={() => ViewDiscussionToggel(row.assign_no)}\n              ></i>\n            </div>\n          </div>}\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            InprogressQuery=\"InprogressQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getInCompleteAssingment}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InCompleteData;\n","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js",["2363"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport RejectedModal from \"./RejectedModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [pendingData, setPendingData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [pay, setPay] = useState({\n    id: \"\",\n    allocation_id: \"\",\n  });\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const rejectHandler = (key) => {\n\n    setPaymentModal(!addPaymentModal);\n    setPay({\n      id: key.id,\n      allocation_id: key.allocation_id,\n    });\n  };\n\n  useEffect(() => {\n    getPendingforAcceptance();\n  }, []);\n\n  const getPendingforAcceptance = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setPendingData(res.data.result);\n          setRecords(res.data.result.length);\n         \n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.query_created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n       \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 2,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date / Actual Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Accept / Reject\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                color: \"#6967ce\",\n                cursor: \"pointer\",\n              }}\n              id=\"div1\"\n            >\n              <div\n                id=\"accept\"\n                title=\"Accept Assignment\"\n                onClick={() => acceptHandler(row)}\n              >\n                <i\n                  class=\"fa fa-check\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n              <div\n                id=\"reject\"\n                title=\"Reject Assignment\"\n                // onClick={() => rejectHandler(row)}\n                onClick={() => rejectHandler(row)}\n              >\n                <i\n                  class=\"fa fa-times\"\n                  style={{ color: \"red\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  const acceptHandler = (key) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query accepted successfully.\")\n          getPendingforAcceptance();\n          updateTab(3);\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n\n      });\n  };\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setPendingData}\n            getData={getPendingforAcceptance}\n            pendingForAcceptence=\"pendingForAcceptence\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Spinner color=\"primary\" />\n              :\n              <BootstrapTable\n                bootstrap4\n                keyField=\"id\"\n                data={pendingData}\n                columns={columns}\n                rowIndex\n              />\n          }\n          <RejectedModal\n            rejectHandler={rejectHandler}\n            addPaymentModal={addPaymentModal}\n            pay={pay}\n            getPendingforAcceptance={getPendingforAcceptance}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForAcceptence;\n\n","/home/pooja/MazarsRepo/src/views/PaymentStatus/PaymentComponent.js",["2364","2365","2366","2367","2368","2369","2370","2371","2372","2373","2374","2375","2376","2377","2378","2379"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport CommonServices from \"../../common/common\";\nimport Loader from \"../../components/Loader/Loader\";\n\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  pay,\n  getPaymentStatus,\n  pay3\n}) {\n  const { handleSubmit, register } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n\n  const { assign_id, amount, accepted_amount, paid_amount,\n    payment_terms, no_of_installment, installment_amount,\n    due_date, amount_type, amount_fixed, amount_hourly\n  } = pay;\n\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"id\", assign_id);\n    formData.append(\"status\", 8);\n    formData.append(\"amount\", value.p_amount);\n\n  \n    axios.get(`${baseUrl}/admin/getPaymentDetail?id=${assign_id}`)\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n         \n          window.location.href= (`${response.data.payment_detail[0].paymenturl}`)\n         \n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  const installAmount = (data) => {\n    var item = data.split(',')\n\n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\nif(addPaymentModal === true){\n  var kk = pay.installment_amount.split(\",\")\n}\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal}  toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\n        {\n          loading ?\n            <Loader />\n            :\n            <>\n              <ModalBody>\n                <table class=\"table table-bordered\">\n                  <tr>\n                    <th>Paid Amount</th>\n                    <th>Due Date</th>\n                    <th>Pay</th>\n                  </tr>\n                  {kk?.map((i, e) => (\n                    <tr>\n                    <td>{i == \"0\" ? pay.amount : i }</td>\n                    <td> {CommonServices.removeTime(due_date)}</td>\n                    <td><form onSubmit={handleSubmit(onSubmit)}>\n                  {+accepted_amount == +paid_amount ? <p>paid</p> : (\n                   <button type=\"submit\" className=\"btn btn-primary\">\n                      Pay\n                   </button>\n                    \n                \n                  )}\n                </form></td>\n                  </tr>\n                 ))}\n                 \n                \n                </table>\n                \n              </ModalBody>\n            </>\n        }\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/views/AssignmentTab/DiscardReport.js",["2380","2381","2382","2383","2384","2385"],"/home/pooja/MazarsRepo/src/pages/Admin/TaxProfessionalsTab/History.js",["2386","2387","2388","2389","2390","2391","2392","2393"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction History({ history,toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n   \n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>History</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">From</th>\n                <th scope=\"row\">To</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Email</th>\n                <th scope=\"row\">Phone</th>\n              </tr>\n            </thead>\n\n            {history.length > 0\n              ? history.map((p, i) => (\n                  <tbody>\n                      <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.from_date}</td>\n                      <td>{p.to_date}</td>\n                      <td>{p.name}</td>\n                      <td>{p.personal_email}</td>\n                      <td>{p.phone}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default History;\n","/home/pooja/MazarsRepo/src/pages/Admin/TeamLeaderTab/History.js",["2394","2395","2396","2397","2398","2399","2400","2401"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction History({ history, toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n   \n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>History</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">From</th>\n                <th scope=\"row\">To</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Email</th>\n                <th scope=\"row\">Phone</th>\n              </tr>\n            </thead>\n\n            {history.length > 0\n              ? history.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.from_date}</td>\n                      <td>{p.to_date}</td>\n                      <td>{p.name}</td>\n                      <td>{p.personal_email}</td>\n                      <td>{p.phone}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default History;\n","/home/pooja/MazarsRepo/src/components/Admin-Footer/Admin-Footer.js",[],"/home/pooja/MazarsRepo/src/components/Admin-Header/Admin-Header.js",["2402","2403"],"import React from \"react\";\nimport \"../../assets/css/style.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport NavWrapper from \"./NavWrapper\";\n\n\nfunction AdminHeader({ custUserId, adminUserId, TLuserId, TPuserId , feedbackNumber}) {\n  let history = useHistory();\n\n  const custLogout = () => {\n    localStorage.removeItem(\"userid\");\n    localStorage.removeItem(\"custEmail\");\n    localStorage.removeItem(\"category\");\n    history.push(\"/\");\n  };\n\n  const adminLogout = () => {\n    localStorage.removeItem(\"adminkey\");\n    localStorage.removeItem(\"adminEmail\");\n    history.push(\"/admin/login\");\n  };\n\n  const tlLogout = () => {\n    localStorage.removeItem(\"tlkey\");\n    localStorage.removeItem(\"tlEmail\");\n    history.push(\"/teamleader/login\");\n  };\n\n  const tpLogout = () => {\n    localStorage.removeItem(\"tpkey\");\n    history.push(\"/taxprofessional/login\");\n  };\n\n  const nm = window.localStorage.getItem(\"name\");\n \n  var name = JSON.parse(nm);\n  \n\n\n  const CustEmail = window.localStorage.getItem(\"custEmail\");\n  const adminEmail = window.localStorage.getItem(\"adminEmail\");\n  const tlEmail = window.localStorage.getItem(\"tlEmail\");\n  const tpEmail = window.localStorage.getItem(\"tpEmail\")\n \n  \n  return (\n    <div>\n      <nav\n        class=\"header-navbar navbar-expand-md navbar navbar-with-menu navbar-without-dd-arrow fixed-top navbar-semi-light\"\n        sty\n      >\n        {custUserId && (\n          <NavWrapper \n         \n          color=\"#5E96AE\" logout={custLogout}\n            name=\"customer\" email={CustEmail}\n          />\n        )}\n\n        {adminUserId && (\n          <NavWrapper color=\"#262d47\" logout={adminLogout}\n            name=\"admin\" email={adminEmail}\n            feedbackNumber= {feedbackNumber}\n          />\n        )}\n\n        {TLuserId && <NavWrapper color=\"#BC85A3\" logout={tlLogout}\n          name=\"teamleader\" email={tlEmail}\n        />}\n\n        {TPuserId && <NavWrapper color=\"#9799BA\" logout={tpLogout}\n          name=\"taxprofessional\" email={tpEmail}\n        />}\n      </nav>\n    </div>\n  );\n}\n\nexport default AdminHeader;\n","/home/pooja/MazarsRepo/src/components/Records/Records.js",[],"/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerFilter.js",["2404","2405","2406","2407","2408","2409","2410","2411","2412","2413","2414","2415","2416","2417","2418","2419","2420","2421","2422","2423","2424","2425"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\nfunction CustomerFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const { records,\n    setRecords, setData, getData, id,\n    query,\n    InprogressAllocation,\n    InprogressQueryProposal,\n    DeclinedQuery,\n\n    proposal,\n    inprogressProposal,\n    acceptedProposal,\n    declinedProposal,\n    allPayment,\n    paid,\n    unpaid,\n    assignment } = props;\n\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\nconst [loading, setLoading] = useState(false)\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n  const [item] = useState(current_date);\n\n\n  useEffect(() => {\n    const getSubCategory = () => {\n     if(selectedData != undefined){\n      axios\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n     }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n   \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    \n    setSelectedData([]);\n    setStore2([]);\n    setTax2([]);\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n\n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    getData();\n  };\n\n  const onSubmit = (data) => {\n  setLoading(true)\n\n    if (query == \"query\") {\n\n      axios\n        .get(\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    if (InprogressAllocation == \"InprogressAllocation\") {\n      axios\n        .get(\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    if (InprogressQueryProposal == \"InprogressQueryProposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/incompleteAssignments?uid=${JSON.parse(id)}&status=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n\n    if (DeclinedQuery == \"DeclinedQuery\") {\n      axios\n        .get(\n          `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&pcat_id=${selectedData}&status=${data.p_status}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n\n    if (proposal == \"proposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    if (inprogressProposal == \"inprogressProposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    if (acceptedProposal == \"acceptedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=2&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    if (declinedProposal == \"declinedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=3pcat_id=${selectedData}`\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n\n    if (assignment == \"assignment\") {\n      axios\n        .get(\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    if (allPayment == \"allPayment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n    if (unpaid == \"unpaid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n    if (paid == \"paid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n      \n          if (res.data.code === 1) {\n            setLoading(false)\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        })\n        .catch((error) => {\n          ShowError.LoadingError(setLoading)\n         });\n    }\n\n    \n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n                <div class=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    defaultValue={item}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  {query == \"query\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress Queries</option>\n                      <option value=\"2\">Completed Queries</option>\n                      <option value=\"3\">Declined Queries</option>\n                    </select>\n                  )}\n\n                  {InprogressAllocation == \"InprogressAllocation\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Allocation</option>\n                      <option value=\"5\">Inprogress; Proposals</option>\n                      <option value=\"6\">Inprogress; Assignments</option>\n                    </select>\n                  )}\n\n\n                  {DeclinedQuery == \"DeclinedQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Admin Declined; Queries</option>\n                      <option value=\"2\">Customer Declined; Queries</option>\n                      <option value=\"3\">Customer Declined; Proposals</option>\n                      <option value=\"4\">Customer Declined; Payment</option>\n                    </select>\n                  )}\n\n                  {proposal == \"proposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress Proposals</option>\n                      <option value=\"2\">Accepted Proposals</option>\n                      <option value=\"3\">Declined Proposals</option>\n                    </select>\n                  )}\n\n                  {inprogressProposal == \"inprogressProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Preparation</option>\n                      <option value=\"5\"> Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {allPayment == \"allPayment\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Unpaid</option>\n                      <option value=\"2\">Paid</option>\n                    </select>\n                  )}\n\n                  {assignment == \"assignment\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress</option>\n                      <option value=\"2\">Completed</option>\n                      <option value=\"3\">Payment Declined</option>\n                    </select>\n                  )}\n\n                </div>\n\n               \n                {\n                      loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                        Search\n                      </button>\n                    }\n                <Reset />\n\n               \n\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CustomerFilter;\n\n\n","/home/pooja/MazarsRepo/src/components/Admin-Sidebar/Admin-Sidebar.js",["2426","2427","2428","2429","2430","2431","2432","2433","2434","2435","2436","2437","2438","2439","2440","2441"],"import { NavLink } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { Badge } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\n\nimport Collapse from '@mui/material/Collapse';\n\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport { useHistory } from \"react-router\";\nimport './list.css';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nfunction Sidebar({ adminDashboard, custDashboard, TLDashboard, TPDashboard , feedbackNumber}) {\n  const [toggleState, setToggleState] = useState(false);\n  const [feedbackNumber2, setfeedbackNumber2] = useState();\n  const [feedbackNumbertl, setfeedbackNumbertl] = useState();\n  const [feedbackNumbertp, setfeedbackNumbertp] = useState();\n  const [open, setOpen] = useState(false)\n  const [logo, setLogo] = useState(\"customer/dashboard\")\n  const tlkey= window.localStorage.getItem(\"tlkey\");\n  const tpkey = window.localStorage.getItem(\"tpkey\");\n  const adminkey = window.localStorage.getItem(\"adminkey\")\n  let history = useHistory()\n  const toggleTab = (index) => {\n  \n    setToggleState(index);\n  };\nconst feedNumber = {\n  fontSize: \"10.5px\",\n  height: \"15px\",\n  backgroundColor: \"green\",\n  color: \"white\",\n  display: \"inline-block\",\n  margin: \"0px 0px 20px 0px\",\n  padding: \"9px 10px\",\n    borderRadius: \"50%\"\n}\nuseEffect(() => {\n  getFeedback4();\n}, [custDashboard])\n\n\nuseEffect(() => {\n  getFeedback2();\n}, [adminDashboard])\n\nconst getFeedback4 = () => {\n  setLogo(\"/#/customer/dashboard\")\n}\nconst getFeedback2 = () => {\n  if(adminDashboard != undefined){\n    axios.get(`${baseUrl}/admin/getFeedback?uid=${JSON.parse(adminkey)}&&type=total`).then((res) => {\nsetLogo(\"admin/dashboard\")\n      if (res.data.code === 1) {\n       \n       if(res.data.result != undefined){\n         setfeedbackNumber2(res.data.result[0].total)\n         setLogo(\"/#/admin/dashboard\")\n       }\n      }\n    });\n  }\n  if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\n    setOpen(true)\n  }\n\n};\nconst getFeedbacktl = () => {\n if(TLDashboard != undefined){\n  axios\n  .get(`${baseUrl}/customers/getFeedback?tl_id=${JSON.parse(tlkey)}&&type=total`)\n  .then((res) => {\n    setLogo(\"teamleader/dashboard\")\n    if(res.data.result != undefined){\n      setfeedbackNumbertl(res.data.result[0].total)\n      setLogo(\"/#/teamleader/dashboard\")\n    }\n  });\n }\n if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\n  setOpen(true)\n}\n};\nuseState(() => {\n  getFeedbacktl();\n}, [TLDashboard])\n\nconst getFeedbacktp = () => {\n  if(TPDashboard != undefined){\n    axios\n    .get(`${baseUrl}/customers/getFeedback?tp_id=${JSON.parse(tpkey)}&&type=total`)\n    .then((res) => {\n      setLogo(\"taxprofessional/dashboard\")\n      if(res.data.result != undefined){\n        setfeedbackNumbertp(res.data.result[0].total)\n        setLogo(\"/#/taxprofessional/dashboard\")\n      }\n    });\n  }\n  if(window.location.hash.split(\"/\").slice(-1) == \"recording\" || window.location.hash.split(\"/\").slice(-1) == \"schedule\"){\n    setOpen(true)\n  }\n};\nuseState(() => {\n  getFeedbacktp();\n}, [TPDashboard])\n\nconst handleClick = () => {\n\n  setOpen(!open);\n};\n  return (\n    <>\n      <div\n        class=\"main-menu menu-fixed menu-light menu-accordion  menu-shadow \"\n        data-scroll-to-active=\"true\"\n        data-img=\"https://themeselection.com/demo/ chameleon-free-bootstrap-admin-template/theme-assets/images/backgrounds/02.jpg\"\n      >\n        <div class=\"navbar-header\">\n          <ul class=\"nav navbar-nav flex-row\">\n            <li class=\"nav-item mr-auto\">\n              <a class=\"navbar-brand\" href={logo}>\n                <img\n\n                  class=\"brand-logo\"\n                  alt=\"Chameleon admin logo\"\n                  src=\"https://themeselection.com/demo/chameleon-free-bootstrap-admin-template/theme-assets/images/logo/logo.png\"\n                />\n                <h3 class=\"brand-text\">Mazars</h3>\n              </a>\n            </li>\n            <li class=\"nav-item d-md-none\">\n              <a class=\"nav-link close-navbar\">\n                <i class=\"fa fa-times\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"main-menu-content\">\n          {custDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"nav-item active\">\n                <NavLink to={\"/customer/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class={toggleState && \"\"} onClick={() => toggleTab(\"active\")}>\n                <NavLink to={\"/customer/queries\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/paymentstatus\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/schedule\"}>\n                  <i class=\"fa fa-rss-square\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Schedule\n                  </span>\n                </NavLink>\n              </li>\n\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/feedback-data\"}>\n                  <i class=\"fa fa-rss-square\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Feedback\n                  </span>\n                </NavLink>\n              </li>\n\n            </ul>\n          )}\n\n          {adminDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/queriestab\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposals\n                  </span>\n                </NavLink>\n              </li>\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/adinvoice\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                   Invoice\n                  </span>\n                </NavLink>\n              </li>\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/paymentstatus\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                 \n              <ListItemButton  onMouseEnter={() => handleClick()}>\n        \n      <span className=\"listStyle\">\n      <ListItemIcon>\n          <ScheduleIcon />\n        </ListItemIcon>\n\n\n                <span class=\"menu-title\" data-i18n=\"\">\n                  Schedule\n                </span>\n                {open ? <ExpandLess /> : <ExpandMore />}\n                </span>\n\n      \n       \n      </ListItemButton>\n\n      <Collapse in={open}  unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <ul>\n                  <li>\n                  <NavLink to={\"/admin/schedule\"}>\n                  \n                <span class=\"menu-title\" data-i18n=\"\">\n                  Schedule\n                </span>\n                </NavLink>\n                  </li>\n                  <li>\n                  <NavLink to={\"/admin/recording\"}>\n                  \n                <span class=\"menu-title\" data-i18n=\"\">\n                Recording\n                </span>\n                </NavLink>\n                  </li>\n                </ul>\n        </List>\n      </Collapse>\n              </li>\n\n            \n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/teamleaders\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Team Leaders\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/taxprofessionals\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Tax Professionals\n                  </span>\n                </NavLink>\n              </li>\n               <li class =\"nav-item\">\n                 <NavLink to={\"/admin/customers\"}>\n                   <i class=\"fa fa-users\"></i>\n                   <span class=\"menu-title\" data-i18n=\"\">\n                   Customers\n                  </span>\n                 </NavLink>\n               </li>\n               <li class =\"nav-item\">\n                 <NavLink to={\"/admin/reports\"}>\n                   <i class=\"fa fa-users\"></i>\n                   <span class=\"menu-title\" data-i18n=\"\">\n                   Report\n                  </span>\n                 </NavLink>\n               </li>\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/feedback\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                 Feedback <sup style={feedNumber}>{feedbackNumber2}</sup> \n          \n                  </span>\n                  {/* Feedback  <span class=\"badge\">{feedbackNumber2}</span> */}\n                </NavLink>\n              </li>\n            </ul>\n          )}\n\n          {TLDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"active nav-item\">\n                <NavLink to={\"/teamleader/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/queriestab\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/tlinvoice\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                   Invoice\n                  </span>\n                </NavLink>\n              </li>\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/paymentstatus\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                 \n              <ListItemButton onMouseEnter={() => handleClick()}>\n        \n        <span className=\"listStyle\">\n        <ListItemIcon>\n            <ScheduleIcon />\n          </ListItemIcon>\n  \n  \n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Schedule\n                  </span>\n                  {open ? <ExpandLess /> : <ExpandMore />}\n                  </span>\n  \n        \n         \n        </ListItemButton>\n  \n      <Collapse in={open}  unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <ul>\n                  <li>\n                  <NavLink to={\"/teamleader/schedule\"}>\n                 \n                <span class=\"menu-title\" data-i18n=\"\">\n                  Schedule\n                </span>\n                </NavLink>\n                  </li>\n                  <li>\n                  <NavLink to={\"/teamleader/recording\"}>\n                 \n                <span class=\"menu-title\" data-i18n=\"\">\n                Recording\n                </span>\n                </NavLink>\n                  </li>\n                </ul>\n        </List>\n      </Collapse>\n              </li>\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/reports\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Reports\n                  </span>\n                </NavLink>\n              </li>\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/addteamprof\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    View T.P\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/feedback\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                  Feedback <sup style={feedNumber}>{feedbackNumbertl}</sup>\n                  </span>\n                </NavLink>\n              </li>\n              \n            \n            </ul>\n          )}\n\n          {TPDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/dashboard\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/queriestab\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/tpinvoice\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                   Invoice\n                  </span>\n                </NavLink>\n              </li>\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/paymentstatus\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                 \n              <ListItemButton onMouseEnter={() => handleClick()}>\n        \n        <span className=\"listStyle\">\n        <ListItemIcon>\n            <ScheduleIcon />\n          </ListItemIcon>\n  \n  \n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Schedule\n                  </span>\n                  {open ? <ExpandLess /> : <ExpandMore />}\n                  </span>\n  \n        \n         \n        </ListItemButton>\n  \n      <Collapse in={open}  unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <ul>\n                  <li>\n                  <NavLink to={\"/taxprofessional/schedule\"}>\n                 \n                <span class=\"menu-title\" data-i18n=\"\">\n                  Schedule\n                </span>\n                </NavLink>\n                  </li>\n                  <li>\n                  <NavLink to={\"/taxprofessional/recording\"}>\n\n                <span class=\"menu-title\" data-i18n=\"\">\n                Recording\n                </span>\n                </NavLink>\n                  </li>\n                </ul>\n        </List>\n      </Collapse>\n              </li>\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/reports\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Reports\n                  </span>\n                </NavLink>\n              </li>\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/feedback\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                  Feedback <sup style={feedNumber}>{feedbackNumbertp}</sup> \n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n        </div>\n        <div class=\"navigation-background\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default Sidebar;\n","/home/pooja/MazarsRepo/src/components/Search-Filter/RecordingFilter.js",["2442","2443","2444","2445","2446","2447","2448","2449","2450","2451"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction RecordingFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    records,\n    setRecords,\n    setData,\n    getRecording,\n    SearchQuery,\n   userid,\n  \n \n  } = props;\n  // const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [status1, setStatus1] = useState(1);\n\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n  const [item] = useState(current_date);\n\n \n\n  \n \n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    setStatus1(1)\n   getRecording();\n  };\n\n  const onSubmit = (data) => {\n \nif(SearchQuery == \"SearchQuery\") {\n  \n    axios\n        .get(\n          `${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}&assign_id=${data.queryNo}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n}\n\n   \n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n          \n             <input\n                    type=\"text\"\n                    name=\"queryNo\"\n                    ref={register}\n                    className=\"form-select form-control\"\n                    \n                  />\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RecordingFilter;\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/DeclinedProposal.js",["2452","2453","2454","2455","2456","2457","2458","2459","2460","2461","2462","2463","2464"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\n\nfunction DeclinedProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const chatHandler = (key) => {\n\n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n         \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 3,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Customer Declined; Proposal\" ?\n                                    <p className=\"declined\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <div>\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\" ? (\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" ?\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\n\n                                    <a\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\n                                        target=\"_blank\"\n                                    >\n                                        <i\n                                            class=\"fa fa-eye\"\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\n                                        />\n                                    </a>\n                                </div>\n                                :\n                                null\n                            }\n\n\n<div>\n                                {\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        null\n                                        :\n                                        <div title=\"Send Message\">\n                                            <Link\n                                                to={{\n                                                    pathname: `/teamleader/chatting/${row.id}`,\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                }\n                            </div>\n\n\n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"proposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default DeclinedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AcceptedProposal.js",["2465","2466","2467","2468","2469","2470","2471","2472","2473","2474","2475","2476","2477"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction AcceptedProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const chatHandler = (key) => {\n    \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 2,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n\n                            {\n                                row.status == \"Accepted; Proposal\" ?\n                                    <p className=\"completed\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <div>\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\" ? (\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\n\n                                    <a\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\n                                        target=\"_blank\"\n                                    >\n                                        <i\n                                            class=\"fa fa-eye\"\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\n                                        />\n                                    </a>\n                                </div>\n                                :\n                                null\n                            }\n\n\n                            <div>\n                               \n                                        <div title=\"Send Message\">\n                                            <Link\n                                                to={{\n                                                    pathname: `/teamleader/chatting/${row.id}`,\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                \n                            </div>\n\n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"proposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AcceptedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InprogressProposal.js",["2478","2479","2480","2481","2482","2483","2484","2485","2486","2487","2488","2489","2490","2491"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction InprogressProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const chatHandler = (key) => {\n       setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`)\n            .then((res) => {\n          \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 1,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n           {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <div>\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\" &&  row.work_by != \"0\" ? (\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                           \n\n\n                            <div>\n                                {\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        null\n                                        :\n                                        <div title=\"Send Message\">\n                                            <Link\n                                                to={{\n                                                    pathname: `/teamleader/chatting/${row.id}`,\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                }\n                            </div>\n\n                            {row.status_code > \"3\" ?\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\n\n                                    <a\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\n                                        target=\"_blank\"\n                                    >\n                                        <i\n                                            class=\"fa fa-eye\"\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\n                                        />\n                                    </a>\n                                </div>\n                                :\n                                null\n                            }\n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        InprogressProposal=\"InprogressProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                    <ChatHistory\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        qno={id}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default InprogressProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/AllProposal.js",["2492","2493","2494","2495","2496","2497","2498","2499","2500","2501","2502","2503","2504","2505","2506","2507","2508","2509","2510","2511","2512"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport Tds from \"./Tds\";\n\n\n\nfunction AllProposal() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n\n\n    const [id, setId] = useState(null);\n    const [id2, setId2] = useState(null)\n    const [tds, setTds] = useState(false)\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const chatHandler = (key) => {\n         setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n   const addTdsToggle = (key) => {\n     \n       setTdsForm(!tdsForm)\n   }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n      \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.id}`,\n                                index : 0,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <div>\n                                        {row.status}/\n                                        <p className=\"inprogress\">\n                                            {row.statusdescription}\n                                        </p>\n                                    </div>\n                                    :\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        <p className=\"declined\">\n                                            {row.status}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.status}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <div>\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\"&& row.work_by != \"0\" ? (\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" || row.status_code == \"10\" ?\n                            <>\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\n\n                                    <a\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\n                                        target=\"_blank\"\n                                    >\n                                        <i\n                                            class=\"fa fa-eye\"\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\n                                        />\n                                    </a>\n                                  \n                                </div>\n                              \n                                </>\n                                :\n                                null\n                            }\n\n\n                            <div>\n                                {\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        null\n                                        :\n                                        <div title=\"Send Message\">\n                                            <Link\n                                                to={{\n                                                    pathname: `/teamleader/chatting/${row.id}`,\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/teamleader/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                }\n                            </div>\n\n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TeamFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        AllProposal=\"AllProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                    <ChatHistory\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        qno={id}\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllProposal;\n\n\n\n\n{/* <div>\n                                {row.revised_text && (\n                                    <div style={{ cursor: \"pointer\" }} title=\"View History\">\n                                        <i\n                                            class=\"fa fa-comments-o\"\n                                            style={{ color: \"green\", fontSize: \"16px\", color: \"light-blue\", }}\n                                            onClick={() => chatHandler(row)}\n                                        ></i>\n                                    </div>\n                                )}\n                            </div> */}","/home/pooja/MazarsRepo/src/pages/Admin/customer/CustHistory.js",["2513","2514","2515","2516","2517","2518","2519","2520","2521"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction CustHistory({ history, toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n  \n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <div>\n       <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Customer Details</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            {/* <thead>\n              <tr>\n               \n                <th scope=\"row\">Query Raised</th>\n                <th scope=\"row\">Query Completed</th>\n                \n                <th scope=\"row\">Query Inprogress</th>\n                <th scope=\"row\">Query Declined</th>\n              </tr>\n            </thead> */}\n\n            {history != undefined \n              ? \n                  <tbody>\n                      <tr>\n                      <th scope=\"row\">Query Raised</th>\n                      <td>{history.total}</td>\n                      </tr>\n                      <tr>\n                      <th scope=\"row\">Query Completed</th>\n                     <td>{history.inprogress_queries}</td>\n                     </tr>\n                     <tr>\n                     <th scope=\"row\">Query Inprogress</th>\n                     <td>{history.complete_query}</td>\n                     </tr>\n                     <tr>\n                     <th scope=\"row\">Query Declined</th>\n                     <td>{history.declined_queries}</td>\n                    </tr>\n                  </tbody>\n                \n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default CustHistory;\n","/home/pooja/MazarsRepo/src/pages/TL/Login/VerifyOtpLogin.js",["2522"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\n\nconst Schema = yup.object().shape({\n  p_otp: yup.string().required(\"\"),\n});\n\n\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\n\n\n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const history = useHistory();\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [num, changeNum] = useState(false);\n\n\n  useEffect(() => {\n    LoadingTime.timer2(setTime, setDisabled)\n  }, [num]);\n\n  useEffect(() => {\n    LoadingTime.timer2(setTime, setDisabled)\n  }, []);\n\n\n\n  const validOtp = (e) => {\n    if (isNaN(e.target.value)) {\n      Alerts.ErrorNormal(\"Please enter number only\")\n    }\n  }\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/verifyloginotp`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n\n        if (response.data.code == 1) {\n          setLoading(false)\n          Alerts.SuccessLogin(\"Logged in successfully.\")\n          localStorage.setItem(\"tlkey\", JSON.stringify(response.data.user_id));\n          localStorage.setItem(\"tlEmail\", JSON.stringify(response.data.name));\n          history.push(\"/teamleader/dashboard\");\n        } else {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n          reset();\n        }\n      })\n      .catch((error) => {\n      \n      });\n  }\n\n\n  const resendOtp = () => {\n    setLoading(true)\n    changeNum(true)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"uid\", uid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/regenrateotp`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setDisabled(false)\n        }\n        else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n        }\n      })\n      .catch((error) => {\n     \n      });\n  }\n\n\n\n  return (\n    <>\n\n      <div class=\"container\">\n        <div class=\"otp\">\n          <div class=\"heading text-center\">\n            <h2>Verify Your OTP</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            {\n              disabled ?\n                null\n                :\n                <div class=\"form-group\">\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_otp,\n                    })}\n                    id=\"otp\"\n                    placeholder=\"Enter Your OTP Here\"\n                    ref={register}\n                    name=\"p_otp\"\n                    autocomplete=\"off\"\n                    onChange={(e) => validOtp(e)}\n                  />\n                  {errors.p_otp && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_otp.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                  <Mandatory />\n                </div>\n            }\n            {\n              loading ?\n                <Spinner color=\"primary\" />\n                :\n                <div class=\"text-center\">\n                  {\n                    disabled ?\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\n                      :\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\n                  }\n                </div>\n            }\n          </form>\n\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/home/pooja/MazarsRepo/src/components/QueryDetails/QueryDetails.js",["2523","2524","2525","2526","2527","2528","2529"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport BasicQuery from \"./BasicQuery\";\nimport ProposalDetails from \"./ProposalDetails\";\nimport AssignmentDetails from \"./AssignmentDetails\";\nimport AdditionalQuery from \"./AdditionalQuery\";\nimport AddAdditionalQuery from \"./AddAdditionalQuery\";\nimport DraftReports from \"./DraftReports\";\nimport CommonServices from \"../../common/common\";\nimport QueryRecording from \"./QueryRecording\";\nimport {\n  TabContent, TabPane, Nav, NavItem, NavLink, Card, Row, Col\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport Feedback from './Feedback'\n\n\nfunction QueryDetails({\n  p,\n  diaplaySpecific,\n  diaplayProposal,\n  diaplayHistory,\n  diaplayAssignment,\n  displayQuery,\n  assingNo,\n  getQuery,\n  customerQuery,\n  queryDocs,\n  purpose,\n  paymentDetails,\n  year,\n  feedback,\n  reports, \n  submitData,\n  accept,\n  tlName2,\n  tp22,\n  tpStatus,\n  declined2,\n  declinedStatus, \n  finalDate, \n  qstatus\n}) {\n \n\n\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  }\n\n  return (\n    <>\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '1' })}\n              onClick={() => { toggle('1'); }}\n            >\n              Basic Query Information\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '2' })}\n              onClick={() => { toggle('2'); }}\n            >\n              Proposal\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '3' })}\n              onClick={() => { toggle('3'); }}\n            >\n              Assignment\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '4' })}\n              onClick={() => { toggle('4'); }}\n            >\n              Feedback\n            </NavLink>\n          </NavItem>\n          {customerQuery === \"customerQuery\" ? null :\n          <NavItem>\n            <NavLink\n            className = {classnames({ active : activeTab === '5'})}\n            onClick = {() => { toggle('5');}} >\n              Recording\n            </NavLink>\n          </NavItem> }\n         \n\n        </Nav>\n\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <BasicQuery\n                    p={p}\n                    diaplaySpecific={diaplaySpecific}\n                    purpose={purpose}\n                    queryDocs={queryDocs}\n                    year={year}\n                    declined2={declined2}\n                    declinedStatus={declinedStatus}\n                    qstatus={qstatus}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <ProposalDetails\n                    diaplayProposal={diaplayProposal}\n                    diaplayHistory={diaplayHistory}\n                    paymentDetails={paymentDetails}\n                    p={p}\n                    accept={accept}\n                    tlName2={tlName2}\n                    tp22 = {tp22}\n                    tpStatus={tpStatus}\n                    \n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tabId=\"3\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <AssignmentDetails\n                    diaplayAssignment={diaplayAssignment}\n                    p={p}\n                    diaplayProposal={diaplayProposal}\n                    reports={reports}\n                    assingNo={assingNo}\n                    submitData = {submitData}\n                    customerQuery = {customerQuery}\n                    finalDate={finalDate}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n\n          <TabPane tabId=\"4\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <Feedback\n                    feedback={feedback}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n       <TabPane tabId=\"5\">\n         <Row>\n           <Col sm=\"12\">\n             <Card body>\n               <QueryRecording\n  assingNo={p.assign_no}/>\n             </Card>\n           </Col>\n           </Row>\n       </TabPane>\n          \n\n        </TabContent>\n      </div>\n\n    </>\n  );\n}\n\nexport default QueryDetails;\n\n","/home/pooja/MazarsRepo/src/components/Search-Filter/CustomerListFilter.js",["2530","2531","2532","2533","2534","2535","2536"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { useForm } from \"react-hook-form\";\n\nfunction CustomerListFilter(props) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n  const [selectedData, setSelectedData] = useState([]);\n\n  const { setData, searchQuery, setRecords, records, getCustomer  } = props;\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n  \n  const resetData = () => {\n   \n    reset();\n   getCustomer();\n  };\n\n  \n\n  \n  const onSubmit = (data) => {\n\nif(searchQuery == \"SearchQuery\")\naxios\n.get(\n  `${baseUrl}/admin/getAllList?&name=${data.name}&country=${data.country}&state=${data.state}&city=${data.city2\n  }&email=${data.email}&occupation=${data.occupation}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n)\n.then((res) => {\n\n  if (res.data.code === 1) {\n    if (res.data.result) {\n      setData(res.data.result);\n    setRecords(res.data.result.length)\n    }\n  }\n});     \n};\n\n  return (\n    <>\n    <div className=\"row\">\n      <div className=\"col-sm-12 d-flex\">\n        <div>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n          <div className=\"row my-3\">\n        <div class=\"col-sm-3\">\n            \n          <input \n          placeholder=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          ref={register}\n          />\n      </div>\n      <div class=\"col-sm-3\">\n            \n            <input \n            placeholder=\"Country\"\n            type=\"country\"\n            name=\"country\"\n            className=\"form-control\"\n            ref={register}\n            />\n        </div>\n        <div class=\"col-sm-3\">\n            \n            <input \n            placeholder=\"City\"\n            type=\"text\"\n            name=\"city2\"\n            className=\"form-control\"\n            ref={register}\n            />\n        </div>\n              <div class=\"col-sm-3\">\n                  \n                  <input \n                  placeholder=\"State\"\n                  type=\"text\"\n                  name=\"state\"\n                  className=\"form-control\"\n                  ref={register}/>\n              </div>\n             \n              \n          \n          </div>\n          <div class=\"row my-3\">\n          <div class=\"col-sm-3\">\n                \n                <input \n                placeholder=\"Email\"\n                type=\"text\"\n                name=\"email\"\n                className=\"form-control\"\n                ref={register}/>\n            </div>\n            <div class=\"col-sm-3\">\n              \n              <input \n              placeholder=\"Occupation\"\n              type=\"text\"\n              name=\"occupation\"\n              className=\"form-control\"\n              ref={register}/>\n          </div>\n          <div class=\"form-inline\">\n             \n\n             <div class=\"form-group mx-sm-1  mb-2\">\n               <label className=\"form-select form-control\">From</label>\n             </div>\n\n             <div class=\"form-group mx-sm-1  mb-2\">\n               <input\n                 type=\"date\"\n                 name=\"p_dateFrom\"\n                 className=\"form-select form-control\"\n                 ref={register}\n                 max={item}\n               />\n             </div>\n\n             <div class=\"form-group mx-sm-1  mb-2\">\n               <label className=\"form-select form-control\">To</label>\n             </div>\n\n             <div class=\"form-group mx-sm-1  mb-2\">\n               <input\n                 type=\"date\"\n                 name=\"p_dateTo\"\n                 className=\"form-select form-control\"\n                 ref={register}\n                 defaultValue={item}\n                 max={item}\n               />\n             </div>\n</div>\n          </div>\n             \n              <div class=\"row my-3\">\n             \n             <div class=\"col-sm-6\">\n             <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n              <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n        <div class=\"form-group d-inline-block\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div>\n             </div>\n              \n              </div>\n \n           \n\n           \n          </form>\n        </div>\n      </div>\n    </div>\n  </>\n  );\n}\n\nexport default CustomerListFilter;\n","/home/pooja/MazarsRepo/src/pages/Admin/Schedule/Demo.js",["2537","2538","2539","2540","2541","2542","2543","2544","2545","2546","2547","2548","2549","2550","2551","2552","2553"],"import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  Resources,\n  MonthView,\n  Appointments,\n  AppointmentTooltip,\n  AppointmentForm,\n  EditRecurrenceMenu,\n  DragDropProvider,\n  WeekView,\n  DayView,\n  DateNavigator,\n  ViewSwitcher,\n  TodayButton,\n  Toolbar,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as Cookies from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport Alerts from \"../../../common/Alerts\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport {makeStyles} from \"@material-ui/styles\"\nconst useStyle = makeStyles(() => ({\n  rchStyle : {\n    color : \"green\",\n    display : \"flex\",\n    overflow: \"hidden\"\n  },\n  OverlayBase : {\n    display : \"flex\", \n    width : \"670px\"\n  }\n}))\n\n\n\nfunction Demo() {\n  const classes = useStyle()\n  const userId = window.localStorage.getItem(\"adminkey\");\n   const userEmail = window.localStorage.getItem(\"adminEmail\")\n   // const userEmail = null\n  const em = JSON.parse(userEmail)\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [assignmentdata, setAssignmentData] = useState([]);\n  const [owner, setOwner] = useState([]);\n  const [read, setRead] = useState(false);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [showVideoIcon, setShowVideoIcon] = useState(false)\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n  var date = new Date();\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n  const [currentDate, setCurrentDate] = useState(convert(date));\n\n  useEffect(() => {\n    getData();\n    getAssignmentNo();\n    getUsers();\n  }, []);\n\n  const getData = () => {\n    axios\n    .get(`${baseUrl}/tl/videoScheduler?tl_id=1`)\n      .then((res) => {\n\n   \n         var a = res.data.result.items;\n        if (a) {\n          setData(a.map(mapAppointmentData));\n        \n        }\n      });\n  };\n\n  const mapAppointmentData = (appointment) => ({\n    id: appointment.id,\n    startDate: appointment.start,\n    endDate: appointment.end,\n    title: appointment.title,\n    notes: appointment.summary,\n    question_id: appointment.question_id,\n    vstart: appointment.vstart,\n    vend: appointment.vend,\n    user: appointment.user.split(','),\n    owner: appointment.owner,\n    username: appointment.username,\n  });\n\n  const getAssignmentNo = () => {\n    axios\n    .get(`${baseUrl}/admin/getAllQuery`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          var data = res.data.result;\n\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n            text,\n            ...rest,\n          }));\n       \n          setAssignmentData(newArrayOfObj);\n        }\n      });\n  };\n\n  const getUsers = () => {\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\n\n      if (res.data.code === 1) {\n        var data = res.data.result;\n        const newOwners = data.map(({ name: text, ...rest }) => ({\n          text,\n          ...rest,\n        }));\n       \n        setOwner(newOwners);\n      }\n    });\n  };\n\n  const resources = [\n    {\n      fieldName: \"question_id\",\n      title: \"Query No\",\n      instances: assignmentdata,\n    },\n    {\n      fieldName: \"user\",\n      title: \"Users\",\n      instances: owner,\n      allowMultiple: true,\n    },\n  ];\nconst closeFun = () => {\n  alert(\"done\")\n}\n  const styles = (theme) => ({\n    button: {\n      color: theme.palette.background.default,\n      padding: 0,\n    },\n    text: {\n      paddingTop: theme.spacing(1),\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n\n  const B = (key) => {\n    setRead(!key)\n  }\n\n  const AppointmentBase = ({\n    children,\n    data,\n    onClick,\n    classes,\n    onAppointmentMetaChange,\n    ...restProps\n  }) => (\n    <div onDoubleClick={() => B(data.owner)}>\n      <Appointments.Appointment {...restProps}>\n        <div style={{ display: \"flex\" }}>\n       {showVideoIcon === false ? \n        <i\n        class=\"fa fa-video-camera\"\n        onClick={() => handleJoin(data)}\n        style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\n      ></i> : \"\"}\n          <div>{children}</div>\n          \n          <div\n          \n          >\n          </div>\n        </div>\n      </Appointments.Appointment>\n    </div>\n  );\n\n  \n\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\n    AppointmentBase\n  );\n\n  const myAppointment = (props) => {\n    return (\n      <Appointment\n        {...props}\n      // onAppointmentMetaChange={onAppointmentMetaChange}\n      />\n    );\n  };\n\n\n  //handleJoin\n  const handleJoin = (data) => {\n    console.log(\"dtat22\", data)\n// //  console.log(\"data\", data)\n// // console.log(data.startDate)\n//   var dt = new Date(data.startDate)\n//   var dt2 = new Date()\n//   let ck = dt.getMonth();\n \n//   let pp = dt2.getMonth();\n//   let rr = dt2.getHours();\n//   let ss = dt.getHours()\n//   let mm = dt2.getMinutes() + 20\n//   let dd = dt.getMinutes()\n//   let ee = dt.getDate();\n//   let eee = dt2.getDate()\n// //   console.log(\"dt\", dt)\n// //   console.log(dt2.getDate())\n// //  console.log(dt.getMinutes())\n// //  console.log(dt2.getMinutes() + 20)\n// //  console.log(\"ck\", ck)\n// //   console.log(\"dt2\", dt2)\n// //   console.log(\"pp\", pp)\n// //   console.log(\"mm\", mm)\n// //   console.log(\"dd\", dd)\n// //   console.log(\"ss\", ss)\n// //   console.log(\"rr\", rr)\n// //   console.log(ck == pp)\n// //   console.log(ee === eee)\n// //   console.log(ss == rr)\n// //   console.log(mm > dd)\n  \n \n//   if(ck == pp && ss == rr && ee == eee){\n \n \n//   if(mm > dd){\n//     console.log(\"passed\")\n//     setShowVideoIcon(true)\n//     Cookies.set(\"channel_2\", data.question_id);\n//     Cookies.set(\"baseMode_2\", baseMode);\n//     Cookies.set(\"transcode_2\", transcode);\n//     Cookies.set(\"attendeeMode_2\", attendeeMode);\n//     Cookies.set(\"videoProfile_2\", videoProfile);\n//     // history.push(\"/teamleader/meeting/\");\n//     history.push(`/admin/meeting/${data.id}`);\n\n//   }\n//   else{\n//   // return false\n//   setShowVideoIcon(true)\n//   Cookies.set(\"channel_2\", data.question_id);\n//   Cookies.set(\"baseMode_2\", baseMode);\n//   Cookies.set(\"transcode_2\", transcode);\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\n//   Cookies.set(\"videoProfile_2\", videoProfile);\n//   // history.push(\"/teamleader/meeting/\");\n//   history.push(`/admin/meeting/${data.id}`);\n//   }\n//   }\nCookies.set(\"channel_2\", data.question_id);\nCookies.set(\"baseMode_2\", baseMode);\nCookies.set(\"transcode_2\", transcode);\nCookies.set(\"attendeeMode_2\", attendeeMode);\nCookies.set(\"videoProfile_2\", videoProfile);\nCookies.set(\"adminid\", data.id)\n\n// history.push(\"/teamleader/meeting/\");\nhistory.push(`/admin/meeting/${data.id}`);\n  };\n\n  const changeFormat = (d) => {\n\n    if (typeof d === 'object') {\n   \n      return (\n        d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \" \" +\n        d.toString().split(\" \")[4]\n      );\n    } else {\n    \n      return d;\n    }\n  };\n\n  const commitChanges = ({ added, changed, deleted }) => {\n\n    if (added) {\n      setLoading(true)\n      \n\n      var startDate = added.startDate;\n      var endDate = added.endDate;\n\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", added.question_id);\n      formData.append(\"time\", changeFormat(startDate));\n      formData.append(\"endtime\", changeFormat(endDate));\n      formData.append(\"title\", added.title);\n      formData.append(\"notes\", added.notes);\n      formData.append(\"user\", added.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/aminPostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n        \n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"New call scheduled successfully.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n\n          getData();\n        })\n        .catch((error) => {\n\n        });\n    }\n    if (changed) {\n  \n      setLoading(true)\n      const data2 = data.map((appointment) =>\n        changed[appointment.id]\n          ? { ...appointment, ...changed[appointment.id] }\n          : appointment\n      );\n     \n\n      let valuesArray = Object.entries(changed);\n      let id = valuesArray[0][0];\n     \n      let dataIttem;\n\n      for (var i = 0; i < data2.length; i++) {\n        if (data2[i].id === id) {\n          dataIttem = data2[i];\n        }\n      }\n      var a = dataIttem.startDate\n      var b = dataIttem.endDate\n\n\n      if (!dataIttem.owner) {\n        var variable = \"Error\"\n        Alerts.ErrorEdit(variable)\n        return false;\n      }\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", dataIttem.question_id);\n      formData.append(\"id\", dataIttem.id);\n      formData.append(\"time\", changeFormat(a));\n      formData.append(\"endtime\", changeFormat(b));\n      formData.append(\"title\", dataIttem.title);\n      formData.append(\"notes\", dataIttem.notes);\n      formData.append(\"user\", dataIttem.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/aminPostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n         \n\n          if (response.data.code === 1) {\n            setLoading(false)\n            var msg = \"Call details updated successfully.\"\n            Alerts.SuccessNormal(msg)\n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n         \n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n          getData();\n        })\n        .catch((error) => {\n\n        });\n    }\n\n    if (deleted !== undefined) {\n     \n      setLoading(true)\n      var value;\n      data.filter((data) => {\n        if (data.id == deleted) {\n         \n          value = data.owner\n        }\n      });\n\n   \n      if (!value) {\n        var variable = \"Error\"\n        Alerts.ErrorDelete(variable)\n        return false;\n      }\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"It will be permanently deleted !\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\n           \n            if (res.data.code === 1) {\n              setLoading(false)\n              Swal.fire(\"Deleted!\", \"Scheduled call has been deleted.\", \"success\");\n              getData();\n            } else {\n              setLoading(false)\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n            }\n          });\n        }\n        else{\n          setLoading(false);\n          history.push(\"/admin/schedule\")\n        }\n      });\n    }\n  };\n\n\n  const BooleanEditor = (props) => {\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\n      return null;\n    }\n    return <AppointmentForm.BooleanEditor {...props} />;\n  };\n\n  const TextEditor = (props) => {\n    return <AppointmentForm.TextEditor {...props} />;\n  };\n\n  //basic layout\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\n\n    return (\n      <AppointmentForm.BasicLayout\n        appointmentData={appointmentData}\n        onFieldChange={onFieldChange}\n        {...restProps}\n      >\n\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\n        <AppointmentForm.TextEditor\n          value={appointmentData.username}\n          readOnly\n        />\n\n      </AppointmentForm.BasicLayout>\n    );\n  };\n\n\n  return (\n    <>\n          \n        <div style ={{display : \"flex\", height : \"700px\"}}>\n\n        <Paper >\n            <Scheduler data={data}>\n                <ViewState className = {classes.rchStyle}\n                  defaultCurrentDate={currentDate}\n                  defaultCurrentViewName=\"Week\"\n                />\n                <EditingState  className = {classes.OverlayBase} onCommitChanges={commitChanges}   />\n                <EditRecurrenceMenu  />\n\n                <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\n                <WeekView cellDuration={60} startDayHour={0} endDayHour={24} TimeTableLayoutProps={8} />\n                \n                <Appointments appointmentComponent={myAppointment} />\n\n                <Toolbar />\n                <DateNavigator />\n                <TodayButton />\n                <ViewSwitcher  />\n\n                <AppointmentTooltip showOpenButton  />\n                {\n                  read ?\n              \n                    \n                    <AppointmentForm \n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                      onClose= {() => closeFun()}\n                      readOnly\n                    />\n                    \n                    :\n                   \n                    <AppointmentForm\n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                    \n                    />\n                      \n                }\n                <Resources\n                  data={resources}\n                />\n              </Scheduler>\n            </Paper>\n        </div>\n        \n       \n          </>\n  );\n}\nexport default Demo;","/home/pooja/MazarsRepo/src/config/services/TaxProffesional.js",["2554"],"import http from \"../http/http-common\";\n\nconst getAll = () => {\n  return http.get(\"/tp/getTaxProfessional\");\n};\n\nconst get = (id) => {\n  return http.get(`/tp/getTaxProfessional?id=${id}`);\n};\n\nconst create = (data) => {\n  return http.post(\"/tutorials\", data);\n};\n\nconst remove = (id) => {\n  return http.delete(`/tl/deleteTeamLeader?id=${id}`);\n};\n\nconst editTL = (id) => {\n  return http.get(`/tl/getTeamLeader?id=212`);\n};\n\nexport default {\n  getAll,\n  get,\n  create,\n  remove,\n  editTL\n};\n","/home/pooja/MazarsRepo/src/pages/Admin/NewPassword/ResendOtp.js",["2555","2556"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Alerts from \"../../../common/Alerts\";\n\n\n\nfunction ResendOtp({ id, setTime, setDisabled, loading, getTime, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n        let formData = new FormData();\n        formData.append(\"email\", id);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/admin/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime(setTime, setDisabled);\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n                }\n            })\n            .catch((error) => {\n             \n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n{loading === true ? \"\" :\n                <div style={{ paddingTop: \"10px\" }}>\n                <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n            </div>}\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Unpaid.js",["2557","2558","2559","2560","2561","2562","2563"],"/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paid.js",["2564","2565","2566","2567","2568","2569","2570","2571"],"/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DiscardReport.js",["2572","2573","2574","2575","2576","2577"],"/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/RejectedModal.js",["2578","2579","2580","2581"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  assignNo,\n  getPaymentStatus,\n}) {\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"notes\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/declinePayment`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Marked as customer declined payment.\")\n          getPaymentStatus();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Decline Payment</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/pages/Admin/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/components/Search-Filter/tlFilter.js",["2582","2583","2584","2585","2586","2587","2588","2589","2590","2591","2592","2593","2594","2595","2596","2597","2598","2599","2600","2601"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction TeamFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    records,\n    setRecords,\n    setData,\n    getData,\n    AllQuery,\n   \n    InprogressQuery,\n    DeclinedQuery,\n    pendingForAcceptence,\n    completeAssignment,\n    AllProposal,\n    InprogressProposal,\n    proposal,\n    assignment,\n    AllPayment,\n    Unpaid,\n    Paid\n  } = props;\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [status1, setStatus1] = useState(1);\n\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n     if(selectedData.length != 0){\n      \n      axios\n      .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n     }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n   \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n  \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n   \n    setSelectedData([]);\n    setStore2([]);\n    setTax2([])\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    setStatus1(1)\n    getData();\n  };\n\n  const onSubmit = (data) => {\n\n\n    if (AllQuery == \"AllQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n\n    if (pendingForAcceptence == \"pendingForAcceptence\") {\n     \n      axios\n        .get(\n          `${baseUrl}/tl/pendingQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n    if (InprogressQuery == \"InprogressQuery\") {\n\n     \n      axios\n        .get(\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=${status1}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (DeclinedQuery == \"DeclinedQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (completeAssignment == \"completeAssignment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getCompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n    if (AllProposal == \"AllProposal\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (InprogressProposal == \"InprogressProposal\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if(proposal == \"proposal\"){\n      axios\n      .get(\n        `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=3&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setData(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n    }\n\n    if (AllPayment == \"AllPayment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (Unpaid == \"Unpaid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (Paid == \"Paid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n                <div class=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    defaultValue={item}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n\n                  {AllQuery == \"AllQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress; Queries</option>\n                      <option value=\"2\">Completed; Queries</option>\n                      <option value=\"3\">Declined; Queries</option>\n                    </select>\n                  )}\n\n                  {InprogressQuery == \"InprogressQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                      onChange={(e) => setStatus1(e.target.value)}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Allocation</option>\n                      <option value=\"5\">Inprogress; Proposals</option>\n                      <option value=\"6\">Inprogress; Assignments</option>\n                    </select>\n                  )}\n\n\n                  {DeclinedQuery == \"DeclinedQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"3\">Customer Declined; Proposals</option>\n                      <option value=\"4\">Customer Declined; Payment</option>\n                    </select>\n                  )}\n\n                  {AllProposal == \"AllProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress; Proposals</option>\n                      <option value=\"2\">Accepted; Proposals</option>\n                      <option value=\"3\">Customer Declined; Proposals</option>\n                    </select>\n                  )}\n\n                  {InprogressProposal == \"InprogressProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Preparation</option>\n                      <option value=\"5\">Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {AllPayment == \"AllPayment\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Unpaid</option>\n                      <option value=\"2\">Paid</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TeamFilter;\n","/home/pooja/MazarsRepo/src/pages/TL/PendingForAcceptence/RejectedModal.js",["2602","2603","2604"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  pay,\n  getPendingforAcceptance,\n}) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n  const { id, allocation_id } = pay;\n\n  \n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", id);\n    formData.append(\"allocation_id\", allocation_id);\n    formData.append(\"reject_reason\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query rejected successfully.\")\n          getPendingforAcceptance();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here...\"\n              ></textarea>\n            </div>\n\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/components/PendingForAllocation/History.js",["2605","2606","2607","2608","2609","2610","2611","2612"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction History({ history,toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>History</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Query No</th>\n                <th scope=\"row\">Status</th>\n                <th scope=\"row\">Date of Allocation</th>\n                <th scope=\"row\">Notes</th>\n              </tr>\n            </thead>\n\n            {history.length > 0\n              ? history.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.name}</td>\n                      <td>{p.assign_no}</td>\n                      <td>{p.status}</td>\n                      <td>{p.date_of_allocation}</td>\n                      <td>{p.notes}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default History;\n","/home/pooja/MazarsRepo/src/pages/TL/Proposal/ChatHistory.js",["2613","2614"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\n  const [notification, setNotification] = useState([]);\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getNotification();\n  }, [qno]);\n\n  const getNotification = () => {\n   if(qno != null){\n    axios\n    .get(\n      `${baseUrl}/customers/getNotification?id=${JSON.parse(\n        userId\n      )}&type=2&q_no=${qno}`\n    )\n    .then((res) => {\n     \n      if (res.data.code === 1) {\n        setNotification(res.data.result);\n      }\n    });\n   }\n  };\n\n  \n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Message</th>\n                <th scope=\"row\">Date</th>\n              </tr>\n            </thead>\n            {notification.length > 0\n              ? notification.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.message}</td>\n                      <td>{p.setdate}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ChatHistory;\n","/home/pooja/MazarsRepo/src/components/Admin-Header/NavWrapper.js",["2615","2616","2617","2618","2619","2620","2621","2622","2623","2624"],"import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport CustomerNotification from \"./CustomerNotification\";\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport './index.css'\nimport CommonServices from \"../../common/common\";\n\nfunction NavWrapper(props) {\n  const { color, logout, name, email, feedbackNumber} = props;\n\n  const history = useHistory();\n  const userId = window.localStorage.getItem(\"userid\");\n  const adminkey = window.localStorage.getItem(\"adminkey\");\n  const tlkey = window.localStorage.getItem(\"tlkey\");\n  const tpkey = window.localStorage.getItem(\"tpkey\")\n\n\n  return (\n    <>\n      <div class=\"navbar-wrapper\">\n        <div class=\"navbar-container\" style={{ background: color }}>\n          <div class=\"collapse navbar-collapse show\" id=\"navbar-mobile\">\n            <ul class=\"nav navbar-nav mr-auto float-left\">\n              <li class=\"nav-item d-block d-md-none\">\n                <a\n                  class=\"nav-link nav-menu-main menu-toggle hidden-xs is-active\"\n                  href=\"#\"\n                >\n                  <i class=\"fa fa-bars\"></i>\n                </a>\n              </li>\n\n              <li class=\"nav-item dropdown navbar-search\">\n                <ul class=\"dropdown-menu\">\n                  <li class=\"arrow_box\">\n                    <form>\n                      <div class=\"input-group search-box\">\n                        <div class=\"position-relative has-icon-right full-width\">\n                          <input\n                            class=\"form-control\"\n                            id=\"search\"\n                            type=\"text\"\n                            placeholder=\"Search here...\"\n                          />\n                          <div class=\"form-control-position navbar-search-close\">\n                            <i class=\"fa fa-times\"> </i>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </li>\n                </ul>\n              </li>\n\n              <li>\n                <h4 class=\"brand-text text-white\">{name == \"customer\" ? CommonServices.capitalizeFirstLetter(\"client\") : CommonServices.capitalizeFirstLetter(name)}: {JSON.parse(email)} </h4>\n              </li>\n             \n            </ul>\n\n            <ul class=\"nav navbar-nav float-right\">\n\n              {name == \"customer\" && (\n                <CustomerNotification tokenKey={userId} name={name} />\n              )}\n\n              {name == \"admin\" && (\n                <CustomerNotification tokenKey={adminkey} name={name} />\n              )}\n\n              {name == \"teamleader\" && (\n                <CustomerNotification tokenKey={tlkey} name={name} />\n              )}\n               {name == \"taxprofessional\" && (\n                <CustomerNotification tokenKey={tpkey} name={name} />\n              )}\n\n\n              <li class=\"dropdown dropdown-user nav-item\">\n                <a\n                  class=\"dropdown-toggle nav-link dropdown-user-link\"\n                  href=\"#\"\n                  data-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  <span class=\"avatar avatar-online\">\n                    <img\n                      src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n                      alt=\"avatar\"\n                    />\n                    <i style={{ paddingLeft: \"6px\" }}></i>\n                  </span>\n                </a>\n\n                <div class=\"dropdown-menu dropdown-menu-right\">\n                  <div class=\"arrow_box_right\">\n\n                    {name == \"customer\" && (\n                      <Link to=\"/customer/change-password\">\n                        <div class=\"dropdown-item\"\n                          style={{ cursor: \"pointer\" }}>\n                          <VpnKeyIcon />\n                          <span style={{ marginLeft: \"3px\" }}>Change Password</span>\n                        </div>\n                      </Link>\n                    )}\n\n                    <div\n                      class=\"dropdown-item\"\n                      onClick={logout}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <LockOpenIcon />\n                      <span style={{ marginLeft: \"10px\" }}>Logout</span>\n                    </div>\n\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default NavWrapper;\n\n\n","/home/pooja/MazarsRepo/src/components/QueryDetails/Feedback.js",["2625"],"import React, { useState } from \"react\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction Feedback({ feedback }) {\n  \n\n    return (\n        <div>\n            <p\n                style={{\n                    textAlign: \"center\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                }}\n            >\n                Feedback\n            </p>\n            <table class=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th style={{ width: \"80px\" }}>S.No</th>\n                        <th style={{ width: \"200px\" }}>Date</th>\n                        <th>Feedback</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        feedback.map((p, i) => (\n                            <tr>\n                                <td>{i + 1}</td>\n                                <td style={{ display: \"flex\" }}>\n                                    <p>{CommonServices.removeTime(p.created)}</p>\n                                    <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(p.created)}</p>\n                                </td>\n                                <td>{p.feedback}</td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Feedback;","/home/pooja/MazarsRepo/src/components/QueryDetails/QueryRecording.js",["2626","2627","2628","2629","2630","2631"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport ModalVideo from \"react-modal-video\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n    Button,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-modal-video/scss/modal-video.scss\";\nimport ReactHlsPlayer from 'react-hls-player'\nimport ReactPlayer from 'react-player';\nimport CloseIcon from '@material-ui/icons/Close';\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\n\n\n\nfunction QueryRecording(assingNo) {\n    // const userid = window.localStorage.getItem(\"tlkey\");\n    const [feedbackData, setFeedBackData] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [videoid, setVideoId] = useState(null);\n\n    const openModal = (videoContent) => {\n        setIsOpen(true);\n        setVideoId(videoContent);\n    };\n\n    useEffect(() => {\n\n        getRecording();\n    }, []);\n    const modalBox = {\n        display : \"flex\",\n        position : \"absolute\",\n        top : \"10%\",\n        left : \"0%\",\n        botttom: \"0%\", \n        right: \"0%\",\n       \n        width : \"100%\", \n        height: \"auto\"\n    }\n    const videoIcon = {\n        display : \"flex\", \n        justifyContent : \"space-around\", \n        alignItems : \"center\"\n    }\nconst canBtn = {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"10px\",\n    left: \"90%\",\n    padding: \"20px\",\n    cursor : \"pointer\",\n    color : \"red\"\n}\n\n    const getRecording = () => {\n        axios\n            .get(`${baseUrl}/tl/callRecordingPostlist?assign_id=${assingNo.assingNo}`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setFeedBackData(res.data.result);\n                }\n            });\n    };\n   \n   \n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            dataField: \"created_date\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_id\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n        },\n        \n        {\n            text: \"Participants\",\n            dataField: \"participants\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n        },\n       \n        {\n            text: \"Summary of Discussion\",\n            dataField: \"message\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"80px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                var recording = row.file.split(\",\");\n                let a = 1;\n                return (\n                    <>\n                        <div>\n                            {\n                                recording.map((record) => {\n                                   return(\n                                <>\n                                <p style={videoIcon}>\n                                <span>{a++}</span>   <i\n                                    className=\"material-icons\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        color: \"red\",\n                                        fontSize: \"25px\",\n                                    }}\n                                    onClick={() => openModal(record)}\n                                >\n                                    play_circle_outline\n                                 \n                                </i>\n                                </p>\n                                </>\n                                   )\n                                })\n                            }\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n  \n   \n    return (\n     \n           <div>\n                <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"7\">\n                            <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\n                        </Col>\n                        <Col md=\"5\"></Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={feedbackData}\n                        columns={columns}\n                        rowIndex\n                    />\n                </CardBody>\n            </Card>\n            {isOpen === true ?\n          \n                 \n          <div style={modalBox}>\n          <span style={canBtn} onClick= {() => setIsOpen(false)}> <CloseIcon color=\"red\" /> </span>\n         {/* <ReactHlsPlayer\n     src={videoid}    autoPlay={false}\n     controls={true}\n     width=\"100%\"\n     height=\"100%\"\n     hlsConfig={{\n         maxLoadingDelay: 4,\n         minAutoBitrate: 0,\n         lowLatencyMode: true,\n       }}\n   /> */}\n\n   <div style={{margin: \"50px 0 0 0\"}}>\n   <ReactPlayer\n     url={videoid}\n     controls={true}\n     playing={true}\n     width='100%'\n     height='100%'\n    />\n       </div>\n     \n    </div>\n  : \"\"}\n           \n           </div>\n\n    );\n}\n\nexport default QueryRecording;","/home/pooja/MazarsRepo/src/components/QueryDetails/DraftReports.js",["2632","2633"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport CommonServices from \"../../common/common\";\n\nfunction DraftReports({ id }) {\n\n    \n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n\n    useEffect(() => {\n        getAssignmentData();\n    }, []);\n\n    const getAssignmentData = () => {\n        axios\n            .get(\n                `${baseUrl}/tl/getDcumentDeail?id=6&type=2`\n            )\n            .then((res) => {\n                if (res) {\n                  \n                    setAssignmentDisplay(res.data.result);\n                }\n            });\n    };\n\n    return (\n        <>\n            <div>\n                <p\n                    style={{\n                        textAlign: \"center\",\n                        color: \"black\",\n                        fontSize: \"18px\",\n                    }}\n                >\n                    Draft Reports\n                </p>\n                <table class=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\n                            <th scope=\"col\">Data</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Draft Reports</th>\n                            <td>\n                                <tr>\n                                    <th>Date</th>\n                                    <th>Name</th>\n                                </tr>\n                                {assignmentDisplay.map((p, i) => (\n                                    <tr>\n                                        <td>{CommonServices.removeTime(p.date)}</td>\n                                        <td>\n                                            <a\n                                                href={`http://65.0.220.156/mazarapi/assets/upload/report/${p.name}`}\n                                                target=\"_blank\"\n                                            >\n                                                {p.name}\n                                            </a>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n}\n\nexport default DraftReports;\n","/home/pooja/MazarsRepo/src/components/QueryDetails/AdditionalQuery.js",["2634","2635"],"import React from \"react\";\nimport CommonServices from \"../../common/common\";\n\nfunction AdditionalQuery({ displayQuery }) {\n  return (\n    <>\n      <div>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          ADDITIONAL QUERIES\n        </p>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              {/* <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                Additional Queries\n              </th> */}\n              <th scope=\"col\">Date Submission</th>\n              <th scope=\"col\">Documents</th>\n            </tr>\n          </thead>\n          {displayQuery.map((p, i) => (\n            <tbody>\n              <tr key={i}>\n                {/* <td>{p.additional_queries}</td> */}\n                <td>{CommonServices.changeFormateDate(p.created)}</td>\n                <td>\n                  {p.upload_doc == \"\" ? (\n                    \"\"\n                  ) : (\n                    <p style={{ display: \"flex\" }}>\n                      <a\n                        href={`http://65.0.220.156/mazarapi/assets/image/${p.assign_no}/${p.upload_doc}`}\n                        target=\"_blank\"\n                      >\n                        <i class=\"fa fa-photo\"></i>\n                      </a>\n                      <p style={{ marginLeft: \"15px\" }}>{p.upload_doc}</p>\n                    </p>\n                  )}\n                </td>\n              </tr>\n            </tbody>\n          ))}\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default AdditionalQuery;\n","/home/pooja/MazarsRepo/src/components/QueryDetails/AddAdditionalQuery.js",["2636","2637"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { useAlert } from \"react-alert\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction AddAdditionalQuery({ addHandler, addModal, assingNo, getQuery }) {\n\n \n\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"upload\", value.p_upload[0]);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"File uploaded successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          getQuery();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n\n      });\n  };\n\n\n\n  return (\n    <>\n      <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\n        <ModalHeader toggle={addHandler}>\n          UPLOAD DOCUMENTS\n        </ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Upload Your Document</label>\n              <input\n                type=\"file\"\n                name=\"p_upload\"\n                ref={register}\n                className=\"form-control-file\"\n              />\n            </div>\n\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    onClick={addHandler}\n                    className=\"btn btn-primary\"\n                  >\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddAdditionalQuery;\n","/home/pooja/MazarsRepo/src/components/QueryDetails/AssignmentDetails.js",["2638","2639","2640","2641","2642","2643","2644","2645","2646","2647","2648","2649","2650","2651","2652","2653","2654","2655","2656","2657"],"import React from \"react\";\nimport CommonServices from \"../../common/common\";\nimport { ReportUrl } from \"../../config/config\";\n\nfunction AssignmentDetails({ p, finalDate, submitData, customerQuery , diaplayAssignment, diaplayProposal, reports, assingNo }) {\n\n  const {\n    assignment_number,\n    assignment_date,\n    date_of_delivery,\n  } = diaplayAssignment;\n\n  const { cust_accept_date } = diaplayProposal;\n\n  const timeTaken = (a, b) => {\n    var date2 = CommonServices.removeTime(a);\n    var date1 = CommonServices.removeTime(b);\n\n  \n    var difference = Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\n   \n   \n  };\n\n  return (\n    <>\n      <div>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          Assignment Details\n        </p>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\" style={{ width: \"300px\", overflow: \"wrap\" }}>Titles</th>\n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Assignment Number</th>\n              <td>{assignment_number}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Assignment Date</th>\n              <td>{CommonServices.removeTime(assignment_date)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Proposed Date of Completion</th>\n              <td>\n                {p.query_status >= 9 ? (\n                  <p>{CommonServices.removeTime(p.Exp_Delivery_Date)}</p>\n                ) : null}\n              </td>\n            </tr>\n            {/* {p.query_status >= 9 ? ( */}\n            <tr>\n              <th scope=\"row\">Assignment Status</th>\n              <td>\n                <tr>\n                  <th>Assignment Stage</th>\n                  <th>Status</th>\n                </tr>\n                <tr>\n                  <td>Client Discussion</td>\n                  <td>{CommonServices.capitalizeFirstLetter(p.client_discussion)}</td>\n                </tr>\n                <tr>\n                  <td>Draft Reports</td>\n                  <td>{CommonServices.capitalizeFirstLetter(p.draft_report)}</td>\n                </tr>\n                <tr>\n                  <td>Final Discussion</td>\n                  <td>{CommonServices.capitalizeFirstLetter(p.final_discussion)}</td>\n                </tr>\n                <tr>\n                  <td>Delivery of Final Reports</td>\n                  <td>{CommonServices.capitalizeFirstLetter(p.delivery_report)}</td>\n                </tr>\n                <tr>\n                  <td>Awaiting Completion</td>\n                  <td>{CommonServices.capitalizeFirstLetter(p.other_stage)}</td>\n                </tr>\n              </td>\n            </tr>\n            {/* ) : null} */}\n            <tr>\n              <th scope=\"row\">Time taken to complete the assignment</th>\n              <td>\n                {p.client_discussion == \"completed\" &&\n                  p.delivery_report == \"completed\" &&\n                  p.draft_report == \"completed\" &&\n                  p.final_discussion == \"completed\"\n               \n                  ? finalDate + \" Days\"\n                  : null}\n              </td>\n            </tr>\n\n            <tr>\n              <th scope=\"row\">Reports</th>\n              <td>\n                {\n                  reports.map((p, i) => (\n                    \n                    <div>\n                      {customerQuery == \"customerQuery\" && submitData[0].paid_status == \"2\" ? null :\n                      <tr>\n                        <td>{i + 1}</td>\n                        <td>\n                          <a\n                            href={`${ReportUrl}/${assingNo}/${p.document}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i> {p.document}\n                          </a>\n                        </td>\n                        <td style={{ marginLeft: \"15px\", color: \"green\" }}>\n                          {p.stages_type == 2 && p.revise_report == null && \"Draft Report\" || p.stages_type == 3 && p.revise_report == null && \"Final Report\" || p.revise_report != null && \"Reviewed Report\"}\n                        </td>\n                        <td>\n                          {p.status == \"3\"\n                            ?\n                            <p className=\"declined\">Discarded</p>\n                            : null}\n                        </td>\n                      </tr> }\n                    </div>\n                  ))\n                }\n              </td>\n            </tr>\n\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default AssignmentDetails;\n","/home/pooja/MazarsRepo/src/config/http/http-common.js",[],"/home/pooja/MazarsRepo/src/components/QueryDetails/ProposalDetails.js",["2658","2659","2660","2661","2662","2663","2664","2665","2666","2667","2668","2669","2670","2671","2672","2673"],"/home/pooja/MazarsRepo/src/components/QueryDetails/BasicQuery.js",["2674","2675","2676","2677","2678","2679","2680","2681","2682"],"import React, { useState, useEffect } from \"react\";\nimport CommonServices from \"../../common/common\";\nimport { ImageUrl } from \"../../config/config\";\nimport { Markup } from 'interweave';\nimport './queryStyle.css';\n\nfunction BasicQuery({qstatus, p, diaplaySpecific, queryDocs, year, purpose, declined2,\n  declinedStatus }) {\n\n\n\n  return (\n    <>\n      <div style={{display : \"block\", height: \"55vh\", overflow :\"scroll\"}}>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          Basic Query Information\n        </p>\n        <table class=\"table table-bordered p-2\">\n          <thead>\n            <tr>\n              <th scope=\"col\" style={{ width: \"300px\", overflow: \"wrap\" }}>Titles</th> \n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Query No</th>\n              <td>{p.assign_no}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Query Date</th>\n              <td>{CommonServices.changeFormateDate(p.created)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Customer ID</th>\n              <td>{p.email}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Category</th>\n              <td>{p.cat_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Sub- Category</th>\n              <td>{p.sub_cat_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Name of the Case</th>\n              <td>{p.case_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Assessment Year(s)</th>\n              <td>\n                {year.map((p, i) => (\n                  <p key={i}>{p.value}</p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Brief fact of the case</th>\n           <td className=\"tableStyle\"> <Markup content={p.fact_case} /></td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Uploaded Documents</th>\n              <td>\n                {queryDocs.map((p, i) => (\n                  <p style={{ display: \"flex\" }}>\n                    <a\n                      href={`${ImageUrl}/${p.assign_no}/${p.name}`}\n                      target=\"_blank\"\n                    >\n                    <span>  {i + 1 } </span><i class=\"fa fa-photo\"></i>\n                    </a>\n                    <p style={{ marginLeft: \"15px\" }}>{p.name}</p>\n                  </p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Specific questions</th>\n              <td>\n                {diaplaySpecific.map((p, i) => (\n                  <div>{i + 1}. {p.text}</div>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Purpose of the query</th>\n              <td colspan=\"1\">\n                {purpose.map((p, i) => (\n                  <p key={i}>{p.value}</p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Format in which Opinion is required</th>\n              <td colspan=\"1\">\n                <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                <p>\n                  {p.softcopy_digitally_assigned === \"1\" &&\n                    \"SoftCopy- Digitally Signed\"}\n                </p>\n\n                <p>\n                  {p.printout_physically_assigned === \"1\" &&\n                    \"Printout- Physically Signed\"}\n                </p>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Timelines within which Opinion is Required</th>\n              <td colspan=\"1\">{p.Timelines}</td>\n            </tr>\n            {qstatus == \"-1\" || p.is_delete == \"1\" ? \n            <tr>\n              <th scope=\"row\">Date of Declined</th>\n              <td>{qstatus == \"-1\" || p.is_delete == \"1\" ? declined2 : \"\"}</td>\n              </tr> : \"\"}\n            {\n              p.query_status == \"-1\" ?\n                <tr>\n                  <th scope=\"row\">Reasons for Admin Decline Query</th>\n                  <td colspan=\"1\">\n                    {\n                      p.decline_notes\n                    }\n                  </td>\n                </tr>\n                : null\n            }\n            {\n              p.is_delete == \"1\" ?\n                <tr>\n                  <th scope=\"row\">Reasons for customer Decline Query</th>\n                  <td colspan=\"1\">\n                    {\n                      p.decline_notes\n                    }\n                  </td>\n                </tr>\n                : null\n            }\n            \n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default BasicQuery;\n","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DiscardReport.js",["2683","2684","2685","2686","2687","2688"],"/home/pooja/MazarsRepo/src/components/Search-Filter/AdminFilter.js",["2689","2690","2691","2692","2693","2694","2695","2696","2697","2698","2699","2700","2701","2702","2703","2704","2705","2706","2707","2708","2709"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction AdminFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    records,\n    setRecords,\n    setData,\n    getData,\n    acceptedProposal,\n    pendingAcceptedProposal,\n    declinedProposal,\n    declinedQueries,\n    pendingForProposal,\n    pendingAlloation,\n    allQueries,\n    assignment,\n    allProposal,\n    AllPayment,\n    paid,\n    unpaid,\n  } = props;\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n  const [item] = useState(current_date);\n\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      if(selectedData != undefined && selectedData.length > 0){\n        axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n      }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n   \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n   \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n   \n    setSelectedData([]);\n    setTax2([])\n    setStore2([]);\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    getData();\n  };\n\n\n  const onSubmit = (data) => {\n\n   \n\n\n\n    if (acceptedProposal == \"acceptedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?status1=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (pendingAcceptedProposal == \"pendingAcceptedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?status1=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (declinedProposal == \"declinedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?&status=6&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (declinedQueries == \"declinedQueries\") {\n      axios\n        .get(\n          `${baseUrl}/admin/declinedQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (pendingForProposal == \"pendingForProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/pendingProposal?category=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (allQueries == \"allQueries\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getAllQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (pendingAlloation == \"pendingAlloation\") {\n      axios\n        .get(\n          `${baseUrl}/admin/pendingAllocation?category=${store2}&date1=${data.p_dateFrom}&date2=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (AllPayment == \"AllPayment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (unpaid == \"unpaid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (paid == \"paid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (allProposal == \"allProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status1=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n                <div class=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    defaultValue={item}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  {allQueries == \"allQueries\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress Queries</option>\n                      <option value=\"2\">Completed Queries</option>\n                      <option value=\"3\">Declined Queries</option>\n\n                    </select>\n                  )}\n\n                  {pendingAcceptedProposal == \"pendingAcceptedProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Preparation</option>\n                      <option value=\"5\"> Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {pendingForProposal == \"pendingForProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress; Preparation</option>\n                      <option value=\"2\"> Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {allProposal == \"allProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress Proposals</option>\n                      <option value=\"2\">Accepted Proposals</option>\n                      <option value=\"3\">Customer Declined Proposals</option>\n                    </select>\n                  )}\n\n                  {declinedQueries == \"declinedQueries\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Admin Declined; Queries</option>\n                      <option value=\"2\">Customer Declined; Queries</option>\n                      <option value=\"3\">Customer Declined; Proposals</option>\n                      <option value=\"4\">Customer Declined; Payment</option>\n                    </select>\n                  )}\n\n                  {AllPayment == \"AllPayment\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Unpaid</option>\n                      <option value=\"2\">Paid</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n\n                {/* <div class=\"form-group mb-2\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div> */}\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AdminFilter;\n\n\n   ","/home/pooja/MazarsRepo/src/agora.config.js",[],"/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/index.jsx",["2710","2711","2712","2713","2714","2715","2716","2717","2718","2719","2720","2721","2722","2723","2724","2725","2726","2727","2728","2729","2730","2731","2732"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\nimport MicNoneIcon from '@material-ui/icons/MicNone';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport \"./canvas.css\";\nimport \"../../../assets/fonts/css/icons.css\";\nimport {\n  Modal,\n  ModalTitle,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport RecordingModal from \"./RecordingModal\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { green ,red} from '@material-ui/core/colors';\nimport recImg from \"../../../loader.gif\";\nimport Cookies from \"js-cookie\";\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12/7/13\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.adminName = Cookies.get(\"adminName\")\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n      resID: '',\n      showModal: false,\n      recordDisplay: false,\n      data: {},\n      item:{},\n      articleId : [],\n      articleId2 : [],\n      showRecBtn : false,\n      showButton : '',\n      clickDisable : false,\n      addRemote : null,\n      participantName : 'participant'\n    };\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.startRecording = this.startRecording.bind(this);\n  }\n\n  // userId = window.localStorage.getItem(\"tlkey\");\n  allrecording = [];\n  teamKey = window.localStorage.getItem(\"adminkey\");\n  adminEmail2 = window.localStorage.getItem(\"adminEmail\");\n  uid = Math.floor((Math.random() * 10000) + 1);\n  channelName = this.props.channel\n  tempArray = []\n  hostId ;\n vendor = 1\n region = 14;\n bucket = \"vride-multitvm\";\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\n secretKey = \"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\";\nallrecording;\n\n  componentWillMount() {\n    let $ = this.props;\n  \n    // init AgoraRTC local client\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    this.client.init($.appId, () => {\n     \n      this.subscribeStreamEvents();\n\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n       \n        var data_post_api = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/userdata?channel_name=\"+this.channelName+\"&rtm_id=\"+\"\"+\"&rtc_id=\"+uid+\"&user_name=\"+this.adminName;\n   axios.get(`${data_post_api}`).\n   then((res) => {\n    \n   \n   })\n  \n        this.setState({ uid : uid})\n      \n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(\n          () => {\n            if ($.attendeeMode !== \"audience\") {\n              this.addStream(this.localStream, true);\n              this.client.publish(this.localStream, (err) => {\n               \n              });\n            }\n            this.setState({ readyState: true });\n          },\n          (err) => {\n          \n            this.setState({ readyState: true });\n          }\n        );\n      });\n    });\n  }\n \n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n    this.subscribeStreamEvents()\n    this.getSchedulerData()\n    this.accuire();\n    // this.accuire()\n  }\nschdrularName;\n\n  getSchedulerData =() =>{\n       axios\n            .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\n            .then((res) => {\n                       \n                if (res.data.code === 1) {\n                  this.setState({\n                    item:res.data.result.items[0],\n                   showButton : res.data.result.items[0].owner_id\n                  })  \n                        \n                }\n            });\n  }\n\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n      \n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n        \n          var newContent = document.createTextNode(this.state.participantName); \n          item.play(\"ag-item-\" + id);\n      \n         box22.appendChild(newContent)\n        }\n        if (index === no - 1) {\n        //  document.getElementById(\"custName\").value = \"Lucky\"\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n        }\n\n        item.player.resize && item.player.resize();\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let no = this.state.streamList.length;\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom2 ;\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n          \n          var newContent = document.createTextNode(\"I am Here\" +  this.state.participantName); \n          item.play(\"ag-item-\" + id);\n      \n         box22.appendChild(newContent)\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n      console.log(\"share\")\n    }\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    this.localStream && this.localStream.close();\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n          \n        },\n        () => {\n                  }\n      );\n  }\n\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n     \n      rt.client.subscribe(stream, function (err) {\n        this.setState({ addRemote : true})\n     console.log(\"one\")\n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n   \n      rt.removeStream(evt.uid);\n   console.log(\"two\")\n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n    console.log(\"three\")\n      let stream = evt.stream;\n      var apiData = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/getInfoByRTCId?channel_name=\"+this.channelName+\"&rtc_id=\"+stream.getId()\n  axios.get(`${apiData}`)\n  .then((res) =>{\n   \n   console.log(\"response\", res.data.length)\n    if(res.data.length === 0 ){\n     \n    }\n    else{\n      this.setState({ participantName : res.data[0].user_name })\n      rt.addStream(stream);\n    }\n  })\n    \n \n    }.bind(this));\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n     console.log(\"four\")\n      rt.removeStream(stream.getId());\n    });\n    rt.client.on(\"peer-added\", function (evt) {\n      console.log(\"five\")\n     \n    })\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n  };\n\n  addStream = (stream, push = false) => {\n    this.hostId = stream.getId()\n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n  };\n\n  handleCamera = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n\n  handleMic = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.disableAudio()\n      : this.localStream.enableAudio();\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    \n   if(e.currentTarget === undefined){\n\n   }\n   else{\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n     this.state.streamList.length <= 1\n   ) {\n     return;\n   }\n   let list;\n   let id = this.state.streamList[this.state.streamList.length - 1].getId();\n   list = Array.from(\n     document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n   );\n   list.map((item) => {\n     if (item.style.display !== \"none\") {\n       item.style.display = \"none\";\n     } else {\n       item.style.display = \"block\";\n     }\n   });\n   }\n  };  \n  \n  handleExit = async() => {\n    if(this.state.clickDisable === false){\n      this.setState({clickDisable : true})\n     var resourceId = localStorage.getItem(\"resourceId\");\n     var sid = localStorage.getItem(\"sid\");\n   \n     var data = JSON.stringify({\n       \"cname\":this.channelName,\n       \"uid\":JSON.stringify(this.uid),\n       \"clientRequest\":{ }});\n     axios({\n       method: \"POST\",\n       headers: {\n         \"content-type\": \"application/json;charset=utf-8\",\n         \"authorization\": \"Basic \"+this.encodedString,\n         \"cache-control\": \"no-cache\",\n       },\n       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n       data: data,\n     })\n     .then(response => {\n       \n       this.tempArray.push(response.data.serverResponse.fileList)\n       this.setState({showRecBtn : true})\n     })\n         .catch((error) => {\n        \n       });\n    \n    }\n \n     \n   }\n \n  sharingScreen = (e) => {\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n      this.state.stateSharing = false;\n    } else {\n    \n      this.state.stateSharing = true;\n      let $ = this.props; \n    \n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode, controls : true});\n\n      this.shareClient.init($.appId, () => {\n       \n        this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n          // this.state.uid = uid;\n          this.setState({uid : uid})\n            this.removeStream(uid)\n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n         \n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n                 \n                });\n               \n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n            \n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: false,\n      video: false,\n      screen: true,\n      controls : true\n    };\n \n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n   \n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(\"1080p_2\");\n    return stream;\n  };\n\n\n  CreateS3Folder = (uid) =>{\n   \n    axios\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\n            .then((res) => {\n                \n            });\n  }\n\n\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\n\n\n\n\nsleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n//get recording status\nasync GetRecordingStatus(json){\n    \n\n  await this.sleep(3000); \n  var resourceId = json.data.resourceId;\n  var sid = json.data.sid;\n\n  localStorage.setItem(\"resourceId\", resourceId);\n  localStorage.setItem(\"sid\", sid);\n\n  fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n})\n    .then((res) => res.json())\n    .then((response) => {\n       \n        this.setState({\n          data:response,\n          recordDisplay:!this.state.recordDisplay\n        })\n        setTimeout(() => {\n          this.setState({clickDisable : false})\n        }, 1000)\n    })\n    .catch((error) => console.log(error));\n}\n\n\n\n//start recording\nasync startRecording(key){\n   \n    var resourceId = key.data.resourceId \n    \n    this.CreateS3Folder(JSON.stringify(this.uid));\n\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\n \n\n  await axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\n      data: data,    \n    })\n    .then(json => this.GetRecordingStatus(json)) \n      .catch((error) => {\n      \n      });\n  };\n\n\n  //recording  acquire\n  accuire = () =>{\n   \n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\n\n    axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\n      data: data,\n    })\n      .then(json => \n        this.startRecording(json)) \n       \n      .catch((error) => {\n       \n      });\n  };\n// Start recording button\n  recStart = () => {\n    this.localStream.enableAudio();\n    this.localStream.enableVideo();\n    this.accuire();\n    this.setState({ showRecBtn: false  });\n    \n  }\n\n  //toggelStop\n  toggleModal = (key) =>{\n  \n  this.setState({\n    showModal: !this.state.showModal,\n    recordDisplay:false\n  })\n}\n\n\n //stop recording \n stopRecording = () => {\n  if(this.state.showRecBtn === true){\n    return(this.toggleModal(\"stop\"),\n    this.localStream.disableVideo(),\nthis.localStream.disableAudio())\n\n  }\n  \n  else if(this.state.showButton == JSON.parse(this.teamKey)){\n \n    if(resourceId === undefined){\n      var resourceId = localStorage.getItem(\"resourceId\");\n    var sid = localStorage.getItem(\"sid\");\n    }\n\n  var data = JSON.stringify({\n    \"cname\":this.channelName,\n    \"uid\":JSON.stringify(this.uid),\n    \"clientRequest\":{ }});\n  axios({\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n    url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n    data: data,\n  })\n  .then(json => \n    \n    this.toggleModal(json) ,\n     this.setState({showRecBtn : true}),\n     this.localStream.disableVideo(),\nthis.localStream.disableAudio(),\n    ) \n    .catch((error) => {\n      \n    });\n}\nelse{\n  \n  window.location.hash = \"/admin/schedule\";\n}\n  \n};\n\n\n  render() {\n\n    \n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n      onClick={this.stopRecording}\n             className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n       \n     <i className=\"ag-icon ag-icon-leave\"></i> \n      </span>\n    );\n\n//recording btn on\n\n    const recordingBtn = (\n      <span\n        onClick={this.recStart}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Record On\"\n      >{\n        this.state.showRecBtn === true ?\n      \n        <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\n      </span>\n    );\n\n\n//recording btn off\nconst recordingBtnOff = (\n  <span\n  onClick={this.handleExit}\n\n    \n    className={\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n    }\n    title=\"Record Off\"\n  >\n     {\n      this.state.showButton == JSON.parse(this.teamKey) ?\n      // <FiberManualRecordIcon style={{ color: red[500] }}/> : \"\"\n     <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\n    }\n            \n  </span>\n);\n\n\n    return (\n      <>\n      <div id=\"ag-canvas\" style={style}>   \n        <div className=\"ag-btn-group\">\n\n        <RecordingModal \n        isOpen={this.state.showModal}\n         toggle={this.toggleModal}\n         data={this.state.data}\n         item={this.state.item}\n         allrecording = {this.tempArray}\n         />\n                \n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n\n          {\n             this.state.showRecBtn === true ? recordingBtn : null\n          }\n\n          {\n             this.state.showRecBtn === false ? recordingBtnOff : null\n          }\n        </div>\n      </div>\n        </>\n    );\n  }\n}\n\nexport default AgoraCanvas;","/home/pooja/MazarsRepo/src/components/Admin-Header/CustomerNotification.js",["2733","2734"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction CustomerNotification({ tokenKey, name }) {\n\n\n\n   \n    const [countNotification, setCountNotification] = useState(\"\");\n   \n\n    useEffect(() => {\n        getNotification();\n       \n    }, [tokenKey]);\n   \n    const getNotification = () => {\n        axios\n            .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(tokenKey)}&type_list=uread`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                   \n                   if(res.data.result[0] != undefined){\n                    setCountNotification(res.data.result[0].total);\n                   }\n                }\n            });\n    };\n\n\n\n\n    return (\n        <>\n            <div style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}>\n                <li class=\"dropdown dropdown-notification nav-item\">\n                    {countNotification ? (\n                     \n                           \n                                <Link to={`/${name}/message`} style={{color : \"white\"}} class=\"notification\">\n                                Inbox\n                                    <span class=\"badge\">{countNotification}</span>\n                                    \n                                </Link>\n                           \n                         \n                           \n                                \n                        \n                    ) : null}\n                </li>\n            </div>\n        </>\n    );\n}\n\n\nexport default CustomerNotification;\n","/home/pooja/MazarsRepo/src/pages/Admin/AgoraVideoCall/RecordingModal.js",["2735","2736","2737","2738","2739","2740","2741","2742","2743","2744"],"/home/pooja/MazarsRepo/src/pages/TL/SendProposal/Payment.js",["2745","2746"],"import { values } from \"lodash\";\nimport React from \"react\";\nimport { Spinner } from 'reactstrap';\n\nexport default class Payment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n        };\n    }\n\n    handleChange1(i, e) {\n        if (isNaN(e.target.value)) {\n            this.setState({ error: \"Please insert only digit\" })\n        }\n        else {\n            this.setState({ error: \"\" })\n        }\n        this.setState({\n            values: { ...this.state.values, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n\n    }\n\n    handleChange2(i, e) {\n        this.setState({\n            dates: { ...this.state.dates, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n    render() {\n        var fieldsArray = [];\n\n        for (var i = 1; i <= this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    <div class=\"col-md-6 my-2\">\n                      \n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name={this.state.values[i]}\n                            onChange={this.handleChange1.bind(this, i)}\n                        />\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n                    </div>\n\n                    <div class=\"col-md-6 my-2\">\n                      \n                        <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            name={this.state.dates[i]}\n                            onChange={this.handleChange2.bind(this, i)}\n                            min={this.props.item}\n                        />\n                    </div>\n                </div >\n            );\n        }\n\n        return (\n            <>\n           \n            <div className=\"inputs\">\n                {this.props.installment > 0 ?\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\n              <td>Payment</td>\n              <td>Due Dates</td>\n          </tr> : \"\"}\n          {fieldsArray}\n      </div>\n      </>\n        );\n    }\n}\n\n\n// import React from \"react\";\n\n// export default class Payment extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             values: [],\n//             dates: [],\n//         };\n//     }\n\n//     handleChange1(i, e) {\n//         if (isNaN(e.target.value)) {\n//             this.setState({ error: \"Please insert only digit\" })\n//         }\n//         else {\n//             this.setState({ error: \"\" })\n//         }\n//         this.setState({\n//             values: { ...this.state.values, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentAmount(this.state.values)\n//             })\n\n//     }\n\n//     handleChange2(i, e) {\n//         this.setState({\n//             dates: { ...this.state.dates, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentDate(this.state.dates)\n//             })\n\n//     }\n\n//     render() {\n//         var fieldsArray = [];\n\n//         for (var i = 1; i <= this.props.installment; i++) {\n//             fieldsArray.push(\n//                 <div className=\"row\">\n//                     <div class=\"col-md-6\">\n//                         <label>Amount</label>\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             name={this.state.values[i]}\n//                             onChange={this.handleChange1.bind(this, i)}\n//                         />\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n//                     </div>\n\n//                     <div class=\"col-md-6\">\n//                         <label>Due Dates</label>\n//                         <input\n//                             type=\"date\"\n//                             className=\"form-control\"\n//                             name={this.state.dates[i]}\n//                             onChange={this.handleChange2.bind(this, i)}\n//                             min={this.props.item}\n//                         />\n//                     </div>\n//                 </div >\n//             );\n//         }\n//         return (\n//             <div className=\"inputs\">\n//                 {fieldsArray}\n//             </div>\n//         );\n//     }\n// }\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/FinalReportUpload.js",["2747","2748","2749","2750"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction DraftReport({ fianlModal, uploadFinalReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n\n    var uploadImg = value.p_final;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"final_report[]\", file);\n      }\n    }\n\n\n    formData.append(\"id\", id.id);\n    formData.append(\"q_id\", id.q_id);\n    axios\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) => {\n   \n        if (response.data.code === 1) {\n          setLoading(false)\n\n          var message = response.data.message\n          if (message.invalid) {\n            Swal.fire({\n              title: 'Error !',\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\n            })\n          } else if (message.faill && message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n              icon: 'success',\n            })\n          } else if (message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p>${message.success}</p>`,\n              icon: 'success',\n            })\n          }\n          else if (message.faill) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\n              icon: 'success',\n            })\n          }\n          getAssignmentList();\n          uploadFinalReport();\n          \n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_final\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n // formData.append(\"final_report\", value.p_final[0]);","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/ViewAllReport.js",["2751","2752","2753","2754","2755","2756","2757","2758","2759","2760","2761","2762","2763","2764","2765","2766","2767","2768"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport * as yup from \"yup\";\nimport CommonServices from \"../../../common/common\";\nimport RejectedModal from \"./RejectModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport Swal from \"sweetalert2\";\nimport DiscardReport from \"./DiscardReport\";\n\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  dataItem\n}) {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const [data, setData] = useState([]);\n  const [docData, setDocData] = useState({});\n\n\n  const [nestedModal, setNestedModal] = useState(false);\n  const toggleNested = (key) => {\n    setNestedModal(!nestedModal);\n    setDocData(key)\n  }\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    // setDocData(report)\n  }\n\n\n  //check\n  const toggleDiscard = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to discard ?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, discarded it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  const deleteCliente = (id) => {\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"type\", 2);\n    formData.append(\"docid\", id.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          getData()\n          Alerts.SuccessNormal(\"Discarded Successfully\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  useEffect(() => {\n    getData();\n  }, [report]);\n\n  const getData = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  }\n\n\n  return (\n    <div>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewReport}>\n          <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"55vw\"}}>\n            <span>View All Reports</span>\n            <span>\n              <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\n                View Discussion\n              </button>\n            </span>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Document</th>\n                <th scope=\"row\">Report Type</th>\n                <th scope=\"row\">Action</th>\n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                      <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                          <a\n                            href={`${ReportUrl}/${report}/${p.document}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                     \n                      <a\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i> \n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\n                    </tr> }\n                    </td>\n                  \n                    <td>\n                    <p>  {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\n                 <br>\n                 </br> \n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> } </td>\n                    <td>\n                      {\n                        p.stages_type == \"2\" ?\n                          <div>\n                            {\n                              p.status == \"0\" ?\n                                <p style={{ color: \"red\" }}>Pending</p>\n                                :\n                                p.status == \"1\" ?\n                                  <div style={{ cursor: \"pointer\" }} title=\"Customer Accepted\">\n                                    <i\n                                      class=\"fa fa-check\"\n                                      style={{\n                                        color: \"blue\",\n                                        fontSize: \"16px\",\n                                        marginLeft: \"10px\"\n                                      }}\n                                    ></i>\n                                  </div> :\n                                  p.status == \"2\" ?\n                                    <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                                      <div title=\"Discussion\">\n                                        <i\n                                          class=\"fa fa-comments-o\"\n                                          style={{\n                                            fontSize: 16,\n                                            cursor: \"pointer\",\n                                            marginLeft: \"8px\",\n                                            color: \"green\"\n                                          }}\n                                          onClick={() => toggleNested(p)}\n                                        ></i>\n                                      </div>\n                                      <div title=\"Discard\">\n                                        <i\n                                          class=\"fa fa-times\"\n                                          style={{\n                                            fontSize: 16,\n                                            cursor: \"pointer\",\n                                            marginLeft: \"8px\",\n                                            color: \"red\"\n                                          }}\n                                          onClick={() => toggleDiscard(p)}\n                                        ></i>\n                                      </div>\n                                    </div>\n                                    :\n                                    p.status == \"3\" ?\n                                      <p style={{ color: \"red\" }}>Discarded</p> :\n                                      null\n                            }\n                          </div>\n                          :\n                          null\n                      }\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <RejectedModal\n        toggleNested={toggleNested}\n        nestedModal={nestedModal}\n        dataItem={dataItem}\n        docData={docData}\n        getData={getData}\n      />\n\n\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        getData={getData}\n      />\n\n    </div>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/DraftReportUpload.js",["2769","2770","2771","2772"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\n\n\nfunction DraftReport({ draftModal, uploadDraftReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n  const [loading, setLoading] = useState(false);\n\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    var uploadImg = value.p_draft;\n   \n\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"draft_report[]\", file);\n      }\n    }\n\n    formData.append(\"id\", id);\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n    \n      if (response.data.code === 1) {\n        setLoading(false)\n        var message = response.data.message\n        if (message.invalid) {\n          Swal.fire({\n            title: 'Error !',\n            html: `<p class=\"text-danger\">${message.invalid}</p>`,\n          })\n        } else if (message.faill && message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n            icon: 'success',\n          })\n        } else if (message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p>${message.success}</p>`,\n            icon: 'success',\n          })\n        }\n        else if (message.faill) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p>`,\n            icon: 'success',\n          })\n        }\n        getAssignmentList();\n        uploadDraftReport();\n      } else if (response.data.code === 0) {\n        setLoading(false)\n      }\n\n    });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_draft\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                  >\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n\n","/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/AllPayment.js",["2773","2774","2775","2776","2777","2778","2779","2780"],"/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/DraftReport.js",["2781","2782","2783","2784","2785","2786","2787","2788","2789","2790","2791","2792","2793","2794","2795","2796","2797"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport moment from \"moment\";\nfunction DraftReport() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [assignmentCount, setCountAssignment] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const [reportModal, setReportModal] = useState(false);\n  const [report, setReport] = useState();\nvar rowStyle2 = {}\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setAssignmentDisplay(res.data.result);\n        setCountAssignment(res.data.result.length);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n   \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n   \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n \n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //reset date\n  const resetData = () => {\n   \n    reset();\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n   \n    setStatus(value);\n  };\n  // view report\n  const ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key);\n  };\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        \n        return (\n          <>\n           \n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index : 1,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n   \n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => ViewReport(row.assign_no)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"TL name\",\n      dataField: \"tl_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"75px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    obj: {\n                      message_type: \"3\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/assignment`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n    else if(row.paid_status != \"2\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n  const onSubmit = (data) => {\n    \n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignmentDisplay(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n\n\n\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignmentDisplay}\n            columns={columns}\n            rowStyle={ rowStyle2 }\n            rowIndex\n          />\n  <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n          />\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/FinalReport.js",["2798","2799","2800","2801","2802","2803","2804","2805","2806","2807","2808","2809","2810","2811","2812","2813","2814"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport moment from \"moment\";\nfunction FinalReport() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [assignmentCount, setCountAssignment] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [reportModal, setReportModal] = useState(false);\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n  const [report, setReport] = useState();\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  var rowStyle2 = {}\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\n    \n      if (res.data.code === 1) {\n        setAssignmentDisplay(res.data.result);\n        setCountAssignment(res.data.result.length);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n  \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n   \n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n    \n    setStatus(value);\n  };\n // View Report \n \n  const ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key);\n  };\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            {/* <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index : 2,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n    \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n   \n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => ViewReport(row.assign_no)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"TL name\",\n      dataField: \"tl_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"75px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    obj: {\n                      message_type: \"3\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/assignment`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n    else if(row.paid_status != \"2\" && warningDate > aa){\n      style.backgroundColor = \"#fff\";\n      style.color = \"#000\"\n    }\n  \n    return style;\n  }\n  const onSubmit = (data) => {\n\n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignmentDisplay(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignmentDisplay}\n            columns={columns}\n            rowStyle={ rowStyle2 }\n            rowIndex \n           \n          />\n  <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n          />\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default FinalReport;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/AllAssignment.js",["2815","2816","2817","2818","2819","2820","2821","2822","2823","2824","2825","2826","2827","2828","2829","2830","2831","2832"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\n\nfunction AssignmentComponent() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [assignmentCount, setCountAssignment] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [hide, setHide] = useState();\n  const [report, setReport] = useState();\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n  const [item] = useState(current_date);\n   var rowStyle2 = {}\n  const [reportModal, setReportModal] = useState(false);\n  const ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key);\n  };\n\n  const [assignNo, setAssignNo] = useState(null);\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  const [viewData, setViewData] = useState({});\n  const [viewModal, setViewModal] = useState(false);\n  const ViewHandler = (key) => {\n  \n    setViewModal(!viewModal);\n    setViewData(key);\n  };\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\n    \n      if (res.data.code === 1) {\n        setAssignmentDisplay(res.data.result);\n        setCountAssignment(res.data.result.length);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n  \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n  \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n  \n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n  \n    setStatus(value);\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n        \n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index : 0,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              {row.paid_status == \"2\" &&\n                <p>\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        \n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => ViewReport(row.assign_no)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"TL name\",\n      dataField: \"tl_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"75px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    obj: {\n                      message_type: \"3\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/assignment`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n \n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n  \n    return style;\n  }\n  const onSubmit = (data) => {\n   \n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=${status}&stages_status=${data.p_status}&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignmentDisplay(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  const disabledHandler = (e) => {\n    setHide(e.target.value);\n  };\n\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <select\n                  className=\"form-select form-control\"\n                  name=\"p_status\"\n                  ref={register}\n                  style={{ height: \"33px\" }}\n                  onChange={(e) => disabledHandler(e)}\n                >\n                  <option value=\"\">--select--</option>\n                  <option value=\"1\">Inprogress</option>\n                  <option value=\"2\">Completed</option>\n                  <option value=\"3\">Payment Declined</option>\n                </select>\n              </div>\n\n              {\n                hide == \"3\" ?\n                  \"\"\n                  :\n                  <div class=\"form-group mx-sm-1  mb-2\">\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: 210 }}\n                      placeholder=\"Select stages\"\n                      defaultValue={[]}\n                      onChange={assingmentStatus}\n                      value={status}\n                      allowClear\n                    >\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Client Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Draft reports\n                        </div>\n                      </Option>\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Final Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Delivery of Final Reports\n                        </div>\n                      </Option>\n                      <Option value=\"Completed\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">Awaiting Completion</div>\n                      </Option>\n                    </Select>\n                  </div>\n\n              }\n\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody className=\"card-body2\">\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignmentDisplay}\n            columns={columns}\n            rowStyle={ rowStyle2 }\n            rowIndex\n          />\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n          />\n\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default AssignmentComponent;\n","/home/pooja/MazarsRepo/src/components/AllQueriesData/AllQueriesData.js",["2833","2834","2835","2836","2837","2838","2839","2840"],"import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../../pages/Admin/AssignmentTab/DiscardReport\";\nimport { DataValue } from \"../../pages/Admin/QueriesTab/QueriesTab\";\n\n\nfunction AllQueriesData(props) {\n\n  const [allQueriesData, setAllQueriesData] = useState([])\n  const [records, setRecords] = useState([]);\n  const [assignNo, setAssignNo] = useState('');\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n\n\n  useEffect(() => {\n    getAllQueriesData();\n  }, [props.allData]);\n\n  const getAllQueriesData = () => {\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\n     \n      if (res.data.code === 1) {\n       // setAllQueriesData(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n    setAllQueriesData(props.allData)\n  };\n\n\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n      formatter: (cellContent, row, rowIndex, index) => {\n\n        return <div>{rowIndex + 1}</div>;\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 0,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"85px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n           {row.status == \"Declined Query\"  ? null : \n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div title=\"Send Message\">\n              <Link\n                to={{\n                  pathname: `/admin/chatting/${row.id}`,\n                  obj: {\n                    message_type: \"4\",\n                    query_No: row.assign_no,\n                    query_id: row.id,\n                    routes: `/admin/queriestab`\n                  }\n                }}\n              >\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                    color: \"blue\"\n                  }}\n                ></i>\n              </Link>\n            </div>\n\n            <div title=\"View Discussion Message\">\n              <i\n                class=\"fa fa-comments-o\"\n                style={{\n                  fontSize: 16,\n                  cursor: \"pointer\",\n                  color: \"orange\"\n                }}\n                onClick={() => ViewDiscussionToggel(row.assign_no)}\n              ></i>\n            </div>\n          </div>\n}\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n   \n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setAllQueriesData}\n            getData={getAllQueriesData}\n            allQueries=\"allQueries\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n         {allQueriesData != undefined ? \n          <BootstrapTable\n          bootstrap4\n          keyField=\"id\"\n          data={allQueriesData}\n          columns={columns}\n          rowIndex\n          wrapperClasses=\"table-responsive\"\n        /> : \"\"}\n\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAllQueriesData}\n          />\n\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllQueriesData;","/home/pooja/MazarsRepo/src/components/DeclinedQueries/DeclinedQueries.js",["2841","2842","2843","2844","2845","2846","2847","2848","2849","2850"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\n\nfunction DeclinedQueries({ CountPendingForPayment }) {\n\n  const [pendingData, setPendingData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    getPendingForPayment();\n  }, []);\n\n  const getPendingForPayment = () => {\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\n    \n      if (res.data.code === 1) {\n        setPendingData(res.data.result);\n        setRecords(res.data.result.length);\n\n        // CountPendingForPayment(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n      formatter: (cellContent, row, rowIndex, index) => {\n     \n        return <div>{rowIndex + 1}</div>;\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 3,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n   \n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status} /\n              {\n                row.status == \"Inprogress Query\" ?\n                <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                  <p className=\"declined\">\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                    <p className=\"completed\">\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setPendingData}\n            getData={getPendingForPayment}\n            declinedQueries=\"declinedQueries\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n        <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingData}\n            columns={columns}\n            rowIndex\n            wrapperClasses=\"table-responsive\"\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedQueries;","/home/pooja/MazarsRepo/src/components/PendingForProposals/PendingForProposals.js",["2851","2852","2853","2854","2855","2856","2857","2858","2859","2860","2861","2862","2863"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\n\n\nfunction PendingForProposals({ CountPendingProposal }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n  const [nonpendingData, setNonPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n   \n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n     \n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getPendingForProposals();\n  }, []);\n\n  const getPendingForProposals = () => {\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\n      \n      if (res.data.code === 1) {\n        setNonPendingData(res.data.result);\n        setRecords(res.data.result.length);\n        // CountPendingProposal(res.data.result.length);\n      }\n    });\n  };\n\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      formatter: function nameFormatter(cell, row) {\n       \n        return (\n          <>\n            <Link\n          \n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 2,\n                routes: \"queriestab\",\n              }}\n            >{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"tname\",\n      text: \"TL name\",\n      sort: true,\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setNonPendingData}\n            getData={getPendingForProposals}\n            pendingForProposal=\"pendingForProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={nonpendingData}\n            columns={columns}\n            wrapperClasses=\"table-responsive\"\n          />\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\n            <ModalHeader toggle={toggle}>History</ModalHeader>\n            <ModalBody>\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"row\">S.No</th>\n                    <th scope=\"row\">Name</th>\n                    <th scope=\"row\">Query No</th>\n                    <th scope=\"row\">Status</th>\n                    <th scope=\"row\">Date of Allocation</th>\n                  </tr>\n                </thead>\n\n                {history.length > 0\n                  ? history.map((p, i) => (\n                    <tbody>\n                      <tr>\n                        <td>{i + 1}</td>\n                        <td>{p.name}</td>\n                        <td>{p.assign_no}</td>\n                        <td>{p.status}</td>\n                        <td>{p.date_of_allocation}</td>\n                      </tr>\n                    </tbody>\n                  ))\n                  : null}\n              </table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForProposals;","/home/pooja/MazarsRepo/src/pages/Admin/EditTL/Reset.js",["2864","2865"],"import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Select, Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\n\nfunction Reset() {\n  \n  const { Option } = Select;\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n\n\n\n  const handleChange = (value) => {\n  \n    setStore2(value);\n  };\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader?id=243`).then((res) => {\n      \n        setValue(res.data.result[0]);    \n      });\n    };\n\n    getTeamLeader();\n  }, []);\n\n \n  const data1 = value.name;\n  const data2 = value.email;\n  const data3 = value.phone;\n  const data4 = value.parent_id;\n  const data5 = value.cat_name;\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${store2}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [store2]);\n\n  const onFinish = (values) => {\n   \n\n  \n  };\n\n  if (!(data1 && data2 && data3 && data4 && data5)) return <p>loading</p>;\n  else\n    return (\n      <>\n        <div class=\"container\">\n          <Form\n            name=\"basic\"\n            initialValues={{\n              username: `${data1}`,\n              email: `${data2}`,\n              phone: `${data3}`,\n              category: `${data4}`,\n              sub_category: `${data5}`,\n            }}\n            onFinish={onFinish}\n          >\n            <Form.Item label=\"Username\" name=\"username\">\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"email\" label=\"email \">\n              <Input />\n            </Form.Item>\n\n            <Form.Item name=\"category\" label=\"Category\">\n              <Select onChange={handleChange}>\n                <Option value=\"1\">Direct</Option>\n                <Option value=\"2\">InDirect</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"sub_category\" label=\"Sub-category\">\n              <Select>\n                <Option value=\"\">--Select Sub-Category--</Option>\n                {tax2.map((p, index) => (\n                  <Option key={index} value={p.id}>\n                    {p.details}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"phone\" label=\"phone\">\n              <Input/>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n\n          </Form>\n\n         \n        </div>\n      </>\n    );\n}\n\nexport default Reset;\n\n","/home/pooja/MazarsRepo/src/components/PendingForAllocation/PendingForAllocation.js",["2866","2867","2868","2869","2870","2871","2872","2873","2874","2875","2876","2877","2878","2879","2880"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './Allocation.css';\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport History from \"./History\";\nimport Swal from \"sweetalert2\";\nimport Records from \"../../components/Records/Records\";\n\n\nfunction PendingAllocation({ CountPendingForAllocation }) {\n\n  const [pendingData, setPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n   \n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n       \n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n\n\n\n  useEffect(() => {\n    getPendingForAllocation();\n  }, []);\n\n  const getPendingForAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\n    \n      if (res.data.code === 1) {\n        // CountPendingForAllocation(res.data.result.length);\n        setPendingData(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n\n              {row.status} /\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n         \n          <>\n            {row.is_assigned === \"1\" ? (\n              <p style={{ color: \"green\", fontSize: \"10px\" }}>\n                Allocated to {row.tname} on\n                <p>{row.allocation_time}</p>\n              </p>\n            ) : (\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                <div title=\"Assign to\">\n                  <Link\n                    to={`/admin/queryassing/${row.id}`}\n                  >\n                    <i class=\"fa fa-share\"></i>\n                  </Link>\n\n                </div>\n                <div title=\"Decline Query\">\n                  <Link\n                    to={`/admin/query_rejection/${row.id}`}\n                  >\n                    <i\n                      className=\"fa fa-trash\"\n                    ></i>\n                  </Link>\n                </div>\n\n                {/* <div title=\"Send Message\">\n                  <Link\n                    to={{\n                      pathname: `/admin/chatting/${row.id}`,\n                      obj: {\n                        message_type: \"4\",\n                        query_No: row.assign_no,\n                        query_id: row.id,\n                        routes: `/admin/queriestab`\n                      }\n                    }}\n                  >\n                    <i\n                      class=\"fa fa-comments-o\"\n                      style={{\n                        fontSize: 16,\n                        cursor: \"pointer\",\n                        marginLeft: \"8px\",\n                        color: \"blue\"\n                      }}\n                    ></i>\n                  </Link>\n                </div> */}\n\n              </div>\n\n\n\n            )}\n          </>\n        );\n      },\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setPendingData}\n            getData={getPendingForAllocation}\n            pendingAlloation=\"pendingAlloation\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody className = \"card-body2\">\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingData}\n            columns={columns}\n            rowIndex\n          />\n          <History history={history} toggle={toggle} modal={modal} />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingAllocation;","/home/pooja/MazarsRepo/src/pages/TL/AssignmentTab/RejectModal.js",["2881","2882","2883"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction RejectedModal({\n  nestedModal,\n  toggleNested,\n  dataItem,\n  docData,\n  getData\n}) {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"message\", value.p_chat);\n    formData.append(\"type\", 1);\n    formData.append(\"docid\", docData.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          toggleNested();\n          getData();\n          var variable = \"Submitted Successfully \"\n          Alerts.SuccessNormal(variable)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\n        <ModalHeader>Discussion</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here\"\n              ></textarea>\n\n              {errors.p_chat && (\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <div>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                    <Button color=\"primary\"className=\"btn btn-danger ml-2\" onClick={toggleNested}>Cancel</Button>\n                  </div>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default RejectedModal;\n\n","/home/pooja/MazarsRepo/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js",["2884","2885","2886","2887","2888","2889","2890","2891"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\nfunction DeclinedProposal({ declinedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getDeclinedProposal();\n  }, []);\n\n  const getDeclinedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?&status=6`).then((res) => {\n\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n        // declinedProposal(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 3,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Declined of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {\n                row.status == \"Customer Declined; Proposal\" ?\n                  <p className=\"declined\">\n                    {row.status}\n                  </p> :\n                  null\n              }\n\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.ProposedAmount;\n        \n         return(\n           <p>{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n       \n         return(\n           <p>{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"95px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n              {row.statuscode > \"3\" ?\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\n                  <a\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\n                    target=\"_blank\"\n                  >\n                    <i\n                      class=\"fa fa-eye\"\n                      style={{ color: \"green\", fontSize: \"16px\" }}\n                    />\n                  </a>\n                </div>\n                :\n                null\n              }\n\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getDeclinedProposal}\n            declinedProposal=\"declinedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getDeclinedProposal}\n          />\n\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedProposal;\n","/home/pooja/MazarsRepo/src/components/PendingForAcceptence/PendingForAcceptence.js",["2892","2893","2894","2895","2896","2897","2898","2899"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\nimport DiscardReport from \"../../pages/Admin/AssignmentTab/DiscardReport\";\n\n\nfunction PendingForAcceptence({ pendingProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getPendingAcceptedProposal();\n  }, []);\n\n  const getPendingAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?status1=1`).then((res) => {\n     \n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n        // pendingProposal(res.data.result.length);\n      }\n    });\n  };\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 1,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.ProposedAmount;\n        \n         return(\n           <p>{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n        \n         return(\n           <p>{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"95px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n\n              {row.statuscode > \"3\" ?\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\n                  <a\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\n                    target=\"_blank\"\n                  >\n                    <i\n                      class=\"fa fa-eye\"\n                      style={{ color: \"green\", fontSize: \"16px\" }}\n                    />\n                  </a>\n                </div>\n                :\n                null\n              }\n\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getPendingAcceptedProposal}\n            pendingAcceptedProposal=\"pendingAcceptedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getPendingAcceptedProposal}\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PendingForAcceptence;\n","/home/pooja/MazarsRepo/src/pages/Admin/AcceptedProposal/AcceptedProposal.js",["2900","2901","2902","2903","2904","2905","2906","2907","2908"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\nfunction AcceptedProposal({ acceptedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAcceptedProposal();\n  }, []);\n  const getAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?status1=2`).then((res) => {\n   \n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n           <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 2,\n                routes: \"proposal\",\n              }}\n            >{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n\n              {\n                row.status == \"Accepted; Proposal\" ?\n                  <p className=\"completed\">\n                    {row.status}\n                  </p> :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.ProposedAmount;\n         \n         return(\n           <p>{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n         \n         return(\n           <p>{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"95px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n              {row.statuscode > \"3\" || row.statuscode == \"10\" ?\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\n                  <a\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\n                    target=\"_blank\"\n                  >\n                    <i\n                      class=\"fa fa-eye\"\n                      style={{ color: \"green\", fontSize: \"16px\" }}\n                    />\n                  </a>\n                </div>\n                :\n                null\n              }\n\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getAcceptedProposal}\n            acceptedProposal=\"acceptedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAcceptedProposal}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AcceptedProposal;\n","/home/pooja/MazarsRepo/src/pages/Admin/AllProposalComponent/AllProposalComponent.js",["2909","2910","2911","2912","2913","2914","2915","2916","2917","2918"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nimport { Link, NavLink } from \"react-router-dom\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../../components/Records/Records\";\nimport ViewComponent from \"../ViewProposal/ViewComponent\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\nfunction AllProposalComponent({ allProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [viewData, setViewData] = useState({});\n  const [viewModal, setViewModal] = useState(false);\n  const ViewHandler = (key) => {\n   \n    setViewModal(!viewModal);\n    setViewData(key);\n  };\n\n\n  const [assignNo, setAssignNo] = useState('');\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getProposalData();\n  }, []);\n\n  const getProposalData = () => {\n    axios.get(`${baseUrl}/admin/getProposals`).then((res) => {\n    \n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n    \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 0,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance / decline of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {\n                row.status == \"Inprogress\" ?\n                  <div>\n                    {row.status}/\n                    <p className=\"inprogress\">\n                      {row.statusdescription}\n                    </p>\n                  </div>\n                  :\n                  row.status == \"Customer Declined; Proposal\" ?\n                    <p className=\"declined\">\n                      {row.status}\n                    </p> :\n                    row.status == \"Accepted; Proposal\" ?\n                      <p className=\"completed\">\n                        {row.status}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row){\n       var nfObject = new Intl.NumberFormat('hi-IN')\n        var x = row.ProposedAmount;\n        \n        return(\n          <p>{nfObject.format(x)}</p>\n        )\n      }\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n      formatter: function nameFormatter(cell, row){\n        var nfObject = new Intl.NumberFormat('hi-IN')\n         var x = row.accepted_amount;\n         \n         return(\n           <p>{nfObject.format(x)}</p>\n         )\n       }\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"95px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n              {row.statuscode > \"3\" || row.statuscode == \"10\" ?\n                <div style={{ cursor: \"pointer\" }} title=\"View Proposal\">\n                  <a\n                    href={`${baseUrl}/customers/dounloadpdf?id=${row.q_id}&viewpdf=1`}\n                    target=\"_blank\"\n                  >\n                    <i\n                      class=\"fa fa-eye\"\n                      style={{ color: \"green\", fontSize: \"16px\" }}\n                    />\n                  </a>\n                </div>\n                :\n                null\n              }\n\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/proposal`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getProposalData}\n            allProposal=\"allProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n\n          <ViewComponent\n            ViewHandler={ViewHandler}\n            viewModal={viewModal}\n            viewData={viewData}\n            getProposalData={getProposalData}\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getProposalData}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllProposalComponent;\n","/home/pooja/MazarsRepo/src/pages/Admin/Login/VerifyOtpLogin.js",["2919"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\n\nconst Schema = yup.object().shape({\n  p_otp: yup.string().required(\"\"),\n});\n\n\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\n  \n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const history = useHistory();\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [num, changeNum] = useState(false);\n\n\n  useEffect(() => {\n   LoadingTime.timer2(setTime, setDisabled)\n  \n   \n  }, [num]);\n\n  useEffect(() => {\n  \n    LoadingTime.timer2(setTime, setDisabled)\n  }, []);\n\n  const validOtp = (e) => {\n    if (isNaN(e.target.value)) {\n      Alerts.ErrorNormal(\"Please enter number only\")\n    }\n  }\n\n\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/verifyloginotp`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n\n        if (response.data.code == 1) {\n          setLoading(false)\n          Alerts.SuccessLogin(\"Logged in successfully.\")\n          localStorage.setItem(\"adminkey\", JSON.stringify(response.data[\"user id\"]));\n          localStorage.setItem(\"adminEmail\", JSON.stringify(response.data.name));\n          history.push(\"/admin/dashboard\");\n\n        } else {\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n          setLoading(false)\n          reset();\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n  const resendOtp = () => {\n    setLoading(true)\n    changeNum(!num)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"uid\", uid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/regenrateotp`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setDisabled(false)\n        }\n        else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n\n  return (\n    <>\n\n      <div class=\"container\">\n        <div class=\"otp\">\n          <div class=\"heading text-center\">\n            <h2>Verify Your OTP</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            {\n              disabled ?\n                null\n                :\n                <div class=\"form-group\">\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_otp,\n                    })}\n                    id=\"otp\"\n                    placeholder=\"Enter Your OTP Here\"\n                    ref={register}\n                    name=\"p_otp\"\n                    autocomplete=\"off\"\n                    onChange={(e) => validOtp(e)}\n                  />\n                  {errors.p_otp && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_otp.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                  <Mandatory />\n                </div>\n            }\n\n            {\n              loading ?\n                <Spinner color=\"primary\" />\n                :\n                <div class=\"text-center\">\n                  {\n                    disabled ?\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\n                      :\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\n                  }\n                </div>\n            }\n          </form>\n\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/home/pooja/MazarsRepo/src/views/Message/PaymentModal.js",["2920","2921","2922","2923"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  data,\n  // getProposalData,\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n\n  const onSubmit = (value) => {\n\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", id);\n    formData.append(\"message_type\",\"information\");\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          reset();\n          alert.success(\" message successfully send!\");\n          paymentHandler()\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/views/EditQuery/DeleteQuery.js",["2924","2925","2926"],"import React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction DeleteQuery({ id, setLoading }) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n\n\n\n  //check\n  const del = (id) => {\n\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Want to delete query ?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, deleted it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  const deleteCliente = (id) => {\n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/deleteQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n\n        if (response.data.code === 1) {\n          setLoading(false)\n          Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\n          history.push(\"/customer/queries\");\n        } else {\n          setLoading(false)\n          Swal.fire(\"Oops...\", \"Query not deleted\", \"error\");\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  return (\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" onClick={() => del(id)}>\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default DeleteQuery;\n\n{\n  /* <i\n        className=\"fa fa-trash\"\n        style={{\n          fontSize: 16,\n          cursor: \"pointer\",\n        }}\n        \n      ></i> */\n}\n","/home/pooja/MazarsRepo/src/pages/Admin/AssignmentTab/ViewAllReport.js",["2927","2928","2929","2930","2931","2932","2933","2934","2935","2936","2937","2938","2939","2940","2941","2942","2943","2944"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport * as yup from \"yup\";\nimport CommonServices from \"../../../common/common\";\nimport DiscardReport from \"./DiscardReport\";\nimport './modalSty.css';\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  getPendingforAcceptance,\n}) {\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const [data, setData] = useState([]);\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n  }\nconst viewStyle = {\n  display: \"block\",\n    width: \"100%\",\n    border: \"1px solid black\"\n}\n  useEffect(() => {\n    getData();\n  }, [report]);\n\n  const getData = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n \n  return (\n    <div>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewReport}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"55vw\" }}>\n            <span>View All Reports</span>\n            <span>\n              <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\n                View Discussion\n              </button>\n            </span>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Document</th>\n               \n                <th scope=\"row\">Report Type</th>\n                <th scope=\"row\">Action</th>\n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr class=\"modalTable\">\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                    <td class=\"table2\">\n                      <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                          <a\n                            href={`${ReportUrl}/${report}/${p.document}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                    \n                      <a\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i> \n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\n                    </tr> }\n                    </td>\n                  \n                    </td>\n                  \n                   \n\n                    <td>\n                  <p>    {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\n                  \n                  <br>\n                  </br> \n                  {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> }</td>\n                  <td>\n                      {\n                        p.stages_type == \"2\" ?\n                          <div>\n                            {\n                              p.status == \"0\" ?\n                                <p style={{ color: \"red\" }}>Pending</p>\n                                :\n                                p.status == \"1\" ?\n                                  <div style={{ cursor: \"pointer\" }} title=\"Customer Accepted\">\n                                    <i\n                                      class=\"fa fa-check\"\n                                      style={{\n                                        color: \"blue\",\n                                        fontSize: \"16px\",\n                                        marginLeft: \"10px\"\n                                      }}\n                                    ></i>\n                                  </div> :\n                                  p.status == \"2\" ?\n                                    <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                                      <div title=\"Discussion\">\n                                        <i\n                                          class=\"fa fa-comments-o\"\n                                          style={{\n                                            fontSize: 16,\n                                            cursor: \"pointer\",\n                                            marginLeft: \"8px\",\n                                            color: \"green\"\n                                          }}\n                                          // onClick={() => toggleNested(p)}\n                                        ></i>\n                                      </div>\n                                      <div title=\"Discard\">\n                                        <i\n                                          class=\"fa fa-times\"\n                                          style={{\n                                            fontSize: 16,\n                                            cursor: \"pointer\",\n                                            marginLeft: \"8px\",\n                                            color: \"red\"\n                                          }}\n                                          // onClick={() => toggleDiscard(p)}\n                                        ></i>\n                                      </div>\n                                    </div>\n                                    :\n                                    p.status == \"3\" ?\n                                      <p style={{ color: \"red\" }}>Discarded</p> :\n                                      null\n                            }\n                          </div>\n                          :\n                          null\n                      }\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        getData={getData}\n      />\n    </div>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/views/Schedule/demo.js",["2945","2946","2947","2948","2949","2950","2951","2952","2953","2954"],"import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  ViewState,\n  EditingState,\n  IntegratedEditing,\n} from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  WeekView,\n  DayView,\n  Appointments,\n  Toolbar,\n  DateNavigator,\n  ViewSwitcher,\n  AppointmentForm,\n  AppointmentTooltip,\n  TodayButton,\n  Resources,\n  EditRecurrenceMenu,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as Cookies from \"js-cookie\";\n\nfunction Demo() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const [assignmentdata, setAssignmentData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [owner, setOwner] = useState([]);\n\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n\n  var date = new Date();\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n  const [currentDate] = useState(convert(date));\n\n  useEffect(() => {\n    getData();\n    getAssignmentNo();\n    getUsers();\n  }, []);\n\n\n  const getData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/videoScheduler?customer_id=${JSON.parse(userId)}`\n      )\n      .then((res) => {\n     \n        var a = res.data.result.items;\n        if (a) {\n          setData(a.map(mapAppointmentData));\n          setLoading(false);\n        }\n      });\n  };\n\n\n  const mapAppointmentData = (appointment) => ({\n    id: appointment.id,\n    startDate: appointment.start,\n    endDate: appointment.end,\n    title: appointment.title,\n    notes: appointment.summary,\n    question_id: appointment.question_id,\n    assign_no: appointment.assign_no,\n    owner: appointment.owner,\n    username: appointment.username,\n  });\n\n\n  const getAssignmentNo = () => {\n    axios\n      .get(`${baseUrl}/customers/getAllQuery?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          var data = res.data.result;\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n            text,\n            ...rest,\n          }));\n          \n          setAssignmentData(newArrayOfObj);\n        }\n      });\n  };\n\n\n  const getUsers = () => {\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\n      \n      if (res.data.code === 1) {\n        var data = res.data.result;\n        const newOwners = data.map(({ name: text, ...rest }) => ({\n          text,\n          ...rest,\n        }));\n       \n        setOwner(newOwners);\n      }\n    });\n  };\n\n\n  const resources = [\n    {\n      fieldName: \"question_id\",\n      title: \"Query No\",\n      instances: assignmentdata,\n    },\n   \n  ];\n\n\n\n  const commitChanges = ({ added, changed, deleted }) => {\n   \n  };\n\n\n\n  const styles = (theme) => ({\n    button: {\n      color: theme.palette.background.default,\n      padding: 0,\n    },\n    text: {\n      paddingTop: theme.spacing(1),\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n  const AppointmentBase = ({\n    children,\n    data,\n    onClick,\n    classes,\n    onAppointmentMetaChange,\n    ...restProps\n  }) => (\n    <Appointments.Appointment {...restProps}>\n      <div style={{ display: \"flex\" }}>\n      <i\n            class=\"fa fa-video-camera\"\n            onClick={() => handleJoin(data)}\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\n          ></i>\n        <div>{children}</div>\n        <div\n         \n        >\n          \n        </div>\n      </div>\n    </Appointments.Appointment>\n  );\n\n\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\n    AppointmentBase\n  );\n\n\n\n  const myAppointment = (props) => {\n    return (\n      <Appointment\n        {...props}\n      />\n    );\n  };\n\n  \n  const handleJoin = (data) => {\n    // console.log(\"data\", data);\n//  console.log(\"data\", data)\n// // console.log(data.startDate)\n// var dt = new Date(data.startDate)\n// var dt2 = new Date()\n// let ck = dt.getMonth();\n\n// let pp = dt2.getMonth();\n// let rr = dt2.getHours();\n// let ss = dt.getHours()\n// let mm = dt2.getMinutes() + 20\n// let dd = dt.getMinutes()\n// let ee = dt.getDate();\n// let eee = dt2.getDate()\n//   console.log(\"dt\", dt)\n//   console.log(dt2.getDate())\n//  console.log(dt.getMinutes())\n//  console.log(dt2.getMinutes() + 20)\n//  console.log(\"ck\", ck)\n//   console.log(\"dt2\", dt2)\n//   console.log(\"pp\", pp)\n//   console.log(\"mm\", mm)\n//   console.log(\"dd\", dd)\n//   console.log(\"ss\", ss)\n//   console.log(\"rr\", rr)\n//   console.log(ck == pp)\n//   console.log(ee === eee)\n//   console.log(ss == rr)\n//   console.log(mm > dd)\n\n\n//if(ck == pp && ss == rr && ee == eee){\n\n\n// if(mm > dd){\n//   console.log(\"passed\")\n  \n//   Cookies.set(\"channel\", data.question_id);\n//   Cookies.set(\"baseMode\", baseMode);\n//   Cookies.set(\"transcode\", transcode);\n//   Cookies.set(\"attendeeMode\", attendeeMode);\n//   Cookies.set(\"videoProfile\", videoProfile);\n//   history.push(\"/customer/meeting\");\n\n// }\n// else{\n// // return false\n// Cookies.set(\"channel\", data.question_id);\n// Cookies.set(\"baseMode\", baseMode);\n// Cookies.set(\"transcode\", transcode);\n// Cookies.set(\"attendeeMode\", attendeeMode);\n// Cookies.set(\"videoProfile\", videoProfile);\n// history.push(\"/customer/meeting\");\n// }\n// }\nCookies.set(\"channel\", data.question_id);\nCookies.set(\"baseMode\", baseMode);\nCookies.set(\"transcode\", transcode);\nCookies.set(\"attendeeMode\", attendeeMode);\nCookies.set(\"videoProfile\", videoProfile);\nhistory.push(\"/customer/meeting\");\n\n\n  };\n\n  const messages = {\n    moreInformationLabel: \"\"\n  };\n\n\n  const BooleanEditor = (props) => {\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\n      return null;\n    }\n    return <AppointmentForm.BooleanEditor {...props} />;\n  };\n\n  const TextEditor = (props) => {\n    return <AppointmentForm.TextEditor {...props} />;\n  };\n\n\n  //basic layout\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\n   \n    return (\n      <AppointmentForm.BasicLayout\n        appointmentData={appointmentData}\n        onFieldChange={onFieldChange}\n        {...restProps}\n      >\n\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\n        <AppointmentForm.TextEditor\n          value={appointmentData.username}\n          readOnly\n        />\n\n      </AppointmentForm.BasicLayout>\n    );\n  };\n\n  return (\n    <Paper>\n      <Scheduler data={data} height={550}>\n        <ViewState\n          defaultCurrentDate={currentDate}\n          defaultCurrentViewName=\"Week\"\n        />\n        <EditingState onCommitChanges={commitChanges} />\n        <EditRecurrenceMenu />\n        <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\n        <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\n        <Appointments appointmentComponent={myAppointment} />\n\n        <Toolbar />\n        <DateNavigator />\n        <TodayButton />\n        <ViewSwitcher />\n        <AppointmentTooltip showOpenButton />\n\n\n        <AppointmentForm\n          basicLayoutComponent={BasicLayout}\n          textEditorComponent={TextEditor}\n          booleanEditorComponent={BooleanEditor}\n          readOnly\n        />\n\n        <Resources\n          data={resources}\n          mainResourceName=\"username\"\n        />\n\n      </Scheduler>\n    </Paper>\n  );\n}\n\nexport default Demo;\n\n","/home/pooja/MazarsRepo/src/views/ChangePassword/ResendOtp.js",["2955","2956"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Alerts from \"../../common/Alerts\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\n\nfunction ResendOtp({ email, setDisabled, getTime, setLoad, setLoading, loading }) {\n    const userId = window.localStorage.getItem(\"userid\");\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n        let formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"uid\", JSON.parse(userId));\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/customers/regenrateotp`,\n            data: formData,\n        })\n            .then(function (response) {\n\n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime();\n                    setLoad(true)\n                } if (response.data.code === 0) {\n                    setLoading(false)\n                }\n            })\n            .catch((error) => {\n              ShowError.LoadingError(setLoading)\n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/views/NewPassword/ResendOtp.js",["2957","2958"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Alerts from \"../../common/Alerts\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\n\nfunction ResendOtp({ id, setDisabled, getTime, setLoad, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"email\", id);\n        formData.append(\"p\", \"forgot\");\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/customers/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n            \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your regsitered email address.\")\n                    setDisabled(false)\n                    setLoad(true)\n                    getTime();\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                }\n            })\n            .catch((error) => {\n              ShowError.LoadingError(setLoading)\n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/views/ProposalView/TermsConditions.js",["2959","2960","2961"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { baseUrl } from \"../../config/config\";\n\n\nfunction PaymentModal({\n  addPaymentModal,\n  readTerms,\n  id\n}) {\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={readTerms} size=\"lg\" scrollable={true} style={{ height: \"100%\" }} >\n        <ModalHeader toggle={readTerms}>Engagement Letter</ModalHeader>\n        <ModalBody>\n          <iframe src={`${baseUrl}/customers/dounloadpdf?id=${id}&viewpdf=1`}\n            height=\"100%\" width=\"100%\" />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={readTerms}>Ok</Button>\n        </ModalFooter>\n\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/components/InputRoom/index.js",["2962","2963","2964","2965","2966"],"import React from \"react\";\nimport * as Cookies from \"js-cookie\";\n\nimport \"../../assets/fonts/css/icons.css\";\n// import Validator from \"../../utils/Validator\";\n// import { RESOLUTION_ARR } from \"../../utils/Settings\";\nimport \"./index.css\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: \"\",\n      baseMode: \"avc\",\n      transcode: \"interop\",\n      attendeeMode: \"video\",\n      videoProfile: \"480p_4\",\n    };\n  }\n\n \n  render() {\n    return (\n      <div className=\"wrapper index\">\n        <div className=\"ag-header\"></div>\n        <div className=\"ag-main\">\n          <section className=\"login-wrapper\">\n            <div className=\"login-header\"></div>\n\n            {/* <div className=\"login-body\">\n              <div className=\"columns\">\n                <div className=\"column is-12\">\n                  <InputChannel\n                    onChange={this.handleChannel}\n                    placeholder=\"Input a room name here\"\n                  ></InputChannel>\n                </div>\n              </div>\n\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <div id=\"attendeeMode\" className=\"control\">\n                    <label className=\"radio\">\n                      <input\n                        onChange={(e) =>\n                          this.setState({ attendeeMode: e.target.value })\n                        }\n                        value=\"video\"\n                        type=\"radio\"\n                        name=\"attendee\"\n                        defaultChecked\n                      />\n                      <span className=\"radio-btn\"></span>\n                      <span className=\"radio-msg\">\n                        Video Call : join with video call\n                      </span>\n                    </label>\n                    <br />\n                  </div>\n                </div>\n              </div>\n            </div> */}\n\n            <div className=\"login-footer\">\n              <a\n                // onClick={this.handleJoin}\n                className=\"ag-rounded button is-info\"\n              >\n                Join\n              </a>\n            </div>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n\n// class InputChannel extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       state: \"\",\n//     };\n//   }\n\n//   handleChange = (e) => {\n//     this.props.onChange(e.target.value);\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"channel-wrapper control has-icons-left\">\n//         <input\n//           onInput={this.handleChange}\n//           id=\"channel\"\n//           className={\"ag-rounded input \" + this.state.state}\n//           type=\"text\"\n//           placeholder={this.props.placeholder}\n//         />\n\n//       </div>\n//     );\n//   }\n// }\n{\n  /* <span className=\"validate-icon\">{validateIcon}</span> */\n}\n// let validateIcon = \"\";\n// switch (this.state.state) {\n//   default:\n//   case \"\":\n//     validateIcon = \"\";\n//     break;\n//   case \"is-success\":\n//     validateIcon = <i className=\"ag-icon ag-icon-valid\"></i>;\n//     break;\n//   case \"is-danger\":\n//     validateIcon = <i className=\"ag-icon ag-icon-invalid\"></i>;\n//     break;\n// }\n{\n  /* <label className=\"radio\">\n                      <input\n                        onChange={(e) =>\n                          this.setState({ attendeeMode: e.target.value })\n                        }\n                        value=\"audio-only\"\n                        type=\"radio\"\n                        name=\"attendee\"\n                      />\n                      <span className=\"radio-btn\"></span>\n                      <span className=\"radio-img audio\"></span>\n                      <span className=\"radio-msg\">\n                        Audio-only : join with audio call\n                      </span>\n                    </label>\n                    <br />\n                    <label className=\"radio\">\n                      <input\n                        onChange={(e) =>\n                          this.setState({ attendeeMode: e.target.value })\n                        }\n                        value=\"audience\"\n                        type=\"radio\"\n                        name=\"attendee\"\n                      />\n                      <span className=\"radio-btn\"></span>\n                      <span className=\"radio-img audience\"></span>\n                      <span className=\"radio-msg\">\n                        Audience : join as an audience\n                      </span>\n                    </label> */\n}\n{\n  /* <div className=\"columns\">\n                <div className=\"column is-7\">\n                  <BaseOptions\n                    onChange={(val) => this.setState({ baseMode: val })}\n                  ></BaseOptions>\n                </div>\n                <div className=\"column is-5\">\n                  <AdvancedOptions\n                    onRadioChange={(val) => this.setState({ transcode: val })}\n                    onSelectChange={(val) =>\n                      this.setState({ videoProfile: val })\n                    }\n                  ></AdvancedOptions>\n                </div>\n              </div> */\n}\n// class BaseOptions extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this._options = [\n//       {\n//         label: \"Agora Video Call\",\n//         value: \"avc\",\n//         content: \"One to one and group calls\",\n//       },\n//       {\n//         label: \"Agora Live\",\n//         value: \"al\",\n//         content:\n//           \"Enabling real-time interactions between the host and the audience\",\n//       },\n//     ];\n//     this.state = {\n//       active: false,\n//       message: \"Agora Video Call\",\n//     };\n//   }\n\n//   handleSelect = (item) => {\n//     let msg = item.label;\n//     let val = item.value;\n//     this.setState({\n//       message: msg,\n//       active: false,\n//     });\n//     this.props.onChange(val);\n//   };\n\n//   render() {\n//     const options = this._options.map((item, index) => {\n//       return (\n//         <div\n//           className=\"dropdown-item\"\n//           key={index}\n//           onClick={(e) => this.handleSelect(item, e)}\n//         >\n//           <p>{item.label}</p>\n//           <hr />\n//           <p>{item.content}</p>\n//         </div>\n//       );\n//     });\n\n//     return (\n//       <div className={this.state.active ? \"dropdown is-active\" : \"dropdown\"}>\n//         <div\n//           className=\"dropdown-trigger\"\n//           onClick={() => this.setState({ active: !this.state.active })}\n//         >\n//           <a\n//             id=\"baseMode\"\n//             className=\"ag-rounded button\"\n//             aria-haspopup=\"true\"\n//             aria-controls=\"baseModeOptions\"\n//           >\n//             <span id=\"baseOptionLabel\">{this.state.message}</span>\n//             <span className=\"icon is-small\">\n//               <i className=\"ag-icon ag-icon-arrow-down\" aria-hidden=\"true\"></i>\n//             </span>\n//           </a>\n//         </div>\n//         <div className=\"dropdown-menu\" id=\"baseModeOptions\" role=\"menu\">\n//           <div className=\"dropdown-content\">{options}</div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class AdvancedOptions extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       active: false,\n//     };\n//   }\n\n//   handleRadio = (e) => {\n//     this.props.onRadioChange(e.target.value);\n//   };\n\n//   handleSelect = (e) => {\n//     this.props.onSelectChange(e.target.value);\n//   };\n\n//   render() {\n//     const options = Object.entries(RESOLUTION_ARR).map((item, index) => {\n//       return (\n//         <option key={index} value={item[0].split(\",\")[0]}>\n//           {item[1][0]}x {item[1][1]}, {item[1][2]}fps, {item[1][3]}kbps\n//         </option>\n//       );\n//     });\n//     return (\n//       <div className={this.state.active ? \"dropdown is-active\" : \"dropdown\"}>\n//         <div\n//           className=\"dropdown-trigger\"\n//           onClick={() => this.setState({ active: !this.state.active })}\n//         >\n//           <a\n//             id=\"advancedProfile\"\n//             className=\"ag-rounded button\"\n//             aria-haspopup=\"true\"\n//             aria-controls=\"advancedOptions\"\n//           >\n//             <span>Advanced</span>\n//           </a>\n//         </div>\n//         <div className=\"dropdown-menu\" id=\"advancedOptions\" role=\"menu\">\n//           <div className=\"dropdown-content\">\n//             <div className=\"dropdown-item\">\n//               <div className=\"control\">\n//                 <label className=\"radio\">\n//                   <input\n//                     value=\"\"\n//                     type=\"radio\"\n//                     name=\"transcode\"\n//                     onChange={this.handleRadio}\n//                   />\n//                   <span>VP8-only</span>\n//                 </label>\n//                 <label className=\"radio\">\n//                   <input\n//                     value=\"interop\"\n//                     type=\"radio\"\n//                     defaultChecked\n//                     onChange={this.handleRadio}\n//                     name=\"transcode\"\n//                   />\n//                   <span>VP8 &amp; H264</span>\n//                 </label>\n//                 <label className=\"radio\">\n//                   <input\n//                     value=\"h264_interop\"\n//                     type=\"radio\"\n//                     onChange={this.handleRadio}\n//                     name=\"transcode\"\n//                   />\n//                   <span>H264-only</span>\n//                 </label>\n//               </div>\n//             </div>\n//             <div className=\"dropdown-item\">\n//               <div className=\"select is-rounded\">\n//                 <select\n//                   onChange={this.handleSelect}\n//                   defaultValue=\"480p_4\"\n//                   id=\"videoProfile\"\n//                   className=\"ag-rounded is-clipped\"\n//                 >\n//                   {options}\n//                 </select>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n","/home/pooja/MazarsRepo/src/views/AssignmentTab/CustomerDeclinedPayment.js",["2967","2968","2969","2970","2971","2972","2973","2974","2975","2976","2977","2978","2979","2980","2981","2982","2983","2984","2985","2986"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport * as Cookies from \"js-cookie\";\nimport { useAlert } from \"react-alert\";\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport PaymentModal from \"./PaymentModal\";\nimport RejectedModal from \"./RejectModal\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport Records from \"../../components/Records/Records\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport Alerts from \"../../common/Alerts\";\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction CustomerDeclinedPayment() {\n    const history = useHistory();\n    const alert = useAlert();\n    const userId = window.localStorage.getItem(\"userid\");\n    const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n    const [assignmentCount, setAssignmentQueries] = useState(\"\");\n    const [records, setRecords] = useState([]);\n    const [report, setReport] = useState();\n    const [dataItem, setDataItem] = useState({});\n\n\n    const [reportModal, setReportModal] = useState(false);\n    const ViewReport = (key) => {\n      \n        setReportModal(!reportModal);\n        setReport(key.assign_no);\n        setDataItem(key)\n    };\n\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getAssignmentData();\n    }, []);\n\n\n    const getAssignmentData = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=3`\n            )\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setAssignmentDisplay(res.data.result);\n                    setAssignmentQueries(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n        },\n        {\n            dataField: \"created\",\n            text: \"Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.created;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/customer/my-assingment/${row.id}`,\n                                index: 3,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            dataField: \"status\",\n            text: \"Status\",\n            style: {\n              fontSize: \"11px\",\n            },\n            headerStyle: () => {\n              return { fontSize: \"12px\", width: \"200px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div>\n                    {row.paid_status == \"2\" &&\n                      <p>\n                        <span style={{ color: \"red\" }}>Payment Declined</span>\n                      </p>\n                    }\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                      {row.client_discussion}\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\n                      {row.draft_report}\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                      {row.final_discussion}\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                      {row.delivery_report}\n                    </p>\n                    <p>\n                      <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\n                      {row.other_stage}\n                    </p>\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            dataField: \"Exp_Delivery_Date\",\n            text: \"Expected date of delivery\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.created;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"final_date\",\n            text: \"Actual date of delivery\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00\") {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Deliverable\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n               \n                return (\n                    <>\n\n{\n  row.status == \"Payment decliend\" || row.paid_status == \"2\" ? null :\n    <div>\n      {row.assignment_draft_report || row.final_report ?\n        <div title=\"View All Report\"\n          style={{ cursor: \"pointer\", textAlign: \"center\" }}\n          onClick={() => ViewReport(row)}\n        >\n          <DescriptionOutlinedIcon color=\"secondary\" />\n        </div>\n        :\n        null\n      }\n    </div>\n}\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Team Leader name and contact number, email\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: priceFormatter,\n        },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", textAlign: \"center\", width: \"70px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        {row.paid_status === \"2\" ? null :\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n                        <div title=\"Send Message\">\n                            <Link\n                                to={{\n                                    pathname: `/customer/chatting/${row.id}`,\n                                    obj: {\n                                        message_type: \"4\",\n                                        query_No: row.assign_no,\n                                        query_id: row.id,\n                                        routes: `/customer/assignment`\n                                    }\n                                }}\n                            >\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"blue\"\n                                    }}\n                                ></i>\n                            </Link>\n                        </div>\n\n                        <div title=\"View Discussion Message\">\n                            <i\n                                class=\"fa fa-comments-o\"\n                                style={{\n                                    fontSize: 16,\n                                    cursor: \"pointer\",\n                                    color: \"orange\"\n                                }}\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\n                            ></i>\n                        </div>\n\n                    </div> }\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n    //tl,phone,email\n    function priceFormatter(cell, row) {\n       \n        if (row) {\n            return (\n                <>\n                    <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\n                    <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\n                    <p style={{ fontSize: \"10px\" }}>{row.email}</p>\n                </>\n            );\n        }\n\n        return null;\n    }\n\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <CustomerFilter\n                        setData={setAssignmentDisplay}\n                        getData={getAssignmentData}\n                        id={userId}\n                        assignment=\"assignment\"\n                        records={records}\n                        setRecords={setRecords}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                    <Records records={records} />\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={assignmentDisplay}\n                        columns={columns}\n                    />\n\n\n                    <ViewAllReportModal\n                        ViewReport={ViewReport}\n                        reportModal={reportModal}\n                        report={report}\n                        getPendingforAcceptance={getAssignmentData}\n                        dataItem={dataItem}\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentData}\n                    />\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default CustomerDeclinedPayment;","/home/pooja/MazarsRepo/src/views/AssignmentTab/CompletedAssignment.js",["2987","2988","2989","2990","2991","2992","2993","2994","2995","2996","2997","2998","2999","3000","3001","3002","3003","3004","3005"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport * as Cookies from \"js-cookie\";\nimport { useAlert } from \"react-alert\";\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport PaymentModal from \"./PaymentModal\";\nimport RejectedModal from \"./RejectModal\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport Records from \"../../components/Records/Records\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport Alerts from \"../../common/Alerts\";\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction CompleteAssignment() {\n  const history = useHistory();\n  const alert = useAlert();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const [assignmentCount, setAssignmentQueries] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [report, setReport] = useState();\n\n\n\n  const [reportModal, setReportModal] = useState(false);\n  const ViewReport = (key) => {\n   \n    setReportModal(!reportModal);\n    setReport(key);\n  };\n\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n\n  const getAssignmentData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=2`\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAssignmentDisplay(res.data.result);\n          setAssignmentQueries(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n              \n        return (\n            <>\n                <Link\n                    to={{\n                        pathname: `/customer/my-assingment/${row.id}`,\n                        index: 2,\n                        routes: \"assignment\",\n                    }}\n                >\n                    {row.assign_no}\n                </Link>\n            </>\n        );\n    },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              {row.paid_status == \"2\" &&\n                <p>\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00\") {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Deliverable\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n    \n        return (\n          <>\n\n            {\n              row.status == \"Payment decliend\" ? null :\n                <div>\n                  {row.assignment_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                      onClick={() => ViewReport(row.assign_no)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n\n                  {row.assignment_draft_report && !row.final_report ? (\n                    row.draft_report == \"completed\" ?\n                      null :\n                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n\n                        <div style={{ cursor: \"pointer\" }} title=\"Accepted\">\n                          <i\n                            class=\"fa fa-check\"\n                            style={{\n                              color: \"green\",\n                              fontSize: \"16px\",\n                            }}\n                            onClick={() => acceptHandler(row)}\n                          ></i>\n                        </div>\n\n                        <div title=\"Send Message\">\n                          <Link\n                            to={{\n                              pathname: `/customer/chatting/${row.id}`,\n                              obj: {\n                                message_type: \"3\",\n                                query_No: row.assign_no,\n                                query_id: row.id,\n                                routes: `/customer/assignment`\n                              }\n                            }}\n                          >\n                            <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                fontSize: 16,\n                                cursor: \"pointer\",\n                                marginLeft: \"8px\",\n                                color: \"green\"\n                              }}\n                            ></i>\n                          </Link>\n                        </div>\n                      </div>\n\n                  ) : null}\n\n                </div>\n            }\n\n\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Team Leader name and contact number, email\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: priceFormatter,\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"70px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/customer/chatting/${row.id}`,\n                    obj: {\n                      message_type: \"4\",\n                      query_No: row.assign_no,\n                      query_id: row.id,\n                      routes: `/customer/assignment`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  //accept handler\n  const acceptHandler = (key) => {\n \n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", key.id);\n    formData.append(\"query_no\", key.assign_no);\n    formData.append(\"type\", 1);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/draftAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n\n          var variable = \"Draft accepted successfully \"\n          Alerts.SuccessNormal(variable)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n\n  //tl,phone,email\n  function priceFormatter(cell, row) {\n   \n    if (row) {\n      return (\n        <>\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\n        </>\n      );\n    }\n\n    return null;\n  }\n\n\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <CustomerFilter\n            setData={setAssignmentDisplay}\n            getData={getAssignmentData}\n            id={userId}\n            assignment=\"assignment\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignmentDisplay}\n            columns={columns}\n          />\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n          />\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n          />\n\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default CompleteAssignment;","/home/pooja/MazarsRepo/src/views/AssignmentTab/InprogressAssignment.js",["3006","3007","3008","3009","3010","3011","3012","3013","3014","3015","3016","3017","3018","3019","3020","3021","3022","3023","3024","3025"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport * as Cookies from \"js-cookie\";\nimport { useAlert } from \"react-alert\";\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport PaymentModal from \"./PaymentModal\";\nimport RejectedModal from \"./RejectModal\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport Records from \"../../components/Records/Records\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport Alerts from \"../../common/Alerts\";\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction InprogressAssignment() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const [assignmentCount, setAssignmentQueries] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [dataItem, setDataItem] = useState({});\n  const [rejectedItem, setRejectedItem] = useState({});\n  const [report, setReport] = useState();\n\n\n  const [rejectModal, setRejectModal] = useState(false);\n  const rejectHandler = (key) => {\n    setRejectModal(!rejectModal);\n    setRejectedItem(key);\n  };\n\n\n  const [reportModal, setReportModal] = useState(false);\n  const ViewReport = (key) => {\n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n\n  const getAssignmentData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=1`\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAssignmentDisplay(res.data.result);\n          setAssignmentQueries(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n              \n        return (\n            <>\n                <Link\n                    to={{\n                        pathname: `/customer/my-assingment/${row.id}`,\n                        index: 1,\n                        routes: \"assignment\",\n                    }}\n                >\n                    {row.assign_no}\n                </Link>\n            </>\n        );\n    },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              {row.paid_status == \"2\" &&\n                <p>\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n    \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00\") {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Deliverable\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n       \n        return (\n          <>\n\n        \n{\n  row.status == \"Payment decliend\" || row.paid_status == \"2\" ? null :\n    <div>\n      {row.assignment_draft_report || row.final_report ?\n        <div title=\"View All Report\"\n          style={{ cursor: \"pointer\", textAlign: \"center\" }}\n          onClick={() => ViewReport(row)}\n        >\n          <DescriptionOutlinedIcon color=\"secondary\" />\n        </div>\n        :\n        null\n      }\n    </div>\n}\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Team Leader name and contact number, email\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: priceFormatter,\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"70px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n          {row.paid_status === \"2\" ? null :\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/customer/chatting/${row.id}`,\n                    obj: {\n                      message_type: \"4\",\n                      query_No: row.assign_no,\n                      query_id: row.id,\n                      routes: `/customer/assignment`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Discussion Message\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"orange\"\n                  }}\n                  onClick={() => ViewDiscussionToggel(row.assign_no)}\n                ></i>\n              </div>\n\n            </div> }\n          </>\n        );\n      },\n    },\n  ];\n\n  //accept handler\n  const acceptHandler = (key) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", key.id);\n    formData.append(\"query_no\", key.assign_no);\n    formData.append(\"type\", 1);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/draftAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n\n          var variable = \"Draft accepted successfully \"\n          Alerts.SuccessNormal(variable)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  //tl,phone,email\n  function priceFormatter(cell, row) {\n  \n    if (row) {\n      return (\n        <>\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\n        </>\n      );\n    }\n\n    return null;\n  }\n\n\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <CustomerFilter\n            setData={setAssignmentDisplay}\n            getData={getAssignmentData}\n            id={userId}\n            assignment=\"assignment\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignmentDisplay}\n            columns={columns}\n          />\n\n          {/* <PaymentModal\n            paymentHandler={paymentHandler}\n            addPaymentModal={addPaymentModal}\n            pay={pay}\n            getProposalData={getAssignmentData}\n          /> */}\n\n          <RejectedModal\n            rejectHandler={rejectHandler}\n            rejectModal={rejectModal}\n            rejectedItem={rejectedItem}\n            getPendingforAcceptance={getAssignmentData}\n          />\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n          />\n\n\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InprogressAssignment;","/home/pooja/MazarsRepo/src/views/AssignmentTab/AllAssignment.js",["3026","3027","3028","3029","3030","3031","3032","3033","3034","3035","3036","3037","3038","3039","3040","3041","3042","3043","3044","3045","3046","3047","3048","3049","3050","3051","3052"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport * as Cookies from \"js-cookie\";\nimport { useAlert } from \"react-alert\";\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport Records from \"../../components/Records/Records\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport Alerts from \"../../common/Alerts\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction AllAssignment() {\n  const history = useHistory();\n  const alert = useAlert();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const [assignmentCount, setAssignmentQueries] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n\n  const [rejectedItem, setRejectedItem] = useState({});\n  const [report, setReport] = useState();\n  const [dataItem, setDataItem] = useState({});\n\n\n\n  const [rejectModal, setRejectModal] = useState(false);\n  const rejectHandler = (key) => {\n    setRejectModal(!rejectModal);\n    setRejectedItem(key);\n  };\n\n\n\n  const [reportModal, setReportModal] = useState(false);\n  const ViewReport = (key) => {\n\n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n\n  const getAssignmentData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setAssignmentDisplay(res.data.result);\n          setAssignmentQueries(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n              \n        return (\n            <>\n                <Link\n                    to={{\n                        pathname: `/customer/my-assingment/${row.id}`,\n                        index: 0,\n                        routes: \"assignment\",\n                    }}\n                >\n                    {row.assign_no}\n                </Link>\n            </>\n        );\n    },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              {row.paid_status == \"2\" &&\n                <p>\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00\") {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Deliverable\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n     \n        return (\n          <>\n\n            {\n              row.status == \"Payment decliend\" || row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignment_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                      onClick={() => ViewReport(row)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Team Leader name and contact number, email\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: priceFormatter,\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"70px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {row.paid_status === \"2\" ? null :\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n            <div title=\"Send Message\">\n              <Link\n                to={{\n                  pathname: `/customer/chatting/${row.id}`,\n                  obj: {\n                    message_type: \"4\",\n                    query_No: row.assign_no,\n                    query_id: row.id,\n                    routes: `/customer/assignment`\n                  }\n                }}\n              >\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    color: \"blue\"\n                  }}\n                ></i>\n              </Link>\n            </div>\n\n            <div title=\"View Discussion Message\">\n              <i\n                class=\"fa fa-comments-o\"\n                style={{\n                  fontSize: 16,\n                  cursor: \"pointer\",\n                  color: \"orange\"\n                }}\n                onClick={() => ViewDiscussionToggel(row.assign_no)}\n              ></i>\n            </div>\n\n          </div>}\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  //tl,phone,email\n  function priceFormatter(cell, row) {\n   \n    if (row) {\n      return (\n        <>\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\n        </>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <CustomerFilter\n            setData={setAssignmentDisplay}\n            getData={getAssignmentData}\n            id={userId}\n            assignment=\"assignment\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignmentDisplay}\n            columns={columns}\n          />\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n            dataItem={dataItem}\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentData}\n          />\n\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllAssignment;\n\n","/home/pooja/MazarsRepo/src/views/ProposalTab/DeclinedProposal.js",["3053","3054","3055","3056","3057","3058","3059","3060","3061","3062","3063","3064","3065"],"/home/pooja/MazarsRepo/src/views/ProposalTab/AcceptedProposal.js",["3066","3067","3068","3069","3070","3071","3072","3073","3074","3075","3076","3077","3078","3079"],"/home/pooja/MazarsRepo/src/views/ProposalTab/InprogressProposal.js",["3080","3081","3082","3083","3084","3085","3086","3087","3088","3089","3090","3091","3092","3093","3094"],"/home/pooja/MazarsRepo/src/views/ProposalTab/AllProposal.js",["3095","3096","3097","3098","3099","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113"],"/home/pooja/MazarsRepo/src/views/AddFressAssignment/data.js",[],"/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressProposal.js",["3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../components/Records/Records\";\nimport CommonServices from \"../../common/common\";\nimport moment from \"moment\";\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nfunction InprogressProposal() {\n  const alert = useAlert();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [query, setQuery] = useState([]);\n  const [queriesCount, setCountQueries] = useState(null);\n  const [records, setRecords] = useState([]);\n  const [assignNo, setAssignNo] = useState('');\n\n  useEffect(() => {\n    getQueriesData();\n  }, []);\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  const getQueriesData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setQuery(res.data.result);\n          setCountQueries(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n       \n        return (\n          <>\n            <Link to={`/customer/my-assingment/${row.q_id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div className=\"completed\">\n              {row.status}\n            \n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected Delivery Date\",\n      dataField: \"exp_delivery_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        \n\n        return (\n          <>\n            {\n              row.status == \"Declined Query\"\n                ? null\n                :\n                row.status_code >= \"1\" ?\n                  CommonServices.removeTime(row.exp_delivery_date)\n                  :\n                  null\n            }\n          </>\n        )\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"130px\" };\n      },\n      formatter: function (cell, row) {\n        var dateMnsFive = moment(row.exp_delivery_date).add(15, 'day').format(\"YYYY-MM-DD\");\n              \n               \n        var curDate = moment().format(\"YYYY-MM-DD\")\n     \n        return (\n          <>\n            {\n              row.status == \"Declined Query\" ?\n                null\n                :\n                <div>\n                 \n\n                                {\n                                    row.status_code == \"4\" || 8 < parseInt(row.status_code) || row.status_code == \"2\" ?\n                                      \n                                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n\n                                            {dateMnsFive > curDate === true ?\n                                            <div title=\"Send Feedback\"\n                                            style={{\n                                                cursor: \"pointer\",\n                                            }}>\n                                            <Link\n                                                to={{\n                                                    pathname: `/customer/feedback/${row.assign_no}`,\n                                                    obj: {\n                                                        routes: `/customer/queries`\n                                                    }\n                                                }}\n                                            >\n                                                <FeedbackIcon />\n                                            </Link>\n                                        </div> : \"\"}\n                                      \n                    \n                    \n                    {/* <div title=\"View Discussion Message\">\n                      <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                          fontSize: 16,\n                          cursor: \"pointer\",\n                          color: \"orange\"\n                        }}\n                        onClick={() => ViewDiscussionToggel(row.assign_no)}\n                      ></i>\n                    </div> */}\n                  </div>\n                  :\n                  null\n              }\n            </div>\n\n        }\n      </>\n    );\n  },\n},\n  ];\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <CustomerFilter\n            setData={setQuery}\n            getData={getQueriesData}\n            id={userId}\n            InprogressQueryProposal=\"InprogressQueryProposal\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={query}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default InprogressProposal;\n","/home/pooja/MazarsRepo/src/views/QueriesTab/InprogressAllocation.js",["3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../components/Records/Records\";\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport AdditionalQueryModal from \"./AdditionalQueryModal\";\nimport Swal from \"sweetalert2\";\nimport CommonServices from \"../../common/common\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\n\nfunction InprogressAllocation() {\n\n  const alert = useAlert();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [query, setQuery] = useState([]);\n  const [queriesCount, setCountQueries] = useState(null);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [additionalQuery, setAdditionalQuery] = useState(false);\n  const additionalHandler = (key) => {\n    setAdditionalQuery(!additionalQuery);\n    setAssignNo(key)\n  };\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getQueriesData();\n  }, []);\n\n  const getQueriesData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`\n      )\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setQuery(res.data.result);\n          setCountQueries(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n           \n            <Link\n              to={{\n                pathname: `/customer/my-assingment/${row.id}`,\n                index: 1,\n                routes: \"queries\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {\n                row.status == \"Inprogress Query\" ?\n                  <div>\n                    {row.status}/\n                    <p className=\"inprogress\">\n                      {row.status_message}\n                    </p>\n                  </div>\n                  :\n                  row.status == \"Inprogress; Allocation\" ?\n                    <p>\n                      {row.status}\n                    </p>\n                    :\n                    row.status == \"Inprogress; Proposals\" ?\n                      <p>\n                        {row.status}\n                      </p>\n                      :\n                      row.status == \"Inprogress; Assignments\" ?\n                        <p>\n                          {row.status}\n                        </p>\n                        :\n                        null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected / Actual Delivery Date\",\n      dataField: \"exp_delivery_date\",\n      sort: true,\n      headerStyle: () => {\n          return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n         \n     \n          return (\n            \n              <>\n                  {\n                      row.status == \"Declined Query\"\n                          ? null\n                          :\n                          row.status_code != \"3\" && row.status_code > \"1\" ?\n                              CommonServices.removeTime(row.exp_delivery_date)\n                              :\n                              null\n                  }\n              </>\n          )\n      },\n  },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"130px\" };\n      },\n      formatter: function (cell, row) {\n        var dateMnsFive = moment(row.exp_delivery_date).add(15, 'day').format(\"YYYY-MM-DD\");\n              \n               \n        var curDate = moment().format(\"YYYY-MM-DD\")\n     \n        return (\n          <>\n            {\n              row.status == \"Declined Query\" ?\n                null\n                :\n                <div>\n                  {\n                    row.status_code == \"0\" || row.status_code == \"1\" || row.status_code == \"3\" ?\n                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                        <div title=\"Update Query\">\n                          <Link to={`/customer/edit-query/${row.id}`}>\n                            <i\n                              className=\"fa fa-edit\"\n                              style={{\n                                fontSize: 16,\n                                cursor: \"pointer\",\n                              }}\n                            ></i>\n                          </Link>\n                        </div>\n\n                        <div title=\"Delete Query\">\n                          <i\n                            className=\"fa fa-trash\"\n                            style={{\n                              fontSize: 16,\n                              cursor: \"pointer\",\n\n                            }}\n                            onClick={() => del(row.id)}\n                          ></i>\n                        </div>\n                        <div title=\"Send Message\">\n                          <Link\n                            to={{\n                              pathname: `/customer/chatting/${row.id}&type=4`,\n                              obj: {\n                                message_type: \"4\",\n                                query_No: row.assign_no,\n                                query_id: row.id,\n                                routes: `/customer/queries`\n                              }\n                            }}\n                          >\n                            <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                fontSize: 16,\n                                cursor: \"pointer\",\n                                color: \"blue\"\n                              }}\n                            ></i>\n                          </Link>\n                        </div>\n                        <div title=\"View Discussion Message\">\n                                                    <i\n                                                        class=\"fa fa-comments-o\"\n                                                        style={{\n                                                            fontSize: 16,\n                                                            cursor: \"pointer\",\n                                                            color: \"orange\"\n                                                        }}\n                                                        onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                                    ></i>\n                                                </div>\n\n                      </div> :\n                      null\n                  }\n\n                                    {\n                                        row.status_code == \"4\" || 8 < parseInt(row.status_code) || row.status_code == \"2\" ?\n                                          \n                                          <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n\n                                                {dateMnsFive > curDate === true ?\n                                                <div title=\"Send Feedback\"\n                                                style={{\n                                                    cursor: \"pointer\",\n                                                }}>\n                                                <Link\n                                                    to={{\n                                                        pathname: `/customer/feedback/${row.assign_no}`,\n                                                        obj: {\n                                                            routes: `/customer/queries`\n                                                        }\n                                                    }}\n                                                >\n                                                    <FeedbackIcon />\n                                                </Link>\n                                            </div> : \"\"}\n                                          \n                        {\n                          row.delivery_report == \"completed\" ? null :\n                            <div title=\"Upload Additional Documents\"\n                              style={{ cursor: \"pointer\" }}\n                              onClick={() => additionalHandler(row.assign_no)}\n                            >\n                              <PublishIcon color=\"secondary\" />\n                            </div>\n                        }\n                        <div title=\"Send Message\">\n                          <Link\n                            to={{\n                              pathname: `/customer/chatting/${row.id}&type=4`,\n                              obj: {\n                                message_type: \"4\",\n                                query_No: row.assign_no,\n                                query_id: row.id,\n                                routes: `/customer/queries`\n                              }\n                            }}\n                          >\n                            <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                fontSize: 16,\n                                cursor: \"pointer\",\n                                color: \"blue\"\n                              }}\n                            ></i>\n                          </Link>\n                        </div>\n\n                        <div title=\"View Discussion Message\">\n                          <i\n                            class=\"fa fa-comments-o\"\n                            style={{\n                              fontSize: 16,\n                              cursor: \"pointer\",\n                              color: \"orange\"\n                            }}\n                            onClick={() => ViewDiscussionToggel(row.assign_no)}\n                          ></i>\n                        </div>\n                      </div>\n                      :\n                      null\n                  }\n                </div>\n\n            }\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n\n  //check\n  const del = (id) => {\n   \n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to delete query ?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, deleted it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  const deleteCliente = (id) => {\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/deleteQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\n          getQueriesData();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <CustomerFilter\n            setData={setQuery}\n            getData={getQueriesData}\n            id={userId}\n            InprogressAllocation=\"InprogressAllocation\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={query}\n            columns={columns}\n            rowIndex\n          />\n\n          <AdditionalQueryModal\n            additionalHandler={additionalHandler}\n            additionalQuery={additionalQuery}\n            assignNo={assignNo}\n            getQueriesData={getQueriesData}\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getQueriesData}\n          />\n\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default InprogressAllocation;\n\n\nconst arr = [\n  { name: \"nitin\", add: \"noida\" },\n  { name: \"nitin\", add: \"noida\" },\n  { name: \"nitin\", add: \"noida\" },\n  { name: \"nitin\", add: \"noida\" },\n  { name: \"nitin\", add: \"noida\" },\n  { name: \"nitin\", add: \"noida\" },\n\n  { name: \"nitin\", add: \"noida\" },\n]","/home/pooja/MazarsRepo/src/views/QueriesTab/AllQueriesData.js",["3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178"],"/home/pooja/MazarsRepo/src/views/QueriesTab/DeclinedQueries.js",["3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3196"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../components/Records/Records\";\nimport CommonServices from \"../../common/common\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport PublishIcon from '@material-ui/icons/Publish';\n\n\n\nfunction DeclinedQueries() {\n  const alert = useAlert();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [query, setQuery] = useState([]);\n  const [queriesCount, setCountQueries] = useState(null);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getQueriesData();\n  }, []);\n\n  const getQueriesData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`\n      )\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setQuery(res.data.result);\n          setCountQueries(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n              \n        return (\n            <>\n                <Link\n                    to={{\n                        pathname: `/customer/my-assingment/${row.id}`,\n                        index: 3,\n                        routes: \"queries\",\n                    }}\n                >\n                    {row.assign_no}\n                </Link>\n            </>\n        );\n    },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected Delivery Date\",\n      dataField: \"exp_delivery_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n   \n\n        return (\n          <>\n            {\n              row.status == \"Declined Query\"\n                ? null\n                :\n                row.status_code >= \"1\" ?\n                  CommonServices.removeTime(row.exp_delivery_date)\n                  :\n                  null\n            }\n          </>\n        )\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"130px\" };\n      }\n    },\n  ];\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <CustomerFilter\n            setData={setQuery}\n            getData={getQueriesData}\n            id={userId}\n            DeclinedQuery=\"DeclinedQuery\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={query}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default DeclinedQueries;\n","/home/pooja/MazarsRepo/src/views/SignUpForm/GetOTP.js",["3197","3198","3199","3200","3201","3202","3203","3204","3205"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\n\n\n\nfunction GetOTP({ email, phone, setShow }) {\n\n    //get OTP\n    const getOtp = () => {\n\n\n\n        if (email && phone) {\n            let formData = new FormData();\n            formData.append(\"email\", email);\n            formData.append(\"phone\", phone);\n            formData.append(\"p\", \"registration\");\n\n            axios({\n                method: \"POST\",\n                url: `${baseUrl}/customers/forgototp`,\n                data: formData,\n            })\n                .then(function (response) {\n                  \n                    if (response.data.code === 1) {\n                        // setLoad(true)\n                        setShow(true)\n                        Alerts.SuccessNormal(\"OTP sent to your email address.\")\n                    } else if (response.data.code === 0) {\n                        Alerts.ErrorNormal(\"Error.\")\n\n                    }\n\n                })\n                .catch((error) => {\n                   \n                });\n        }\n    }\n\n\n    return (\n        <div>\n            <button type=\"button\" class=\"btn btn-success\" onClick={() => getOtp()}>Get OTP</button>\n        </div>\n    );\n}\n\nexport default GetOTP;","/home/pooja/MazarsRepo/src/views/SignUpForm/ResendOtp.js",["3206","3207"],"\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction ResendOtp({ invalid, wEmail, disabled, indNumError, zipError, passError, email,\n    phone, setDisabled, getTime, setLoad, loading, emailError, phoneError, zipError1, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        if (emailError === true || phoneError === true || zipError1 === true)  {\n           return false\n              }\n              else {\n                setLoading(true)\n                let formData = new FormData();\n                formData.append(\"email\", value.p_email);\n                formData.append(\"phone\", phone);\n                formData.append(\"p\", \"registration\");\n        \n                if (invalid || wEmail || indNumError || zipError || passError) {\n                    \n                    setLoad(false)\n                }\n                else {\n                    \n                    axios({\n                        method: \"POST\",\n                        url: `${baseUrl}/customers/forgototp`,\n                        data: formData,\n                    })\n                        .then(function (response) {\n                            \n                            if (response.data.code === 1) {\n                                Alerts.SuccessNormal(\"As per your request , OTP has been sent to your email address.\")\n                                setDisabled(false)\n                                getTime();\n                                setLoad(true)\n                                setLoading(false)\n                            } if (response.data.code === 0) {\n                                setLoading(false)\n                            }\n                        })\n                        .catch((error) => {\n                           \n                        });\n                    }\n                   }\n     \n        \n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n                \n                {\n                      disabled ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <div style={{ paddingTop: \"10px\" }}>\n                        <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n                    </div>\n                    }\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;\n\n\n","/home/pooja/MazarsRepo/src/views/SignUpForm/data.js",[],"/home/pooja/MazarsRepo/src/components/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/views/Login/VerifyOTP.js",["3208","3209"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { baseUrl } from \"../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\n\nconst Schema = yup.object().shape({\n    p_otp: yup.string().required(\"mandatory\"),\n});\n\n\nfunction VerifyOTP({ email, uid, time, setLoad,\n    setDisabled, disabled, loading, setLoading }) {\n    const { handleSubmit, register, errors, reset } = useForm({\n        resolver: yupResolver(Schema),\n    });\n\n    const history = useHistory();\n    const [setText, noSetText] = useState()\n\n\n    const validOtp = (e) => {\n        if (isNaN(e.target.value)) {\n            e.target.value = \"\"\n            noSetText(\"Please enter number only.\")\n        }\n    }\n\n    const onSubmit = (value) => {\n\n        setLoading(true)\n        let formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"otp\", value.p_otp);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/customers/verifyloginotp`,\n            data: formData,\n        })\n            .then(function (response) {\n               \n\n                if (response.data.code == 1) {\n                    setLoading(false)\n                    Alerts.SuccessLogin(\"Logged in successfully.\")\n                    localStorage.setItem(\"userid\", JSON.stringify(response.data.user_id));\n                    localStorage.setItem(\"custEmail\", JSON.stringify(response.data.name));\n                    history.push(\"customer/dashboard\");\n                } else {\n                    Alerts.ErrorNormal(\"Incorrect OTP\") \n                    setLoading(false)\n                    reset();\n                }\n            })\n            .catch((error) => {\n                ShowError.LoadingError(setLoading)\n            });\n    }\n\n\n    const resendOtp = () => {\n        setLoading(true)\n        noSetText(\" \")\n        let formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"uid\", uid);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/customers/regenrateotp`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"An OTP has been sent to your registered email address.\")\n                    setLoad(true)\n                    setDisabled(false)\n                }\n                else if (response.data.code === 0) {\n                    setLoading(false)\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n                }\n            })\n            .catch((error) => {\n                ShowError.LoadingError(setLoading)\n            });\n    }\n\n    return (\n\n        <div>\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                {\n                    disabled ?\n                        null\n                        :\n                        <div className=\"form-group\">\n                            <label className=\"form-label\">Enter Your OTP <span className=\"declined\">*</span></label>\n                            <input\n                                type=\"text\"\n                                className={classNames(\"form-control\", {\n                                    \"is-invalid\": errors.p_otp,\n                                })}\n                                name=\"p_otp\"\n                                ref={register({ required: true })}\n                                placeholder=\"Enter your OTP\"\n                                onChange={(e) => validOtp(e)}\n                            />\n                            <p className=\"declinedmsg\">{setText ? setText : \"\"}</p>\n                            <small class=\"text-center\">\n                                Note: OTP is valid for {time} seconds.\n                            </small>\n\n                        </div>\n                }\n\n                {\n                    loading ?\n                        <Spinner color=\"primary\" />\n                        :\n                        <div className=\"form-group\">\n                            {\n                                disabled ?\n                                    <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\n                                    :\n                                    <button type=\"submit\" className=\"btn btn-success\">\n                                        Login\n                                    </button>\n                            }\n                        </div>\n                }\n            </form>\n        </div>\n    );\n}\n\n\nexport default VerifyOTP;\n","/home/pooja/MazarsRepo/src/components/CategorySelect/CategorySelect.js",["3210","3211"],"import React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/bootstrap.min.css\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport mazars from \"../../assets/images/mazars-logo.png\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Mandatory from \"../../components/Common/Mandatory\";\n\n\nconst Schema = yup.object().shape({\n  p_tax: yup.string().required(\"\"),\n  p_tax2: yup.string().required(\"\"),\n});\n\n\nfunction CategorySelect({ addfreshbtn, startbtn }, props) {\n  const { handleSubmit, register, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const history = useHistory();\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    if (store2 && store) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n      setModal(!modal);\n    } else {\n      // alert(\"please select category and subcategory\")\n    }\n  };\n  const validation = () => {\n    toggle()\n  }\n  const validation2 = () => {\n    toggle2()\n  }\n\n  const toggle2 = () => {\n    if (store2 && store) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n      history.push(\"/customer/addFresh\");\n    }\n  };\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n      \n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n\n  useEffect(() => {\n    const getSubCategory = () => {\n     if(store.length != -1){\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n       \n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n     }\n    getSubCategory();\n  }, [store]);\n\n\n  const onSubmit = (value) => {\n\n  };\n\n  return (\n    <>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"15px\" }}\n      >\n        <div class=\"col-sm-3\" style={{ marginTop: \"38px\" }}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-group\">\n              <label>Category <span className=\"declined\">*</span></label>\n              <select\n                className=\"form-control\"\n                name=\"p_tax\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_tax,\n                })}\n                ref={register}\n                onChange={(e) => setStore(e.target.value)}\n              >\n                <option value=\"\">--Select Category--</option>\n                {tax.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n              {errors.p_tax && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_tax.message}\n                </div>\n              )}\n            </div>\n\n            <div class=\"form-group\">\n              <label>Sub Category <span className=\"declined\">*</span></label>\n              <select\n                name=\"p_tax2\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_tax2,\n                })}\n                ref={register}\n                onChange={(e) => setStore2(e.target.value)}\n              >\n                <option value=\"\">--Select Sub-Category--</option>\n                {tax2.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n              {errors.p_tax2 && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_tax2.message}\n                </div>\n              )}\n            </div>\n\n            <div class=\"form-group\">\n\n              {startbtn && (\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary  btn-block\"\n                  onClick={e => validation()} //\n                >\n                  Submit\n                </button>\n              )}\n\n              {addfreshbtn && (\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary  btn-block\"\n                  onClick={e => validation2()} //\n                >\n                  Submit\n                </button>\n              )}\n\n            </div>\n\n          </form>\n\n\n          <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>\n              <img\n                src={mazars}\n                style={{ height: \"auto\", width: \"25%\" }}\n                alt=\"\"\n              />\n            </ModalHeader>\n\n            <ModalBody>\n              <div class=\"modal-body\">\n                <h4>Would you like to post a Query ?</h4>\n              </div>\n            </ModalBody>\n\n            <div class=\"modal-footer m-auto\">\n              <Link to=\"/customer/register-yourself\" class=\"btn btn-primary\">\n                Yes\n              </Link>\n              <Link to=\"/customer/signin\" class=\"btn btn-secondary\">\n                No\n              </Link>\n            </div>\n          </Modal>\n\n        </div>\n\n      </div>\n      <Mandatory />\n    </>\n  );\n}\n\nexport default CategorySelect;\n\n","/home/pooja/MazarsRepo/src/Service/PublicRouteUser.js",[],"/home/pooja/MazarsRepo/src/Service/PrivateRouteTP.js",[],"/home/pooja/MazarsRepo/src/Service/PrivateRouteTL.js",[],"/home/pooja/MazarsRepo/src/Service/PrivateRouteAdmin.js",[],"/home/pooja/MazarsRepo/src/Service/PrivateRouteUser.js",[],"/home/pooja/MazarsRepo/src/pages/TP/EditProposal/EditProposal.js",["3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Payment from \"./Payment\";\nimport Select from \"react-select\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction EditComponent() {\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset, errors } = useForm();\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [loading, setLoading] = useState(false);\n  const [dateError, setDateError] = useState(false)\n  const [custId, setCustId] = useState(\"\");\n  const [store, setStore] = useState(null);\n  const [amount, setAmount] = useState();\n  const [date, setDate] = useState();\n  const [load, setLoad] = useState(true);\n\n  const[clearValue, setClearValue] = useState(true)\n  const [payment, setPayment] = useState([]);\n  const [installment, setInstallment] = useState([]);\n  const [error, setError] = useState('');\n  const [diserror, setdiserror] = useState(\"\")\n  const history = useHistory();\n  const { id } = useParams();\n  \n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n\n  const [proposal, setProposal] = useState({\n    query: \"\",\n    name: \"\",\n    fixed_amount: \"\",\n    payable: \"\",\n    description: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n\n  const { query, name, description, fixed_amount,\n    due_date, installment_amount } = proposal;\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n\n\n  const getQuery = () => {\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\n   \n      if (res.data.code === 1) {\n        setProposal({\n          name: res.data.result.name,\n          query: res.data.result.assign_no,\n          fixed_amount: res.data.result.amount,\n          description: res.data.result.description,\n          installment_amount: res.data.result.installment_amount,\n          due_date: res.data.result.due_date,\n        });\n\n        var payment_terms = res.data.result.payment_terms\n        var no_of_installment = res.data.result.no_of_installment\n\n        const data1 = {\n          label: payment_terms,\n          value: payment_terms,\n        }\n\n        const data2 = {\n          label: no_of_installment,\n          value: no_of_installment,\n        }\n\n      \n        setPayment(data1);\n        setInstallment(data2);\n      }\n    });\n  };\n\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      setCustId(res.data.id);\n    };\n    getUser();\n  }, [id]);\n\n\n\n\n \n  const onSubmit = (value) => {\n   \n    if(diserror.length > 0){\n      return false\n    }\n    else if(dateError === true){\n      Alerts.ErrorNormal(\"Date must be unique\")\n     }\n     else{\n\n     \n    var lumsum = value.p_inst_date\n    if (payment.label == \"lumpsum\") {\n      setDate(lumsum)\n    }\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", value.p_assingment);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tp\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"assign_id\", id);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"description\", value.description);\n    formData.append(\"amount_type\", \"fixed\");\n    formData.append(\"amount\", value.p_fixed);\n    formData.append(\"installment_amount\", amount);\n\n    formData.append(\"payment_terms\", payment.value);\n    formData.append(\"no_of_installment\", installment.value);\n\n    payment.label == \"lumpsum\" ?\n      formData.append(\"due_date\", lumsum) :\n      payment.label == \"installment\" ?\n        formData.append(\"due_date\", date) :\n        formData.append(\"due_date\", \"\")\n\n\n    if (payment.length < 1) {\n     \n     \n    } else\n      if (payment.value == \"installment\") {\n        if (installment == \"\") {\n          Alerts.ErrorNormal(`Please select no of installment .`)\n        } else\n          if (!amount || !date) {\n            Alerts.ErrorNormal(`Please enter all fields.`)\n          } else if (amount && date) {\n            \n            if (installment.value > 0) {\n              var a = Number(installment.value)\n              for (let i = 0; i < a; i++) {\n\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\n                  Alerts.ErrorNormal(`Please enter amount`)\n                  return false\n                }\n                if (date[i] == \"\" || date[i] == undefined) {\n                  Alerts.ErrorNormal(`Please enter date`)\n                  return false\n                }\n              }\n              var sum = amount.reduce(myFunction)\n              function myFunction(total, value) {\n                return Number(total) + Number(value);\n              }\n              if (value.p_fixed != sum) {\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n\n              } else {\n              \n                setLoading(true)\n                axios({\n                  method: \"POST\",\n                  url: `${baseUrl}/tp/updateProposal`,\n                  data: formData,\n                })\n                  .then(function (response) {\n                   \n                    if (response.data.code === 1) {\n                      setLoading(false)\n                      var variable = \"Proposal Updated Successfully \"\n                      Alerts.SuccessNormal(variable)\n                      history.push(\"/taxprofessional/proposal\");\n                    } else if (response.data.code === 0) {\n                      setLoading(false)\n                    }\n                  })\n                  .catch((error) => {\n                 \n                  });\n              }\n            }\n          }\n      } else if (payment.label == \"lumpsum\") {\n     \n        setLoading(true)\n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tp/updateProposal`,\n          data: formData,\n        })\n          .then(function (response) {\n           \n            if (response.data.code === 1) {\n              setLoading(false)\n              var variable = \"Proposal Updated Successfully \"\n              Alerts.SuccessNormal(variable)\n              history.push(\"/taxprofessional/proposal\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n        \n          });\n        }\n        }\n  };\n\n\n  const handleChange = (e) => {\n   \n    if (isNaN(e.target.value)) {\n      setdiserror(\"Please enter digit only\");\n    }\n    else {\n      setdiserror(\"\");\n    }\n  };\n\n\n  const paymentAmount = (data) => {\n  \n\n    var array1 = []\n    Object.entries(data).map(([key, value]) => {\n      array1.push(value)\n    });\n    setAmount(array1);\n  };\n\n  const paymentDate = (data) => {\n \n    var array2 = []\n    Object.entries(data).map(([key, value]) => {\n      array2.push(value)\n    });\n    setDate(array2);\n    if(new Set(array2).size !== array2.length){\n      setDateError(true)\n     Alerts.ErrorNormal(\"Date must be unique\")\n    }\n    else{\n      setDateError(false)\n    }\n  };\n\n  const installmentHandler = (key) => {\n    \n    setInstallment(key)\n    setClearValue(false)\n  }\n\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Edit Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n            <div style={{ display: \"flex\" }}>\n              <div class=\"col-md-6\">\n\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={query}\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fee</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_type\"\n                    onChange={(e) => setStore(e.target.value)}\n                  >\n                    <option value=\"fixed\">Fixed Price</option>\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"p_fixed\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fixed,\n                    })}\n                    ref={register({ required: true })}\n                    placeholder=\"Enter Fixed Price\"\n                    defaultValue={fixed_amount}\n                    onChange={handleChange}\n                  />\n                </div>\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\n\n                <div class=\"form-group\">\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\n                  <textarea\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    defaultValue={description}\n                    ref={register({ required: true })}\n                  ></textarea>\n                </div>\n              </div>\n\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={name}\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\n                  <Select\n                    closeMenuOnSelect={true}\n                    onChange={setPayment}\n                    value={payment}\n                    options={paymentsTerms}\n                  />\n                </div>\n\n                {payment.label == \"lumpsum\" ? (\n                  <div class=\"form-group\">\n                    <label>Due Dates</label>\n                    <input\n                      type=\"date\"\n                      name=\"p_inst_date\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_inst_date,\n                      })}\n                      ref={register({ required: true })}\n                      placeholder=\"Enter Hourly basis\"\n                      defaultValue={due_date}\n                      min={item}\n                    />\n                  </div>\n                ) :\n                  payment.label == \"installment\" ? (\n                    <div class=\"form-group\">\n                      <label>No of Installments</label>\n                      <Select\n                        closeMenuOnSelect={true}\n                        onChange={(e => installmentHandler(e))}\n                        value={installment}\n                        options={noInstallments}\n                      />\n                    </div>\n                  )\n                    : \"\"\n                }\n                {\n                  payment.label == \"lumpsum\"\n                    ?\n                    \"\"\n                    :\n                    installment_amount && due_date &&\n                    <Payment\n                      installment={installment.label}\n                      paymentAmount={paymentAmount}\n                      paymentDate={paymentDate}\n                      installment_amount={installment_amount}\n                      due_date={due_date}\n                      getQuery={getQuery}\n\n                      item={item}\n\n                    \n                      clearValue={clearValue}\n\n                    />\n                }\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-6\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" class=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n\n          <Mandatory />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditComponent;\n\nconst paymentsTerms = [\n  {\n    value: \"lumpsum\",\n    label: \"lumpsum\",\n  },\n  {\n    value: \"installment\",\n    label: \"installment\",\n  },\n];\n\nconst noInstallments = [\n  {\n    value: \"2\",\n    label: \"2\",\n  },\n  {\n    value: \"3\",\n    label: \"3\",\n  },\n  {\n    value: \"4\",\n    label: \"4\",\n  },\n];\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/ViewNotification/ViewNotification.js",["3238","3239","3240","3241","3242"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\nfunction ViewNotification() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  console.log(\"data-\", data);\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n           \n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> Sender</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                  {data.type}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/home/pooja/MazarsRepo/src/pages/TP/Recording/Recording.js",["3243","3244","3245","3246","3247","3248"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport ModalVideo from \"react-modal-video\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ReactPlayer from \"react-player\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n    Button,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { baseUrl } from \"../../../config/config\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-modal-video/scss/modal-video.scss\";\nimport ReactHlsPlayer from 'react-hls-player'\nimport RecordingFilter from \"../../../components/Search-Filter/RecordingFilter\";\nimport {Link} from \"react-router-dom\";\n// import '../../../../node_modules/react-modal-video/scss/modal-video.scss';\n\n\n\nfunction Recording() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [feedbackData, setFeedBackData] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [videoid, setVideoId] = useState(null);\n    const [records, setRecords] = useState([]);\n    const openModal = (videoContent) => {\n        setIsOpen(true);\n        setVideoId(videoContent);\n    };\n\n    useEffect(() => {\n        getRecording();\n    }, []);\n\n    const getRecording = () => {\n        axios\n            .get(`${baseUrl}/tl/callRecordingPostlist?uid=${JSON.parse(userid)}`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setFeedBackData(res.data.result);\n                    setRecords(res.data.result.length)\n                }\n            });\n    };\n    const videoIcon = {\n        display : \"flex\", \n        justifyContent : \"space-around\", \n        alignItems : \"center\"\n    }\n    const modalBox = {\n        display : \"flex\",\n        position : \"absolute\",\n        top : \"10%\",\n        left : \"0%\",\n        botttom: \"0%\", \n        right: \"0%\",\n       \n        width : \"100%\", \n        height: \"auto\"\n    }\nconst canBtn = {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"10px\",\n    left: \"90%\",\n    padding: \"20px\",\n    cursor : \"pointer\", \n    color : \"red\"\n}\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"8px\", padding : \"9px 5px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            dataField: \"created_date\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n            formatter : function formatter(cell, row){\n                let a = row.assign_id.split(\"-\")[row.assign_id.split(\"-\").length - 1]\n                return <>\n                <Link\n                to = {{\n                    pathname : `/taxprofessional/queries/${a}`,\n                    routes : \"recording\"\n                }}>\n                {row.assign_id}\n                </Link>\n                </>\n            }\n        },\n        \n\n        {\n            text: \"Participants\",\n            dataField: \"participants\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n        },\n       \n        {\n            text: \"Summary of Discussion\",\n            dataField: \"message\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"80px\" };\n            },\n        },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n                \n            },\n            formatter: function nameFormatter(cell, row) {\n             \n                var recording = row.file.split(\",\");\n                let a = 1;\n                return (\n                    <>\n                        <div>\n                            {\n                                recording.map((record) => {\n                                   return(\n                                <>\n                                <p style={videoIcon}>\n                                <span>{a++}</span>   <i\n                                    className=\"material-icons\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        color: \"red\",\n                                        fontSize: \"25px\",\n                                    }}\n                                    onClick={() => openModal(record)}\n                                >\n                                    play_circle_outline\n                                 \n                                </i>\n                                </p>\n                                </>\n                                   )\n                                })\n                            }\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n\n    return (\n        <>\n     <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n            <div style={{position:\"relative\", height : \"100vh\", overflow : \"scroll\"}}>\n                 <Card>\n                 <CardHeader>\n                     <Row>\n                         <Col md=\"7\">\n                             <CardTitle tag=\"h4\">Recording of Discussion</CardTitle>\n                         </Col>\n                         <Col md=\"5\"></Col>\n                     </Row>\n                 </CardHeader>\n                 <CardBody>\n                 <RecordingFilter\n                        setData={setFeedBackData}\n                     //    getData={getInCompleteAssingment}\n                        SearchQuery=\"SearchQuery\"\n                       setRecords={setRecords}\n                        records={records} \n                        userid = {userid}\n                        getRecording = {getRecording}\n                     /> \n                     <BootstrapTable\n                         bootstrap4\n                         keyField=\"id\"\n                         data={feedbackData}\n                         columns={columns}\n                         rowIndex\n                     />\n                 </CardBody>\n \n             </Card>\n           \n            </div>\n             \n            {isOpen === true ?\n           \n                  \n                  <div style={modalBox}>\n                  <span style={canBtn} onClick= {() => setIsOpen(false)}> <CloseIcon color=\"red\" /> </span>\n                 \n        \n           <div style={{margin: \"50px 0 0 0\"}}>\n           <ReactPlayer\n             url={videoid}\n             controls={true}\n             playing={true}\n             width='100%'\n             height='100%'\n            />\n               </div>\n             \n            </div>\n          : \"\"}\n          </Layout>\n            </>\n \n     );\n }\n export default Recording;","/home/pooja/MazarsRepo/src/pages/TP/MeetingComponent/MeetingComponent.js",["3249","3250","3251","3252"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  \n  return (\n   \n      <Meeting id={props.match.params.id} />\n  \n  );\n}\n\nexport default MeetingComponent;","/home/pooja/MazarsRepo/src/pages/TP/FeedbackTab/FeedbackTab.js",["3253","3254","3255","3256","3257"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router\";\nfunction FeedbackTab() {\n  const alert = useAlert();\nconst history = useHistory();\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [feedbackData, setFeedBackData] = useState([]);\n\n  useEffect(() => {\n    getFeedback();\n  }, []);\n\n  const getFeedback = () => {\n    axios\n      .get(`${baseUrl}/customers/getFeedback?tp_id=${JSON.parse(userid)}`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setFeedBackData(res.data.result);\n        }\n      });\n  };\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"10px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"60px\" };\n      },\n     \n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"40px\" };\n      },\n    },\n    {\n      text: \"Feedback\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"150px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            <div>\n              {\n                row.tp_read == \"0\" ?\n                  <div\n                    style={{\n                      cursor: \"pointer\",\n                      display: \"flex\", justifyContent: \"space-between\"\n                    }}\n                    onClick={() => readNotification(row.id)}\n                    title=\"unread\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                  </div>\n\n                  :\n                  <div\n                    style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\n                    title=\"read\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                  </div>\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  // readnotification\n  const readNotification = (id) => {\n\n    \n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/markReadFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          // alert.success(\"successfully read!\");\n          getFeedback()\n          history.push(\"/taxprofessional/feedback\")\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n\n  return (\n    <>\n     <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={feedbackData}\n              columns={columns}\n              rowIndex\n            />\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n","/home/pooja/MazarsRepo/src/pages/TP/Message/Message.js",["3258","3259","3260","3261","3262","3263","3264"],"/home/pooja/MazarsRepo/src/pages/TP/Chatting/Chatting.js",["3265","3266","3267","3268","3269","3270"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport Loader from \"../../../components/Loader/Loader\";\n\nconst Schema = yup.object().shape({\n  msg_type: yup.string().required(\"\"),\n  p_message: yup.string().required(\"\"),\n});\n\n\n\nfunction Chatting(props) {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"tpkey\");\n\n  const [loading, setLoading] = useState(false);\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const { message_type, query_id, query_No, routes } = data\n\n\n  useEffect(() => {\n   \n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataTL\");\n\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, []);\n\n\n\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.msg_type);\n    formData.append(\"message\", value.p_message);\n   \n    formData.append(\"sst\", \"tp\")\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          setLoading(false)\n          var variable = \"Message sent successfully.\"\n          Alerts.SuccessNormal(variable)\n          props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Loader />\n              :\n              <>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Query No.</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_query\"\n                          className=\"form-control\"\n                          ref={register}\n                          value={query_No}\n                          disabled\n                        />\n                      </div>\n\n                      <div class=\"form-group\">\n                        <label>Message Type</label>\n                        {\n                          item &&\n                          <select\n                            className={classNames(\"form-control\", {\n                              \"is-invalid\": errors.msg_type,\n                            })}\n                            name=\"msg_type\"\n                            ref={register}\n                            style={{ height: \"33px\" }}\n                            defaultValue={item}\n                          >\n                            <option value=\"\">--select--</option>\n                            <option value=\"4\">Query Discussion</option>\n                            <option value=\"2\">Proposal Discussion</option>\n                            <option value=\"5\">Payment Discussion</option>\n                            <option value=\"3\">Assignment Discussion</option>\n                            <option value=\"1\">Others</option>\n                          </select>\n                        }\n                        {errors.msg_type && (\n                          <div className=\"invalid-feedback\">\n                            {errors.msg_type.message}\n                          </div>\n                        )}\n\n                      </div>\n                      {/* <div class=\"form-group\">\n                        <label>To<span className=\"declined\">*</span></label>\n                        <select\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_to,\n                          })}\n                          name=\"p_to\"\n                          ref={register}\n                          style={{ height: \"33px\" }}\n                        >\n                          <option value=\"\">--select--</option>\n                          <option value=\"customer\">Customer</option>\n                          <option value=\"tl\">Team Leader</option>\n                          <option value=\"both\">Both</option>\n                        </select>\n                        {errors.p_to && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_to.message}\n                          </div>\n                        )}\n                      </div> */}\n\n                      <div class=\"form-group\">\n                        <label>Message<span className=\"declined\">*</span></label>\n                        <textarea\n                          className={classNames(\"form-control\", {\n                            \"is-invalid\": errors.p_message,\n                          })}\n                          placeholder=\"Message text here\"\n                          rows=\"5\"\n                          ref={register}\n                          name=\"p_message\"\n                        ></textarea>\n                        {errors.p_message && (\n                          <div className=\"invalid-feedback\">\n                            {errors.p_message.message}\n                          </div>\n                        )}\n                      </div>\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Send\n                      </button>\n                    </div>\n                  </div>\n                </form>\n                <Mandatory />\n              </>\n          }\n        </CardBody>\n\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Chatting;\n","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Schedule.js",["3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Recording from \"../Recording/Recording\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\nimport \"../../Admin/AdminStyle/style.css\";\nfunction Schedule() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n      backgroundColor: \"grey\",\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n    const myStyle2 = {\n      padding: \"12px\",\n      borderRadius: \"50px\",\n      width: \"200px\",\n      textAlign: \"center\",\n      backgroundColor: \"blue\",\n      color: \"white\",\n      cursor: \"pointer\",\n    };\n  \n    return (\n      <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n     <Demo />\n    </Layout>\n    );\n}\n\nexport default Schedule;","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/PaymentStatus.js",["3286","3287","3288","3289"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllPayment from \"./AllPayment\";\nimport Unpaid from \"./Unpaid\";\nimport Paid from \"./Paid\";\n\n\n\nfunction QueriesTab(props) {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n  const [allPayment, setAllPayment] = useState(\"\");\n  const [paid, setPaid] = useState(\"\");\n  const [unpaid, setUnpaid] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllPaid();\n    getPaid();\n    getUnpaid();\n  }, []);\n\n\n  const getAllPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}`)\n      .then((res) => {\n        \n        setAllPayment(res.data.result.length);\n      });\n  };\n\n  const getPaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}&status=1`)\n      .then((res) => {\n        \n        setPaid(res.data.result.length);\n      });\n  };\n\n  const getUnpaid = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userId)}&status=2`)\n      .then((res) => {\n        \n        setUnpaid(res.data.result.length);\n      });\n  };\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Payment ({allPayment})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Unpaid ({paid})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Paid ({unpaid})\n            </Tab>\n\n          </TabList>\n\n          <TabPanel>\n            <AllPayment />\n          </TabPanel>\n\n          <TabPanel>\n            <Unpaid />\n          </TabPanel>\n\n          <TabPanel>\n            <Paid />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/AddAssingmentStages/AddAssingmentStages.js",["3290","3291","3292","3293","3294","3295","3296","3297","3298","3299","3300","3301","3302","3303"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport {\n\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nfunction AddAssingmentStages() {\n\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [assignmentStages, setAssignmentstages] = useState([]);\n  const [clientDiscussion, setClientDiscussion] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}&uid=${JSON.parse(userid)}`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setAssignmentstages(res.data.result);\n          reset(res.data.result[0]);\n          setClientDiscussion(res.data.result[0].client_discussion)\n        }\n      });\n  };\n\n  const onSubmit = (value) => {\n \n    if(assignmentStages[0].paid_status=='0' && value.other_stage=='completed')\n    {    \n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Query no- \"+assignmentStages[0].assign_no+\" payment is due,Do you still want to process to complete this query !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes\",\n    }).then((result) => {\n      if (result.value === true) {\n        setLoading(true)\n\n        let formData = new FormData();\n    \n        formData.append(\"q_id\", id);\n        formData.append(\"user_id\", JSON.parse(userid));\n        formData.append(\"stage_1_status\", value.client_discussion);\n        formData.append(\"stage_2_status\", value.draft_report);\n        formData.append(\"stage_3_status\", value.final_discussion);\n        formData.append(\"stage_4_status\", value.delivery_report);\n        formData.append(\"stage_5_status\", value.other_stage);\n    \n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tl/postAssignmentStages`,\n          data: formData,\n        })\n          .then(function (response) {\n          \n            if (response.data.code === 1) {\n              setLoading(false)\n              Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\n              getAssignmentList();\n              history.push(\"/taxprofessional/assignment\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n        \n          });\n     \n      }\n      else{\n        history.push(\"/taxprofessional/assignment\");\n        return false\n      }\n    });\n\treturn false;\n    }\n    else{\n      setLoading(true)\n\n      let formData = new FormData();\n  \n      formData.append(\"q_id\", id);\n      formData.append(\"user_id\", JSON.parse(userid));\n      formData.append(\"stage_1_status\", value.client_discussion);\n      formData.append(\"stage_2_status\", value.draft_report);\n      formData.append(\"stage_3_status\", value.final_discussion);\n      formData.append(\"stage_4_status\", value.delivery_report);\n      formData.append(\"stage_5_status\", value.other_stage);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/postAssignmentStages`,\n        data: formData,\n      })\n        .then(function (response) {\n       \n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"Assignment Stage updated successfully.\")\n            getAssignmentList();\n            history.push(\"/taxprofessional/assignment\");\n          } else if (response.data.code === 0) {\n            setLoading(false)\n          }\n        })\n        .catch((error) => {\n        \n        });\n    \n    }\n     \n    \n  };\n\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Assignment Stages</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            {assignmentStages.map((p, i) => (\n              <>\n                {p.client_discussion == \"completed\" &&\n                  p.delivery_report == \"completed\" &&\n                  p.draft_report == \"completed\" &&\n                  p.final_discussion == \"completed\" &&\n                  p.other_stage == \"completed\" ? (\n                  <div class=\"col-md-12\">\n                    <div class=\"col-md-8\">\n                      <br />\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Client Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.client_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Draft Report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.draft_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Final Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.final_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Delivery of report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.delivery_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Awaiting Completion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.other_stage}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <br />\n                        <div class=\"form-group\">\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary\"\n                            disabled\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                ) : (\n                  <div class=\"col-md-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Client Discussion\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"client_discussion\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              \n                            </select>\n                          </div>\n                        </div>\n\n                        {/* <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div>\n                              <Link\n                                to={{\n                                  pathname: `/teamleader/assignment-form/${p.assign_id}`,\n                                  clients:`${clientDiscussion}`,\n                                }}\n                              >\n                                View Details\n                              </Link>\n                            \n                            </div>\n                          </div>\n                        </div> */}\n\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Draft Report\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"draft_report\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                             \n                            </select>\n                          </div>\n                        </div>\n                        {/* <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div>\n                              <Link\n                                to={`/teamleader/view-report/${p.assign_no}`}\n                              >\n                                View Report\n                              </Link>\n                            </div>\n                          </div>\n                        </div> */}\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Final Discussion\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"final_discussion\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              \n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Delivery of report\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"delivery_report\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                             \n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Awaiting Completion\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"other_stage\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <br />\n                      <div class=\"form-group\">\n                        {\n                          loading ?\n                            <Spinner color=\"primary\" />\n                            :\n                            <button type=\"submit\" class=\"btn btn-primary\">\n                              Submit\n                            </button>\n                        }\n                      </div>\n                    </form>\n                  </div>\n                )}\n              </>\n            ))}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddAssingmentStages;\n","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AssignmentTab.js",["3304","3305","3306","3307"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\n\nimport AllAssignment from \"./AllAssignment\";\nimport DraftReportTab from \"./DraftReportTab\";\nimport DeliveryFinalTab from \"./DeliveryFinalTab\";\n\n\n\nfunction QueriesTab(props) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n\n  const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\n  const [draft, setDraft] = useState(\"\");\n  const [final, setFinal] = useState();\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n\n  useEffect(() => {\n\n    const AllAssignment = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setAllAssignmentCount(res.data.result.length);\n          }\n        });\n    };\n\n    const getDraftReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setDraft(res.data.result.length);\n          }\n        });\n    };\n\n    const getFinalReports = () => {\n      axios\n        .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setFinal(res.data.result.length);\n          }\n        });\n    };\n\n    AllAssignment();\n    getDraftReports();\n    getFinalReports();\n  }, []);\n\n\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Assignments ({allAssignmentCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Draft Reports ({draft})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Inprogress; Delivery of Final ({final})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllAssignment />\n          </TabPanel>\n\n          <TabPanel>\n            <DraftReportTab />\n          </TabPanel>\n\n          <TabPanel>\n            <DeliveryFinalTab />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n","/home/pooja/MazarsRepo/src/pages/TP/ForgetPassword/ForgetPassword.js",["3308","3309","3310","3311","3312"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n// import NewPassword from \"../NewPassword/NewPassword\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\n\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const onSubmit = (value) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          Swal.fire({\n            \"title\" : \"success\", \n            \"html\" : \"otp send your email !\",\n            \"icon\" : \"success\"\n          })\n        \n          props.history.push(`/taxprofessional/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n         \n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"null\") {\n    \n    } else {\n      return item\n    }\n  }\n\n  return (\n    <>\n      <Header mtp=\"mtp\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"text\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_email,\n                })}\n                name=\"p_email\"\n                ref={register}\n                placeholder=\"Enter Email\"\n                defaultValue={valueHandler()}\n              />\n              {errors.p_email && (\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n\n          </form>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/home/pooja/MazarsRepo/src/pages/TP/NewPassword/NewPassword.js",["3313","3314","3315","3316","3317","3318"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport ResendOtp from \"./ResendOtp\";\nimport { Spinner } from \"reactstrap\";\nimport { localeData } from \"moment\";\n\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [loading, setLoading] = useState(false);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [load, setLoad] = useState(true);\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  useEffect(() => {\n    getTime()\n  }, [load]);\n\n\n  const getTime = () => {\n    var timerOn = true;\n    function timer(remaining) {\n      var s = remaining % 60;\n      s = s < 10 ? '0' + s : s;\n      setTime(remaining)\n      remaining -= 1;\n      if (remaining >= 0 && timerOn) {\n        setTimeout(function () {\n          timer(remaining);\n        }, 1000);\n        return;\n      }\n      setDisabled(true)\n    }\n    setLoad(false)\n    timer(180);\n  }\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n    formData.append(\"otp\", value.p_code);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          var variable = \"Password changed successfully.\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          props.history.push(\"/taxprofessional/login\");\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Please enter correct details\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n        <div className=\"form\">\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"heading\">\n              <h2>Reset Password</h2>\n            </div>\n            <div className=\"row\">\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address.\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    name=\"p_password\"\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      pattern: {\n                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/,\n                        message:\n                          \"Password should be of minimum 8 Characters, including at least 1 upper case, lower case, special character and number.\",\n                      },\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password<span className=\"declined\">*</span></label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    autocomplete=\"off\"\n                    ref={register({\n                      required: true,\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"Password doesn't match.\",\n                    })}\n                    onPaste={((e) => {\n                      e.preventDefault();\n                      return false;\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter OTP\"\n                    autocomplete=\"off\"\n                    ref={register({ required: true })}\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                </div>\n              </div>\n            </div>\n\n            {\n              loading ?\n                <div class=\"col-md-12\">\n                  <Spinner color=\"primary\" />\n                </div>\n                :\n                <div>\n                  {\n                    disabled ?\n                      \"\"\n                      :\n                      <div>\n                        <button type=\"submit\" className=\"btn btn-primary\" >\n                          Submit\n                        </button>\n                        <Cancel />\n                      </div>\n                  }\n                </div>\n            }\n\n          </form>\n\n          {\n            disabled ?\n              <ResendOtp id={id}  setLoad={setLoad} setDisabled={setDisabled} getTime={getTime} setLoading={setLoading} />\n              :\n              null\n          }\n\n          <span className=\"declined\">*Mandatory</span>\n\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default NewPassword;\n\n\n\n\nconst Cancel = () => {\n  return (\n    <>\n      <Link to=\"/teamleader/forget-password\" style={{ \"margin\": \"10px\" }}>\n        <button type=\"submit\" className=\"btn btn-secondary\">\n          Cancel\n        </button>\n      </Link>\n    </>\n  );\n}","/home/pooja/MazarsRepo/src/pages/TP/Dashboard/Dashboard.js",["3319","3320","3321","3322"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\n\nfunction Dashboard() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [allQueries, setAllQueries] = useState({\n    total: '',\n    inprogress_queries: '',\n    inprogress_allocation: '',\n    inprogress_proposal: '',\n    inprogress_assignment: '',\n    complete_query: '',\n    declined_queries: '',\n    admin_declined_query: '',\n    customer_declined_Query: '',\n    customer_declined_proposal: '',\n    Customer_declined_payment: '',\n\n    allproposal: '',\n    accepted_proposals: '',\n    InProgress: '',\n    inprogress_preparation: '',\n    inprogress_acceptance: '',\n    declined: '',\n  });\n\n\n  const [assignment, setAssignment] = useState({\n    inprogress: '',\n    complete: '',\n    client_discussion: '',\n    draft_report: '',\n    final_discussion: '',\n    final_report: '',\n    complete_inprocess: '',\n    customer_declined_payment: ''\n  });\n\n  const [payment, setPayment] = useState({\n    paid: '',\n    unpaid: '',\n    totalpayment: '',\n  });\n\n  const { total, inprogress_queries,\n    inprogress_allocation, inprogress_proposal,\n    inprogress_assignment, complete_query,\n    declined_queries, admin_declined_query,\n    customer_declined_Query, customer_declined_proposal,\n    Customer_declined_payment,\n    allproposal,\n    inprogress_preparation,\n    declined, inprogress_acceptance,\n    accepted_proposals, InProgress } = allQueries;\n\n\n  const {\n    inprogress,\n    complete, client_discussion, draft_report, final_discussion,\n    final_report, complete_inprocess,\n    customer_declined_payment } = assignment;\n\n  const {\n    paid,\n    unpaid,\n    totalpayment } = payment;\n\n\n  useEffect(() => {\n\n    const getAllQueries = () => {\n      axios\n        .get(`${baseUrl}/tp/totalComplete?tp_id=${JSON.parse(userid)}`)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setAllQueries({\n              total: response.data.result.total,\n              inprogress_queries: response.data.result.inprogress_queries,\n              inprogress_allocation: response.data.result.inprogress_allocation,\n              inprogress_proposal: response.data.result.inprogress_proposal,\n              inprogress_assignment: response.data.result.inprogress_assignment,\n              complete_query: response.data.result.complete_query,\n              declined_queries: response.data.result.declined_queries,\n              admin_declined_query: response.data.result.admin_declined_query,\n              customer_declined_Query: response.data.result.customer_declined_Query,\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\n\n              allproposal: response.data.result.proposal.allproposal,\n              InProgress: response.data.result.proposal.InProgress,\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\n            })\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n\n    const getAssignment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsCount?tp_id=${JSON.parse(userid)}`)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setAssignment({\n              inprogress: response.data.result.inprogress,\n              complete: response.data.result.complete,\n              client_discussion: response.data.result.client_discussion,\n              draft_report: response.data.result.draft_report,\n              final_discussion: response.data.result.final_discussion,\n              final_report: response.data.result.final_report,\n              complete_inprocess: response.data.result.complete_inprocess,\n              customer_declined_payment: response.data.result.customer_declined_payment,\n            })\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n\n    const getPayment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount?tp_id=${JSON.parse(userid)}`)\n        .then((response) => {\n       \n          if (response.data.code === 1) {\n            setPayment({\n              paid: response.data.result.paid,\n              unpaid: response.data.result.unpaid,\n              totalpayment: response.data.result.totalpayment,\n            })\n          }\n        })\n        .catch((error) => {\n         \n        });\n    };\n\n    getAllQueries();\n    getPayment();\n    getAssignment();\n  }, []);\n\n\n\n  var todaysDate = new Date();\n  \n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n\n      <div className=\"row\">\n\n\n        <div className=\"col-md-3 content_header\">\n          <table className=\"table table-striped first main_table\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">All Queries</th>\n                <th>{total}</th>\n              </tr>\n            </thead>\n          </table>\n          <table className=\"table table-striped second main_table\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">Inprogress; Queries</th>\n                <th>{inprogress_queries}</th>\n              </tr>\n            </thead>\n\n            <tbody className=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Inprogress; Allocation</td>\n                <td>{inprogress_allocation}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Inprogress; Proposals</td>\n                <td>{inprogress_proposal}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Inprogress; Assignments</td>\n                <td>{inprogress_assignment}</td>\n              </tr>\n            </tbody>\n          </table>\n\n\n          <table className=\"table table-striped third main_table\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">Completed; Queries</th>\n                <th>{complete_query}</th>\n              </tr>\n            </thead>\n            <tbody className=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Completed; Assignments</td>\n                <td>{complete_query}</td>\n              </tr>\n            </tbody>\n          </table>\n\n\n          <table className=\"table table-striped forth main_table\">\n            <thead className=\"query_thead\">\n              <tr>\n                <th className=\"left_side\">Declined; Queries</th>\n                <th>{declined_queries}</th>\n              </tr>\n            </thead>\n\n            <tbody className=\"table_body\">\n              {/* <tr>\n                <td className=\"left_side\">Admin Declined; Queries</td>\n                <td>{admin_declined_query}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\"> Customer Declined; Queries</td>\n                <td>{customer_declined_Query}</td>\n              </tr> */}\n              <tr>\n                <td className=\"left_side\">Customer Declined; Proposals</td>\n                <td>{customer_declined_proposal}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Customer Declined; Payment</td>\n                <td>{Customer_declined_payment}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"col-md-3 content_header\">\n\n          <table className=\"table table-striped fifth main_table\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">All Proposals</th>\n                <th>{allproposal}</th>\n\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped sixth main_table\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">Inprogress; Proposals</th>\n                <th>{InProgress}</th>\n              </tr>\n            </thead>\n            <tbody classNameName=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Inprogress; Preparation</td>\n                <td>{inprogress_preparation}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Inprogress; Acceptance</td>\n                <td>{inprogress_acceptance}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <table className=\"table table-striped seventh main_table\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">Accepted; Proposals </th>\n                <th>{accepted_proposals}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped eight main_table\">\n            <thead className=\"proposal_thead\">\n              <tr>\n                <th className=\"left_side\">Customer Declined; Proposals</th>\n                <th>{declined}</th>\n              </tr>\n            </thead>\n          </table>\n\n\n        </div>\n\n        <div className=\"col-md-3 content_header\">\n          <table className=\"table table-striped ninth main_table\">\n            <thead className=\"assignment_thead\">\n              <tr>\n                <th className=\"left_side\">All Assignments</th>\n                <th>{inprogress + complete + +(customer_declined_payment)}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped tenth main_table\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Inprogress; Assignments</th>\n                <th>{inprogress}</th>\n              </tr>\n            </thead>\n\n            <tbody classNameName=\"table_body\">\n              <tr>\n                <td className=\"left_side\">Client Discussion</td>\n                <td>{client_discussion}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Draft Reports</td>\n                <td>{draft_report}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Final Discussion</td>\n                <td>{final_discussion}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Delivery of Final Reports</td>\n                <td>{final_report}</td>\n              </tr>\n              <tr>\n                <td className=\"left_side\">Awaiting Completion</td>\n                <td>{complete_inprocess}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <table className=\"table table-striped tenth main_table\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Completed; Assignments</th>\n                <th>{complete}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped tenth main_table\">\n            <thead className=\"assignment_thead\">\n\n              <tr>\n                <th className=\"left_side\">Customer Declined; Payment</th>\n                <th>{customer_declined_payment}</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n\n\n        <div className=\"col-md-3 content_header\">\n\n          <table className=\"table table-striped twelvth main_table\">\n            <thead className=\"payment_thead\">\n              <tr>\n                <th className=\"left_side\">All Payments</th>\n                <th>{totalpayment}</th>\n              </tr>\n            </thead>\n          </table>\n          <table className=\"table table-striped thirteen main_table\">\n            <thead className=\"payment_thead2\">\n              <tr>\n                <th className=\"left_side\">Paid</th>\n                <th>{paid}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table className=\"table table-striped thirteen main_table\">\n            <thead className=\"payment_thead2\">\n              <tr>\n                <th className=\"left_side\">Unpaid</th>\n                <th>{unpaid}</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n      </div>\n\n\n    </Layout>\n  );\n}\n\nexport default Dashboard;","/home/pooja/MazarsRepo/src/pages/TP/ChangePassword/ChangePassword.js",["3323","3324","3325","3326","3327","3328","3329","3330"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\n// import \"../../assets/css/style.css\";\n// import \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_password: yup.string().required(\"required password\"),\n//   p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n\nfunction ChangePassword(props) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const alert = useAlert();\n  // const { handleSubmit, register, reset, errors } = useForm({\n  //   resolver: yupResolver(Schema),\n  // });\n\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const [error, setError] = useState(\"\");\n  const onSubmit = (value) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"rpassword\", value.confirm_password);\n\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/customers/passChange`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //   \n    //     if (response.data.code === 1) {\n    //       alert.success(\"change password successfully!\");\n    //       reset();\n    //     } else if (response.data.code === 0) {\n    //       \n\n    //       Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n    //       reset();\n    //     }\n    //   })\n    //   .catch((error) => {\n    //    \n    //   });\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Change Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email </label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email,\n                  })}\n                  name=\"p_email\"\n                  placeholder=\"Enter email id\"\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\",\n                    },\n                  })}\n                />\n                {errors.p_email && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_email.message}{\" \"}\n                  </div>\n                )}\n              </div>\n\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_password,\n                })}\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                    message:\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                  },\n                })}\n              />\n              {errors.p_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_password.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_confirm_password,\n                })}\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  validate: (value) =>\n                    value === getValues(\"p_password\") ||\n                    \"password doesn 't match\",\n                })}\n              />\n              {errors.p_confirm_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_confirm_password.message}\n                </div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/SendProposal.js",["3331","3332"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {  useParams } from \"react-router-dom\";\nimport ProposalComponent from \"./ProposalComponent\";\n\n\nfunction SendProposal() {\n    const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tpkey\");\n  console.log(\"userid\", userid)\n  return (\n    <>\n   <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n        <ProposalComponent id={id}/>\n      </Layout>\n    </>\n  );\n}\n\nexport default SendProposal;\n","/home/pooja/MazarsRepo/src/pages/Admin/ViewProposal/ViewComponent.js",["3333","3334","3335","3336","3337","3338"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\n\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\n\n\n  return (\n    <div>\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{viewData.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Name of Team Leader</th>\n                <td>{viewData.tl_name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date of Allocation</th>\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposed Amount</th>\n                <td>{viewData.ProposedAmount}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Status</th>\n                <td>\n                  {\n                    viewData.status == \"Inprogress\" ?\n                      <div>\n                        {viewData.status}/\n                        <p className=\"inprogress\">\n                          {viewData.statusdescription}\n                        </p>\n                      </div>\n                      :\n                      viewData.status == \"Declined; Proposal\" ?\n                        <div>\n                          {viewData.status}\n                          <p className=\"declined\">\n                            {viewData.statusdescription}\n                          </p>\n                        </div> :\n                        viewData.status == \"Accepted; Proposal\" ?\n                          <div>\n                            {viewData.status}\n                            <p className=\".completed{\">\n                              {viewData.statusdescription}\n                            </p>\n                          </div> :\n                          null\n                  }\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ViewComponent;\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ProposalTab.js",["3339","3340","3341","3342","3343"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllProposal from \"./AllProposal\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport AcceptedProposal from \"./AcceptedProposal\";\nimport DeclinedProposal from \"./DeclinedProposal\";\n\n\n\n\nfunction ProposalTab(props) {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [tabIndex, setTabIndex] = useState(0);\n\n\n    const [allProposal, setAllProposal] = useState(\"\");\n    const [inprogressProposal, setInprogressProposal] = useState(\"\");\n    const [acceptedProposal, setAcceptedProposal] = useState(\"\");\n    const [declinedProposal, setDeclinedProposal] = useState(\"\");\n\n\n\n\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n\n\n    useLayoutEffect(() => {\n        setTabIndex(props.location.index || 0);\n    }, [props.location.index]);\n\n\n\n    useEffect(() => {\n\n        const AllProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAllProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const InprogressProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=1`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setInprogressProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const AcceptedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=2`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setAcceptedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        const DeclinedProposal = () => {\n            axios\n                .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=3`)\n                .then((response) => {\n                   \n                    if (response.data.code === 1) {\n                        setDeclinedProposal(response.data.result.length);\n                    }\n                })\n        };\n\n        AllProposal();\n        InprogressProposal();\n        AcceptedProposal();\n        DeclinedProposal();\n    }, []);\n\n\n\n    return (\n        <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n            <div>\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                            All Proposals ({allProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                            Inprogress; Proposals ({inprogressProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n                            Accepted; Proposals ({acceptedProposal})\n                        </Tab>\n                        <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n                            Customer Declined; Proposals ({declinedProposal})\n                        </Tab>\n                    </TabList>\n\n                    <TabPanel>\n                        <AllProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <InprogressProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <AcceptedProposal />\n                    </TabPanel>\n                    <TabPanel>\n                        <DeclinedProposal />\n                    </TabPanel>\n                </Tabs>\n            </div>\n        </Layout>\n    );\n}\n\nexport default ProposalTab;\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/QueriesTab.js",["3344","3345","3346","3347","3348","3349"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\nimport CompleteData from \"../CompleteData/CompleteData\";\nimport DeclinedQuery from \"../DeclinedQuery/DeclinedQuery\";\nimport AllQuery from \"./AllQuery\";\n\n\n\nfunction QueriesTab(props) {\n  \n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setcomplete] = useState(\"\");\n\n  const [allQuery, setAllQuery] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n  useEffect(() => {\n    const AllQuery = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setAllQuery(res.data.result.length);\n          }\n        });\n    };\n\n    const getPendindForAccepttence = () => {\n      axios\n        .get(`${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(userid)}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setPendingForAcceptence(res.data.result.length);\n          }\n        });\n    };\n\n    const getIncomplete = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=1`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setIncomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const getComplete = () => {\n     \n      axios\n     \n        .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=2`)\n        .then((res) => {\n    \n          if (res.data.code === 1) {\n         \n            setcomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const Declined = () => {\n   \n      axios\n        .get(`${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setDeclined(res.data.result.length);\n          }\n        });\n    };\n\n    getPendindForAccepttence();\n    getIncomplete();\n    getComplete();\n    AllQuery();\n    Declined()\n  }, []);\n\n  const updateTab = (key) => {\n    setTabIndex(key)\n  }\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Query ({allQuery})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Pending For Acceptence ({pendindForAccepttence})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Inprogress; Queries ({incomplete})\n            </Tab>\n            {/* <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n            Pending for assignment({complete})\n            </Tab> */}\n            {/* <Tab style={tabIndex == 4 ? myStyle2 : myStyle1}>\n              Declined; Queries ({declined})\n            </Tab> */}\n          </TabList>\n\n\n          <TabPanel>\n            <AllQuery\n            />\n          </TabPanel>\n          <TabPanel>\n            <PendingForAcceptence\n              updateTab={updateTab}\n            />\n          </TabPanel>\n          <TabPanel>\n            <InCompleteData\n            />\n          </TabPanel>\n          <TabPanel>\n            <CompleteData\n            />\n          </TabPanel>\n          <TabPanel>\n            <DeclinedQuery\n            />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n ","/home/pooja/MazarsRepo/src/views/SignUpForm/city.js",[],"/home/pooja/MazarsRepo/src/pages/TP/QueriesRecevied/QueriesRecevied.js",["3350","3351"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\nimport moment from 'moment';\nfunction QueriesRecevied(props) {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [tlName2, setTlname] = useState();\n  const[tp22, setTp22] = useState();\n  const [tpStatus, setTpstatus] = useState();\n  const [accept, setAccept] = useState();\n  const [finalDate, setFinalDate] = useState()\n  const [qstatus, setqStatus] = useState();\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tpname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\n\n        if (res.data.code === 1) {\n          setqStatus(res.data.result[0].query_status)\n          setTpstatus(res.data.result[0].tp_status);\n          setAccept(res.data.result[0].query_status)\n          setTlname(res.data.result[0].tlname);\n          setTp22(res.data.result[0].tpname);\n          if(res.data.history_queries[0] === undefined){\n\n          }\n          else{\n            setDisplayHistory({\n              tlname: res.data.proposal_queries,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n            let a = moment(res.data.result[0].final_date);\n            let b = moment(res.data.history_queries[0].acpt_reject_time)\n            let c = a.diff(b)\n            let d = moment.duration(c)\n            let finalDate = d.days() + 1;\n           setFinalDate(finalDate)\n          }\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setPaymentDetails(res.data.payment_detail);\n          setAssingmentNo(res.data.result[0].assign_no);\n          setFeedback(res.data.feedback_detail);\n          setReports(res.data.reports);\n\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n        \n          \n          try {\n           \n            var myYear = JSON.parse(assementItem);\n           \n            setYear(myYear);\n          } catch (e) {\n           \n          }\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            \n            setPurpose(myPurpose);\n           \n          } catch (e) {\n           \n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n            });\n            \n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          // if (res.data.history_queries.length > 0) {\n          //   setDisplayHistory({\n          //     tlname: res.data.history_queries[0].tname,\n          //     date_of_allocation:\n          //       res.data.history_queries[0].date_of_allocation,\n          //   });\n          // }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n  if(assingNo === undefined){\n    return false\n  }\n  else{\n    axios\n    .get(`${baseUrl}/tp/GetAdditionalQueries?assignno=${assingNo}`)\n    .then((res) => {\n     \n      if (res.data.code === 1) {\n        setDisplayQuery(res.data.result);\n      }\n    });\n  }\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"schedule\">\n            <h3>Query Detail</h3>\n          </div>\n        </div>\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n            <div\n              class=\"card-header\"\n              id=\"headingOne\"\n              style={{ padding: \".5rem .1rem\" }}\n            >\n              <h2 class=\"mb-0 query ml-3\">\n              <Link\n                  to={{\n                    pathname: `/taxprofessional/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              </h2>\n            </div>\n            {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                getQuery={getQuery}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n                accept = {accept}\n                tpStatus={tpStatus}\n                tlName2={tlName2}\n                tp22 = {tp22}\n                finalDate={finalDate}\n                qstatus={qstatus}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n","/home/pooja/MazarsRepo/src/pages/TP/Login/Login.js",["3352","3353"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport VerifyOtpLogin from \"./VerifyOtpLogin\";\nimport { Spinner } from \"reactstrap\";\nimport {useHistory} from 'react-router-dom';\nimport Cookies from \"js-cookie\";\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction Login(props) {\n  const alert = useAlert();\n  let history = useHistory()\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [email, setEmail] = useState(null);\n  const [show, setShow] = useState(false);\n  const [uid, setUid] = useState('')\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n \n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\", \"tp\");\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/login`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          Cookies.set(\"tpName\", response.data.display_name)\n          setLoading(false)\n          setShow(true)\n          Swal.fire({\n            \"title\" : \"success\", \n            \"html\" : \"As per your request, OTP has been sent to your registered email address.\",\n            \"icon\" : \"success\"\n          })\n          // Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setUid(response.data[\"user id\"])\n          logout()\n        } else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Invalid email or password.\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n  const logout = () => {\n    setTimeout(() => {\n      localStorage.removeItem(\"adminkey\");\n      localStorage.removeItem(\"adminEmail\");\n      history.push(\"/taxprofessional/login\");\n    }, 36000000)\n  }\n  const handleChange = (e) => {\n   \n    setEmail(e.target.value);\n  };\n\n  return (\n    <>\n      <Header mtp=\"mtp\" />\n      <div class=\"container\">\n\n        {\n          show ? <div>\n            <VerifyOtpLogin email={email} uid={uid}\n              loading={loading}\n              setLoading={setLoading} />\n          </div>\n            :\n            <div class=\"form\">\n              <div class=\"heading\">\n                <h2>TAX PROFESSIONAL LOGIN</h2>\n              </div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                        placeholder=\"Enter Email\"\n                        autocomplete=\"off\"\n                        onChange={(e) => handleChange(e)}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"col-md-12\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n                      <input\n                        type={isPasswordShow ? \"text\" : \"password\"}\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.password,\n                        })}\n                        name=\"password\"\n                        placeholder=\"Enter Password\"\n                        ref={register}\n                        onCopy={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                        onPaste={(e) => {\n                          e.preventDefault();\n                          return false\n                        }}\n                      />\n                      <i\n                        className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                        onClick={togglePasssword}\n                      />\n                      {errors.password && (\n                        <div className=\"invalid-feedback\">\n                          {errors.password.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                {\n                  loading ?\n                    <div class=\"col-md-12\">\n                      <Spinner color=\"primary\" />\n                    </div>\n                    :\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                }\n\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n                  <Link\n                    to={{\n                      pathname: \"/taxprofessional/forget-password\",\n                      email: `${email}`,\n                    }}\n                  >\n                    Forgot Password\n                  </Link>\n                </div>\n\n                <Mandatory />\n              </form>\n            </div>\n        }\n\n\n      </div>\n      <Footer />\n    </>\n  );\n}\nexport default Login;","/home/pooja/MazarsRepo/src/pages/TP/Start/Start.js",[],"/home/pooja/MazarsRepo/src/pages/TL/MeetingComponent/MeetingComponent.js",["3354","3355","3356","3357"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const tlEmail = window.localStorage.getItem(\"tlkey\");\n\n  return (\n   \n      <Meeting id={props.match.params.id} \n      tlEmail = {tlEmail}/>\n \n  );\n}\n\nexport default MeetingComponent;","/home/pooja/MazarsRepo/src/views/AssignmentTab/ViewAllReport.js",["3358","3359","3360","3361","3362","3363","3364","3365","3366","3367","3368","3369","3370","3371","3372","3373","3374","3375","3376","3377","3378"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport CommonServices from \"../../common/common\";\nimport RejectedModal from \"./RejectModal\";\nimport DiscardReport from \"./DiscardReport\";\nimport Assignmodal from \"./Assignmodal\";\nimport PublishIcon from '@material-ui/icons/Publish';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  getPendingforAcceptance,\n  dataItem\n}) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const [data, setData] = useState([]);\n  const [docData, setDocData] = useState({});\n  const [additionalQuery, setAdditionalQuery] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  const [nestedModal, setNestedModal] = useState(false);\n  const [modaldoc, setModaldoc] = useState({})\n  const toggleNested = (key) => {\n    setNestedModal(!nestedModal);\n    setDocData(key)\n  }\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n  }\n\n  useEffect(() => {\n    getData();\n  }, [report]);\n\n\n  const getData = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  }\n  const additionalHandler = (p) => {\n setModaldoc(p.docid)\n    setAdditionalQuery(!additionalQuery);\n    setAssignNo(userId)\n};\n\n\n  //accept handler\n  const acceptHandler = (key) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"type\", 1);\n    formData.append(\"docid\", key.docid);\n\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/draftAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n   \n        if (response.data.code === 1) {\n          getData();\n          var variable = \"Draft accepted successfully \"\n          // Alerts.SuccessNormal(variable)\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n\n\n  return (\n    <div>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewReport}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"55vw\" }}>\n            <span>View All Reports</span>\n            <span>\n              <button class=\"btn btn-success\"\n              onClick={() => ViewDiscussionToggel()}\n              >\n                View Discussion\n              </button>\n            </span>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Document</th>\n              \n                {/* {\n                  dataItem ?\n                    dataItem.customer_file === null ? \"\" : <th scope=\"row\">File Upload</th>\n                    :\n                    null\n                } */}\n                <th scope=\"row\">Uploaded file\n                </th>\n               \n                {\n                  dataItem ?\n                    dataItem.final_report ? null : <th scope=\"row\">Action</th>\n                    :\n                    null\n                }\n              \n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                      <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                          <a\n                            href={`${ReportUrl}/${report}/${p.document}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                     \n                      <a\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i> \n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\n                    </tr> }\n                    </td>\n                  \n                    <td>\n                    <p>  {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\n                 <br></br> \n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> }\n                </td>\n                    {\n                      p.stages_type == \"2\" ?\n                        <td>\n                          {\n                            p.status == \"0\" ?\n                              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n\n                                <div style={{ cursor: \"pointer\" }} title=\"Accept\">\n                                  <i\n                                    class=\"fa fa-check\"\n                                    style={{\n                                      color: \"green\",\n                                      fontSize: \"16px\",\n                                    }}\n                                    onClick={() => acceptHandler(p)}\n                                  ></i>\n                                </div>\n                              \n                                                      \n                                                \n                                <div title=\"Discussion\">\n                                  <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                      fontSize: 16,\n                                      cursor: \"pointer\",\n                                      marginLeft: \"8px\",\n                                      color: \"green\"\n                                    }}\n                                    onClick={() => toggleNested(p)}\n                                  ></i>\n                                </div>\n                                {p.customer_files === null ?\n                                <div title=\"Upload Additional Documents\"\n                                                            style={{ cursor: \"pointer\" }}\n                                                            onClick={() => additionalHandler(p)}\n                                                           \n                                                        >\n                                                            <PublishIcon color=\"secondary\" />\n                                                        </div> : \"\"}\n                              </div>\n                              :\n                              p.status == \"1\" ?\n                                <div style={{ cursor: \"pointer\" }} title=\"Customer Accepted\">\n                                  <i\n                                    class=\"fa fa-check\"\n                                    style={{\n                                      color: \"blue\",\n                                      fontSize: \"16px\",\n                                    }}\n                                  ></i>\n                                </div> :\n                                p.status == \"2\" ?\n                                  <div title=\"Discussion\">\n                                    <i\n                                      class=\"fa fa-comments-o\"\n                                      style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        marginLeft: \"8px\",\n                                        color: \"green\"\n                                      }}\n                                      onClick={() => toggleNested(p)}\n                                    ></i>\n                                  </div> :\n                                  null\n                          }\n                        </td>\n                        :\n                        null\n                    }\n\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <RejectedModal\n        toggleNested={toggleNested}\n        nestedModal={nestedModal}\n        dataItem={dataItem}\n        docData={docData}\n        getData={getData}\n      />\n     <Assignmodal\n                        additionalHandler={additionalHandler}\n                        additionalQuery={additionalQuery}\n                        assignNo={assignNo}\n                        modaldoc = {modaldoc}\n                        getData = {getData}\n                        // getQueriesData={getQueriesData}\n                    />\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        getData={getData}\n      />\n    </div>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/views/AssignmentTab/RejectModal.js",["3379","3380","3381","3382"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction RejectedModal({\n  nestedModal,\n  toggleNested,\n  dataItem,\n  docData,\n  getData\n}) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.assign_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"message\", value.p_chat);\n    formData.append(\"type\", 2);\n    formData.append(\"docid\", docData.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/draftAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n    \n        if (response.data.code === 1) {\n          setLoading(false)\n          toggleNested();\n          getData();\n          var variable = \"Submitted Successfully \"\n          Alerts.SuccessNormal(variable)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\n        <ModalHeader>Discussion</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here\"\n              ></textarea>\n\n              {errors.p_chat && (\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <div>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                    <Button color=\"primary\"className=\"btn btn-danger ml-2\" onClick={toggleNested}>Cancel</Button>\n                  </div>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default RejectedModal;\n\n","/home/pooja/MazarsRepo/src/views/AssignmentTab/PaymentModal.js",["3383","3384","3385","3386","3387","3388","3389","3390","3391","3392","3393","3394","3395","3396"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport CommonServices from \"../../common/common\";\n\n\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  pay,\n  getProposalData,\n}) {\n  const { handleSubmit, register } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n\n  const { id, amount, accepted_amount, paid_amount,\n    payment_terms, no_of_installment, installment_amount,\n    due_date, amount_type, amount_fixed, amount_hourly\n  } = pay;\n\n\n\n  const onSubmit = (value) => {\n \n\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"status\", 8);\n    formData.append(\"amount\", value.p_amount);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PaymentPartialAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n\n          var variable = \"Payment Done Successfully \"\n          Alerts.SuccessNormal(variable)\n\n          getProposalData();\n          paymentHandler();\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  const installAmount = (data) => {\n    var item = data.split(',')\n   \n\n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <tr>\n              <th>Accepted Amount</th>\n              <td>{accepted_amount}</td>\n            </tr>\n            <tr>\n              <th>Paid Amount</th>\n              <td>{paid_amount}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment Terms</th>\n              {\n                payment_terms == \"lumpsum\" ?\n                  <td>\n                    <tr>\n\n                      <th>Due Dates</th>\n                    </tr>\n                    <tr>\n                      <td>\n                        {CommonServices.removeTime(due_date)}\n                      </td>\n                    </tr>\n                  </td>\n                  :\n                  payment_terms == \"installment\" ?\n                    <td>\n                      <tr>\n                        <th>Installment Amount</th>\n                        <th>Due Dates</th>\n                      </tr>\n                      <tr>\n                        <td>{installAmount(installment_amount)}</td>\n                        <td>{installAmount(due_date)}</td>\n                      </tr>\n                    </td>\n                    :\n                    \"\"\n              }\n            </tr>\n\n          </table>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            {+accepted_amount == +paid_amount ? null : (\n              <div>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    ref={register}\n                    className=\"form-control\"\n                    defaultValue={accepted_amount - paid_amount}\n                    placeholder=\"enter amount\"\n                  />\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Pay\n                  </button>\n                </div>\n              </div>\n            )}\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n\n{/* <tr>\n              <th>{amount_type}</th>\n              <td>\n                {\n                  amount_type == \"fixed\" ?\n                    amount\n                    :\n                    amount_type == \"hourly\" ?\n                      amount_hourly\n                      :\n                      amount_type == \"mixed\" ?\n                        <div>\n                          <p>Fixed : {amount}</p>\n                          <p>Hourly : {amount_hourly}</p>\n                        </div>\n                        :\n                        \"\"\n                }\n              </td>\n            </tr> */}","/home/pooja/MazarsRepo/src/views/ProposalTab/ViewComponent.js",["3397","3398","3399","3400","3401","3402"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\n\n  \n  return (\n    <div>\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{viewData.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Name of Team Leader</th>\n                <td>{viewData.tl_name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date of Allocation</th>\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposed Amount</th>\n                <td>{viewData.ProposedAmount}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Status</th>\n                <td>\n                  {\n                    viewData.status == \"Inprogress\" ?\n                      <div>\n                        {viewData.status}/\n                        <p className=\"inprogress\">\n                          {viewData.statusdescription}\n                        </p>\n                      </div>\n                      :\n                      viewData.status == \"Declined; Proposal\" ?\n                        <div>\n                          {viewData.status}\n                          <p className=\"declined\">\n                            {viewData.statusdescription}\n                          </p>\n                        </div> :\n                        viewData.status == \"Accepted; Proposal\" ?\n                          <div>\n                            {viewData.status}\n                            <p className=\".completed{\">\n                              {viewData.statusdescription}\n                            </p>\n                          </div> :\n                          null\n                  }\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ViewComponent;\n","/home/pooja/MazarsRepo/src/views/QueriesTab/AdditionalQueryModal.js",["3403","3404","3405"],"/home/pooja/MazarsRepo/src/pages/TP/NewPassword/ResendOtp.js",["3406","3407"],"import React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Alerts from \"../../../common/Alerts\";\n\n\n\nfunction ResendOtp({ id, setLoad, setDisabled, getTime, setLoading }) {\n\n    const { handleSubmit, errors, reset } = useForm();\n\n    const onSubmit = (value) => {\n        setLoading(true)\n\n        let formData = new FormData();\n        formData.append(\"email\", id);\n        formData.append(\"p\", \"forgot\");\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/forgototp`,\n            data: formData,\n        })\n            .then(function (response) {\n                \n                if (response.data.code === 1) {\n                    setLoad(true)\n                    setLoading(false)\n                    Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n                    setDisabled(false)\n                    getTime();\n                } else if (response.data.code === 0) {\n                    setLoading(false)\n                    Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n                }\n            })\n            .catch((error) => {\n              \n            });\n    };\n\n\n    return (\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div style={{ paddingTop: \"10px\" }}>\n                    <button type=\"submit\" class=\"btn btn-success\">SEND OTP</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ResendOtp;","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DeliveryFinalTab.js",["3408","3409","3410","3411","3412","3413","3414","3415","3416","3417","3418","3419","3420","3421","3422","3423","3424","3425","3426"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tpkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [finalId, setFinalId] = useState(\"\");\n\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n    const [hide, setHide] = useState();\n    const [fianlModal, setFianlModal] = useState(false);\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n    const [item] = useState(current_date);\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [report, setReport] = useState();\n    const [reportModal, setReportModal] = useState(false);\n    const [dataItem, setDataItem] = useState({});\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const uploadFinalReport = (id) => {\n       \n        setFianlModal(!fianlModal);\n        setFinalId(id);\n      };\n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n            axios\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n                .then((res) => {\n                   \n                    if (res.data.code === 1) {\n                        setTax2(res.data.result);\n                    }\n                });\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n      \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n      \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n     \n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n       \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n    const assingmentStatus = (value) => {\n      \n        setStatus(value);\n    };\n// view Report\nconst ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.q_id}`,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            dataField: \"status\",\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"200px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                                {row.client_discussion}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                                {row.draft_report}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                                {row.final_discussion}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                                {row.delivery_report}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\n                                {row.other_stage}\n                            </p>\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n          {\n            text: \"Assignment Stage\",\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                      {\n                 row.paid_status == \"2\" ? null :\n                    <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\n                      <i class=\"fa fa-tasks\"></i>\n                    </Link>\n            }\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n               {\n                 row.paid_status == \"2\" ? null : \n                 <div\n                 style={{\n                   display: \"flex\",\n                   justifyContent: \"space-between\",\n                 }}\n               >\n                 \n                 \n                    \n      {\n       row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n      \n      <div title=\"upload Pdf\">\n       <p\n         style={{ cursor: \"pointer\", color: \"red\" }}\n         onClick={() => uploadFinalReport(row)}\n       >\n       \n             <div>\n               <i\n                 class=\"fa fa-upload\"\n                 style={{ fontSize: \"16px\" }}\n               ></i>\n               final\n             </div>\n          \n       </p>\n      </div> : null\n      }\n                \n      \n                 <div title=\"View Discussion Message\">\n                   <i\n                     class=\"fa fa-comments-o\"\n                     style={{\n                       fontSize: 16,\n                       cursor: \"pointer\",\n                       color: \"orange\"\n                     }}\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\n                   ></i>\n                 </div>\n                 <div title=\"Send Message\">\n                   <Link\n                     to={{\n                       pathname: `/taxprofessional/chatting/${row.q_id}`,\n                       obj: {\n                         message_type: \"3\",\n                         query_No: row.assign_no,\n                         query_id: row.q_id,\n                         routes: `/taxprofessional/assignment`\n                       }\n                     }}\n                   >\n                     <i\n                       class=\"fa fa-comments-o\"\n                       style={{\n                         fontSize: 16,\n                         cursor: \"pointer\",\n                         marginLeft: \"8px\",\n                         color: \"blue\"\n                       }}\n                     ></i>\n                   </Link>\n                 </div>\n      \n               </div>\n               }\n                </>\n                );\n            },\n        },\n    ];\n\n\n\n    const onSubmit = (data) => {\n      \n        axios\n            .get(\n                `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(\n                    userid\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n                }&assignment_status=${status}&stages_status=${data.p_status\n                }&pcat_id=${selectedData}`\n            )\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n                                    {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btn btn-primary mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={assignment}\n                        columns={columns}\n                        rowIndex\n                    />\n  <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n          />\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n                    \n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;\n","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportTab.js",["3427","3428","3429","3430","3431","3432","3433","3434","3435","3436","3437","3438","3439","3440","3441","3442","3443","3444","3445","3446","3447","3448"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n} from \"reactstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\n\n\n\nfunction AssignmentTab() {\n\n    const history = useHistory();\n    const userid = window.localStorage.getItem(\"tpkey\");\n\n    const { handleSubmit, register, errors, reset } = useForm();\n    const { Option, OptGroup } = Select;\n    const [count, setCount] = useState(\"\");\n    const [assignment, setAssignment] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [finalId, setFinalId] = useState(\"\");\n\n    const [records, setRecords] = useState([]);\n    const [selectedData, setSelectedData] = useState([]);\n    const [status, setStatus] = useState([]);\n    const [tax2, setTax2] = useState([]);\n    const [store2, setStore2] = useState([]);\n    const [hide, setHide] = useState();\n\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2);\n    const [item] = useState(current_date);\n    const [dataItem, setDataItem] = useState({});\n    const [draftModal, setDraftModal] = useState(false);\n    const [assignNo, setAssignNo] = useState('');\n    const [report, setReport] = useState();\n  const [reportModal, setReportModal] = useState(false);\n    const ViewReport = (key) => {\n       \n        setReportModal(!reportModal);\n        setReport(key.assign_no);\n        setDataItem(key)\n      };\n    const uploadDraftReport = (id) => {\n      \n        setDraftModal(!draftModal);\n        setId(id);\n      };\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getAssignmentList();\n    }, []);\n\n    const getAssignmentList = () => {\n        axios\n            .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setAssignment(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    //get category\n    useEffect(() => {\n        const getSubCategory = () => {\n            if(selectedData != undefined){\n                axios\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n                .then((res) => {\n                  \n                    if (res.data.code === 1) {\n                        setTax2(res.data.result);\n                    }\n                });\n            }\n        };\n        getSubCategory();\n    }, [selectedData]);\n\n    //handleCategory\n    const handleCategory = (value) => {\n       \n        setSelectedData(value);\n        setStore2([]);\n    };\n\n    //handleSubCategory\n    const handleSubCategory = (value) => {\n       \n        setStore2(value);\n    };\n\n    //reset category\n    const resetCategory = () => {\n     \n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //reset date\n    const resetData = () => {\n     \n        reset();\n        setStatus([]);\n        setSelectedData([]);\n        setStore2([]);\n        getAssignmentList();\n    };\n\n    //assingmentStatus\n    const assingmentStatus = (value) => {\n       \n        setStatus(value);\n    };\n\n\n    //columns\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"date_of_query\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.date_of_query;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.q_id}`,\n                                routes: \"assignment\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            dataField: \"status\",\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"200px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                                {row.client_discussion}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                                {row.draft_report}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                                {row.final_discussion}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                                {row.delivery_report}\n                            </p>\n                            <p>\n                                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\n                                {row.other_stage}\n                            </p>\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Expected date of delivery\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Actual date of delivery\",\n            dataField: \"final_date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.final_date;\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Deliverable\",\n            dataField: \"\",\n            sort: true,\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  {\n                    row.paid_status == \"2\" ? null :\n                      <div>\n                        {row.assignement_draft_report || row.final_report ?\n                          <div title=\"View All Report\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => ViewReport(row)}\n                          >\n                            <DescriptionOutlinedIcon color=\"secondary\" />\n                          </div>\n                          :\n                          null\n                        }\n                      </div>\n                  }\n                </>\n              );\n            },\n          },\n          {\n            text: \"Assignment Stage\",\n            headerStyle: () => {\n              return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n              return (\n                <>\n                  <div\n                    title=\"Add Assignment stages\"\n                    style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                  >\n                      {\n                 row.paid_status == \"2\" ? null :\n                    <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\n                      <i class=\"fa fa-tasks\"></i>\n                    </Link>\n            }\n                  </div>\n                </>\n              );\n            },\n          },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n               {\n                 row.paid_status == \"2\" ? null : \n                 <div\n                 style={{\n                   display: \"flex\",\n                   justifyContent: \"space-between\",\n                 }}\n               >\n                 \n                 \n                    {\n                    row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\n                    <div title=\"upload Pdf\">\n                    <p\n                      style={{ cursor: \"pointer\", color: \"green\" }}\n                      onClick={() => uploadDraftReport(row.id)}\n                    >\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                      draft\n                    </p>\n                  </div> : null\n                 }\n                  {\n                    row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\n                    <div title=\"upload Pdf\">\n                    <p\n                      style={{ cursor: \"pointer\", color: \"green\" }}\n                      onClick={() => uploadDraftReport(row.id)}\n                    >\n                      <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                      draft\n                    </p>\n                  </div> : null\n                 }\n                \n      \n                 <div title=\"View Discussion Message\">\n                   <i\n                     class=\"fa fa-comments-o\"\n                     style={{\n                       fontSize: 16,\n                       cursor: \"pointer\",\n                       color: \"orange\"\n                     }}\n                     onClick={() => ViewDiscussionToggel(row.assign_no)}\n                   ></i>\n                 </div>\n                 <div title=\"Send Message\">\n                   <Link\n                     to={{\n                       pathname: `/taxprofessional/chatting/${row.q_id}`,\n                       obj: {\n                         message_type: \"3\",\n                         query_No: row.assign_no,\n                         query_id: row.q_id,\n                         routes: `/taxprofessional/assignment`\n                       }\n                     }}\n                   >\n                     <i\n                       class=\"fa fa-comments-o\"\n                       style={{\n                         fontSize: 16,\n                         cursor: \"pointer\",\n                         marginLeft: \"8px\",\n                         color: \"blue\"\n                       }}\n                     ></i>\n                   </Link>\n                 </div>\n      \n               </div>\n               }\n                </>\n                );\n            },\n        },\n    ];\n\n\n    const onSubmit = (data) => {\n       \n        axios\n            .get(\n                `${baseUrl}/tp/getAssignments?tp_id=${JSON.parse(\n                    userid\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n                }&assignment_status=\"Draft_Report\"&stages_status=1\n               &pcat_id=${selectedData}`\n            )\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    if (res.data.result) {\n                        setAssignment(res.data.result);\n                        setRecords(res.data.result.length);\n\n                    }\n                }\n            });\n    };\n\n\n    const Reset = () => {\n        return (\n            <>\n                <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\n                    onClick={() => resetData()}\n                >\n                    Reset\n                </button>\n            </>\n        );\n    };\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"form-inline\">\n                            <div class=\"form-group mb-2\">\n                                <Select\n                                    style={{ width: 130 }}\n                                    placeholder=\"Select Category\"\n                                    defaultValue={[]}\n                                    onChange={handleCategory}\n                                    value={selectedData}\n                                >\n                                    <Option value=\"1\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\n                                    </Option>\n                                    <Option value=\"2\" label=\"Compilance\">\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\n                                    </Option>\n                                </Select>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <Select\n                                    mode=\"multiple\"\n                                    style={{ width: 250 }}\n                                    placeholder=\"Select Sub Category\"\n                                    defaultValue={[]}\n                                    onChange={handleSubCategory}\n                                    value={store2}\n                                    allowClear\n                                >\n                                    {tax2.map((p, index) => (\n                                        <Option value={p.id} key={index}>\n                                            {p.details}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div>\n                                <button\n                                    type=\"submit\"\n                                    class=\"btn btn-primary mb-2 ml-3\"\n                                    onClick={resetCategory}\n                                >\n                                    X\n                                </button>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">From</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateFrom\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    max={item}\n                                />\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">To</label>\n                            </div>\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <input\n                                    type=\"date\"\n                                    name=\"p_dateTo\"\n                                    className=\"form-select form-control\"\n                                    ref={register}\n                                    defaultValue={item}\n                                    max={item}\n                                />\n                            </div>\n\n\n\n                            <div class=\"form-group mx-sm-1  mb-2\">\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                                Search\n                            </button>\n\n                            <Reset />\n                        </div>\n                    </form>\n                </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={assignment}\n                        columns={columns}\n                        rowIndex\n                    />\n\n<DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n          />\n           <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getAssignmentList}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AssignmentTab;\n","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/AllAssignment.js",["3449","3450","3451","3452","3453","3454","3455","3456","3457","3458","3459","3460","3461","3462","3463","3464","3465","3466","3467","3468","3469","3470","3471","3472","3473","3474","3475","3476","3477","3478","3479","3480","3481","3482","3483","3484","3485","3486","3487","3488"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport * as Cookies from \"js-cookie\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\n\n\nfunction AssignmentTab() {\n\n  const history = useHistory();\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [count, setCount] = useState(\"\");\n  const [assignment, setAssignment] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [finalId, setFinalId] = useState(\"\");\n\n  const [records, setRecords] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [hide, setHide] = useState();\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n  const [dataItem, setDataItem] = useState({});\n  const [report, setReport] = useState();\n  const [reportModal, setReportModal] = useState(false);\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  var rowStyle2 = {}\n  const ViewReport = (key) => {\n  \n    setReportModal(!reportModal);\n    setReport(key.assign_no);\n    setDataItem(key)\n  };\n\n  \n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(userid)}`)\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          setAssignment(res.data.result);\n          setCount(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      if(selectedData != undefined){\n        axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n      }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n   \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n   \n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n  \n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentList();\n  };\n\n  //reset date\n  const resetData = () => {\n   \n    reset();\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentList();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n   \n    setStatus(value);\n  };\n\n\n  //columns\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.q_id}`,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n            {row.paid_status == \"2\" &&\n                <p>\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\n                </p>\n              }\n           \n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected date of delivery\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n      \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Actual date of delivery\",\n      dataField: \"final_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {\n              row.paid_status == \"2\" ? null :\n                <div>\n                  {row.assignement_draft_report || row.final_report ?\n                    <div title=\"View All Report\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => ViewReport(row)}\n                    >\n                      <DescriptionOutlinedIcon color=\"secondary\" />\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            }\n          </>\n        );\n      },\n    },\n    {\n      text: \"Assignment Stage\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              title=\"Add Assignment stages\"\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\n            >\n                {\n           row.paid_status == \"2\" ? null :\n              <Link to={`/taxprofessional/addassingment/${row.q_id}`}>\n                <i class=\"fa fa-tasks\"></i>\n              </Link>\n      }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"90px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n         {\n           row.paid_status == \"2\" ? null : \n           <div\n           style={{\n             display: \"flex\",\n             justifyContent: \"space-between\",\n           }}\n         >\n           \n           \n              {\n              row.client_discussion == \"completed\" && row.draft_report == \"inprogress\" && row.paid_status !=2 ?\n              <div title=\"upload Pdf\">\n              <p\n                style={{ cursor: \"pointer\", color: \"green\" }}\n                onClick={() => uploadDraftReport(row.id)}\n              >\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                draft\n              </p>\n            </div> : null\n           }\n            {\n              row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"inprogress\" ?\n              <div title=\"upload Pdf\">\n              <p\n                style={{ cursor: \"pointer\", color: \"green\" }}\n                onClick={() => uploadDraftReport(row.id)}\n              >\n                <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                draft\n              </p>\n            </div> : null\n           }\n{\n row.client_discussion == \"completed\" && row.draft_report == \"completed\" && row.final_discussion == \"completed\" && row.delivery_report == \"inprogress\" ?\n\n<div title=\"upload Pdf\">\n <p\n   style={{ cursor: \"pointer\", color: \"red\" }}\n   onClick={() => uploadFinalReport(row)}\n >\n \n       <div>\n         <i\n           class=\"fa fa-upload\"\n           style={{ fontSize: \"16px\" }}\n         ></i>\n         final\n       </div>\n    \n </p>\n</div> : null\n}\n          \n\n           <div title=\"View Discussion Message\">\n             <i\n               class=\"fa fa-comments-o\"\n               style={{\n                 fontSize: 16,\n                 cursor: \"pointer\",\n                 color: \"orange\"\n               }}\n               onClick={() => ViewDiscussionToggel(row.assign_no)}\n             ></i>\n           </div>\n           <div title=\"Send Message\">\n             <Link\n               to={{\n                 pathname: `/taxprofessional/chatting/${row.q_id}`,\n                 obj: {\n                   message_type: \"3\",\n                   query_No: row.assign_no,\n                   query_id: row.q_id,\n                   routes: `/taxprofessional/assignment`\n                 }\n               }}\n             >\n               <i\n                 class=\"fa fa-comments-o\"\n                 style={{\n                   fontSize: 16,\n                   cursor: \"pointer\",\n                   marginLeft: \"8px\",\n                   color: \"blue\"\n                 }}\n               ></i>\n             </Link>\n           </div>\n\n         </div>\n         }\n          </>\n        );\n      },\n    },\n  ];\n\n  rowStyle2 = (row, index) => {\n    const style = {}\n    var warningDate = moment(row.Exp_Delivery_Date).subtract(2, 'day').toDate();\n    // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n    var aa = moment().toDate();\n   \n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && warningDate < aa)  {\n      style.backgroundColor = \"#c1d8f2\";\n      style.color = \"#000111\"\n    }\n  \n    return style;\n  }\n\n  // draft modal\n  const [draftModal, setDraftModal] = useState(false);\n  const uploadDraftReport = (id) => {\n   \n    setDraftModal(!draftModal);\n    setId(id);\n  };\n\n\n  // final modal\n  const [fianlModal, setFianlModal] = useState(false);\n  const uploadFinalReport = (id) => {\n   \n    setFianlModal(!fianlModal);\n    setFinalId(id);\n  };\n\n\n  const onSubmit = (data) => {\n   \n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?tp_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&assignment_status=${status}&stages_status=${data.p_status\n        }&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n        \n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignment(res.data.result);\n            setRecords(res.data.result.length);\n\n          }\n        }\n      });\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n  const disabledHandler = (e) => {\n    setHide(e.target.value);\n  };\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <select\n                  className=\"form-select form-control\"\n                  name=\"p_status\"\n                  ref={register}\n                  style={{ height: \"33px\" }}\n                  onChange={(e) => disabledHandler(e)}\n                >\n                  <option value=\"\">--select--</option>\n                  <option value=\"1\">Pending</option>\n                  <option value=\"2\">Complete</option>\n                  <option value=\"3\">Payment Decline</option>\n                </select>\n              </div>\n\n              {\n                hide == \"3\" ?\n                  \"\"\n                  :\n                  <div class=\"form-group mx-sm-1  mb-2\">\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: 210 }}\n                      placeholder=\"Select stages\"\n                      defaultValue={[]}\n                      onChange={assingmentStatus}\n                      value={status}\n                      allowClear\n                    >\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Client Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">Draft report</div>\n                      </Option>\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Final Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Delivery of report\n                        </div>\n                      </Option>\n                      <Option value=\"Completed\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">Completed</div>\n                      </Option>\n                    </Select>\n                  </div>\n              }\n\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">Total Records : {records}</label>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignment}\n            columns={columns}\n            rowStyle={ rowStyle2 }\n            rowIndex\n          />\n\n          <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n          />\n\n          <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n          />\n\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            dataItem={dataItem}\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getAssignmentList}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AssignmentTab;\n\n\n\n\n\n\n\n\n\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Unpaid.js",["3489","3490","3491","3492","3493","3494","3495","3496","3497","3498","3499","3500","3501","3502"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from \"moment\";\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n\n\n   \n    var rowStyle2 = {}\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&status=1`).then((res) => {\n           \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    const toggle = (key) => {\n      \n        setModal(!modal);\n\n       if(typeof(key) == \"object\"){\n\n       }\n       else{\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n               \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n       }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\n        style.backgroundColor = \"#c1d8f2\";\n        style.color = \"#000111\"\n    }\n   \n    return style;\n  }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                 \n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.accepted_amount;\n               \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.paid_amount;\n               \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.amount_outstanding;\n               \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },     {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n\n                        {row.paid_status === \"2\" ? \n                         <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                         <div title=\"Payment History\"\n \n                             style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                         >\n                             <i\n                            class=\"fa fa-credit-card\"\n                            onClick={() => toggle(row.assign_id)}\n                            style={{ color: \"green\", fontSize: \"16px\" }}></i>\n                         </div>\n                        \n \n \n                         <div title=\"View Discussion Message\">\n                             <i\n                                 class=\"fa fa-comments-o\"\n                                 style={{\n                                     fontSize: 16,\n                                     cursor: \"pointer\",\n                                     color: \"orange\"\n                                 }}\n                                 onClick={() => ViewDiscussionToggel(row.assign_no)}\n                             ></i>\n                         </div>\n \n                     </div> : \n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                        <div title=\"Payment History\"\n\n                            style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                        >\n                          <Link\n              to={{\n                pathname: `/taxprofessional/paydetails/${row.id}`,\n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.id,\n                  routes: `/taxprofessional/paymentstatus`\n                }\n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                                // onClick={() => toggle(row.assign_id)}\n                            ></i>\n                            </Link>\n                        </div>\n                        <div title=\"Send Message\">\n                            <Link\n                                to={{\n                                    pathname: `/taxprofessional/chatting/${row.assign_id}`,\n                                    obj: {\n                                        message_type: \"5\",\n                                        query_No: row.assign_no,\n                                        query_id: row.assign_id,\n                                        routes: `/taxprofessional/proposal`\n                                    }\n                                }}\n                            >\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 18,\n                                        cursor: \"pointer\",\n                                        color: \"blue\"\n                                    }}\n                                ></i>\n                            </Link>\n                        </div>\n                        {/* <div>\n                            {\n                                row.paid_status == \"0\" ?\n                                    <div title=\"Payment decline\"\n                                        onClick={() => rejectHandler(row)}\n                                        style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\n                                    >\n                                        <PaymentIcon />\n                                    </div>\n                                    : null\n                            }\n                        </div> */}\n\n\n                        <div title=\"View Discussion Message\">\n                            <i\n                                class=\"fa fa-comments-o\"\n                                style={{\n                                    fontSize: 16,\n                                    cursor: \"pointer\",\n                                    color: \"orange\"\n                                }}\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\n                            ></i>\n                        </div>\n\n                    </div>}\n                    </>\n                );\n            },\n        },\n        \n    ];\n\n\n    return (\n        <>\n            <Card>\n\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Unpaid=\"Unpaid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={payment}\n                        columns={columns}\n                        classes=\"table-responsive\"\n                        rowStyle={rowStyle2}\n                        rowIndex\n                    />\n\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n<DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paid.js",["3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChangeHistoryIcon from '@material-ui/icons/ChangeHistory';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n\n    const [assignNo, setAssignNo] = useState(\"\");\n\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const rejectHandler = (key) => {\n   \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&status=2`).then((res) => {\n          \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n     \n        setModal(!modal);\n\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n              \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n    };\n\n\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n                   \n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.accepted_amount;\n\n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.paid_amount;\n\n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.amount_outstanding;\n\n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"60px\" }}>\n                            {\n                                row.paid_status == \"0\" ? null :\n                                    <div title=\"Payment History\"\n                                      \n                                        style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                                    >\n                                        <i\n                           class=\"fa fa-credit-card\"\n                           onClick={() => toggle(row.assign_id)}\n                           style={{ color: \"green\", fontSize: \"16px\" }}></i>\n                                    </div>\n                            }\n\n                            {\n                                (row.paid_status == \"0\") ?\n                                    <div title=\"Payment decline\"\n                                        onClick={() => rejectHandler(row)}\n                                        style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\n                                    >\n                                        <PaymentIcon />\n                                    </div>\n                                    :\n                                    null\n                            }\n\n                            <div title=\"Send Message\">\n                                <Link\n                                    to={{\n                                        pathname: `/teamleader/chatting/${row.assign_id}`,\n                                        obj: {\n                                            message_type: \"5\",\n                                            query_No: row.assign_no,\n                                            query_id: row.assign_id,\n                                            routes: `/teamleader/proposal`\n                                        }\n                                    }}\n                                >\n                                    <i\n                                        class=\"fa fa-comments-o\"\n                                        style={{\n                                            fontSize: 16,\n                                            cursor: \"pointer\",\n                                            marginLeft: \"8px\",\n                                            color: \"blue\"\n                                        }}\n                                    ></i>\n                                </Link>\n                            </div>\n                            <div title=\"View Discussion Message\">\n                            <i\n                                class=\"fa fa-comments-o\"\n                                style={{\n                                    fontSize: 16,\n                                    cursor: \"pointer\",\n                                    color: \"orange\"\n                                }}\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\n                            ></i>\n                        </div>\n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>             \n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        Paid=\"Paid\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={payment}\n                        columns={columns}\n                        classes=\"table-responsive\"\n                    />\n\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date</th>\n                                        <th scope=\"row\">Amount</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;\n","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/AllPayment.js",["3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport RejectedModal from \"./RejectedModal\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport moment from 'moment';\n\n\n\nfunction AllPayment() {\n    const alert = useAlert();\n    const { id } = useParams();\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const cust_id = window.localStorage.getItem(\"userid\");\n    const [records, setRecords] = useState([]);\n\n    const [pay, setPay] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [payment, setPayment] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [assignNo, setAssignNo] = useState(\"\");\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    // End UseSatate \n    // Global Veriable\n    var rowStyle2 = {}\n    const rejectHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setAssignNo(key.assign_no)\n    };\n\n   \n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getPaymentStatus();\n    }, []);\n\n    const getPaymentStatus = () => {\n        axios.get(`${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}`).then((res) => {\n          \n            if (res.data.code === 1) {\n                setPayment(res.data.result);\n                setCount(res.data.result.length);\n                setRecords(res.data.result.length);\n\n            }\n        });\n    };\n\n\n    const toggle = (key) => {\n      \n        setModal(!modal);\n\n       if(typeof(key) == \"object\"){\n\n       }\n       else{\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}&&status=1`, {\n            method: \"GET\",\n            headers: new Headers({\n                Accept: \"application/vnd.github.cloak-preview\",\n            }),\n        })\n            .then((res) => res.json())\n            .then((response) => {\n               \n                setPay(response.payment_detail);\n            })\n            .catch((error) => console.log(error));\n       }\n    };\n\n// Row Style\nrowStyle2 = (row, index) => {\n    const style = {}\n\n    if(row.paid_status != \"2\" && row.status != \"Complete\" && moment(row.due_date).toDate() > moment().toDate){\n        style.backgroundColor = \"#c1d8f2\";\n        style.color = \"#000111\"\n    }\n   \n    return style;\n  }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"query_created_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.query_created_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Query No\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                routes: \"paymentstatus\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"parent_id\",\n            text: \"Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            dataField: \"cat_name\",\n            text: \"Sub Category\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function (cell, row) {\n                return(\n                    <>\n                    {row.paid_status == \"2\"  ?\n                    <p style={{color : \"red\"}}>{row.status} </p> : \n                    <p>{row.status}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#21a3ce\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"#064606\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"#064606\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n\n        {\n            text : \"Outstanding Amount\",\n            dataField: \"amount_outstanding\",\n            sort: true,\n            style: {\n              fontSize: \"11px\",\n              color: \"darkred\",\n            },\n            sortFunc: (a, b, order, dataField) => {\n              if (order === 'asc') {\n                return b - a;\n              }\n              return a - b; // desc\n            },\n            headerStyle: () => {\n              return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount_outstanding;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n\n                        {row.paid_status === \"2\" ?  <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n<div title=\"Payment History\"\n\n    style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n>\n<Link\n              to={{\n                pathname: `/taxprofessional/paydetails/${row.id}`,\n                obj: {\n                  message_type: \"5\",\n                  query_No: row.assign_no,\n                  query_id: row.id,\n                  routes: `/taxprofessional/paymentstatus`\n                }\n              }}\n            >\n                            <i\n                                class=\"fa fa-credit-card\"\n                                style={{ color: \"green\", fontSize: \"16px\" }}\n                                // onClick={() => toggle(row.assign_id)}\n                            ></i>\n                            </Link>\n</div>\n\n<div title=\"View Discussion Message\">\n    <i\n        class=\"fa fa-comments-o\"\n        style={{\n            fontSize: 16,\n            cursor: \"pointer\",\n            color: \"orange\"\n        }}\n        onClick={() => ViewDiscussionToggel(row.assign_no)}\n    ></i>\n</div>\n\n</div> : \n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"90px\" }}>\n\n                        <div title=\"Payment History\"\n\n                            style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                        >\n                            <i\n                           class=\"fa fa-credit-card\"\n                           onClick={() => toggle(row.assign_id)}\n                           style={{ color: \"green\", fontSize: \"16px\" }}></i>\n                        </div>\n                        <div title=\"Send Message\">\n                            <Link\n                                to={{\n                                    pathname: `/taxprofessional/chatting/${row.assign_id}`,\n                                    obj: {\n                                        message_type: \"5\",\n                                        query_No: row.assign_no,\n                                        query_id: row.assign_id,\n                                        routes: `/taxprofessional/paymentstatus`\n                                    }\n                                }}\n                            >\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 18,\n                                        cursor: \"pointer\",\n                                        color: \"blue\"\n                                    }}\n                                ></i>\n                            </Link>\n                        </div>\n                        {/* <div>\n                            {\n                                row.paid_status == \"0\" ?\n                                    <div title=\"Payment decline\"\n                                        onClick={() => rejectHandler(row)}\n                                        style={{ color: \"red\", fontSize: \"16px\", cursor: \"pointer\" }}\n                                    >\n                                        <PaymentIcon />\n                                    </div>\n                                    : null\n                            }\n                        </div> */}\n\n\n                        <div title=\"View Discussion Message\">\n                            <i\n                                class=\"fa fa-comments-o\"\n                                style={{\n                                    fontSize: 16,\n                                    cursor: \"pointer\",\n                                    color: \"orange\"\n                                }}\n                                onClick={() => ViewDiscussionToggel(row.assign_no)}\n                            ></i>\n                        </div>\n\n                    </div>}\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setPayment}\n                        getData={getPaymentStatus}\n                        AllPayment=\"AllPayment\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={payment}\n                        columns={columns}\n                        rowStyle={rowStyle2}\n                        rowIndex\n                        classes=\"table-responsive\"\n                    />\n\n\n                    <RejectedModal\n                        rejectHandler={rejectHandler}\n                        addPaymentModal={addPaymentModal}\n                        assignNo={assignNo}\n                        getPaymentStatus={getPaymentStatus}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getPaymentStatus}\n                    />\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\n                        <ModalBody>\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                        <th scope=\"row\">S.No</th>\n                                        <th scope=\"row\">Date of Payment</th>\n                                        <th scope=\"row\">Amount</th>\n                                        <th scope=\"row\">Payment Receipt</th>\n                                    </tr>\n                                </thead>\n                                {pay.length > 0\n                                    ? pay.map((p, i) => (\n                                        <tbody>\n                                            <tr>\n                                                <td>{i + 1}</td>\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\n                                                <td>{p.paid_amount}</td>\n                                                <td><a href={p.receipt_url} target=\"_blank\">Payment Receipt</a></td>\n                                            </tr>\n                                        </tbody>\n                                    ))\n                                    : null}\n                            </table>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"secondary\" onClick={toggle}>\n                                Cancel\n                            </Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n                </CardBody>\n            </Card>\n\n        </>\n    );\n}\n\nexport default AllPayment;","/home/pooja/MazarsRepo/src/pages/TP/Message/PaymentModal.js",["3530","3531","3532","3533"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  data,\n  // getProposalData,\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"tpkey\");\n\n\n  const onSubmit = (value) => {\n   \n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", id);\n    formData.append(\"message_type\",\"information\");\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          reset();\n          alert.success(\" message successfully send!\");\n          paymentHandler()\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/home/pooja/MazarsRepo/src/pages/TP/Schedule/Demo.js",["3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546"],"import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  Resources,\n  MonthView,\n  Appointments,\n  AppointmentTooltip,\n  AppointmentForm,\n  EditRecurrenceMenu,\n  DragDropProvider,\n  WeekView,\n  DayView,\n  DateNavigator,\n  ViewSwitcher,\n  TodayButton,\n  Toolbar,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as Cookies from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport Alerts from \"../../../common/Alerts\";\nimport Loader from \"../../../components/Loader/Loader\";\n\n\n\nfunction Demo() {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [assignmentdata, setAssignmentData] = useState([]);\n  const [owner, setOwner] = useState([]);\n  const [read, setRead] = useState(false);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n  var date = new Date();\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n  const [currentDate, setCurrentDate] = useState(convert(date));\n\n  useEffect(() => {\n    getData();\n    getAssignmentNo();\n    getUsers();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=${JSON.parse(userId)}`)\n      .then((res) => {\n\n        var a = res.data.result.items;\n        if (a) {\n          setData(a.map(mapAppointmentData));\n        }\n      });\n  };\n\n  const mapAppointmentData = (appointment) => ({\n    id: appointment.id,\n    startDate: appointment.start,\n    endDate: appointment.end,\n    title: appointment.title,\n    notes: appointment.summary,\n    question_id: appointment.question_id,\n    vstart: appointment.vstart,\n    vend: appointment.vend,\n    user: appointment.user.split(','),\n    owner: appointment.owner,\n    username: appointment.username,\n  });\n\n  const getAssignmentNo = () => {\n    axios\n      .get(`${baseUrl}/admin/getAllQuery?tp_id=${JSON.parse(userId)}`)\n      .then((res) => {\n      \n        if (res.data.code === 1) {\n          var data = res.data.result;\n\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n            text,\n            ...rest,\n          }));\n          \n          setAssignmentData(newArrayOfObj);\n        }\n      });\n  };\n\n  const getUsers = () => {\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\n  \n      if (res.data.code === 1) {\n        var data = res.data.result;\n        const newOwners = data.map(({ name: text, ...rest }) => ({\n          text,\n          ...rest,\n        }));\n      \n        setOwner(newOwners);\n      }\n    });\n  };\n\n  const resources = [\n    {\n      fieldName: \"question_id\",\n      title: \"Query No\",\n      instances: assignmentdata,\n    },\n    {\n      fieldName: \"user\",\n      title: \"Users\",\n      instances: owner,\n      allowMultiple: true,\n    },\n  ];\n\n  const styles = (theme) => ({\n    button: {\n      color: theme.palette.background.default,\n      padding: 0,\n    },\n    text: {\n      paddingTop: theme.spacing(1),\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n\n  const B = (key) => {\n    setRead(!key)\n  }\n\n  const AppointmentBase = ({\n    children,\n    data,\n    onClick,\n    classes,\n    onAppointmentMetaChange,\n    ...restProps\n  }) => (\n    <div onDoubleClick={() => B(data.owner)}>\n      <Appointments.Appointment {...restProps}>\n        <div style={{ display: \"flex\" }}>\n        <i\n         onClick={() => handleJoin(data)}\n            class=\"fa fa-video-camera\"\n            style={{ fontSize: \"18px\", padding: \"5px\" , color: \"#fff\" }}\n          ></i>\n          <div>{children}</div>\n          \n         \n        </div>\n      </Appointments.Appointment>\n    </div>\n  );\n\n  \n\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\n    AppointmentBase\n  );\n\n  const myAppointment = (props) => {\n    return (\n      <Appointment\n        {...props}\n      // onAppointmentMetaChange={onAppointmentMetaChange}\n      />\n    );\n  };\n\n\n  //handleJoin\n  const handleJoin = (data) => {\n//     // console.log(\"data\", data);\n// //  console.log(\"data\", data)\n// // console.log(data.startDate)\n// var dt = new Date(data.startDate)\n// var dt2 = new Date()\n// let ck = dt.getMonth();\n\n// let pp = dt2.getMonth();\n// let rr = dt2.getHours();\n// let ss = dt.getHours()\n// let mm = dt2.getMinutes() + 20\n// let dd = dt.getMinutes()\n// let ee = dt.getDate();\n// let eee = dt2.getDate()\n// //   console.log(\"dt\", dt)\n// //   console.log(dt2.getDate())\n// //  console.log(dt.getMinutes())\n// //  console.log(dt2.getMinutes() + 20)\n// //  console.log(\"ck\", ck)\n// //   console.log(\"dt2\", dt2)\n// //   console.log(\"pp\", pp)\n// //   console.log(\"mm\", mm)\n// //   console.log(\"dd\", dd)\n// //   console.log(\"ss\", ss)\n// //   console.log(\"rr\", rr)\n// //   console.log(ck == pp)\n// //   console.log(ee === eee)\n// //   console.log(ss == rr)\n// //   console.log(mm > dd)\n\n\n// if(ck == pp && ss == rr && ee == eee){\n\n\n// if(mm > dd){\n//   console.log(\"passed\")\n  \n//   Cookies.set(\"channel_2\", data.question_id);\n//   Cookies.set(\"baseMode_2\", baseMode);\n//   Cookies.set(\"transcode_2\", transcode);\n//   Cookies.set(\"attendeeMode_2\", attendeeMode);\n//   Cookies.set(\"videoProfile_2\", videoProfile);\n//   // history.push(\"/teamleader/meeting/\");\n//   history.push(`/taxprofessional/meeting/${data.id}`);\n\n// }\n// else{\n// // return false\n \n// Cookies.set(\"channel_2\", data.question_id);\n// Cookies.set(\"baseMode_2\", baseMode);\n// Cookies.set(\"transcode_2\", transcode);\n// Cookies.set(\"attendeeMode_2\", attendeeMode);\n// Cookies.set(\"videoProfile_2\", videoProfile);\n// // history.push(\"/teamleader/meeting/\");\n// history.push(`/taxprofessional/meeting/${data.id}`);\n\n// }\n// }\n\nCookies.set(\"channel_2\", data.question_id);\n  Cookies.set(\"baseMode_2\", baseMode);\n  Cookies.set(\"transcode_2\", transcode);\n  Cookies.set(\"attendeeMode_2\", attendeeMode);\n  Cookies.set(\"videoProfile_2\", videoProfile);\n  // history.push(\"/teamleader/meeting/\");\n  history.push(`/taxprofessional/meeting/${data.id}`);\n  };\n\n  const changeFormat = (d) => {\n    \n\n    if (typeof d === 'object') {\n\n      return (\n        d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \" \" +\n        d.toString().split(\" \")[4]\n      );\n    } else {\n   \n      return d;\n    }\n  };\n\n  const commitChanges = ({ added, changed, deleted }) => {\n\n    if (added) {\n      setLoading(true)\n\n\n      var startDate = added.startDate;\n      var endDate = added.endDate;\n\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", added.question_id);\n      formData.append(\"time\", changeFormat(startDate));\n      formData.append(\"endtime\", changeFormat(endDate));\n      formData.append(\"title\", added.title);\n      formData.append(\"notes\", added.notes);\n      formData.append(\"user\", added.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n\n          if (response.data.code === 1) {\n            setLoading(false)\n            Alerts.SuccessNormal(\"New call scheduled successfully.\")\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n\n          getData();\n        })\n        .catch((error) => {\n      \n        });\n    }\n    if (changed) {\n    \n      setLoading(true)\n      const data2 = data.map((appointment) =>\n        changed[appointment.id]\n          ? { ...appointment, ...changed[appointment.id] }\n          : appointment\n      );\n    \n      let valuesArray = Object.entries(changed);\n      let id = valuesArray[0][0];\n    \n      let dataIttem;\n\n      for (var i = 0; i < data2.length; i++) {\n        if (data2[i].id === id) {\n          dataIttem = data2[i];\n        }\n      }\n    \n\n      var a = dataIttem.startDate\n      var b = dataIttem.endDate\n\n\n      if (!dataIttem.owner) {\n        var variable = \"Error\"\n        Alerts.ErrorEdit(variable)\n        return false;\n      }\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", dataIttem.question_id);\n      formData.append(\"id\", dataIttem.id);\n      formData.append(\"time\", changeFormat(a));\n      formData.append(\"endtime\", changeFormat(b));\n      formData.append(\"title\", dataIttem.title);\n      formData.append(\"notes\", dataIttem.notes);\n      formData.append(\"user\", dataIttem.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n       \n\n          if (response.data.code === 1) {\n            setLoading(false)\n            var msg = \"Call details updated successfully.\"\n            Alerts.SuccessNormal(msg)\n          }\n          else if (response.data.code === 0) {\n            setLoading(false)\n\n            var msg = response.data.result\n            Alerts.ErrorNormal(msg)\n          }\n          getData();\n        })\n        .catch((error) => {\n        \n        });\n    }\n\n    if (deleted !== undefined) {\n   \n      setLoading(true)\n      var value;\n      data.filter((data) => {\n        if (data.id == deleted) {\n        \n          value = data.owner\n        }\n      });\n\n   \n      if (!value) {\n        var variable = \"Error\"\n        Alerts.ErrorDelete(variable)\n        return false;\n      }\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"It will be permanently deleted !\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\n        \n            if (res.data.code === 1) {\n              setLoading(false)\n              Swal.fire(\"Deleted!\", \"Scheduled call has been deleted.\", \"success\");\n              getData();\n            } else {\n              setLoading(false)\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n            }\n          });\n        }\n      });\n    }\n  };\n\n\n  const BooleanEditor = (props) => {\n    if (props.label === \"All Day\" || props.label === \"Repeat\") {\n      return null;\n    }\n    return <AppointmentForm.BooleanEditor {...props} />;\n  };\n\n  const TextEditor = (props) => {\n    return <AppointmentForm.TextEditor {...props} />;\n  };\n\n  //basic layout\n  const BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\n   \n    return (\n      <AppointmentForm.BasicLayout\n        appointmentData={appointmentData}\n        onFieldChange={onFieldChange}\n        {...restProps}\n      >\n\n        <AppointmentForm.Label text=\"All Participants\" type=\"title\" />\n        <AppointmentForm.TextEditor\n          value={appointmentData.username}\n          readOnly\n        />\n\n      </AppointmentForm.BasicLayout>\n    );\n  };\n\n\n  return (\n    <>\n      {\n        loading ?\n          <Loader />\n          :\n          <>\n           <div style ={{display : \"flex\", height : \"700px\"}}>\n            <Paper>\n              <Scheduler data={data} >\n                <ViewState\n                  defaultCurrentDate={currentDate}\n                  defaultCurrentViewName=\"Week\"\n                />\n                <EditingState onCommitChanges={commitChanges} />\n                <EditRecurrenceMenu />\n\n                <DayView cellDuration={60} startDayHour={0} endDayHour={24} />\n                <WeekView cellDuration={60} startDayHour={0} endDayHour={24}  />\n                \n                <Appointments appointmentComponent={myAppointment} />\n\n                <Toolbar />\n                <DateNavigator />\n                <TodayButton />\n                <ViewSwitcher />\n\n                <AppointmentTooltip showOpenButton />\n\n                {\n                  read ?\n                    <AppointmentForm\n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                      readOnly\n                    />\n                    :\n                    <AppointmentForm\n                      booleanEditorComponent={BooleanEditor}\n                      basicLayoutComponent={BasicLayout}\n                      textEditorComponent={TextEditor}\n                    />\n                }\n\n                <Resources\n                  data={resources}\n                />\n              </Scheduler>\n            </Paper>\n            </div>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Demo;","/home/pooja/MazarsRepo/src/components/Search-Filter/tpfilter.js",["3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566"],"\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction TaxProfessionalFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    records,\n    setRecords,\n    setData,\n    getData,\n    AllQuery,\n    pendingForAcceptence,\n    InprogressQuery,\n    DeclinedQuery,\n\n    completeAssignment,\n    proposal,\n    AllProposal,\n    InprogressProposal,\n    assignment,\n    AllPayment,\n    Unpaid,\n    Paid\n  } = props;\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [status1, setStatus1] = useState(1);\n\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  \n  const [item] = useState(current_date);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      if(selectedData != undefined){\n        axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n         \n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n      }\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n  \n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n  \n    setSelectedData([]);\n    setStore2([]);\n    setTax2([])\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n  \n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    setStatus1(1)\n    getData();\n  };\n\n  const onSubmit = (data) => {\n  \n    if (AllQuery == \"AllQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n\n    if (pendingForAcceptence == \"pendingForAcceptence\") {\n      axios\n        .get(\n          `${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n    if (InprogressQuery == \"InprogressQuery\") {\n\n  \n      axios\n        .get(\n          `${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=${status1}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (DeclinedQuery == \"DeclinedQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (completeAssignment == \"completeAssignment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getCompleteQues?tp_id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n    if (AllProposal == \"AllProposal\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (InprogressProposal == \"InprogressProposal\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if(proposal == \"proposal\"){\n      axios\n      .get(\n        `${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&status=2&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setData(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n    }\n    if (AllPayment == \"AllPayment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (Unpaid == \"Unpaid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?&tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=1&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n        \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (Paid == \"Paid\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?tp_id=${JSON.parse(userid)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=2&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n       \n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n                <div class=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    defaultValue={item}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n\n                  {AllQuery == \"AllQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress; Queries</option>\n                      <option value=\"2\">Completed; Queries</option>\n                      <option value=\"3\">Declined; Queries</option>\n                    </select>\n                  )}\n\n                  {InprogressQuery == \"InprogressQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                      onChange={(e) => setStatus1(e.target.value)}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Allocation</option>\n                      <option value=\"5\">Inprogress; Proposals</option>\n                      <option value=\"6\">Inprogress; Assignments</option>\n                    </select>\n                  )}\n\n\n                  {DeclinedQuery == \"DeclinedQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"3\">Customer Declined; Proposals</option>\n                      <option value=\"4\">Customer Declined; Payment</option>\n                    </select>\n                  )}\n\n                  {AllProposal == \"AllProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress; Proposals</option>\n                      <option value=\"2\">Accepted; Proposals</option>\n                      <option value=\"3\">Customer Declined; Proposals</option>\n                    </select>\n                  )}\n\n                  {InprogressProposal == \"InprogressProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Preparation</option>\n                      <option value=\"5\">Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {AllPayment == \"AllPayment\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Unpaid</option>\n                      <option value=\"2\">Paid</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TaxProfessionalFilter;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AllProposal.js",["3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChatHistory from \"./ChatHistory\";\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\n\n\nfunction AllProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const chatHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n               \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <div>\n                                        {row.status}/\n                                        <p className=\"inprogress\">\n                                            {row.statusdescription}\n                                        </p>\n                                    </div>\n                                    :\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        <p className=\"declined\">\n                                            {row.status}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.status}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <div>\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\" ? (\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\"  || row.status_code == \"10\" ?\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\n\n                                    <a\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\n                                        target=\"_blank\"\n                                    >\n                                        <i\n                                            class=\"fa fa-eye\"\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\n                                        />\n                                    </a>\n                                </div>\n                                :\n                                null\n                            }\n\n\n                            <div>\n                            {\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        null :\n                                        <div title=\"Send Message\">\n                                            <Link\n                                                to={{\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n            }\n                            </div>\n\n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        </div>\n                    </>\n                );\n            },\n        },\n     \n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        AllProposal=\"AllProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                    <ChatHistory\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        qno={id}\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllProposal;\n\n\n\n\n{/* <div>\n                                {row.revised_text && (\n                                    <div style={{ cursor: \"pointer\" }} title=\"View History\">\n                                        <i\n                                            class=\"fa fa-comments-o\"\n                                            style={{ color: \"green\", fontSize: \"16px\", color: \"light-blue\", }}\n                                            onClick={() => chatHandler(row)}\n                                        ></i>\n                                    </div>\n                                )}\n                            </div> */}","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/ProposalComponent.js",["3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3596","3597","3598","3599","3600","3601","3602","3603","3604"],"import React, { useState, useEffect } from \"react\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Alert,\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport Payment from \"./Payment\";\nimport Select from \"react-select\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from 'reactstrap';\n\n\n\nfunction ProposalComponent(props) {\n  const { id } = props;\n  const history = useHistory();\n  const { handleSubmit, register, errors } = useForm();\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n  const [store, setStore] = useState(null);\n  const [diserror, setdiserror] = useState(\"\")\n  const [payment, setPayment] = useState([]);\n  const [installment, setInstallment] = useState([]);\n  const [error, setError] = useState('');\n  const [totalAmount, setTotalAmount] = useState(null);\n  const [paymentError, setpaymentError] = useState();\n\n  const [date, setDate] = useState();\n  const [amount, setAmount] = useState();\n  \n  const [dateError, setDateError] = useState(false)\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  const [item] = useState(current_date);\n\n\n  useEffect(() => {\n    const getQuery = () => {\n      axios\n        .get(\n          `${baseUrl}/tl/pendingTlProposal?tp_id=${JSON.parse(\n            userid\n          )}&assign_id=${id}`\n        )\n        .then((res) => {\n          if (res.data.code === 1) {\n            if (res.data.result.length > 0) {\n              setAssingNo(res.data.result[0].assign_no);\n              setAssignID(res.data.result[0].id);\n            }\n          }\n        });\n    };\n    getQuery();\n  }, []);\n\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n\n    getUser();\n  }, [id]);\n\n\n  const onSubmit = (value) => {\n    if(diserror.length > 0 ){\n      return false\n    }\n    else if(dateError === true){\n     Alerts.ErrorNormal(\"Date must be unique\")\n    }\n    else{\n    var lumsum = value.p_inst_date\n    if (payment.label == \"lumpsum\") {\n      setDate(lumsum)\n    }\n    \n    // var arrAmount = []\n    // var arrDate = []\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tp\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"assign_id\", assignId);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"description\", value.description);\n    formData.append(\"amount_type\", \"fixed\");\n    formData.append(\"amount\", value.p_fixed);\n    formData.append(\"installment_amount\", amount);\n\n    formData.append(\"payment_terms\", payment.value);\n    formData.append(\"no_of_installment\", installment.value);\n\n    payment.label == \"lumpsum\" ?\n      formData.append(\"due_date\", lumsum) :\n      payment.label == \"installment\" ?\n        formData.append(\"due_date\", date) :\n        formData.append(\"due_date\", \"\")\n\n    if (payment.length < 1) {\n     \n      setpaymentError(\"Please select at lease one\")\n    } else\n      if (payment.value == \"installment\") {\n        if (installment == \"\") {\n          Alerts.ErrorNormal(`Please select no of installment .`)\n          console.log(\"Please select no of installment --\", installment)\n        } else\n          if (!amount || !date) {\n            Alerts.ErrorNormal(`Please enter all fields.`)\n            console.log(\"Please enter all fields\")\n          } else if (amount && date) {\n            console.log(\"all deatils ** here --\")\n\n            console.log(\"installment.value -\", installment.value)\n\n            if (installment.value > 0) {\n              var a = Number(installment.value)\n              for (let i = 0; i < a; i++) {\n                // arrAmount.push(amount[i])\n                // arrDate.push(date[i])\n                if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\n                  Alerts.ErrorNormal(`Please enter amount`)\n                  console.log(\"Please enter amount\")\n                  return false\n                }\n                if (date[i] == \"\" || date[i] == undefined) {\n                  Alerts.ErrorNormal(`Please enter date`)\n                  console.log(\"Please enter date\")\n                  return false\n                }\n              }\n              var sum = amount.reduce(myFunction)\n              function myFunction(total, value) {\n                return Number(total) + Number(value);\n              }\n              if (value.p_fixed != sum) {\n                Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n                console.log(`Sum of all installments should be equal to ${value.p_fixed}.`)\n              } else {\n                console.log(\"call else fine api for installment\")\n                setLoading(true)\n                axios({\n                  method: \"POST\",\n                  url: `${baseUrl}/tp/uploadProposal`,\n                  data: formData,\n                })\n                  .then(function (response) {\n                    console.log(\"res-\", response);\n                    if (response.data.code === 1) {\n                      setLoading(false)\n                      Alerts.SuccessNormal(\"Proposal sent successfully.\")\n                      history.push(\"/taxprofessional/proposal\");\n                    } else if (response.data.code === 0) {\n                      setLoading(false)\n                    }\n                  })\n                  .catch((error) => {\n                    console.log(\"erroror - \", error);\n                  });\n              }\n            }\n          }\n      } else if (payment.label == \"lumpsum\") {\n        console.log(\"call api for lumshum\",)\n        setLoading(true)\n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tp/uploadProposal`,\n          data: formData,\n        })\n          .then(function (response) {\n            console.log(\"res-\", response);\n            if (response.data.code === 1) {\n              setLoading(false)\n              var variable = \"Proposal sent successfully. \"\n              Alerts.SuccessNormal(variable)\n              history.push(\"/taxprofessional/proposal\");\n            } else if (response.data.code === 0) {\n              setLoading(false)\n            }\n          })\n          .catch((error) => {\n            console.log(\"erroror - \", error);\n          });\n      }\n    }\n\n\n  };\n\n\n\n  const paymentAmount = (data) => {\n    console.log(\"paymentAmount\", data)\n\n    var array1 = []\n    Object.entries(data).map(([key, value]) => {\n      array1.push(value)\n    });\n    setAmount(array1);\n  };\n\n  const paymentDate = (data) => {\n    console.log(\"paymentDate\", data)\n\n    var array2 = []\n    Object.entries(data).map(([key, value]) => {\n      array2.push(value)\n    });\n    setDate(array2);\n    if(new Set(array2).size !== array2.length){\n      setDateError(true)\n     Alerts.ErrorNormal(\"Date must be unique\")\n    }\n    else{\n      setDateError(false)\n    }\n  };\n\n\n  const handleChange = (e) => {\n    console.log(\"val-\", e.target.value);\n    if (isNaN(e.target.value)) {\n      setdiserror(\"Please enter number only.\");\n    }\n    else {\n      setdiserror(\"\");\n    }\n    setTotalAmount(e.target.value);\n  };\n\n  const installmentHandler = (key) => {\n    console.log(\"key\", key)\n    setInstallment(key)\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div>\n                <h4>Prepare Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <p style={{ color: \"red\" }}>{error}</p>\n            <div style={{ display: \"flex\" }}>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    className=\"form-control\"\n                    value={assingNo}\n                    ref={register}\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <label>Fee</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_type\"\n                    onChange={(e) => setStore(e.target.value)}\n                  >\n                    <option value=\"fixed\">Fixed Price</option>\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fixed Price<span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    name=\"p_fixed\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_fixed,\n                    })}\n                    ref={register({ required: true })}\n                    placeholder=\"Enter Fixed Price\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </div>\n                <p style={{ \"color\": \"red\" }}>{diserror}</p>\n                <div class=\"form-group\">\n                  <label>Scope of Work<span className=\"declined\">*</span></label>\n                  <textarea\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    ref={register({ required: true })}\n                    placeholder=\"Enter Proposal Description\"\n                  ></textarea>\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    className=\"form-control\"\n                    value={custname}\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Payment Terms<span className=\"declined\">*</span></label>\n                  <Select\n                    className={paymentError ? \"customError\" : \"\"}\n                    onChange={(e) => {\n                      setPayment(e)\n                      setpaymentError(\"\")\n                    }}\n                    options={payment_terms}\n                  />\n\n                </div>\n\n                {payment.label == \"lumpsum\" ? (\n                  <div class=\"form-group\">\n                    <label>Due Dates</label>\n                    <input\n                      type=\"date\"\n                      name=\"p_inst_date\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_inst_date\n                      })}\n                      ref={register({ required: true })}\n                      placeholder=\"Enter Hourly basis\"\n                      min={item}\n                    />\n                  </div>\n                ) :\n                  payment.label == \"installment\" ? (\n                    <div class=\"form-group\">\n                      <label>No of Installments</label>\n                      <Select\n                        onChange={(e => installmentHandler(e))}\n                        options={no_installments}\n                      />\n                    </div>\n                  )\n                    : \"\"\n                }\n\n                {\n                  payment.label == \"lumpsum\"\n                    ?\n                    \"\"\n                    :\n                    <Payment\n                      installment={installment.label}\n                      paymentAmount={paymentAmount}\n                      paymentDate={paymentDate}\n                      totalAmount={totalAmount}\n                      min={item}\n                      item={item}\n                    />\n                }\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group col-md-6\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" class=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n\n          </form>\n          <Mandatory />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default ProposalComponent;\n\n\nconst payment_terms = [\n  {\n    value: \"lumpsum\",\n    label: \"lumpsum\",\n  },\n  {\n    value: \"installment\",\n    label: \"installment\",\n  },\n];\n\nconst no_installments = [\n  {\n    value: \"2\",\n    label: \"2\",\n  },\n  {\n    value: \"3\",\n    label: \"3\",\n  },\n  {\n    value: \"4\",\n    label: \"4\",\n  },\n];\n\n\n    // if (amount) {\n        //   var sum = amount.reduce(myFunction)\n        //   function myFunction(total, value) {\n        //     return Number(total) + Number(value);\n        //   }\n        // }\n        // if (value.p_fixed != sum) {\n        //   Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n        // } else if (!date) {\n        //   console.log(\"call date\")\n        //   Alerts.ErrorNormal(`Please date should be enter`)\n        // }\n\n // var lumsum = value.p_inst_date\n    // setDate(lumsum)\n\n    // if (payment.length < 1) {\n    //   setpaymentError(\"Please select at lease one\")\n    // }\n    // else {\n    //   setpaymentError(\"\")\n    //   let formData = new FormData();\n\n    // formData.append(\"assign_no\", assingNo);\n    // formData.append(\"name\", value.p_name);\n    // formData.append(\"type\", \"tl\");\n    // formData.append(\"id\", JSON.parse(userid));\n    // formData.append(\"assign_id\", assignId);\n    // formData.append(\"customer_id\", custId);\n    // formData.append(\"description\", value.description);\n\n    // formData.append(\"amount_type\", \"fixed\");\n    // formData.append(\"amount\", value.p_fixed);\n    // formData.append(\"installment_amount\", amount);\n\n    // formData.append(\"payment_terms\", payment.value);\n    // formData.append(\"no_of_installment\", installment.value);\n\n    // payment.label == \"lumpsum\" ?\n    //   formData.append(\"due_date\", lumsum) :\n    //   payment.label == \"installment\" ?\n    //     formData.append(\"due_date\", date) :\n    //     formData.append(\"due_date\", \"\")\n\n    //   console.log(\"payment -\", payment.label)\n\n    //   if (payment.value == \"installment\") {\n    //     console.log(\"amount --\", amount)\n    //     console.log(\"date --\", date)\n\n    // if (!amount || !date) {\n    //   Alerts.ErrorNormal(`please enter all fields`)\n    // } else\n    // if (amount && date) {\n    //   if (installment.value > 0) {\n    //     console.log(\"installment** --\")\n\n    //     var a = Number(installment.value)\n    //     for (let i = 0; i < a; i++) {\n    //       // console.log(\"call for loop\", i, amount[i])\n    //       if (amount[i] == \"\" || amount[i] == undefined || amount[i] <= 0) {\n    //         console.log(\"amount --1\", amount[i])\n    //         Alerts.ErrorNormal(`please insert all fields.`)\n    //         return false\n    //       }\n    //     }\n    //     var sum = amount.reduce(myFunction)\n    //     function myFunction(total, value) {\n    //       return Number(total) + Number(value);\n    //     }\n    //     if (value.p_fixed != sum) {\n    //       Alerts.ErrorNormal(`Sum of all installments should be equal to ${value.p_fixed}.`)\n    //     } else {\n    //       console.log(\"calll else fine api\")\n    //     }\n    //   }\n    //       }\n    //       else {\n    //         console.log(\"call else\")\n    //         return false\n    //         setLoading(true)\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/tl/uploadProposal`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //     console.log(\"res-\", response);\n    //     if (response.data.code === 1) {\n    //       setLoading(false)\n    //       Alerts.SuccessNormal(\"Proposal sent successfully.\")\n    //       history.push(\"/teamleader/proposal\");\n    //     } else if (response.data.code === 0) {\n    //       setLoading(false)\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n    //       }\n    //   }\n    //   else {\n    // setLoading(true)\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/tl/uploadProposal`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //     console.log(\"res-\", response);\n    //     if (response.data.code === 1) {\n    //       setLoading(false)\n\n    //       var variable = \"Proposal sent successfully. \"\n    //       Alerts.SuccessNormal(variable)\n    //       history.push(\"/teamleader/proposal\");\n    //     } else if (response.data.code === 0) {\n    //       setLoading(false)\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n    //   }\n    // }\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/InprogressProposal.js",["3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport ChatHistory from \"./ChatHistory\";\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction InprogressProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const chatHandler = (key) => {\n     \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=1`)\n            .then((res) => {\n            \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n               \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n\n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <p className=\"completed\">\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n              \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n              \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <div>\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\" ? (\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\"  || row.status_code == \"10\" ?\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\n\n                                    <a\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\n                                        target=\"_blank\"\n                                    >\n                                        <i\n                                            class=\"fa fa-eye\"\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\n                                        />\n                                    </a>\n                                </div>\n                                :\n                                null\n                            }\n\n\n                            <div>\n                               \n                                        <div title=\"Send Message\">\n                                            <Link\n                                                to={{\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                              \n                            </div>\n\n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        InprogressProposal=\"InprogressProposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                    <ChatHistory\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        qno={id}\n                    />\n\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default InprogressProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/AcceptedProposal.js",["3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\n// import DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction AcceptedProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const chatHandler = (key) => {\n       \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n   \n\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=2`)\n            .then((res) => {\n            \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n           \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n          \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n             \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n\n                            {\n                                row.status == \"Accepted; Proposal\" ?\n                                    <p className=\"completed\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n              \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n                \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <div>\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\" ? (\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                           \n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\n\n                                    <a\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\n                                        target=\"_blank\"\n                                    >\n                                        <i\n                                            class=\"fa fa-eye\"\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\n                                        />\n                                    </a>\n                                </div>\n                               \n\n\n                            <div>\n                                {\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        null\n                                        :\n                                        <div title=\"Send Message\">\n                                            <Link\n                                                to={{\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                }\n                            </div>\n\n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    // onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"proposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                    />\n                    {/* <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    /> */}\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AcceptedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/DeclinedProposal.js",["3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\n import DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\n\nfunction DeclinedProposal() {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const chatHandler = (key) => {\n      \n        setPaymentModal(!addPaymentModal);\n        setId(key.assign_no);\n    };\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/tl/getProposalTl?tp_id=${JSON.parse(userid)}&status=3`)\n            .then((res) => {\n             \n                if (res.data.code === 1) {\n                    setProposal(res.data.result);\n                    setCount(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n        {\n            dataField: \"query_date\",\n            text: \"Date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.query_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n            \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n            \n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance / decline of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Customer Declined; Proposal\" ?\n                                    <p className=\"declined\">\n                                        {row.status}\n                                    </p> :\n                                    null\n                            }\n\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            dataField: \"\",\n            text: \"Proposed Amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.ProposedAmount;\n              \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField: \"accepted_amount\",\n            text: \"Accepted Amount \",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.accepted_amount;\n              \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <div>\n                                {row.status_code == \"4\" ? (\n                                    <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\n                                        <i\n                                            className=\"fa fa-edit\"\n                                            style={{\n                                                fontSize: \"16px\",\n                                                cursor: \"pointer\",\n                                                color: \"green\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : row.status_code == \"2\" ? (\n                                    <Link to={`/taxprofessional/sendproposal/${row.id}`}>\n                                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                            }}\n                                        ></i>\n                                    </Link>\n                                ) : null}\n                            </div>\n\n                            {row.status_code > \"3\" ?\n                                <div style={{ cursor: \"pointer\", marginLeft: \"8px\" }} title=\"View Proposal\">\n\n                                    <a\n                                        href={`${baseUrl}/customers/dounloadpdf?id=${row.id}&viewpdf=1`}\n                                        target=\"_blank\"\n                                    >\n                                        <i\n                                            class=\"fa fa-eye\"\n                                            style={{ color: \"green\", fontSize: \"16px\" }}\n                                        />\n                                    </a>\n                                </div>\n                                :\n                                null\n                            }\n\n\n                            <div>\n                                {\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        null\n                                        :\n                                        <div title=\"Send Message\">\n                                            <Link\n                                                to={{\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n                                }\n                            </div>\n                            {\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        null :\n                            <div title=\"Send Message\">\n                                            <Link\n                                                to={{\n                                                    pathname: `/taxprofessional/chatting/${row.id}`,\n                                                    obj: {\n                                                        message_type: \"2\",\n                                                        query_No: row.assign_no,\n                                                        query_id: row.id,\n                                                        routes: `/taxprofessional/proposal`\n                                                    }\n                                                }}\n                                            >\n                                                <i\n                                                    class=\"fa fa-comments-o\"\n                                                    style={{\n                                                        fontSize: 16,\n                                                        cursor: \"pointer\",\n                                                        marginLeft: \"8px\",\n                                                        color: \"blue\"\n                                                    }}\n                                                ></i>\n                                            </Link>\n                                        </div>\n            }\n                            <div title=\"View Discussion Message\">\n                                <i\n                                    class=\"fa fa-comments-o\"\n                                    style={{\n                                        fontSize: 16,\n                                        cursor: \"pointer\",\n                                        color: \"orange\"\n                                    }}\n                                    onClick={() => ViewDiscussionToggel(row.assign_no)}\n                                ></i>\n                            </div>\n                        </div>\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setProposal}\n                        getData={getProposalList}\n                        proposal=\"proposal\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default DeclinedProposal;\n\n","/home/pooja/MazarsRepo/src/pages/TP/QueriesTab/AllQuery.js",["3645","3646","3647","3648","3649","3650","3651","3652","3653","3654"],"import React, { useState, useEffect } from \"react\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\n\nfunction AllQuery() {\n\n    const userid = window.localStorage.getItem(\"tpkey\");\n\n    const [incompleteData, setInCompleteData] = useState([]);\n    const [records, setRecords] = useState([]);\n\n\n    const [assignNo, setAssignNo] = useState('');\n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const ViewDiscussionToggel = (key) => {\n        setViewDiscussion(!ViewDiscussion);\n        setAssignNo(key)\n    }\n\n    useEffect(() => {\n        getInCompleteAssingment();\n    }, []);\n\n    const getInCompleteAssingment = () => {\n        axios\n            .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setInCompleteData(res.data.result);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n              \n                return (\n                    <>\n                     \n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.id}`,\n                                index: 1,\n                                routes: \"queriestab\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"Customer Name\",\n            dataField: \"name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"\tExp. Delivery Date\",\n            dataField: \"Exp_Delivery_Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n              \n                var oldDate = row.Exp_Delivery_Date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress Query\" ?\n                                    <p className=\"inprogress\">\n\n                                        {row.statusdescription}\n                                    </p>\n                                    :\n                                    row.status == \"Declined Query\" ?\n                                        <p className=\"declined\">\n\n                                            {row.statusdescription}\n                                        </p> :\n                                        row.status == \"Completed Query\" ?\n                                            <p className=\"completed\">\n\n                                                {row.statusdescription}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function (cell, row) {\n              \n                return (\n                    <>\n                     {row.tp_status == \"1\" ? null : \n                      \n                      <div\n                      style={{\n                          display: \"flex\",\n                          justifyContent: \"space-evenly\",\n                          color: \"green\",\n                      }}\n                  >\n                     \n\n                      {row.status == \"Declined Query\" ? null :\n                      <div title=\"Send Message\">\n                      <Link\n                          to={{\n                              pathname: `/taxprofessional/chatting/${row.id}`,\n                              obj: {\n                                  message_type: \"4\",\n                                  query_No: row.assign_no,\n                                  query_id: row.id,\n                                  routes: `/taxprofessional/proposal`\n                              }\n                          }}\n                      >\n                          <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                  fontSize: 16,\n                                  cursor: \"pointer\",\n                                  marginLeft: \"8px\",\n                                  color: \"blue\"\n                              }}\n                          ></i>\n                      </Link>\n                  </div>}\n\n                      <div title=\"View Discussion Message\">\n                          <i\n                              class=\"fa fa-comments-o\"\n                              style={{\n                                  fontSize: 16,\n                                  cursor: \"pointer\",\n                                  color: \"orange\"\n                              }}\n                              onClick={() => ViewDiscussionToggel(row.assign_no)}\n                          ></i>\n                      </div>\n                  </div>}\n                    </>\n                );\n            },\n        },\n    ];\n\n    return (\n        <>\n            <Card>\n                <CardHeader>\n                    <TaxProfessionalFilter\n                        setData={setInCompleteData}\n                        getData={getInCompleteAssingment}\n                        AllQuery=\"AllQuery\"\n                        setRecords={setRecords}\n                        records={records}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={incompleteData}\n                        columns={columns}\n                        rowIndex\n                    />\n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getInCompleteAssingment}\n                    />\n\n                </CardBody>\n            </Card>\n        </>\n    );\n}\n\nexport default AllQuery;\n","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/PendingForAcceptence.js",["3655"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport RejectedModal from \"./RejectedModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport { useHistory } from \"react-router\";\n\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\n  let history = useHistory();\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [loading, setLoading] = useState(false);\n\n  const [pendingData, setPendingData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [pay, setPay] = useState({\n    id: \"\",\n    allocation_id: \"\",\n  });\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const rejectHandler = (key) => {\n   \n    setPaymentModal(!addPaymentModal);\n    setPay({\n      id: key.id,\n      allocation_id: key.allocation_id,\n    });\n  };\n\n  useEffect(() => {\n    getPendingforAcceptance();\n  }, []);\n\n  const getPendingforAcceptance = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingQues?tp_id=${JSON.parse(userid)}`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setPendingData(res.data.result);\n          setRecords(res.data.result.length);\n          // CountPendingForAcceptence(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.query_created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 0,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Accept / Reject\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                color: \"#6967ce\",\n                cursor: \"pointer\",\n              }}\n              id=\"div1\"\n            >\n              <div\n                id=\"accept\"\n                title=\"Accept Assignment\"\n                onClick={() => acceptHandler(row)}\n              >\n                <i\n                  class=\"fa fa-check\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n              <div\n                id=\"reject\"\n                title=\"Reject Assignment\"\n                // onClick={() => rejectHandler(row)}\n                onClick={() => rejectHandler(row)}\n              >\n                <i\n                  class=\"fa fa-times\"\n                  style={{ color: \"red\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  const acceptHandler = (key) => {\n\n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tp_id\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n   \n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n    \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query accepted successfully.\")\n          \n          getPendingforAcceptance();\n         // updateTab(1);\n         history.push(\"/taxprofessional/proposal\")\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setPendingData}\n            getData={getPendingforAcceptance}\n            pendingForAcceptence=\"pendingForAcceptence\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          {\n            loading ?\n              <Spinner color=\"primary\" />\n              :\n              <BootstrapTable\n                bootstrap4\n                keyField=\"id\"\n                data={pendingData}\n                columns={columns}\n                rowIndex\n              />\n          }\n          <RejectedModal\n            rejectHandler={rejectHandler}\n            addPaymentModal={addPaymentModal}\n            pay={pay}\n            getPendingforAcceptance={getPendingforAcceptance}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForAcceptence;\n\n","/home/pooja/MazarsRepo/src/pages/TP/InCompleteData/InCompleteData.js",["3656","3657","3658","3659","3660","3661","3662","3663","3664","3665"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\n\n\nfunction InCompleteData({ CountIncomplete }) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [assignNo, setAssignNo] = useState('');\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    setAssignNo(key)\n  }\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=1`)\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n     \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}{row.statusdescription && \"/\"}\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n          return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        \n          return (\n              <>\n               {row.tp_status == \"1\" ? null : \n                \n                <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"space-evenly\",\n                    color: \"green\",\n                }}\n            >\n               \n\n                {row.status == \"Declined Query\" ? null :\n                <div title=\"Send Message\">\n                <Link\n                    to={{\n                        pathname: `/taxprofessional/chatting/${row.id}`,\n                        obj: {\n                            message_type: \"4\",\n                            query_No: row.assign_no,\n                            query_id: row.id,\n                            routes: `/taxprofessional/proposal`\n                        }\n                    }}\n                >\n                    <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                            fontSize: 16,\n                            cursor: \"pointer\",\n                            marginLeft: \"8px\",\n                            color: \"blue\"\n                        }}\n                    ></i>\n                </Link>\n            </div>}\n\n                <div title=\"View Discussion Message\">\n                    <i\n                        class=\"fa fa-comments-o\"\n                        style={{\n                            fontSize: 16,\n                            cursor: \"pointer\",\n                            color: \"orange\"\n                        }}\n                        onClick={() => ViewDiscussionToggel(row.assign_no)}\n                    ></i>\n                </div>\n            </div>}\n              </>\n          );\n      },\n  },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            InprogressQuery=\"InprogressQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n\n          <DiscardReport\n            ViewDiscussionToggel={ViewDiscussionToggel}\n            ViewDiscussion={ViewDiscussion}\n            report={assignNo}\n            getData={getInCompleteAssingment}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InCompleteData;\n","/home/pooja/MazarsRepo/src/pages/TP/CompleteData/CompleteData.js",["3666","3667","3668","3669","3670","3671","3672","3673"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\n\n\n\nfunction CompletedQuery() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?tp_id=${JSON.parse(userid)}&status=2`)\n      .then((res) => {\n\n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n     \n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n       \n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}{row.statusdescription && \"/\"}\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            inCompleteQuery=\"inCompleteQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default CompletedQuery;\n","/home/pooja/MazarsRepo/src/pages/TP/DeclinedQuery/DeclinedQuery.js",["3674","3675","3676","3677","3678","3679"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProfessionalFilter from \"../../../components/Search-Filter/tpfilter\";\n\nfunction DeclinedQuery({ CountIncomplete }) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/declinedQueries?tp_id=${JSON.parse(userid)}`)\n      .then((res) => {\n     \n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n      \n        return (\n          <>\n            {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/taxprofessional/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status} /\n              {\n                row.status == \"Declined Query\" ?\n                  <p className=\"declined\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TaxProfessionalFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            DeclinedQuery=\"DeclinedQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedQuery;\n","/home/pooja/MazarsRepo/src/pages/TP/Login/VerifyOtpLogin.js",["3680"],"\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport Mandatory from \"../../../components/Common/Mandatory\";\nimport { Spinner } from \"reactstrap\";\nimport LoadingTime from '../../../components/LoadingTime/LoadingTime';\n\n\nconst Schema = yup.object().shape({\n  p_otp: yup.string().required(\"\"),\n});\n\n\nfunction VerifyOtp({ email, uid, loading, setLoading }) {\n \n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const history = useHistory();\n  const [time, setTime] = useState('')\n  const [disabled, setDisabled] = useState(false)\n  const [num, changeNum] = useState(false);\n\n\n  useEffect(() => {\n    LoadingTime.timer2(setTime, setDisabled)\n  }, [num]);\n\n  useEffect(() => {\n    LoadingTime.timer2(setTime, setDisabled)\n  }, []);\n\n  const validOtp = (e) => {\n    if (isNaN(e.target.value)) {\n      Alerts.ErrorNormal(\"Please enter number only\")\n    }\n  }\n\n\n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/verifyloginotp`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code == 1) {\n          setLoading(false)\n          Alerts.SuccessLogin(\"Logged in successfully.\")\n          localStorage.setItem(\"tpkey\", JSON.stringify(response.data[\"user id\"]));\n          localStorage.setItem(\"tpEmail\", JSON.stringify(response.data.name));\n          history.push(\"/taxprofessional/dashboard\");\n\n        } else {\n          Alerts.ErrorNormal(\"Incorrect OTP, please try again.\")\n          setLoading(false)\n          reset();\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n  const resendOtp = () => {\n    setLoading(true)\n    changeNum(true)\n    let formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"id\", uid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/regenrateotp`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n          setDisabled(false)\n        }\n        else if (response.data.code === 0) {\n          setLoading(false)\n          Alerts.ErrorNormal(\"Some thing went wrong, please try again\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n\n  return (\n    <>\n\n      <div class=\"container\">\n        <div class=\"otp\">\n          <div class=\"heading text-center\">\n            <h2>Verify Your OTP</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            {\n              disabled ?\n                null\n                :\n                <div class=\"form-group\">\n                  <label className=\"form-label\">Enter OTP <span className=\"declined\">*</span></label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_otp,\n                    })}\n                    id=\"otp\"\n                    placeholder=\"Enter Your OTP Here\"\n                    ref={register}\n                    name=\"p_otp\"\n                    autocomplete=\"off\"\n                    onChange={(e) => validOtp(e)}\n                  />\n                  {errors.p_otp && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_otp.message}\n                    </div>\n                  )}\n                  <small class=\"text-center\">\n                    Note: OTP is valid for {time} seconds.\n                  </small>\n                  <Mandatory />\n                </div>\n            }\n\n            {\n              loading ?\n                <Spinner color=\"primary\" />\n                :\n                <div class=\"text-center\">\n                  {\n                    disabled ?\n                      <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>SEND OTP</button>\n                      :\n                      <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button>\n                  }\n                </div>\n            }\n          </form>\n\n        </div>\n      </div>\n\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/home/pooja/MazarsRepo/src/components/AgoraVideoCall/index.jsx",["3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport axios from \"axios\";\nimport \"./canvas.css\";\nimport \"../../assets/fonts/css/icons.css\";\nimport Cookies from \"js-cookie\";\n\nvar customer_id = \"d339577a294c458c86d8a78b474141fc\";\nvar customer_secret = \"1a61a4bef2144e78be6f671d5cf3fc32\";\n\n\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12/7/13\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.customerName = Cookies.get(\"custName\")\n    this.client = {};\n    this.screenTrack = {}\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n      addRemote : null,\n      participantName : ''\n    };\n  }\nchannelName = this.props.channel\n\ncustEmail2 = window.localStorage.getItem(\"custEmail\");\n  componentWillMount() {\n    let $ = this.props;\n    // init AgoraRTC local client\nconsole.log(\"customerName\", this.customerName)\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    this.client.init($.appId, () => {\n      \n      this.subscribeStreamEvents();\n\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n        var data_post_api = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/userdata?channel_name=\"+this.channelName+\"&rtm_id=\"+\"\"+\"&rtc_id=\"+uid+\"&user_name=\"+this.customerName;\n        axios.get(`${data_post_api}`).\n        then((res) => {\n        \n        \n        })\n        this.state.uid = uid;\n       \n        // create local stream\n        // It is not recommended to setState in function addStream\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(\n          () => {\n            if ($.attendeeMode !== \"audience\") {\n              this.addStream(this.localStream, true);\n              this.client.publish(this.localStream, (err) => {\n             \n              });\n            }\n            this.setState({ readyState: true });\n          },\n          (err) => {\n           \n            this.setState({ readyState: true });\n          }\n        );\n      });\n    });\n  }\n\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n  }\n\n  // componentWillUnmount () {\n  //     // remove listener\n  //     let canvas = document.querySelector('#ag-canvas')\n  //     canvas.removeEventListener('mousemove')\n  // }\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n         \n         \n          var newContent = document.createTextNode(this.state.participantName); \n          item.play(\"ag-item-\" + id);\n      \n         box22.appendChild(newContent)\n        }\n        if (index === no - 1) {\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n        }\n\n       if(item.player !== undefined){\n        item.player.resize && item.player.resize();\n       }\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let no = this.state.streamList.length;\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n          \n          var newContent = document.createTextNode(this.state.participantName); \n          item.play(\"ag-item-\" + id);\n      \n         box22.appendChild(newContent)\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n    }\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    // this.localStream && this.localStream.close();\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n\n        },\n        () => {\n\n        }\n      );\n  }\n\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n      \n      rt.client.subscribe(stream, function (err) {\n       \n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n     \n      rt.removeStream(evt.uid);\n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n      let stream = evt.stream;\n      var apiData = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/getInfoByRTCId?channel_name=\"+this.channelName+\"&rtc_id=\"+stream.getId()\n  axios.get(`${apiData}`)\n  .then((res) =>{\n   \n    this.setState({ participantName : res.data[0].user_name })\n    if(res.data != undefined){\n      rt.addStream(stream);\n    }\n  })\n    \n \n    }.bind(this));\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n     \n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n  };\n\n  addStream = (stream, push = false) => {\n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n  };\n\n  handleCamera = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n\n  handleMic = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.disableAudio()\n      : this.localStream.enableAudio();\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };\n\n  handleExit = (e) => {\n    if (e.currentTarget.classList.contains(\"disabled\")) {\n      return;\n    }\n    try {\n      this.client && this.client.unpublish(this.localStream);\n      this.localStream && this.localStream.close();\n      if (this.state.stateSharing) {\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\n        this.shareStream && this.shareStream.close();\n      }\n      this.client &&\n        this.client.leave(\n          () => {\n\n          },\n          () => {\n          \n          }\n        );\n    } finally {\n      this.setState({ readyState: false });\n      this.client = null;\n      this.localStream = null;\n      // redirect to index\n      // window.location.hash = \"/customer/schedule\";\n      window.location.assign(\"/#/customer/schedule\")\n    }\n  };\n\n  sharingScreen = (e) => {\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n      this.state.stateSharing = false;\n    } else {\n      this.state.stateSharing = true;\n      let $ = this.props;\n      // init AgoraRTC local client\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n\n      this.shareClient.init($.appId, () => {\n      \n        this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n          this.state.uid = uid;\n         \n          // create local stream\n          // It is not recommended to setState in function addStream\n          \n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n                \n                });\n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n             \n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: false,\n      video: false,\n      screen: true,\n      control : true\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n\n\n\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\n\n  recordStream = () => {\n\n    var data = JSON.stringify({\n      \"cname\":\"demo\",\n      \"uid\":\"527841\",\n      \"clientRequest\":{ \"resourceExpiredHour\": 24}});\n\n      var config = {\n      method: 'post',\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\n      headers: { \n        'Content-Type': 'application/json', \n        'Authorization': 'Basic '+this.encodedString,\n      },\n      data : data\n      };\n        axios(config)\n        .then(function (response) {\n        \n        })\n        .catch(function (error) {\n\n        });\n  };\n\n\n  render() {\n\n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n        onClick={this.handleExit}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n        <i className=\"ag-icon ag-icon-leave\"></i>\n      </span>\n    );\n\n\n\n    const recordingBtn = (\n      <span\n        onClick={this.recordStream}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Record\"\n      >\n        <RecordVoiceOverIcon />\n      </span>\n    );\n\n\n    return (\n      <div id=\"ag-canvas\" style={style}>\n        <div className=\"ag-btn-group\">\n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n          {recordingBtn}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AgoraCanvas;\n\n\n// https://mazars.multitvsolution.com/#/customer/dashboard\n\n","/home/pooja/MazarsRepo/src/pages/TP/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/views/AssignmentTab/Assignmodal.js",["3695","3696"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\nimport { useHistory } from \"react-router-dom\";\nimport ShowError from \"../../components/LoadingTime/LoadingTime\";\nfunction Assignmodal({\n  additionalQuery,\n  additionalHandler,\n  assignNo,\n  modaldoc,\n  getData,\n  getQueriesData,\n}) {\n  const { handleSubmit, register } = useForm();\n  \n  const [loading, setLoading] = useState(false);\n \n  let history = useHistory();\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    var uploadImg = value.p_upload;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"upload\", file);\n       \n      }\n    }\n    formData.append(\"uid\", assignNo);\n    formData.append(\"doc_id\", modaldoc);\n    // formData.append(\"assign_no\", assignNo);\n\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/documentAttach`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          var message = response.data.message\n          if (message.invalid) {\n            Swal.fire({\n              title: 'Error !',\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\n            })\n          } else if (message.faill && message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n              icon: 'success',\n            })\n          } else if (message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p>${message.success}</p>`,\n              icon: 'success',\n            })\n          }\n          else if (message.faill) {\n            Swal.fire({\n              title: 'Success !',\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\n              icon: 'success',\n            })\n          }\n       \n        history.push(\"/customer/assignment\")\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n       \n      })\n      .catch((error) => {\n       ShowError.LoadingError(setLoading)\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={additionalQuery} toggle={additionalHandler} size=\"md\">\n        <ModalHeader toggle={additionalHandler}>UPLOAD DOCUMENTS</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Upload Your Document</label>\n              <input\n                type=\"file\"\n                name=\"p_upload\"\n                ref={register}\n                className=\"form-control-file\"\n              \n              />\n            </div>\n\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                  >\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Assignmodal;\n","/home/pooja/MazarsRepo/src/pages/TL/meeting/index.jsx",[],"/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/FinalReportUpload.js",["3697","3698","3699","3700"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\nfunction DraftReport({ fianlModal, uploadFinalReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n  const [loading, setLoading] = useState(false);\n\n\n  const onSubmit = (value) => {\n \n    setLoading(true)\n\n    let formData = new FormData();\n\n    var uploadImg = value.p_final;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"final_report[]\", file);\n      }\n    }\n\n\n    formData.append(\"id\", id.id);\n    formData.append(\"q_id\", id.q_id);\n    axios\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) => {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n\n          var message = response.data.message\n          if (message.invalid) {\n            Swal.fire({\n              title: 'Error !',\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\n            })\n          } else if (message.faill && message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n              icon: 'success',\n            })\n          } else if (message.success) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p>${message.success}</p>`,\n              icon: 'success',\n            })\n          }\n          else if (message.faill) {\n            Swal.fire({\n              title: 'Success',\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\n              icon: 'success',\n            })\n          }\n          getAssignmentList();\n          uploadFinalReport();\n          \n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_final\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n // formData.append(\"final_report\", value.p_final[0]);","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/ViewAllReport.js",["3701","3702","3703","3704","3705","3706","3707","3708","3709","3710","3711","3712","3713","3714","3715","3716","3717","3718"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\nimport * as yup from \"yup\";\nimport CommonServices from \"../../../common/common\";\nimport RejectedModal from \"./RejectModal\";\nimport Alerts from \"../../../common/Alerts\";\nimport Swal from \"sweetalert2\";\nimport DiscardReport from \"./DiscardReport\";\n\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction ViewReport({\n  reportModal,\n  ViewReport,\n  report,\n  dataItem\n}) {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const [data, setData] = useState([]);\n  const [docData, setDocData] = useState({});\n\n\n  const [nestedModal, setNestedModal] = useState(false);\n  const toggleNested = (key) => {\n    setNestedModal(!nestedModal);\n    setDocData(key)\n  }\n\n  const [ViewDiscussion, setViewDiscussion] = useState(false);\n  const ViewDiscussionToggel = (key) => {\n    setViewDiscussion(!ViewDiscussion);\n    // setDocData(report)\n  }\n\n\n  //check\n  const toggleDiscard = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"Do you want to discard ?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, discarted it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  const deleteCliente = (id) => {\n    \n    let formData = new FormData();\n    formData.append(\"tp_id\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"type\", 2);\n    formData.append(\"docid\", id.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          getData()\n          Alerts.SuccessNormal(\"Discarded Successfully\")\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n\n  useEffect(() => {\n    getData();\n  }, [report]);\n\n  const getData = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", report);\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n     \n        if (response.data.code === 1) {\n          setData(response.data.result)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  }\n\n\n  return (\n    <div>\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"lg\" scrollable>\n        <ModalHeader toggle={ViewReport}>\n          <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"55vw\"}}>\n            <span>View All Reports</span>\n            <span>\n              <button class=\"btn btn-success\" onClick={() => ViewDiscussionToggel()}>\n                View Discussion\n              </button>\n            </span>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Date</th>\n                <th scope=\"row\">Document</th>\n                <th scope=\"row\">Report Type</th>\n                <th scope=\"row\">Action</th>\n              </tr>\n            </thead>\n\n            {data.length > 0\n              ? data.map((p, i) => (\n                <tbody>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\n                    <td>\n                      <tr>\n                      {p.document && (\n                        <p style={{ display: \"flex\" }}>\n                          <a\n                            href={`${ReportUrl}/${report}/${p.document}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                        </p>\n                      )}\n                      </tr>\n                     {p.customer_files && \n                      <tr>\n                    \n                      <a\n                            href={`${ReportUrl}/${report}/${p.customer_files}`}\n                            target=\"_blank\"\n                          >\n                            <i class=\"fa fa-photo\"></i> \n                          </a> &nbsp; &nbsp; &nbsp;{p.customer_files}\n                    </tr> }\n                    </td>\n                  \n                    <td>\n                     <p> {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}</p>\n                 <br></br> \n                 {p.customer_files === null ?  \"\" : <p>   Reviewed Report </p> } </td>\n                    <td>\n                      {\n                        p.stages_type == \"2\" ?\n                          <div>\n                            {\n                              p.status == \"0\" ?\n                                <p style={{ color: \"red\" }}>Pending</p>\n                                :\n                                p.status == \"1\" ?\n                                  <div style={{ cursor: \"pointer\" }} title=\"Customer Accepted\">\n                                    <i\n                                      class=\"fa fa-check\"\n                                      style={{\n                                        color: \"blue\",\n                                        fontSize: \"16px\",\n                                        marginLeft: \"10px\"\n                                      }}\n                                    ></i>\n                                  </div> :\n                                  p.status == \"2\" ?\n                                    <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                                      <div title=\"Discussion\">\n                                        <i\n                                          class=\"fa fa-comments-o\"\n                                          style={{\n                                            fontSize: 16,\n                                            cursor: \"pointer\",\n                                            marginLeft: \"8px\",\n                                            color: \"green\"\n                                          }}\n                                          onClick={() => toggleNested(p)}\n                                        ></i>\n                                      </div>\n                                      <div title=\"Discard\">\n                                        <i\n                                          class=\"fa fa-times\"\n                                          style={{\n                                            fontSize: 16,\n                                            cursor: \"pointer\",\n                                            marginLeft: \"8px\",\n                                            color: \"red\"\n                                          }}\n                                          onClick={() => toggleDiscard(p)}\n                                        ></i>\n                                      </div>\n                                    </div>\n                                    :\n                                    p.status == \"3\" ?\n                                      <p style={{ color: \"red\" }}>Discarded</p> :\n                                      null\n                            }\n                          </div>\n                          :\n                          null\n                      }\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n\n      <RejectedModal\n        toggleNested={toggleNested}\n        nestedModal={nestedModal}\n        dataItem={dataItem}\n        docData={docData}\n        getData={getData}\n      />\n\n\n      <DiscardReport\n        ViewDiscussionToggel={ViewDiscussionToggel}\n        ViewDiscussion={ViewDiscussion}\n        report={report}\n        getData={getData}\n      />\n\n    </div>\n  );\n}\n\nexport default ViewReport;\n","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DiscardReport.js",["3719","3720","3721","3722","3723","3724"],"/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/DraftReportUpload.js",["3725","3726","3727","3728"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from 'reactstrap';\n\n\n\n\nfunction DraftReport({ draftModal, uploadDraftReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n  const [loading, setLoading] = useState(false);\n\n\n\n  const onSubmit = (value) => {\n\n    setLoading(true)\n\n    let formData = new FormData();\n    var uploadImg = value.p_draft;\n   \n\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"draft_report[]\", file);\n      }\n    }\n\n    formData.append(\"id\", id);\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n    \n      if (response.data.code === 1) {\n        setLoading(false)\n        var message = response.data.message\n        if (message.invalid) {\n          Swal.fire({\n            title: 'Error !',\n            html: `<p class=\"text-danger\">${message.invalid}</p>`,\n          })\n        } else if (message.faill && message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\n            icon: 'success',\n          })\n        } else if (message.success) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p>${message.success}</p>`,\n            icon: 'success',\n          })\n        }\n        else if (message.faill) {\n          Swal.fire({\n            title: 'Success',\n            html: `<p class=\"text-danger\">${message.faill}</p>`,\n            icon: 'success',\n          })\n        }\n        getAssignmentList();\n        uploadDraftReport();\n      } else if (response.data.code === 0) {\n        setLoading(false)\n      }\n\n    });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_draft\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                  >\n                    Upload\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/RejectedModal.js",["3729","3730","3731","3732"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  assignNo,\n  getPaymentStatus,\n}) {\n\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n    \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"notes\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/declinePayment`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Marked as customer declined payment.\")\n          getPaymentStatus();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n      \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Decline Payment</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/pages/TP/Proposal/ChatHistory.js",["3733","3734"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\n  const [notification, setNotification] = useState([]);\n  const userId = window.localStorage.getItem(\"tpkey\");\n\n  useEffect(() => {\n    getNotification();\n  }, [qno]);\n\n  const getNotification = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/getNotification?id=${JSON.parse(\n          userId\n        )}&type=2&q_no=${qno}`\n      )\n      .then((res) => {\n       \n        if (res.data.code === 1) {\n          setNotification(res.data.result);\n        }\n      });\n  };\n\n \n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Message</th>\n                <th scope=\"row\">Date</th>\n              </tr>\n            </thead>\n            {notification.length > 0\n              ? notification.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.message}</td>\n                      <td>{p.setdate}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ChatHistory;\n","/home/pooja/MazarsRepo/src/pages/TP/SendProposal/Payment.js",["3735","3736"],"import { values } from \"lodash\";\nimport React from \"react\";\nimport { Spinner } from 'reactstrap';\n\nexport default class Payment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n        };\n    }\n\n    handleChange1(i, e) {\n        if (isNaN(e.target.value)) {\n            this.setState({ error: \"Please insert only digit\" })\n        }\n        else {\n            this.setState({ error: \"\" })\n        }\n        this.setState({\n            values: { ...this.state.values, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n\n    }\n\n    handleChange2(i, e) {\n        this.setState({\n            dates: { ...this.state.dates, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n    render() {\n        var fieldsArray = [];\n\n        for (var i = 1; i <= this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    <div class=\"col-md-6 my-2\">\n                       \n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name={this.state.values[i]}\n                            onChange={this.handleChange1.bind(this, i)}\n                        />\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n                    </div>\n\n                    <div class=\"col-md-6 my-2\">\n                      \n                        <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            name={this.state.dates[i]}\n                            onChange={this.handleChange2.bind(this, i)}\n                            min={this.props.item}\n                        />\n                    </div>\n                </div >\n            );\n        }\n\n        return (\n            <>\n           \n            <div className=\"inputs\">\n                {this.props.installment > 0 ?\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\n              <td>Payment</td>\n              <td>Due Dates</td>\n          </tr> : \"\"}\n          {fieldsArray}\n      </div>\n      </>\n        );\n    }\n}\n\n\n// import React from \"react\";\n\n// export default class Payment extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             values: [],\n//             dates: [],\n//         };\n//     }\n\n//     handleChange1(i, e) {\n//         if (isNaN(e.target.value)) {\n//             this.setState({ error: \"Please insert only digit\" })\n//         }\n//         else {\n//             this.setState({ error: \"\" })\n//         }\n//         this.setState({\n//             values: { ...this.state.values, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentAmount(this.state.values)\n//             })\n\n//     }\n\n//     handleChange2(i, e) {\n//         this.setState({\n//             dates: { ...this.state.dates, [i]: e.target.value }\n//         },\n//             () => {\n//                 this.props.paymentDate(this.state.dates)\n//             })\n\n//     }\n\n//     render() {\n//         var fieldsArray = [];\n\n//         for (var i = 1; i <= this.props.installment; i++) {\n//             fieldsArray.push(\n//                 <div className=\"row\">\n//                     <div class=\"col-md-6\">\n//                         <label>Amount</label>\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             name={this.state.values[i]}\n//                             onChange={this.handleChange1.bind(this, i)}\n//                         />\n//                         <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\n//                     </div>\n\n//                     <div class=\"col-md-6\">\n//                         <label>Due Dates</label>\n//                         <input\n//                             type=\"date\"\n//                             className=\"form-control\"\n//                             name={this.state.dates[i]}\n//                             onChange={this.handleChange2.bind(this, i)}\n//                             min={this.props.item}\n//                         />\n//                     </div>\n//                 </div >\n//             );\n//         }\n//         return (\n//             <div className=\"inputs\">\n//                 {fieldsArray}\n//             </div>\n//         );\n//     }\n// }\n","/home/pooja/MazarsRepo/src/pages/TP/PendingForAcceptence/RejectedModal.js",["3737","3738","3739"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  pay,\n  getPendingforAcceptance,\n}) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [loading, setLoading] = useState(false);\n  const { id, allocation_id } = pay;\n\n  \n\n  const onSubmit = (value) => {\n  \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tp_id\", JSON.parse(userid));\n    formData.append(\"assignment_id\", id);\n    formData.append(\"allocation_id\", allocation_id);\n    formData.append(\"reject_reason\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n      \n        if (response.data.code === 1) {\n          setLoading(false)\n          Alerts.SuccessNormal(\"Query rejected successfully.\")\n          getPendingforAcceptance();\n          rejectHandler();\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n        \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"md\">\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here...\"\n              ></textarea>\n            </div>\n\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/index.jsx",["3740","3741","3742","3743","3744","3745","3746","3747","3748","3749","3750","3751","3752","3753","3754","3755","3756","3757","3758","3759","3760","3761","3762","3763","3764"],"\nimport React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\nimport MicNoneIcon from '@material-ui/icons/MicNone';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport \"./canvas.css\";\nimport \"../../../assets/fonts/css/icons.css\";\nimport {\n  Modal,\n  ModalTitle,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport RecordingModal from \"./RecordingModal\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { green ,red} from '@material-ui/core/colors';\nimport recImg from \"../../../loader.gif\";\nimport Cookies from \"js-cookie\";\n\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12/7/13\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tpName = Cookies.get(\"tpName\")\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n      resID: '',\n      showModal: false,\n      recordDisplay: false,\n      data: {},\n      item:{},\n      articleId : [],\n      articleId2 : [],\n      showRecBtn : false,\n      showButton : '',\n      clickDisable : false,\n      addRemote : null,\n      participantName : ''\n    };\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.startRecording = this.startRecording.bind(this);\n  }\n\n  // userId = window.localStorage.getItem(\"tlkey\");\n  allrecording = [];\n  teamKey = window.localStorage.getItem(\"tpkey\");\n  tpEmail2 = window.localStorage.getItem(\"tpEmail\");\n  uid = Math.floor((Math.random() * 10000) + 1);\n  channelName = this.props.channel\n  tempArray = []\n vendor = 1\n region = 14;\n bucket = \"vride-multitvm\";\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\n secretKey = \"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\";\nallrecording;\n\n  componentWillMount() {\n    let $ = this.props;\n    // init AgoraRTC local client\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    this.client.init($.appId, () => {\n  \n      this.subscribeStreamEvents();\n\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n       \n        var data_post_api = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/userdata?channel_name=\"+this.channelName+\"&rtm_id=\"+\"\"+\"&rtc_id=\"+uid+\"&user_name=\"+this.tpName;\n   axios.get(`${data_post_api}`).\n   then((res) => {\n    \n   \n   })\n   this.setState({ uid : uid})\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(\n          () => {\n            if ($.attendeeMode !== \"audience\") {\n              this.addStream(this.localStream, true);\n              this.client.publish(this.localStream, (err) => {\n               \n              });\n            }\n            this.setState({ readyState: true });\n          },\n          (err) => {\n         \n            this.setState({ readyState: true });\n          }\n        );\n      });\n    });\n  }\n \n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n    this.getSchedulerData()\n    this.accuire();\n    // this.accuire()\n  }\nschdrularName;\n\n  getSchedulerData =() =>{\n    \n\n    axios\n    .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\n            .then((res) => {\n              \n           \n               \n                if (res.data.code === 1) {\n                  this.setState({\n                    item:res.data.result.items[0],\n                   showButton : res.data.result.items[0].owner_id\n                  })  \n                        \n                }\n            });\n  }\n\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n          var newContent = document.createTextNode(this.state.participantName);  \n          item.play(\"ag-item-\" + id);\n      \n         box22.appendChild(newContent)\n        }\n        if (index === no - 1) {\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n        }\n\n        item.player.resize && item.player.resize();\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let no = this.state.streamList.length;\n      this.state.streamList.map((item, index) => { \n        let dom2\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n          \n          var newContent = document.createTextNode(this.state.participantName);  \n          item.play(\"ag-item-\" + id);\n      \n         box22.appendChild(newContent)\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n    }\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    this.localStream && this.localStream.close();\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n        \n        },\n        () => {\n         \n        }\n      );\n  }\n\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n     \n      rt.client.subscribe(stream, function (err) {\n       \n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n   \n      rt.removeStream(evt.uid);\n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n      let stream = evt.stream;\n      var apiData = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/getInfoByRTCId?channel_name=\"+this.channelName+\"&rtc_id=\"+stream.getId()\n  axios.get(`${apiData}`)\n  .then((res) =>{\n   \n    this.setState({ participantName : res.data[0].user_name })\n    if(res.data != undefined){\n      rt.addStream(stream);\n    }\n  })\n    \n \n    }.bind(this));\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n     \n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n  };\n\n  addStream = (stream, push = false) => {\n    this.hostId = stream.getId()\n   \n    \n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n  };\n\n  handleCamera = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n\n  handleMic = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.disableAudio()\n      : this.localStream.enableAudio();\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };\n\n  \n\n\n  handleExit = async() => {\n    if(this.state.clickDisable === false){\n      this.setState({clickDisable : true})\n     var resourceId = localStorage.getItem(\"resourceId\");\n     var sid = localStorage.getItem(\"sid\");\n   \n     var data = JSON.stringify({\n       \"cname\":this.channelName,\n       \"uid\":JSON.stringify(this.uid),\n       \"clientRequest\":{ }});\n     axios({\n       method: \"POST\",\n       headers: {\n         \"content-type\": \"application/json;charset=utf-8\",\n         \"authorization\": \"Basic \"+this.encodedString,\n         \"cache-control\": \"no-cache\",\n       },\n       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n       data: data,\n     })\n     .then(response => {\n       \n       this.tempArray.push(response.data.serverResponse.fileList)\n       this.setState({showRecBtn : true})\n     })\n         .catch((error) => {\n        \n       });\n    \n    }\n \n     \n   }\n \n  sharingScreen = (e) => {\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n      this.state.stateSharing = false;\n    } else {\n      this.state.stateSharing = true;\n      let $ = this.props;\n      // init AgoraRTC local client\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n\n      this.shareClient.init($.appId, () => {\n     \n\n        this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n          this.state.uid = uid;\n        \n          \n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n               \n                });\n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n         \n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: false,\n      video: false,\n      screen: true,\n      control : true\n    };\n \n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n   \n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n  CreateS3Folder = (uid) =>{\n   \n    axios\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\n            .then((res) => {\n                 \n            });\n  }\n\n\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\n\n\n\n\nsleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n//get recording status\nasync GetRecordingStatus(json){\n    \n\n  await this.sleep(3000); \n  var resourceId = json.data.resourceId;\n  var sid = json.data.sid;\n\n  localStorage.setItem(\"resourceId\", resourceId);\n  localStorage.setItem(\"sid\", sid);\n\n  fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n})\n    .then((res) => res.json())\n    .then((response) => {\n       \n        this.setState({\n          data:response,\n          recordDisplay:!this.state.recordDisplay\n        })\n        setTimeout(() => {\n          this.setState({clickDisable : false})\n        }, 1000)\n    })\n    .catch((error) => console.log(error));\n}\n\n\n\n//start recording\nasync startRecording(key){\n   \n    var resourceId = key.data.resourceId \n    \n    this.CreateS3Folder(JSON.stringify(this.uid));\n\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\n \n\n  await axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\n      data: data,    \n    })\n    .then(json => this.GetRecordingStatus(json)) \n      .catch((error) => {\n       \n      });\n  };\n\n\n  //recording  acquire\n   accuire = () =>{\n   \n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\n\n    axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\n      data: data,\n    })\n      .then(json => \n        this.startRecording(json)) \n      \n      .catch((error) => {\n     \n      });\n  };\n// Start recording button\n // Start recording button\n recStart = () => {\n  this.localStream.enableAudio();\n  this.localStream.enableVideo();\n  this.accuire();\n  this.setState({ showRecBtn: false  });\n  \n}\n\n//toggelStop\ntoggleModal = (key) =>{\n\nthis.setState({\n  showModal: !this.state.showModal,\n  recordDisplay:false\n})\n}\n\n\n//stop recording \nstopRecording = () => {\nif(this.state.showRecBtn === true){\n  return(this.toggleModal(\"stop\"),\n  this.localStream.disableVideo(),\nthis.localStream.disableAudio())\n}\n\nelse if(this.state.showButton == JSON.parse(this.teamKey)){\n\n  if(resourceId === undefined){\n    var resourceId = localStorage.getItem(\"resourceId\");\n  var sid = localStorage.getItem(\"sid\");\n  }\n\nvar data = JSON.stringify({\n  \"cname\":this.channelName,\n  \"uid\":JSON.stringify(this.uid),\n  \"clientRequest\":{ }});\naxios({\n  method: \"POST\",\n  headers: {\n    \"content-type\": \"application/json;charset=utf-8\",\n    \"authorization\": \"Basic \"+this.encodedString,\n    \"cache-control\": \"no-cache\",\n  },\n  url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n  data: data,\n})\n.then(json => \n  this.toggleModal(json) ,\n   this.setState({showRecBtn : true}),\n   this.localStream.disableVideo(),\n   this.localStream.disableAudio(),\n  ) \n  .catch((error) => {\n    \n  });\n}\nelse{\n\nwindow.location.hash = \"/taxprofessional/schedule\";\n}\n\n};\n\n\nrender() {\n\n \n  const style = {\n    display: \"grid\",\n    gridGap: \"50px 26px\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    gridTemplateRows: \"repeat(12, auto)\",\n    gridTemplateColumns: \"repeat(24, auto)\",\n  };\n  \n  const videoControlBtn =\n    this.props.attendeeMode === \"video\" ? (\n      <span\n        onClick={this.handleCamera}\n        className=\"ag-btn videoControlBtn\"\n        title=\"Enable/Disable Video\"\n      >\n        <i className=\"ag-icon ag-icon-camera\"></i>\n        <i className=\"ag-icon ag-icon-camera-off\"></i>\n      </span>\n    ) : (\n      \"\"\n    );\n\n\n  const audioControlBtn =\n    this.props.attendeeMode !== \"audience\" ? (\n      <span\n        onClick={this.handleMic}\n        className=\"ag-btn audioControlBtn\"\n        title=\"Enable/Disable Audio\"\n      >\n        <i className=\"ag-icon ag-icon-mic\"></i>\n        <i className=\"ag-icon ag-icon-mic-off\"></i>\n      </span>\n    ) : (\n      \"\"\n    );\n\n  const switchDisplayBtn = (\n    <span\n      onClick={this.switchDisplay}\n      className={\n        this.state.streamList.length > 4\n          ? \"ag-btn displayModeBtn disabled\"\n          : \"ag-btn displayModeBtn\"\n      }\n      title=\"Switch Display Mode\"\n    >\n      <i className=\"ag-icon ag-icon-switch-display\"></i>\n    </span>\n  );\n\n   \n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n      onClick={this.stopRecording}\n             className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n       \n     <i className=\"ag-icon ag-icon-leave\"></i> \n      </span>\n    );\n    const recordingBtn = (\n      <span\n        onClick={this.recStart}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Record On\"\n      >{\n        this.state.showRecBtn === true ?\n      \n        <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\n      </span>\n    );\n\n\n//recording btn off\nconst recordingBtnOff = (\n  <span\n  onClick={this.handleExit}\n\n    \n    className={\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n    }\n    title=\"Record Off\"\n  >\n     {\n      this.state.showButton == JSON.parse(this.teamKey) ?\n      // <FiberManualRecordIcon style={{ color: red[500] }}/> : \"\"\n     <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\n    }\n            \n  </span>\n);\n\n\n    return (\n      <>\n      <div id=\"ag-canvas\" style={style}>   \n        <div className=\"ag-btn-group\">\n\n        <RecordingModal \n        isOpen={this.state.showModal}\n         toggle={this.toggleModal}\n         data={this.state.data}\n         item={this.state.item}\n         allrecording = {this.tempArray}\n         />\n                \n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n\n          {\n             this.state.showRecBtn === true ? recordingBtn : null\n          }\n\n          {\n             this.state.showRecBtn === false ? recordingBtnOff : null\n          }\n        </div>\n      </div>\n        </>\n    );\n  }\n}\n\nexport default AgoraCanvas;","/home/pooja/MazarsRepo/src/pages/TP/AssignmentTab/RejectModal.js",["3765","3766","3767"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction RejectedModal({\n  nestedModal,\n  toggleNested,\n  dataItem,\n  docData,\n  getData\n}) {\n  const userId = window.localStorage.getItem(\"tpkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const [loading, setLoading] = useState(false);\n \n\n  const onSubmit = (value) => {\n   \n    setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"tp_id\", JSON.parse(userId));\n    formData.append(\"id\", dataItem.q_id);\n    formData.append(\"query_no\", dataItem.assign_no);\n    formData.append(\"message\", value.p_chat);\n    formData.append(\"type\", 1);\n    formData.append(\"docid\", docData.docid);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/draftDiscussion`,\n      data: formData,\n    })\n      .then(function (response) {\n        \n        if (response.data.code === 1) {\n          setLoading(false)\n          toggleNested();\n          getData();\n          var variable = \"Submitted Successfully \"\n          Alerts.SuccessNormal(variable)\n        } else if (response.data.code === 0) {\n          setLoading(false)\n        }\n      })\n      .catch((error) => {\n       \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={nestedModal} toggle={toggleNested} >\n        <ModalHeader>Discussion</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here\"\n              ></textarea>\n\n              {errors.p_chat && (\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <div>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit\n                    </button>\n                    <Button color=\"primary\"className=\"btn btn-danger ml-2\" onClick={toggleNested}>Cancel</Button>\n                  </div>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal >\n\n    </div >\n  );\n}\n\nexport default RejectedModal;\n\n","/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/index.jsx",["3768","3769","3770","3771","3772","3773","3774","3775","3776","3777","3778","3779","3780","3781","3782","3783","3784","3785","3786","3787","3788","3789","3790","3791","3792"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\nimport MicNoneIcon from '@material-ui/icons/MicNone';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport \"./canvas.css\";\nimport \"../../../assets/fonts/css/icons.css\";\nimport {\n  Modal,\n  ModalTitle,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport RecordingModal from \"./RecordingModal\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { green ,red} from '@material-ui/core/colors';\nimport recImg from \"../../../loader.gif\";\nimport Cookies from \"js-cookie\"\n\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12/7/13\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tlName = Cookies.get(\"tlName\")\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n      resID: '',\n      showModal: false,\n      recordDisplay: false,\n      data: {},\n      item:{},\n      articleId : [],\n      articleId2 : [],\n      showRecBtn : false,\n      showButton : '',\n      clickDisable : false,\n      addRemote : null,\n      participantName : ''\n    };\n\n    this.toggleModal = this.toggleModal.bind(this);\n    this.startRecording = this.startRecording.bind(this);\n  }\n\n  // userId = window.localStorage.getItem(\"tlkey\");\n  allrecording = [];\n  teamKey = window.localStorage.getItem(\"tlkey\");\n  tlEmail2 = window.localStorage.getItem(\"tlEmail\");\n  uid = Math.floor((Math.random() * 10000) + 1);\n  channelName = this.props.channel\n  tempArray = []\n vendor = 1\n region = 14;\n bucket = \"vride-multitvm\";\n accessKey = \"AKIASTLI4S4OJH3WGMFM\";\n secretKey = \"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\";\nallrecording;\n\n  componentWillMount() {\n    let $ = this.props;\n    // init AgoraRTC local client\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    this.client.init($.appId, () => {\n     \n      this.subscribeStreamEvents();\n\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n       \n        var data_post_api = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/userdata?channel_name=\"+this.channelName+\"&rtm_id=\"+\"\"+\"&rtc_id=\"+uid+\"&user_name=\"+this.tlName;\n   axios.get(`${data_post_api}`).\n   then((res) => {\n    \n   })\n        this.state.uid = uid;\n       \n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(\n          () => {\n            if ($.attendeeMode !== \"audience\") {\n              this.addStream(this.localStream, true);\n              this.client.publish(this.localStream, (err) => {\n               \n              });\n            }\n            this.setState({ readyState: true });\n          },\n          (err) => {\n          \n            this.setState({ readyState: true });\n          }\n        );\n      });\n    });\n  }\n \n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n    this.getSchedulerData()\n    this.accuire();\n    // this.accuire()\n  }\nschdrularName;\n\n  getSchedulerData =() =>{\n       axios\n            .get(`${baseUrl}/tl/videoScheduler?id=${this.props.id}`)\n            .then((res) => {\n                       \n                if (res.data.code === 1) {\n                  this.setState({\n                    item:res.data.result.items[0],\n                   showButton : res.data.result.items[0].owner_id\n                  })  \n                        \n                }\n            });\n  }\n\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n         \n         \n          var newContent = document.createTextNode(this.state.participantName); \n          item.play(\"ag-item-\" + id);\n      \n         box22.appendChild(newContent)\n        }\n        if (index === no - 1) {\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n        }\n\n        item.player.resize && item.player.resize();\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let no = this.state.streamList.length;\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n          var box22 = document.getElementById(\"ag-item-\" + id)\n          \n          var newContent = document.createTextNode(this.state.participantName); \n          item.play(\"ag-item-\" + id);\n      \n         box22.appendChild(newContent)\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n    }\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    this.localStream && this.localStream.close();\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n          \n        },\n        () => {\n                  }\n      );\n  }\n\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n      \n      rt.client.subscribe(stream, function (err) {\n        \n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n     \n      rt.removeStream(evt.uid);\n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n      let stream = evt.stream;\n      var apiData = \"https://virtualapi.multitvsolution.com/VstreamApi/index.php/api/vstream/getInfoByRTCId?channel_name=\"+this.channelName+\"&rtc_id=\"+stream.getId()\n  axios.get(`${apiData}`)\n  .then((res) =>{\n   \n    this.setState({ participantName : res.data[0].user_name })\n    if(res.data != undefined){\n      rt.addStream(stream);\n    }\n  })\n    \n \n    }.bind(this));\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n     \n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n  };\n\n  addStream = (stream, push = false) => {\n\n    this.hostId = stream.getId()\n \n  \n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n  };\n\n  handleCamera = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n\n  handleMic = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.muteAudio()\n      : this.localStream.unmuteAudio();\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };  \n  \n  handleExit = async() => {\n    if(this.state.clickDisable === false){\n      this.setState({clickDisable : true})\n     var resourceId = localStorage.getItem(\"resourceId\");\n     var sid = localStorage.getItem(\"sid\");\n   \n     var data = JSON.stringify({\n       \"cname\":this.channelName,\n       \"uid\":JSON.stringify(this.uid),\n       \"clientRequest\":{ }});\n     axios({\n       method: \"POST\",\n       headers: {\n         \"content-type\": \"application/json;charset=utf-8\",\n         \"authorization\": \"Basic \"+this.encodedString,\n         \"cache-control\": \"no-cache\",\n       },\n       url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n       data: data,\n     })\n     .then(response => {\n       \n       this.tempArray.push(response.data.serverResponse.fileList)\n       this.setState({showRecBtn : true})\n     })\n         .catch((error) => {\n        \n       });\n    \n    }\n \n     \n   }\n \n  sharingScreen = (e) => {\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n      this.state.stateSharing = false;\n    } else {\n     \n      this.state.stateSharing = true;\n      let $ = this.props;\n      // init AgoraRTC local client\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n\n      this.shareClient.init($.appId, () => {\n     \n        this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n          this.state.uid = uid;\n         \n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n                 \n                });\n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n            \n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: false,\n      video: false,\n      screen: true,\n      control : true\n    };\n \n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n   \n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n  CreateS3Folder = (uid) =>{\n   \n    axios\n            .get(`https://virtualapi.multitvsolution.com/s3/createMPObject.php?folder_id=${JSON.parse(uid)}`)\n            .then((res) => {\n                \n            });\n  }\n\n\nencodedString = \"ZDMzOTU3N2EyOTRjNDU4Yzg2ZDhhNzhiNDc0MTQxZmM6MWE2MWE0YmVmMjE0NGU3OGJlNmY2NzFkNWNmM2ZjMzI=\";\n\n\n\n\nsleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n//get recording status\nasync GetRecordingStatus(json){\n    \n\n  await this.sleep(3000); \n  var resourceId = json.data.resourceId;\n  var sid = json.data.sid;\n\n  localStorage.setItem(\"resourceId\", resourceId);\n  localStorage.setItem(\"sid\", sid);\n\n  fetch(`https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/query`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n})\n    .then((res) => res.json())\n    .then((response) => {\n       \n        this.setState({\n          data:response,\n          recordDisplay:!this.state.recordDisplay\n        })\n        setTimeout(() => {\n          this.setState({clickDisable : false})\n        }, 1000)\n    })\n    .catch((error) => console.log(error));\n}\n\n\n\n//start recording\nasync startRecording(key){\n   \n    var resourceId = key.data.resourceId \n    \n    this.CreateS3Folder(JSON.stringify(this.uid));\n\n    var data =  \"{\\n\\t\\\"cname\\\":\\\"\"+this.channelName+\"\\\",\\n\\t\\\"uid\\\":\\\"\"+this.uid+\"\\\",\\n\\t\\\"clientRequest\\\":{\\n\\t\\t\\\"recordingConfig\\\":{\\n\\t\\t\\t\\\"maxIdleTime\\\":60,\\n\\t\\t\\t\\\"channelType\\\":1,\\n\\t\\t\\t\\\"transcodingConfig\\\":{\\n\\t\\t\\t\\t\\\"width\\\":1280,\\n\\t\\t\\t\\t\\\"height\\\":720,\\n\\t\\t\\t\\t\\\"fps\\\":30,\\n\\t\\t\\t\\t\\\"bitrate\\\":3420,\\n\\t\\t\\t\\t\\\"mixedVideoLayout\\\":1,\\n\\t\\t\\t\\t\\\"maxResolutionUid\\\":\\\"\"+this.uid+\"\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\\"storageConfig\\\":{\\n\\t\\t\\t\\\"vendor\\\":\"+this.vendor+\",\\n\\t\\t\\t\\\"region\\\":\"+this.region+\",\\n\\t\\t\\t\\\"bucket\\\":\\\"\"+this.bucket+\"\\\",\\n\\t\\t\\t\\\"accessKey\\\":\\\"\"+this.accessKey+\"\\\",\\n\\\"fileNamePrefix\\\": [\\\"recordings\\\",\\\"mp\\\",\\\"\"+this.uid+\"\\\"],\\n\\t\\t\\t\\\"secretKey\\\":\\\"\"+this.secretKey+\"\\\"\\n\\t\\t}\\t\\n\\t}\\n} \\n\"\n \n\n  await axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/mode/mix/start`,\n      data: data,    \n    })\n    .then(json => this.GetRecordingStatus(json)) \n      .catch((error) => {\n      \n      });\n  };\n\n\n  //recording  acquire\n  accuire = () =>{\n   \n    var data = \"{\\n  \\\"cname\\\": \\\"\" + this.channelName + \"\\\",\\n  \\\"uid\\\": \\\"\" + this.uid + \"\\\",\\n  \\\"clientRequest\\\":{\\n  }\\n}\"\n\n    axios({\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Basic \"+this.encodedString,\n        \"cache-control\": \"no-cache\",\n      },\n      url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/acquire`,\n      data: data,\n    })\n      .then(json => \n        this.startRecording(json)) \n       \n      .catch((error) => {\n       \n      });\n  };\n// Start recording button\n  recStart = () => {\n    this.localStream.enableAudio();\n    this.localStream.enableVideo();\n    this.accuire();\n    this.setState({ showRecBtn: false  });\n    \n  }\n\n  //toggelStop\n  toggleModal = (key) =>{\n  \n  this.setState({\n    showModal: !this.state.showModal,\n    recordDisplay:false\n  })\n}\n\n\n //stop recording \n stopRecording = () => {\n  if(this.state.showRecBtn === true){\n    return(this.toggleModal(\"stop\"),\n    this.localStream.disableVideo(),\nthis.localStream.disableAudio())\n\n  }\n  \n  else if(this.state.showButton == JSON.parse(this.teamKey)){\n \n    if(resourceId === undefined){\n      var resourceId = localStorage.getItem(\"resourceId\");\n    var sid = localStorage.getItem(\"sid\");\n    }\n\n  var data = JSON.stringify({\n    \"cname\":this.channelName,\n    \"uid\":JSON.stringify(this.uid),\n    \"clientRequest\":{ }});\n  axios({\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json;charset=utf-8\",\n      \"authorization\": \"Basic \"+this.encodedString,\n      \"cache-control\": \"no-cache\",\n    },\n    url: `https://api.agora.io/v1/apps/${this.props.appId}/cloud_recording/resourceid/${resourceId}/sid/${sid}/mode/mix/stop`,\n    data: data,\n  })\n  .then(json => \n    \n    this.toggleModal(json) ,\n     this.setState({showRecBtn : true}),\n     this.localStream.disableVideo(),\nthis.localStream.disableAudio(),\n    ) \n    .catch((error) => {\n      \n    });\n}\nelse{\n  \n  window.location.hash = \"/teamleader/schedule\";\n}\n  \n};\n\n\n  render() {\n\n    \n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n      onClick={this.stopRecording}\n             className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n       \n     <i className=\"ag-icon ag-icon-leave\"></i> \n      </span>\n    );\n\n//recording btn on\n\n    const recordingBtn = (\n      <span\n        onClick={this.recStart}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Record On\"\n      >{\n        this.state.showRecBtn === true ?\n      \n        <FiberManualRecordIcon style={{ color: green[500] }}/> : \"\"}\n      </span>\n    );\n\n\n//recording btn off\nconst recordingBtnOff = (\n  <span\n  onClick={this.handleExit}\n\n    \n    className={\n      this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n    }\n    title=\"Record Off\"\n  >\n     {\n      this.state.showButton == JSON.parse(this.teamKey) ?\n      // <FiberManualRecordIcon style={{ color: red[500] }}/> : \"\"\n     <img src = {recImg} style = {{width : \"20px\"}} /> : \"\"\n    }\n            \n  </span>\n);\n\n\n    return (\n      <>\n      <div id=\"ag-canvas\" style={style}>   \n        <div className=\"ag-btn-group\">\n\n        <RecordingModal \n        isOpen={this.state.showModal}\n         toggle={this.toggleModal}\n         data={this.state.data}\n         item={this.state.item}\n         allrecording = {this.tempArray}\n         />\n                \n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n\n          {\n             this.state.showRecBtn === true ? recordingBtn : null\n          }\n\n          {\n             this.state.showRecBtn === false ? recordingBtnOff : null\n          }\n        </div>\n      </div>\n        </>\n    );\n  }\n}\n\nexport default AgoraCanvas;","/home/pooja/MazarsRepo/src/pages/TP/AgoraVideoCall/RecordingModal.js",["3793","3794","3795","3796","3797","3798","3799","3800","3801"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CommonServices from \"../../../common/common\";\nimport Alerts from \"../../../common/Alerts\";\nimport { useHistory } from \"react-router\";\n\nfunction RecordingModal({\n     isOpen,\n    toggle,\n    data,\n    item, \n    allrecording\n}) {\n   \n    const history = useHistory();\n    const { handleSubmit, register, errors } = useForm();\n    const userId = window.localStorage.getItem(\"tpkey\");\n\n   \n\n    const { assign_no, id, username, start } = item\n  \n    const onSubmit = (value) => {\n        var serverResponse = data.serverResponse.fileList\n        var completeRecording;\n        if(allrecording === undefined || allrecording.length === 0){\n            completeRecording =  serverResponse;\n        }\n        else if(allrecording != undefined || allrecording.length > 0){\n            completeRecording = allrecording + \",\" + serverResponse;\n        }\n        else{\n            completeRecording = serverResponse;\n        }\n                const { fileList } = serverResponse\n             \n        let formData = new FormData();\n        formData.append(\"uid\", JSON.parse(userId));\n        formData.append(\"fileList\", completeRecording);\n        formData.append(\"message_type\", value.msg_type);\n        formData.append(\"message\", value.p_message);\n        formData.append(\"assign_id\", assign_no);\n        formData.append(\"participants\", username);\n        formData.append(\"schedule_id\", id);\n\n        axios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/callRecordingPost`,\n            data: formData,\n        })\n            .then(function (response) {\n              \n                if (response.data.code === 1) {\n                    toggle();\n                    history.push('/taxprofessional/schedule');\n                   \n                }\n            })\n            .catch((error) => {\n               \n            });\n    };\n    const exitBtn2 = () => {\n        history.push('/taxprofessional/schedule');\n    }\n    return (\n        <div>\n            <Modal isOpen={isOpen} toggle={toggle} size=\"md\">\n                <ModalHeader toggle={toggle}>\n                    Form\n                </ModalHeader>\n                <ModalBody>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                            <div class=\"col-md-10\">\n                                <div class=\"form-group\">\n\n                                    <div class=\"form-group\">\n                                        <label>Query No.</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_query\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            value={assign_no}\n                                            disabled\n                                        />\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <label>Participants</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_participants\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            defaultValue={username}\n                                        />\n                                    </div>\n\n                                    <label>Discussion Type</label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"msg_type\"\n                                        ref={register}\n                                        style={{ height: \"33px\" }}\n                                    >\n                                        <option value=\"\">--select--</option>\n                                        <option value=\"Query Discussion\">Query Discussion</option>\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\n                                        <option value=\"Client Discussion\">Client Discussion</option>\n                                        <option value=\"Draft Reports\">Draft Reports</option>\n                                        <option value=\"Final Discussion\">Final Discussion</option>\n                                        <option value=\"Others\">Others</option>\n                                    </select>\n\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        placeholder=\"Message text here\"\n                                        rows=\"5\"\n                                        ref={register}\n                                        name=\"p_message\"\n                                    ></textarea>\n                                </div>\n                                <button type=\"button\" className=\"btn btn-danger mx-2\" onClick={() => exitBtn2()}>Cancel </button>\n                                <button type=\"submit\" className=\"btn btn-primary\">\n                                    Submit\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n\n                </ModalFooter>\n            </Modal>\n        </div >\n    );\n}\n\nexport default RecordingModal;","/home/pooja/MazarsRepo/src/pages/TL/AgoraVideoCall/RecordingModal.js",["3802","3803","3804","3805","3806","3807","3808","3809","3810"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CommonServices from \"../../../common/common\";\nimport Alerts from \"../../../common/Alerts\";\nimport { useHistory } from \"react-router\";\n\nfunction RecordingModal({\n    isOpen,\n    toggle,\n    data,\n    item, \n    allrecording\n}) {\n    const history = useHistory();\n    const { handleSubmit, register, errors } = useForm();\n    const userId = window.localStorage.getItem(\"tlkey\");\n\n    \n    const { assign_no, id, username, start } = item\n   \n\n\n    //submit\n    const onSubmit = (value) => {\n      \n\nvar serverResponse = data.serverResponse.fileList\nvar completeRecording;\nif(allrecording === undefined || allrecording.length === 0){\n    completeRecording =  serverResponse;\n}\nelse if(allrecording != undefined || allrecording.length > 0){\n    completeRecording = allrecording + \",\" + serverResponse;\n}\nelse{\n    completeRecording = serverResponse;\n}\n        const { fileList } = serverResponse\n        \n\n        let formData = new FormData();\n        formData.append(\"uid\", JSON.parse(userId));\n        formData.append(\"fileList\", completeRecording);\n        formData.append(\"message_type\", value.msg_type);\n        formData.append(\"message\", value.p_message);\n        formData.append(\"assign_id\", assign_no);\n        formData.append(\"participants\", username);\n        formData.append(\"schedule_id\", id);\n\n        axios.get(`${baseUrl}/tl/freeslottime?schedule_id=${id}&&uid=${JSON.parse(userId)}`)\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/tl/callRecordingPost`,\n            data: formData,\n        })\n            .then(function (response) {\n                        if (response.data.code === 1) {\n                    toggle()\n                    history.push('/teamleader/schedule');\n                }\n               \n            })\n            .catch((error) => {\n                       });\n    };\n    const exitBtn2 = () => {\n        history.push('/teamleader/schedule');\n    }\n\n    return (\n        <div>\n            <Modal isOpen={isOpen} toggle={toggle} size=\"md\">\n                <ModalHeader toggle={toggle}>\n                    Form\n                </ModalHeader>\n                <ModalBody>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n                            <div class=\"col-md-10\">\n                                <div class=\"form-group\">\n\n                                    <div class=\"form-group\">\n                                        <label>Query No.</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_query\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            value={assign_no}\n                                            disabled\n                                        />\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <label>Participants</label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"p_participants\"\n                                            className=\"form-control\"\n                                            ref={register}\n                                            defaultValue={username}\n                                        />\n                                    </div>\n\n                                    <label>Discussion Type</label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"msg_type\"\n                                        ref={register}\n                                        style={{ height: \"33px\" }}\n                                    >\n                                        <option value=\"\">--select--</option>\n                                        <option value=\"Query Discussion\">Query Discussion</option>\n                                        <option value=\"Proposal Discussion\">Proposal Discussion</option>\n                                        <option value=\"Payment Discussion\">Payment Discussion</option>\n                                        <option value=\"Client Discussion\">Client Discussion</option>\n                                        <option value=\"Draft Reports\">Draft Reports</option>\n                                        <option value=\"Final Discussion\">Final Discussion</option>\n                                        <option value=\"Others\">Others</option>\n                                    </select>\n\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label>Summary of Discussion<span className=\"declined\">*</span></label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        placeholder=\"Message text here\"\n                                        rows=\"5\"\n                                        ref={register}\n                                        name=\"p_message\"\n                                    ></textarea>\n                                </div>\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => exitBtn2()}>Cancel </button>\n                                <button type=\"submit\" className=\"btn btn-primary mx-2\">\n                                    Submit\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n\n                </ModalFooter>\n            </Modal>\n        </div >\n    );\n}\n\nexport default RecordingModal;","/home/pooja/MazarsRepo/src/pages/TL/EditProposal/Payment.js",["3811","3812","3813","3814"],"import React from \"react\";\n\n\nexport default class YourComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n            isLoading: true\n        };\n    }\n\n\n    amount = this.props.installment_amount\n    installment_amount = this.amount.split(',');\n    temp = this.installment_amount\n    tamp2;\n    handleChange1(i, e) {\n        const { value } = e.target\n        this.temp[i] = value\n\n    \n        this.setState({\n            values: {\n              ...this.temp.slice(0, this.props.installment)\n            }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n    }\n\n\n    due_date = this.props.due_date;\n     installment_due_dates = this.due_date.split(',')\n    installmentDueDate = this.installment_due_dates;\n\n    handleChange2(i, e) {\n        const { value } = e.target\n        this.installmentDueDate[i] = value\n\n        this.setState({\n            dates: {\n              ...this.installmentDueDate.slice(0, this.props.installment)\n            }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n    componentDidMount() {\n        this.setState({ isLoading: false });\n        \n        var amount = this.props.installment_amount\n        var date = this.props.due_date\n\n        const installment_amount = amount.split(',');\n        const due_date = date.split(',');\n\n\n        this.props.paymentAmount(installment_amount);\n       this.props.paymentDate(due_date)\n    }\n\n\n\n    render() {\n\n        var amount = this.props.installment_amount\n        var date = this.props.due_date\n\n        const installment_amount = amount.split(',');\n        const due_date = date.split(',');\n\n        var fieldsArray = [];\n\n\n        for (var i = 0; i < this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    {this.props.clearValue == true ? \n                   <div class=\"col-md-6 my-2\">\n                       \n                   <input\n                       type=\"text\"\n                       className=\"form-control\"\n                       name={this.state.values[i]}\n                       onChange={this.handleChange1.bind(this, i)}\n                      defaultValue={installment_amount[i]}\n                   />\n               </div> :   \"\"\n}\n{this.props.clearValue == false ? \n    <div class=\"col-md-6 my-2\">\n                       \n                       <input\n                           type=\"text\"\n                           className=\"form-control\"\n                           name={this.state.values[i]}\n                           onChange={this.handleChange1.bind(this, i)}\n                           defaultValue=\"\"\n                       />\n                   </div> : \"\"}\n          {this.props.clearValue == true ? \n           <div class=\"col-md-6 my-2\">\n                       \n           <input\n               type=\"date\"\n               className=\"form-control\"\n               required\n               name={this.state.dates[i]}\n               onChange={this.handleChange2.bind(this, i)}\n               defaultValue={due_date[i]}\n               min={this.props.item}\n           />\n       </div> : \"\"}  \n       {this.props.clearValue == false ? \n           <div class=\"col-md-6 my-2\">\n                       \n           <input\n               type=\"date\"\n               className=\"form-control\"\n               required\n               name={this.state.dates[i]}\n               onChange={this.handleChange2.bind(this, i)}\n               defaultValue= \"\"\n               min={this.props.item}\n           />\n       </div> : \"\"}         \n                   \n                </div>\n            );\n        }\n\n        if (this.state.isLoading) {\n            return <div>Loading...</div>\n        }\n        return (\n            <>\n           \n            <div className=\"inputs\">\n                {this.props.installment > 0 ?\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\n              <td>Payment</td>\n              <td>Due Dates</td>\n          </tr> : \"\"}\n          {fieldsArray}\n      </div>\n      </>\n        );\n    }\n}\n\n\n\n","/home/pooja/MazarsRepo/src/pages/TP/EditProposal/Payment.js",["3815","3816","3817","3818"],"import React from \"react\";\n\n\nexport default class YourComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n            isLoading: true\n        };\n    }\n\n\n    amount = this.props.installment_amount\n    installment_amount = this.amount.split(',');\n    temp = this.installment_amount\n    tamp2;\n    handleChange1(i, e) {\n        const { value } = e.target\n        this.temp[i] = value\n       \n    \n        this.setState({\n            values: {\n              ...this.temp.slice(0, this.props.installment)\n            }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n    }\n\n\n    due_date = this.props.due_date;\n     installment_due_dates = this.due_date.split(',')\n    installmentDueDate = this.installment_due_dates;\n\n    handleChange2(i, e) {\n        const { value } = e.target\n        this.installmentDueDate[i] = value\n\n        this.setState({\n            dates: {\n              ...this.installmentDueDate.slice(0, this.props.installment)\n            }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n    componentDidMount() {\n        this.setState({ isLoading: false });\n        \n        var amount = this.props.installment_amount\n        var date = this.props.due_date\n\n        const installment_amount = this.props.clearValue === false ? amount.split(',') : []\n        const due_date = date.split(',');\n\n\n        this.props.paymentAmount(installment_amount);\n        this.props.paymentDate(due_date)\n    }\n\n\n\n    render() {\n\n        var amount = this.props.installment_amount\n        var date = this.props.due_date\n\n        const installment_amount = amount.split(',');\n        const due_date = date.split(',');\n\n        var fieldsArray = [];\n\n\n        for (var i = 0; i < this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    {this.props.clearValue == true ? \n                   <div class=\"col-md-6 my-2\">\n                       \n                   <input\n                       type=\"text\"\n                       className=\"form-control\"\n                       name={this.state.values[i]}\n                       onChange={this.handleChange1.bind(this, i)}\n                      defaultValue={installment_amount[i]}\n                   />\n               </div> :   \"\"\n}\n{this.props.clearValue == false ? \n    <div class=\"col-md-6 my-2\">\n                       \n                       <input\n                           type=\"text\"\n                           className=\"form-control\"\n                           name={this.state.values[i]}\n                           onChange={this.handleChange1.bind(this, i)}\n                           defaultValue=\"\"\n                       />\n                   </div> : \"\"}\n          {this.props.clearValue == true ? \n           <div class=\"col-md-6 my-2\">\n                       \n           <input\n               type=\"date\"\n               className=\"form-control\"\n               required\n               name={this.state.dates[i]}\n               onChange={this.handleChange2.bind(this, i)}\n               defaultValue={due_date[i]}\n               min={this.props.item}\n           />\n       </div> : \"\"}  \n       {this.props.clearValue == false ? \n           <div class=\"col-md-6 my-2\">\n                       \n           <input\n               type=\"date\"\n               className=\"form-control\"\n               required\n               name={this.state.dates[i]}\n               onChange={this.handleChange2.bind(this, i)}\n               defaultValue= \"\"\n               min={this.props.item}\n           />\n       </div> : \"\"}         \n                   \n                </div>\n            );\n        }\n\n        if (this.state.isLoading) {\n            return <div>Loading...</div>\n        }\n        return (\n            <>\n           \n            <div className=\"inputs\">\n                {this.props.installment > 0 ?\n            <tr style={{display : \"flex\", width : \"100%\", justifyContent : \"space-around\"}}>\n              <td>Payment</td>\n              <td>Due Dates</td>\n          </tr> : \"\"}\n          {fieldsArray}\n      </div>\n      </>\n        );\n    }\n}\n\n\n","/home/pooja/MazarsRepo/src/components/Common/EmailValidation.js",["3819","3820","3821","3822"],"import React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\n\nimport classNames from \"classnames\";\nimport { Spinner } from \"reactstrap\"\nconst EmailValidation = (props) => {\n    const { handleSubmit, register, errors, getValues } = useForm();\nconst [email, setEmail] = useState([])\n   \n    const emailHandler = (e) => {\n      setEmail(e.target.value);\n      props.setEmail2(e.target.value)\n        if (e.target.value.length < 1) {\n          props.setWemail(\"\")\n        }\n      };\n\n      const emailValidation = (key) => {\n\n        var validRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (email.length > 0 && email.match(validRegex)) {\n          props.setWemail(\"\");\n          props.setEmailError(false)\n          let formData = new FormData();\n          formData.append(\"email\", email);\n          formData.append(\"type\", 1);\n    if(props.name === \"teamleader\" || props.name ==\"taxprofessional\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/validateregistration`,\n        data: formData,\n      })\n      .then(function (response) {\n             \n        if (response.data.code === 1) {\n          props.setValiemail(response.data.result)\n          props.setInvalid('')\n          props.setEmailError(false)\n         \n        } else if (response.data.code === 0) {\n          props.setInvalid(response.data.result)\n          props.setValiemail('')\n          props.setEmailError(true)\n        }\n      })\n      .catch((error) => {\n      \n      });\n    }\n    else{\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/validateregistration`,\n        data: formData,\n      })\n      .then(function (response) {\n             \n        if (response.data.code === 1) {\n          props.setValiemail(response.data.result)\n          props.setInvalid('')\n          props.setEmailError(false)\n         \n        } else if (response.data.code === 0) {\n          props.setInvalid(response.data.result)\n          props.setValiemail('')\n          props.setEmailError(true)\n        }\n      })\n      .catch((error) => {\n      \n      });\n    }\n        \n          \n        }\n        else {\n          props.setEmailError(true)\n          props.setWemail(\"invalid email\")\n        }\n    \n      }\n    \nreturn(\n    \n    <>\n    <input\n                        type=\"text\"\n                        name=\"p_email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email || props.emailError === true || props.wEmail || props.invalid,\n                        })}\n                        onChange={(e) => emailHandler(e)}\n                        onBlur={(e) => emailValidation(e)}\n                        placeholder=\"Enter Your Password\"\n                        ref={register({ required: true })}\n                      />\n                      \n    </>\n)\n}\nexport default EmailValidation;","/home/pooja/MazarsRepo/src/components/Common/Category.js",["3823","3824","3825","3826"],"import React, {  useState,  useEffect, createContext} from \"react\";\n\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport AddNew from \"../../pages/Admin/AddNewTeamLeader/AddNewTeamLeader\";\nimport CateFun from \"./CateFun\";\nconst Category33 = createContext();\nconst Category = (props) => {\n     \n       const [tax, setTax] = useState([]);\n     \n       const [error, setError] = useState()\n       const [nn, setNn] = useState([])\n       const [categoryData, setCategoryData] = useState([])\n       const [custCate, setCustcate] = useState([])\n       const [mcatname, setmcatname] = useState([]);\n     const [mcategory, setmcategory] = useState([]);\n     const [store, setStore] = useState([]);\n     const [subData, subCategeryData] = useState([])\n     var kk = []\n     var vv = []\n   \n       const options = tax.map(d => (\n        {\n          \"value\": d.id,\n          \"label\": d.details\n        }))\n\n        const getCategory = async () => {\n            await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n              if (res.data.code === 1) {\n              \n                setTax(res.data.result);\n              }\n            });\n          };\n    // UseEffect \n    useEffect(() => {\n        getCategory();\n      }, []);\n     \n\n      // Category Function\nconst category = (v) => {\n  console.log(\"done2\", v)\n      setCategoryData(v)\n      setNn((oldData) => {\n        return [...oldData, mcategory]\n      })\n      setError(\"\")\n      setCustcate(v)\n      v.map((val) => {\n        vv.push(val.value)\n        setmcategory(val.value);\n        setmcatname((oldData) => {\n          return [...oldData, val.label]\n        })\n        setStore(val.value)\n      })\n  \n  \n      if (vv.length > 0) {\n        if (vv.includes(\"1\") && vv.includes(\"2\")) {\n          console.log(\"hdd\")\n        }\n        else if (vv.includes(\"1\")) {\n  \n          for (let i = 0; i < subData.length; i++) {\n            if (subData[i].value < 9) {\n              kk.push(subData[i])\n            }\n          }\n          subCategeryData(kk)\n        }\n        else if (vv.includes(\"2\")) {\n  \n          for (let i = 0; i < subData.length; i++) {\n            if (subData[i].value > 8) {\n              kk.push(subData[i])\n            }\n          }\n          subCategeryData(kk)\n        }\n      }\n  \n      else if (vv.length === 0) {\n        subCategeryData(\"\")\n      }\n  \n    }\n    const valueProvider = {category, tax, error, nn, categoryData, custCate, mcatname, mcategory, store, subData}\nreturn(\n   \n    <>\n   <Category33.Provider value={\"myName\"}>\n<AddNew />\n\n   </Category33.Provider>\n     \n                    \n\n    </>\n)\n}\n\nexport default Category;\n\nexport {Category33}",["3827","3828"],"/home/pooja/MazarsRepo/src/components/Common/CateFun.js",["3829","3830","3831"],"import React from 'react';\nimport Select from \"react-select\";\nimport { useState , useEffect, useContext} from 'react';\nimport axios from \"axios\";\nimport { baseUrl } from '../../config/config';\nimport { Category33 } from './Category';\nconst CateFun = () => {\n  const dataCate = useContext(Category33);\n  const [tax, setTax] = useState([]);\n  const [error, setError] = useState()\n  const getCategory = async () => {\n    await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n      if (res.data.code === 1) {\n      \n        setTax(res.data.result);\n      }\n    });\n  };\n  console.log(\"dataCate\", dataCate)\n// UseEffect \nuseEffect(() => {\ngetCategory();\n}, []);\n  const options = tax.map(d => (\n    {\n      \"value\": d.id,\n      \"label\": d.details\n    }))\nreturn(\n  <>\n  \n  <Select isMulti options={options}\n                        className={error ? \"customError\" : \"\"}\n                        styles={{\n                          option: (styles, { data }) => {\n                            return {\n                              ...styles,\n                              color: data.value == 2\n                                ? \"green\"\n                                : \"blue\"\n                            };\n                          },\n                          multiValueLabel: (styles, { data }) => ({\n                            ...styles,\n                            color: data.value == 2\n                              ? \"green\"\n                              : \"blue\"\n                          }),\n                        }}\n                       onChange={() => dataCate.Category()}\n                      >\n                      </Select>\n                     \n    </>\n   \n)\n\n}\nexport default CateFun;\n","/home/pooja/MazarsRepo/src/views/ThankYou/Thankyou.js",[],"/home/pooja/MazarsRepo/src/components/LoadingTime/LoadingTime.js",["3832","3833"],"import Swal from \"sweetalert2\";\n const LoadingError = (setLoading) => {\nsetTimeout(() =>{\n    setLoading(false)\n    Swal.fire({\n        title : \"error\",\n        html : \"Something went wrong, Please try again\",\n        icon : \"error\"\n    })\n}, 30000)\n}\n\nvar timerOn = true;\nconst timer2 = (setTime, setDisabled) => {\n    function timer(remaining) {\n        var s = remaining % 60;\n        s = s < 10 ? '0' + s : s;\n        setTime(remaining)\n        remaining -= 1;\n        if (remaining >= 0 && timerOn) {\n          setTimeout(function () {\n            timer(remaining);\n          }, 1000);\n          return;\n        }\n        setDisabled(true)\n       \n      }\n      timer(180);\n}\nexport default {\n    LoadingError, timer2\n  };","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Tds.js",["3834","3835","3836","3837","3838","3839","3840","3841","3842","3843"],"/home/pooja/MazarsRepo/src/pages/TL/Proposal/serviceData.js",[],["3844","3845"],"/home/pooja/MazarsRepo/src/pages/TL/Proposal/PdfPrint.js",[],"/home/pooja/MazarsRepo/src/pages/TL/Proposal/Invoice.js",["3846","3847","3848","3849","3850","3851","3852","3853","3854","3855","3856","3857","3858","3859","3860"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport Tds from \"./Tds\";\nimport OutlinedInputIcons from \"@mui/material/OutlinedInput\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nconst Invoice = () => {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n\n\n    const [id, setId] = useState();\n  \n    const [tds, setTds] = useState(false)\n  \n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n \n   const addTdsToggle = (key) => {\n      \n     setGstinNo(key.gstin_no);\n       setTdsForm(!tdsForm)\n       setAssignNo(key.assign_no)\n       setPaidAmount(key.paid_amount)\n       setId(key.id)\n       setInstallmentNo(key.installment_no)\n       setBillNo(key.billno);\n       setId2(key.id)\n   }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=0`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                  \n                  setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"tlinvoice\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        }, \n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Amount\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n                \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        }, \n        \n       \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n\n                return (\n                    \n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                                color : \"blue\",\n                                            }}\n                                            onClick = {() => addTdsToggle(row)} \n                                        ></i>\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n       \n    ];\n\n    return (\n\n        <>\n            <Card>\n              \n                <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     setRec={setRecords}\n                     records={records}\n                     invoice = \"create\" \n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField='id'\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                   \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Invoice;","/home/pooja/MazarsRepo/src/pages/TL/Proposal/InvoiceTab.js",["3861","3862","3863","3864","3865","3866"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Invoice from \"./Invoice\";\nimport Generated from \"./Generated\";\nconst InvoiceTab = () => {\n    const userid = window.localStorage.getItem(\"tlkey\")\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\nreturn(\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                           View Invoice\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                          Create Invoice\n                        </Tab>\n                        \n                    </TabList>\n\n                    <TabPanel>\n                    <Generated />\n                    </TabPanel>\n                    <TabPanel>\n                    <Invoice />\n                      \n                    </TabPanel>\n                    \n                </Tabs>\n                </Layout>\n)\n}\nexport default InvoiceTab;","/home/pooja/MazarsRepo/src/pages/TL/Proposal/Generated.js",["3867","3868","3869","3870","3871","3872","3873","3874","3875","3876","3877","3878","3879","3880","3881","3882","3883","3884","3885","3886","3887","3888","3889"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\nimport moment from \"moment\";\nconst Generated = () => {\n    var rowStyle2 = {}\n    const userid = window.localStorage.getItem(\"tlkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    \n \n    const addTdsToggle = (key) => {\n   \n      setGstinNo(key.gstin_no);\n        setTdsForm(!tdsForm)\n        setAssignNo(key.assign_no)\n        setPaidAmount(key.paid_amount)\n        setId(key.id)\n        setInstallmentNo(key.installment_no)\n        setBillNo(key.billno);\n        setId2(key.id)\n    }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                   \n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/teamleader/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"tlinvoice\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Invoice No\",\n            dataField: \"billno\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Invoice amount\",\n            dataField: \"\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.invoice_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Tds Deducted\",\n            dataField: \"tds_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.tds_amount;\n                 \n                 return(\n                     <>\n                     {row.is_paid == \"0\" ?\n                     <p>0</p> :   <p>{nfObject.format(x)}</p>}\n                     </>\n                 \n                 )\n               }\n        }, \n        \n        {\n            text: \"Status\",\n            dataField: \"\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row) {\n                return(\n                    <>\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \n                    <>\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p>Declined</p>}\n                    </>}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                       <div style={{ display: \"flex\", alignItems:\"center\" }}>\n                        <a\n                    href={`${baseUrl3}/${row.invoice}`}\n                    target=\"_blank\"\n                  >\n                         <DescriptionOutlinedIcon color=\"secondary\" />\n                              </a>\n                              {row.is_paid == \"0\" ? \n                        <i\n                        class=\"fa fa-edit\"\n                        style={{\n                            fontSize: \"16px\",\n                            margin: \"0 5px\",\n                            cursor: \"pointer\",\n                            color : \"blue\",\n                        }}\n                       onClick = {() => addTdsToggle(row)} \n                    ></i> : \"\"\n                        }\n                        </div>\n                      \n                    </>\n                );\n            },\n        },\n    ];\n\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n         var cc = moment(row.due_date).toDate();\n        \n         if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n            style.backgroundColor = \"#bfdfd2\";\n          style.color = \"#000111\"\n        }\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n       \n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n  \n    \n    return (\n\n        <>\n            <Card>\n              \n             <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice=\"generated\" \n                     setRec={setRecords}\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        rowStyle={ rowStyle2 }\n                    />\n\n                   \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    generated = {\"edited\"}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Generated;","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayDetails.js",["3890","3891","3892","3893","3894","3895","3896","3897","3898","3899","3900","3901","3902","3903","3904","3905","3906","3907","3908","3909"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport PaymentIcon from '@mui/icons-material/Payment';\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { baseUrl2, baseUrl3 } from \"../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PayModal from \"./PayModal\";\nimport { Typography } from \"antd\";\n\nconst PayDetails = () => {\n    let history = useHistory();\n    const userId = window.localStorage.getItem(\"userid\");\n    const { id } = useParams();\n    const [paymentDetail, setPaymentDetail] = useState();\n    const [modal, setModal] = useState(false);\n    const [modalData, setModalData] = useState()\n    const [showTable, setShowTable] = useState(null);\n    const paydetails2 = () => {\naxios.get(`${baseUrl}/admin/getPaymentDetail?id=${id}`)\n.then((res) => {\n    if(res.data.code === 1){\n       \n        setPaymentDetail(res.data.payment_detail)\n        //console.log(res.data.payment_detail.length)\n       // setShowTable(res.data.payment_detail[0].invoice_generated)\n       if(res.data.payment_detail.length > 0){\n           setShowTable(true)\n       }\n       else {\n           setShowTable(false)\n       }\n    }\n   \n})\n    }\n    useEffect(() => {\n        paydetails2()\n    }, [])\n const openModal = (key) => {\n   if(key){\n       setModalData(key)\n   \n   }\nsetModal(!modal)\n\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Q.No\",\n            \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField: \"installment_no\",\n            text: \"Installment No\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"80px\" };\n            },\n           \n           \n        },\n        {\n            dataField: \"billno\",\n            text: \"Invoice No\",\n           \n            \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"150px\" };\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.invoice_generated == \"0\" ? \"\" : \n                    <p>{row.billno}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"due_date\",\n            text: \"Due Date\",\n           sort : true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        },\n       \n        {\n            dataField: \"invoice_amount\",\n            text: \"Invoice Amount\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.invoice_amount;\n                 console.log(nfObject.format(x))\n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            dataField : \"tds_amount\",\n            text : \"Tds Deducted\",\n            style : {\n                fontSize : \"11px\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            // formatter : function(cell, row){\n            //     return(\n            //         <>\n            //         {row.is_paid == \"1\" ? \n            //         <p>{row.tds_amount}</p> : \"\"}\n            //         </>\n            //     )\n            // }\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.tds_amount;\n                 console.log(nfObject.format(x))\n                 return(\n                  <>\n                  {row.is_paid == \"1\" ?\n                   <p>{nfObject.format(x)}</p> : \"\"}\n                  </>\n                 )\n               }\n        },\n        {\n            dataField : \"amount\",\n            text : \"Amount Paid\",\n            style : {\n                fontSize : \"11px\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.amount;\n                 console.log(nfObject.format(x))\n                 return(\n                  <>\n                  {row.is_paid == \"1\" ?\n                   <p>{nfObject.format(x)}</p> : \"\"}\n                  </>\n                 )\n               }\n        },\n        \n        {\n            dataField: \"invoice\",\n            text: \"Invoice\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                return(\n                   <>\n                   {row.invoice_generated == \"1\" ? \n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\n                   </>\n                )\n            },\n           \n        },\n        \n       \n       \n        {\n            dataField: \"\",\n            text: \"Pay\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n           \n           formatter: function dateFormat(cell, row){\n           \n               return(\n                <>\n                {row.invoice_generated == \"1\" ? \n              <>\n              {row.is_paid == \"0\" ? \n                <i\n                class=\"fa fa-mail-forward\"\n                style={{\n                    fontSize: \"14px\",\n                    cursor: \"pointer\",\n                    color: \"blue\"\n                }}\n                onClick={() => openModal(row)}\n            ></i> :   <>\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url}>Payment receipt</a> \n            : <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p> }\n            </>}\n              </>\n               : \"\"}\n                </>\n                  \n                   \n               )\n           }\n        },\n           \n      ];\n    \n      const Container = styled.div `\n      dispaly : flex;\n      width : 100%;\n      height : 100%;\n      justify-content : center;\n      align-items : center;\n      color: red`\nreturn(\n   <>\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n    {paymentDetail === undefined ? \"\" : \n  <Card>\n      <CardHeader>\n         <Row>\n         <Col md=\"8\">\n              <h4>Payment Details</h4>\n              </Col>\n      <Col md=\"4\">\n              <button class=\"btn btn-success\" style={{display : \"flex\", margin : \"0 0 0 auto\"}} onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n         </Row>\n          </CardHeader>\n          <CardBody>\n   {showTable == true ? \n  \n  <BootstrapTable\n  bootstrap4\n  keyField=\"id\"\n  data={paymentDetail}\n  columns={columns}\n  classes=\"table-responsive\"\n/>  : \n<Container>\n    <p>Invoice not generated</p>\n    </Container>}\n<PayModal \nshowModal = {modal}\nmodalToggle = {openModal}\nmodalData = {modalData}/>\n</CardBody>\n</Card>}\n</Layout>                  \n   </>\n)\n}\nexport default PayDetails;","/home/pooja/MazarsRepo/src/views/PaymentStatus/PayModal.js",["3910","3911","3912"],"\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { baseUrl } from \"../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport axios from \"axios\";\nconst PayModal = (props) => {\n    const userid = window.localStorage.getItem(\"userid\")\n    const [payValue, setpayValue] = useState()\n    const [tdsRate, setTdsRate] = useState();\n    const [tdsAmount, setTdsAmount] = useState()\n    \n \n    useEffect(() => {\n       if(props.modalData){\n           setTdsRate(props.modalData.tds_rate)\n           setTdsAmount(props.modalData.tds_amount)\n           setpayValue(parseInt(props.modalData.invoice_amount) - parseInt(props.modalData.tds_amount))\n\n   \n    }\n    }, [props.modalData])\n   \n    const payFun = (e) => {\n  \n         \n        let formData = new FormData();\n        formData.append(\"id\", props.modalData.id);\n        formData.append(\"cid\", JSON.parse(userid));\n        formData.append(\"tds_rate\", tdsRate);\n        formData.append(\"tds_amount\", tdsAmount)\n       \n        axios({\n            method :\"POST\", \n            url : `${baseUrl}/customers/payCall`,\n            data : formData\n        })\n        .then((res) => {\n            if(res.data.code === 1){\n             \n                window.location.assign(res.data.result)\n            }\n        })\n       \n       \n    }\n    const inVal = (e) => {\n       if(e.target.value > 100){\nsetTdsRate(100)\nlet tdAmount = parseInt((parseInt(props.modalData.paid_amount) + parseInt(props.modalData.opt_expenses)))\n      \n      \nlet a = parseInt(props.modalData.cgst_amount) + parseInt(props.modalData.sgst_amount) + parseInt(props.modalData.igst_amount)\nsetTdsAmount(Number((100 * tdAmount) / 100).toFixed(0))\nlet b = Number((100 * tdAmount) / 100).toFixed(0)\n\nsetpayValue(parseInt(props.modalData.invoice_amount) - parseInt(b))\n       }\n       else{\n        setTdsRate(e.target.value)\n        let tdAmount = parseInt((parseInt(props.modalData.paid_amount) + parseInt(props.modalData.opt_expenses)))\n      \n      \n        let a = parseInt(props.modalData.cgst_amount) + parseInt(props.modalData.sgst_amount) + parseInt(props.modalData.igst_amount)\nsetTdsAmount(Number((e.target.value * tdAmount) / 100).toFixed(0))\nlet b = Number((e.target.value * tdAmount) / 100).toFixed(0)\n\nsetpayValue(parseInt(props.modalData.invoice_amount) - parseInt(b))\n       }\n    }\nreturn(\n    <Modal isOpen={props.showModal} toggle={props.modalToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\n    <ModalHeader toggle={props.modalToggle}> Payment</ModalHeader>\n    <ModalBody style={{display :\"flex\", flexDirection :\"column\", overflow : \"wrap\"}}>\n\n{props.modalData === undefined ? \"\" :\n<table className=\"table\">\n    \n    <tbody className=\"tbody\">\n\n<tr>\n    <td>Invoice Amount</td>\n    <td></td>\n    <td>{parseInt(props.modalData.invoice_amount)}</td>\n</tr>\n<tr>\n    <td>TDS</td>\n    <td style={{display :\"flex\"}}><input type=\"text\"  style={{display : \"flex\", width: \"50px\"}} value={tdsRate} onChange= {(val) => inVal(val)}/> % </td>\n    <td>{tdsAmount}</td>\n</tr>\n<tr>\n    <td>Payable Amount</td>\n   <td></td>\n   <td>{payValue}</td>\n</tr>\n    </tbody>\n    </table> }\n\n<ModalFooter>\n    <button onClick={() => payFun()} className=\"btn btn-success\">Pay Now</button>\n</ModalFooter>\n    </ModalBody>\n  </Modal>\n)\n}\nexport default PayModal;","/home/pooja/MazarsRepo/src/components/Search-Filter/InvoiceFilter.js",["3913","3914","3915","3916","3917","3918","3919","3920","3921","3922","3923"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nconst InvoiceFilter = (props) => {\n\n   const { handleSubmit, register, errors, reset } = useForm();\n   var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n  const [item] = useState(current_date);\n  \n  const onSubmit = (data) => {\n  \n    let formData = new FormData();\n    formData.append(\"qno\", data.query_no);\n    formData.append(\"from\", data.p_dateFrom);\n    formData.append(\"to\", data.p_dateTo);\n    formData.append(\"installment_no\", data.installment_no)\n    formData.append(\"status\", data.opt)\n    if(props.invoice == \"generated\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?tl_id=${props.userid}&invoice=1`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n        props.setRec(res.data.payment_detail.length)\n       }\n      })\n    }\n    else if (props.invoice == \"create\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?tl_id=${props.userid}&invoice=0&ststus=${data.opt}`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n       props.setRec(res.data.payment_detail.length)\n       }\n      })\n    }\n    else if (props.invoice == \"tpcreate\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?tp_id=${props.userid}&invoice=0`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n       props.setRec(res.data.payment_detail.length)\n       }\n      })\n    }\n    else if(props.invoice == \"tpgenerated\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?tp_id=${props.userid}&invoice=1`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n        props.setRec(res.data.payment_detail.length)\n       }\n      })\n    }\n    else if(props.invoice == \"admingenerated\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?&invoice=1`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n        props.setRec(res.data.payment_detail.length)\n       }\n      })\n    }\n    else if (props.invoice == \"admincreate\"){\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/getPaymentDetail?&invoice=0`,\n        data: formData,\n      })\n      .then((res) => {\n       if(res.data.code === 1){\n        props.setData(res.data.payment_detail);\n        props.setRec(res.data.payment_detail.length)\n       }\n      })\n    } \n    \n  }\n  const resetData = () => {\n    reset();\n    props.getData()\n  }\n    return(\n       <>\n      \n        <form onSubmit={handleSubmit(onSubmit)}> \n           <div className=\"row\">\n               <div className=\"col-md-3\">\n               <input   \n            type = \"text\"\n            name=\"query_no\"\n            ref={register}\n            placeholder=\"Enter Query Number\" \n            className=\"form-control\"/>\n                   </div>\n                   <div className=\"col-md-2\">\n                  <select\n                   ref={register}\n                    className=\"form-select form-control\"\n                    style={{ height: \"33px\" }}\n                    name=\"installment_no\">\n                      <option value=\"\">Please select installment</option>\n                     <option value=\"1\">1</option>\n                     <option value=\"2\">2</option>\n                     <option value=\"3\">3</option>\n                     <option value=\"4\">4</option>\n                     <option value=\"5\">5</option>\n                     <option value=\"6\">6</option>\n                  </select>\n                       </div>\n                  <div className=\"col-md-7\">\n                  <div class=\"form-inline\">\n             \n\n             <div class=\"form-group mx-sm-1  mb-2\">\n               <label className=\"form-select form-control\">From</label>\n             </div>\n\n             <div class=\"form-group mx-sm-1  mb-2\">\n               <input\n                 type=\"date\"\n                 name=\"p_dateFrom\"\n                 className=\"form-select form-control\"\n                 ref={register}\n               \n               />\n             </div>\n\n             <div class=\"form-group mx-sm-1  mb-2\">\n               <label className=\"form-select form-control\">To</label>\n             </div>\n\n             <div class=\"form-group mx-sm-1  mb-2\">\n               <input\n                 type=\"date\"\n                 name=\"p_dateTo\"\n                 className=\"form-select form-control\"\n                 ref={register}\n                defaultValue={item}\n               \n               />\n             </div>\n</div>\n                    </div>    \n                        \n                \n                      \n           </div>\n          <div className=\"mt-3\">\n        \n           <div class=\"form-group mx-sm-1  mb-2\">\n         <div className=\"row\">\n      {props.invoice ==\"tpcreate\" || props.invoice == \"admincreate\" || props.invoice == \"create\" ? \"\" :\n        <div className=\"col-md-2\">\n        <select name=\"opt\" className=\"form-select form-control\" ref={register}  style={{ height: \"33px\" }}>\n        <option value=\"\">Select </option>\n           <option value=\"0\">Unpaid</option>\n           <option value=\"1\">Paid</option>\n           <option value=\"2\">Declined</option>\n           </select>\n          </div> }\n           <div className=\"col-md-3\">\n         \n          <button className=\"btn btn-success\" type=\"submit\"  style={{ height: \"33px\" }}>Search</button>\n           <button className=\"btn btn-primary mx-2\" onClick={() => resetData()}  style={{ height: \"33px\" }}>Reset</button>\n            </div>\n        \n                 <div className=\"col-md-4\">\n                 <span style={{display : \"flex\"}}>\n                 <label className=\"form-select form-control\"\n                  >Total Records : {props.records}</label>\n                 </span>\n                   </div>\n           </div>\n                </div>\n          </div>\n         \n        </form>\n       </>\n    )\n\n}\nexport default InvoiceFilter;","/home/pooja/MazarsRepo/src/pages/TL/Report/Report.js",["3924"],"import React from 'react';\nimport { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { baseUrl } from \"../../../config/config\";\nimport './Admin.css';\nimport Select from 'react-select';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Typography } from '@material-ui/core';\nimport Mandatory from '../../../components/Common/Mandatory';\n\nconst Report = () => {\n    const userid = window.localStorage.getItem(\"tlkey\");\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n    const [item] = useState(current_date);\n    const { handleSubmit, register, errors, getValues } = useForm();\n    const onSubmit = (value) => {\n        let formData = new FormData();\n        formData.append(\"from\", value.p_from);\n        formData.append(\"to\", value.p_to);\n      \n        // formData.append(\"taxprofessional\");\n        // formData.append(\"category\",);\n        // formData.append(\"subCategory\");\n        formData.append(\"q_no\", value.qno);\n        formData.append(\"date_query\", value.dateQuery);\n        formData.append(\"cust_id\", value.cust_id);\n        formData.append(\"basic_category\", value.basicCategory);\n        formData.append(\"basic_sub_category\", value.basic_sub_category);\n        formData.append(\"assessment\", value.assessment);\n        formData.append(\"purpose\", value.purpose);\n        formData.append(\"p_format\", value.p_format);\n        formData.append(\"t_requested\", value.t_requester);\n        formData.append(\"spc_que\", value.spc_que);\n        formData.append(\"date_allocation\", value.doa);\n\n        formData.append(\"taxprofessional\", value.tp_name);\n        formData.append(\"date_proposal\", value.dateProposal);\n        formData.append(\"proposed_amount\", value.proposedAmount);\n        formData.append(\"payment_terms\", value.paymentTerms);\n        formData.append(\"proposal_status\", value.proposal_status);\n        formData.append(\"accepted_amount\", value.acceptedAmount);\n        formData.append(\"payment_declined_reasen\", value.paymentDeclinedReason);\n        formData.append(\"date_of_acceptance\", value.date_acceptance);\n        formData.append(\"amount_received\", value.amountReceived);\n        formData.append(\"amount_outstanding\", value.amountOutstanding);\n        formData.append(\"amount_overdue\", value.amount_overdue);\n        formData.append(\"payment_declined\", value.declinedDate);\n        formData.append(\"assignment_number\", value.assignNumber);\n        formData.append(\"assign_date\", value.assignDate);\n        formData.append(\"proposed_completion_date\", value.completionDate);\n        formData.append(\"assignment_status\", value.assignStatus);\n        formData.append(\"date_complation\", value.completionQuery);\n        formData.append(\"assign_time\", value.assignTime);\n        formData.append(\"payment_recived_date\", value.receiptDate);\n        formData.append(\"amount_received\", value.amountReceived);\n   axios({\n     method : \"POST\",\n     url : `${baseUrl}/reports`,\n     data : formData\n\n   })\n    }\n    return (\n        <>\n          <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n          <div className=\"adminForm\">\n          <Typography variant=\"h4\">Teamleader Report</Typography>\n  <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n    <div className=\"row\">\n      <div className=\"col-md-3\">\n\n      <div className=\"mb-3\">\n          <label className=\"form-label\">From</label>\n          <input\n            type=\"date\"\n            name=\"p_from\"\n            ref={register}\n            placeholder=\"Enter Mobile Number\"\n            className={classNames(\"form-control\", {\n              \"is-invalid\": errors.p_mobile,\n            })}\n          />\n        </div>\n      </div>\n\n      <div className=\"col-md-3\">\n      <div className=\"mb-3\">\n          <label className=\"form-label\">To</label>\n          <input\n            type=\"date\"\n            name=\"p_to\"\n            className={classNames(\"form-control\", {\n              \"is-invalid\": errors.p_type,\n            })}\n            defaultValue={item}\n            max={item}\n            placeholder=\"Enter type\"\n            ref={register({ required: true })}\n          />\n        </div>\n      </div>\n    \n   </div> \n   <div className=\"row\">\n\n\n<div className=\"col-md-3\">\n<div className=\"mb-3\">\n<label className=\"form-label\">Taxprofessional</label>\n<Select isMulti = {true} />\n\n</div>\n</div>\n       <div className=\"col-md-3\">\n           <label className=\"form-label\">Category</label>\n           <Select isMulti = {true} />\n        </div>\n        <div className=\"col-md-3\">\n            <label className=\"form-label\">Sub Category</label>\n            <Select isMulti={true} />\n            </div>\n   </div>\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Basic Query Details</legend>\n            <div className=\"basicFeild\">\n            <span>\n               <input type=\"checkbox\" name=\"sno\" id=\"sno\" checked disabled ref={register}></input>\n               <label htmlFor=\"sno\">S.No</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" name=\"qno\" ref={register} id=\"qno\" checked disabled></input>\n               <label htmlFor=\"qno\">Query No</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" ref={register} name=\"dataQuery\" id=\"dataQuery\" checked disabled></input>\n               <label htmlFor=\"dataQuery\">Data Query</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" ref={register} name=\"cust_id\" id=\"cust_id\" checked disabled></input>\n               <label htmlFor=\"cust_id\">Customer Id</label>\n            </span>\n            <span>\n               <input type=\"checkbox\" ref={register} name=\"basicCategory\" id=\"basicCategory\" checked disabled></input>\n               <label htmlFor=\"basicCategory\">Category</label>\n             </span>\n             <span>\n               <input type=\"checkbox\" ref={register} name=\"basic_sub_category\" id=\"basic_sub_category\" checked disabled></input>\n               <label htmlFor=\"basic_sub_category\">Sub Category</label>\n               </span>\n               <span> \n<input type=\"checkbox\" ref={register} name=\"tl_name\" id=\"tl_name\" checked disabled></input>\n<label htmlFor=\"tl_name\">Name of Team Leader</label>\n\n</span>\n<span>\n<input type=\"checkbox\"  ref={register}name=\"tp_name\" id=\"tp_name\" checked disabled></input>\n<label htmlFor=\"tp_name\">Name of Tax Professional</label>\n</span> \n               <span>\n<input type=\"checkbox\" name=\"assessment\" ref={register} id=\"assessment\"></input>\n<label htmlFor=\"assess_year\">Assessment Year(s)</label>\n</span>\n           \n<span>\n<input type=\"checkbox\" ref={register} name=\"purpose\" id=\"purpose\"></input>\n<label htmlFor=\"purpose\">Purpose for which Opinion is sought</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"format_p\" id=\"format_p\"></input>\n<label htmlFor=\"format_p\">Format in which Opinion is required</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"t_requested\" id=\"t_requested\"></input>\n<label htmlFor=\"t_requested\">Timeline Requested</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"spc_que\" id=\"spc_que\"></input>\n<label htmlFor=\"spc_que\">Specific questions</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"doa\" id=\"doa\"></input>\n<label htmlFor=\"doa\">Date of Allocation of Query</label>\n</span>\n</div>\n</fieldset>\n</div>\n</div>\n\n\n   {/* Proposal */}\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Proposal</legend>\n            <div className=\"basicFeild\">\n<span>\n<input type=\"checkbox\" ref={register} name=\"dateProposal\" id=\"dateProposal\"></input>\n<label htmlFor=\"dateProposal\">Date of Proposal</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"proposedAmount\" id=\"proposedAmount\"></input>\n<label htmlFor=\"proposedAmount\">Proposed Amount</label>\n</span>\n<span>\n<input type=\"checkbox\"  ref={register} name=\"paymentTerms\" id=\"paymentTerms\"></input>\n<label htmlFor=\"paymentTerms\">Payment Terms</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"proposal_status\" id=\"proposal_status\"></input>\n<label htmlFor=\"proposal_status\">Proposal Status</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"acceptedAmount\" id=\"acceptedAmount\"></input>\n<label htmlFor=\"acceptedAmount\">Accepted Amount </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"paymentDeclinedReason\" id=\"paymentDeclinedReason\"></input>\n<label htmlFor=\"paymentDeclinedReason\">Payment decline reason </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"date_acceptance\" id=\"date_acceptance\"></input>\n<label htmlFor=\"date_acceptance\">Date of Acceptance / Decline</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\n<label htmlFor=\"amountReceived\">Total Amount Received</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"amountOutstanding\" id=\"amountOutstanding\"></input>\n<label htmlFor=\"amountOutstanding\">Total Amount Outstanding</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"amount_overdue\" id=\"amount_overdue\"></input>\n<label htmlFor=\"amount_overdue\">Total Amount Overdue</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"declinedDate\" id=\"declinedDate\"></input>\n<label htmlFor=\"declinedDate\">Payment decline date</label>\n</span>             \n            </div>      \n           </fieldset>\n           </div>\n   </div>\n\n   {/* Assignment */}\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Assignment</legend>\n            <div className=\"basicFeild\">\n            <span>\n<input type=\"checkbox\" ref={register} name=\"assignNumber\" id=\"assignNumber\"></input>\n<label htmlFor=\"assignNumber\">Assignment Number</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"assignDate\" id=\"assignDate\"></input>\n<label htmlFor=\"assignDate\">Assignment Date</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"completionDate\" id=\"completionDate\"></input>\n<label htmlFor=\"completionDate\">Proposed Date of Completion/ Expected Date of Delivery</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"assignStatus\" id=\"assignStatus\"></input>\n<label htmlFor=\"assignStatus\">Assignment Status</label>\n</span>\n\n<span>  <input type=\"checkbox\" ref={register} name=\"completionQuery\" id=\"completionQuery\"></input>\n<label htmlFor=\"completionQuery\">Date of Completion of Query </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"assignTime\" id=\"assignTime\"></input>\n<label htmlFor=\"assignTime\">Time taken to complete the assignment</label>\n</span>\n            </div>    \n           </fieldset>\n           </div>\n   </div>\n\n\n   {/* Payment Receipt */}\n\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Payment Receipt</legend>  \n            <div className=\"basicFeild\">\n            <span>\n<input type=\"checkbox\" ref={register} name=\"receiptDate\" id=\"receiptDate\"></input>\n<label htmlFor=\"receiptDate\">Date of Receipt</label>\n</span>   \n<span>\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\n<label htmlFor=\"amountReceived\">Amount Received</label>\n</span>\n            </div>\n           </fieldset>\n           </div>\n   </div>\n   <button type=\"submit\" class=\"btn btn-success btn-lg my-3\">Generate Report</button>\n   <Mandatory />\n  </form>\n  </div>\n            </Layout>\n              </>\n   \n       );\n   }\nexport default Report;","/home/pooja/MazarsRepo/src/pages/TP/Report/Report.js",["3925"],"import React from 'react';\nimport { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { baseUrl } from \"../../../config/config\";\nimport './Admin.css';\nimport Select from 'react-select';\nimport Layout from \"../../../components/Layout/Layout\";\nimport { Typography } from '@material-ui/core';\nimport Mandatory from '../../../components/Common/Mandatory';\n\nconst Report = () => {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n \n    const [item] = useState(current_date);\n    const { handleSubmit, register, errors, getValues } = useForm();\n    const onSubmit = (value) => {\n        let formData = new FormData();\n        formData.append(\"from\", value.p_from);\n        formData.append(\"to\", value.p_to);\n      \n        // formData.append(\"category\",);\n        // formData.append(\"subCategory\");\n        formData.append(\"q_no\", value.qno);\n        formData.append(\"date_query\", value.dateQuery);\n        formData.append(\"cust_id\", value.cust_id);\n        formData.append(\"basic_category\", value.basicCategory);\n        formData.append(\"basic_sub_category\", value.basic_sub_category);\n        formData.append(\"assessment\", value.assessment);\n        formData.append(\"purpose\", value.purpose);\n        formData.append(\"p_format\", value.p_format);\n        formData.append(\"t_requested\", value.t_requester);\n        formData.append(\"spc_que\", value.spc_que);\n        formData.append(\"date_allocation\", value.doa);\n        \n        formData.append(\"date_proposal\", value.dateProposal);\n        formData.append(\"proposed_amount\", value.proposedAmount);\n        formData.append(\"payment_terms\", value.paymentTerms);\n        formData.append(\"proposal_status\", value.proposal_status);\n        formData.append(\"accepted_amount\", value.acceptedAmount);\n        formData.append(\"payment_declined_reasen\", value.paymentDeclinedReason);\n        formData.append(\"date_of_acceptance\", value.date_acceptance);\n        formData.append(\"amount_received\", value.amountReceived);\n        formData.append(\"amount_outstanding\", value.amountOutstanding);\n        formData.append(\"amount_overdue\", value.amount_overdue);\n        formData.append(\"payment_declined\", value.declinedDate);\n        formData.append(\"assignment_number\", value.assignNumber);\n        formData.append(\"assign_date\", value.assignDate);\n        formData.append(\"proposed_completion_date\", value.completionDate);\n        formData.append(\"assignment_status\", value.assignStatus);\n        formData.append(\"date_complation\", value.completionQuery);\n        formData.append(\"assign_time\", value.assignTime);\n        formData.append(\"payment_recived_date\", value.receiptDate);\n        formData.append(\"amount_received\", value.amountReceived);\n   axios({\n     method : \"POST\",\n     url : `${baseUrl}/reports`,\n     data : formData\n\n   })\n    }\n    return (\n        <>\n          <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n          <div className=\"adminForm\">\n          <Typography variant=\"h4\">Taxprofessional Report</Typography>\n  <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n    <div className=\"row\">\n      <div className=\"col-md-3\">\n\n      <div className=\"mb-3\">\n          <label className=\"form-label\">From</label>\n          <input\n            type=\"date\"\n            name=\"p_from\"\n            ref={register}\n            placeholder=\"Enter Mobile Number\"\n            className={classNames(\"form-control\", {\n              \"is-invalid\": errors.p_mobile,\n            })}\n          />\n        </div>\n      </div>\n\n      <div className=\"col-md-3\">\n      <div className=\"mb-3\">\n          <label className=\"form-label\">To</label>\n          <input\n            type=\"date\"\n            name=\"p_to\"\n            className={classNames(\"form-control\", {\n              \"is-invalid\": errors.p_type,\n            })}\n            defaultValue={item}\n            max={item}\n            placeholder=\"Enter type\"\n            ref={register({ required: true })}\n          />\n        </div>\n      </div>\n      <div className=\"col-md-3\">\n           <label className=\"form-label\">Category</label>\n           <Select isMulti = {true} />\n        </div>\n        <div className=\"col-md-3\">\n            <label className=\"form-label\">Sub Category</label>\n            <Select isMulti={true} />\n            </div>\n   </div> \n  \n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Basic Query Details</legend>\n            <div className=\"basicFeild\">\n            <span>\n               <input type=\"checkbox\" name=\"sno\" id=\"sno\" checked disabled ref={register}></input>\n               <label htmlFor=\"sno\">S.No</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" name=\"qno\" ref={register} id=\"qno\" checked disabled></input>\n               <label htmlFor=\"qno\">Query No</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" ref={register} name=\"dataQuery\" id=\"dataQuery\" checked disabled></input>\n               <label htmlFor=\"dataQuery\">Data Query</label>\n               </span>\n               <span>\n               <input type=\"checkbox\" ref={register} name=\"cust_id\" id=\"cust_id\" checked disabled></input>\n               <label htmlFor=\"cust_id\">Customer Id</label>\n            </span>\n            <span>\n               <input type=\"checkbox\" ref={register} name=\"basicCategory\" id=\"basicCategory\" checked disabled></input>\n               <label htmlFor=\"basicCategory\">Category</label>\n             </span>\n             <span>\n               <input type=\"checkbox\" ref={register} name=\"basic_sub_category\" id=\"basic_sub_category\" checked disabled></input>\n               <label htmlFor=\"basic_sub_category\">Sub Category</label>\n               </span>\n               <span> \n<input type=\"checkbox\" ref={register} name=\"tl_name\" id=\"tl_name\" checked disabled></input>\n<label htmlFor=\"tl_name\">Name of Team Leader</label>\n\n</span>\n<span>\n<input type=\"checkbox\"  ref={register}name=\"tp_name\" id=\"tp_name\" checked disabled></input>\n<label htmlFor=\"tp_name\">Name of Tax Professional</label>\n</span> \n               <span>\n<input type=\"checkbox\" name=\"assessment\" ref={register} id=\"assessment\"></input>\n<label htmlFor=\"assess_year\">Assessment Year(s)</label>\n</span>\n           \n<span>\n<input type=\"checkbox\" ref={register} name=\"purpose\" id=\"purpose\"></input>\n<label htmlFor=\"purpose\">Purpose for which Opinion is sought</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"format_p\" id=\"format_p\"></input>\n<label htmlFor=\"format_p\">Format in which Opinion is required</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"t_requested\" id=\"t_requested\"></input>\n<label htmlFor=\"t_requested\">Timeline Requested</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"spc_que\" id=\"spc_que\"></input>\n<label htmlFor=\"spc_que\">Specific questions</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"doa\" id=\"doa\"></input>\n<label htmlFor=\"doa\">Date of Allocation of Query</label>\n</span>\n</div>\n</fieldset>\n</div>\n</div>\n\n\n   {/* Proposal */}\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Proposal</legend>\n            <div className=\"basicFeild\">\n<span>\n<input type=\"checkbox\" ref={register} name=\"dateProposal\" id=\"dateProposal\"></input>\n<label htmlFor=\"dateProposal\">Date of Proposal</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"proposedAmount\" id=\"proposedAmount\"></input>\n<label htmlFor=\"proposedAmount\">Proposed Amount</label>\n</span>\n<span>\n<input type=\"checkbox\"  ref={register} name=\"paymentTerms\" id=\"paymentTerms\"></input>\n<label htmlFor=\"paymentTerms\">Payment Terms</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"proposal_status\" id=\"proposal_status\"></input>\n<label htmlFor=\"proposal_status\">Proposal Status</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"acceptedAmount\" id=\"acceptedAmount\"></input>\n<label htmlFor=\"acceptedAmount\">Accepted Amount </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"paymentDeclinedReason\" id=\"paymentDeclinedReason\"></input>\n<label htmlFor=\"paymentDeclinedReason\">Payment decline reason </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"date_acceptance\" id=\"date_acceptance\"></input>\n<label htmlFor=\"date_acceptance\">Date of Acceptance / Decline</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\n<label htmlFor=\"amountReceived\">Total Amount Received</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"amountOutstanding\" id=\"amountOutstanding\"></input>\n<label htmlFor=\"amountOutstanding\">Total Amount Outstanding</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"amount_overdue\" id=\"amount_overdue\"></input>\n<label htmlFor=\"amount_overdue\">Total Amount Overdue</label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"declinedDate\" id=\"declinedDate\"></input>\n<label htmlFor=\"declinedDate\">Payment decline date</label>\n</span>             \n            </div>      \n           </fieldset>\n           </div>\n   </div>\n\n   {/* Assignment */}\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Assignment</legend>\n            <div className=\"basicFeild\">\n            <span>\n<input type=\"checkbox\" ref={register} name=\"assignNumber\" id=\"assignNumber\"></input>\n<label htmlFor=\"assignNumber\">Assignment Number</label>\n</span>\n<span>\n<input type=\"checkbox\" ref={register} name=\"assignDate\" id=\"assignDate\"></input>\n<label htmlFor=\"assignDate\">Assignment Date</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"completionDate\" id=\"completionDate\"></input>\n<label htmlFor=\"completionDate\">Proposed Date of Completion/ Expected Date of Delivery</label>\n</span>\n<span>\n    <input type=\"checkbox\" ref={register} name=\"assignStatus\" id=\"assignStatus\"></input>\n<label htmlFor=\"assignStatus\">Assignment Status</label>\n</span>\n\n<span>  <input type=\"checkbox\" ref={register} name=\"completionQuery\" id=\"completionQuery\"></input>\n<label htmlFor=\"completionQuery\">Date of Completion of Query </label>\n</span>\n<span>  <input type=\"checkbox\" ref={register} name=\"assignTime\" id=\"assignTime\"></input>\n<label htmlFor=\"assignTime\">Time taken to complete the assignment</label>\n</span>\n            </div>    \n           </fieldset>\n           </div>\n   </div>\n\n\n   {/* Payment Receipt */}\n\n   <div className=\"row\">\n       <div className=\"col-md-12\">\n       <fieldset className=\"my-fieldset\">\n           <legend className=\"login-legend\">Payment Receipt</legend>  \n            <div className=\"basicFeild\">\n            <span>\n<input type=\"checkbox\" ref={register} name=\"receiptDate\" id=\"receiptDate\"></input>\n<label htmlFor=\"receiptDate\">Date of Receipt</label>\n</span>   \n<span>\n<input type=\"checkbox\" ref={register} name=\"amountReceived\" id=\"amountReceived\"></input>\n<label htmlFor=\"amountReceived\">Amount Received</label>\n</span>\n            </div>\n           </fieldset>\n           </div>\n   </div>\n   <button type=\"submit\" class=\"btn btn-success btn-lg my-3\">Generate Report</button>\n   <Mandatory />\n  </form>\n  </div>\n            </Layout>\n              </>\n   \n       );\n   }\nexport default Report;","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Invoice.js",["3926","3927","3928","3929"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Generated from \"./Generated\";\nconst InvoiceTab = () => {\n    const userid = window.localStorage.getItem(\"tpkey\")\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\nreturn(\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                           View Invoice\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                          Create Invoice\n                        </Tab>\n                        \n                    </TabList>\n\n                    <TabPanel>\n                    <Generated />\n                    </TabPanel>\n                    <TabPanel>\n                    <CreateInvoice />\n                      \n                    </TabPanel>\n                    \n                </Tabs>\n                </Layout>\n)\n}\nexport default InvoiceTab;","/home/pooja/MazarsRepo/src/pages/TP/Invoice/CreateInvoice.js",["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\n\nconst CreateInvoice = () => {\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n\n\n    const [id, setId] = useState();\n  \n    const [tds, setTds] = useState(false)\n  \n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n \n   const addTdsToggle = (key) => {\n      \n     setGstinNo(key.gstin_no);\n       setTdsForm(!tdsForm)\n       setAssignNo(key.assign_no)\n       setPaidAmount(key.paid_amount)\n       setId(key.id)\n       setInstallmentNo(key.installment_no)\n       setBillNo(key.billno);\n       setId2(key.id)\n   }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=0`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        }, \n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Amount\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.paid_amount;\n             \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        }, \n        \n       \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n\n                return (\n                    \n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                        <i\n                                            class=\"fa fa-mail-forward\"\n                                            style={{\n                                                fontSize: \"14px\",\n                                                cursor: \"pointer\",\n                                                color : \"blue\",\n                                            }}\n                                            onClick = {() => addTdsToggle(row)} \n                                        ></i>\n                           \n                        </div>\n                    </>\n                );\n            },\n        },\n       \n    ];\n\n    return (\n\n        <>\n            <Card>\n              \n                <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice = \"tpcreate\" \n                     setRec={setRecords}\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField='id'\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                   \n\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default CreateInvoice;","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Generated.js",["3940","3941","3942","3943","3944","3945","3946","3947","3948","3949","3950","3951","3952","3953","3954","3955","3956","3957","3958","3959","3960"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\nimport moment from \"moment\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nconst Generated = () => {\n    var rowStyle2 = {}\n    const userid = window.localStorage.getItem(\"tpkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    \n \n    const addTdsToggle = (key) => {\n   \n      setGstinNo(key.gstin_no);\n        setTdsForm(!tdsForm)\n        setAssignNo(key.assign_no)\n        setPaidAmount(key.paid_amount)\n        setId(key.id)\n        setInstallmentNo(key.installment_no)\n        setBillNo(key.billno);\n        setId2(key.id)\n    }\n \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?tp_id=${JSON.parse(userid)}&invoice=1`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/taxprofessional/queries/${row.assign_id}`,\n                                routes: \"proposal\",\n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Invoice No\",\n            dataField: \"billno\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Invoice amount\",\n            dataField: \"invoice_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.invoice_amount;\n               \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Tds Deducted\",\n            dataField: \"tds_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.tds_amount;\n               \n                 return(\n                     <>\n                     {row.is_paid == \"0\" ?\n                     <p>0</p> :   <p>{nfObject.format(x)}</p>}\n                     </>\n                 \n                 )\n               }\n        },  \n        {\n            text: \"Status\",\n            dataField: \"\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row) {\n                return(\n                    <>\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \n                    <>\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p>Declined</p>}\n                    </>}\n                    </>\n                )\n            }\n        }, \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                       <div style={{ display: \"flex\", alignItems:\"center\" }}>\n                        <a\n                    href={`${baseUrl3}/${row.invoice}`}\n                    target=\"_blank\"\n                  >\n                         <DescriptionOutlinedIcon color=\"secondary\" />\n                              </a>\n                              {row.is_paid == \"0\" ? \n                        <i\n                        class=\"fa fa-edit\"\n                        style={{\n                            fontSize: \"16px\",\n                            margin: \"0 5px\",\n                            cursor: \"pointer\",\n                            color : \"blue\",\n                        }}\n                       onClick = {() => addTdsToggle(row)} \n                    ></i> : \"\"\n                        }\n                        </div>\n                      \n                    </>\n                );\n            },\n        },\n    ];\n\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n         var cc = moment(row.due_date).toDate();\n        \n         if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n            style.backgroundColor = \"#bfdfd2\";\n          style.color = \"#000111\"\n        }\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n       \n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n  \n    return (\n\n        <>\n            <Card>\n              \n             <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice=\"tpgenerated\" \n                     setRec={setRecords}\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        rowStyle={ rowStyle2 }\n                    />\n\n                   \n                  \n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    generated = {\"edited\"}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Generated;","/home/pooja/MazarsRepo/src/pages/TP/Invoice/Tds.js",["3961","3962","3963","3964","3965","3966","3967","3968","3969"],"/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Invoice.js",["3970","3971","3972","3973","3974","3975"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Generated from \"./Generated\";\nconst InvoiceTab = () => {\n    const userid = window.localStorage.getItem(\"adminkey\")\n    const [tabIndex, setTabIndex] = useState(0);\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\nreturn(\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                           View Invoice\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                          Create Invoice\n                        </Tab>\n                        \n                    </TabList>\n\n                    <TabPanel>\n                    <Generated />\n                    </TabPanel>\n                    <TabPanel>\n                    <CreateInvoice />\n                      \n                    </TabPanel>\n                    \n                </Tabs>\n                </Layout>\n)\n}\nexport default InvoiceTab;","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Generated.js",["3976","3977","3978","3979","3980","3981","3982","3983","3984","3985","3986","3987","3988","3989","3990","3991","3992","3993","3994"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl, baseUrl3 } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\"\nimport moment from \"moment\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport Records from \"../../../components/Records/Records\";\nconst Generated = () => {\n    var rowStyle2 = {}\n    const userid = window.localStorage.getItem(\"adminkey\");\n    const [records, setRecords] = useState([]);\n    const [proposal, setProposal] = useState([]);\n    const [count, setCount] = useState(\"\");\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    \n \n    const addTdsToggle = (key) => {\n   \n      setGstinNo(key.gstin_no);\n        setTdsForm(!tdsForm)\n        setAssignNo(key.assign_no)\n        setPaidAmount(key.paid_amount)\n        setId(key.id)\n        setInstallmentNo(key.installment_no)\n        setBillNo(key.billno);\n        setId2(key.id)\n    }\n \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?&invoice=1`)\n            .then((res) => {\n              \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                \n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 0,\n                                routes: \"adinvoice\",\n                                \n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Invoice No\",\n            dataField: \"billno\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Invoice amount\",\n            dataField: \"invoice_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.invoice_amount;\n                 \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        },\n        {\n            text: \"Tds Deducted\",\n            dataField: \"tds_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('hi-IN')\n                 var x = row.tds_amount;\n                 \n                 return(\n                     <>\n                     {row.is_paid == \"0\" ?\n                     <p>0</p> :   <p>{nfObject.format(x)}</p>}\n                     </>\n                 \n                 )\n               }\n        }, \n        {\n            text: \"Status\",\n            dataField: \"\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row) {\n                return(\n                    <>\n                    {row.is_paid == \"0\" ? <p>Unpaid</p> : \n                    <>\n                    {row.is_paid == \"1\" ? <p>Paid</p> : <p>Declined</p>}\n                    </>}\n                    </>\n                )\n            }\n        }, \n        \n       \n        {\n            text: \"Action\",\n            dataField: \"\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"110px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n                        <a\n                    href={`${baseUrl3}/${row.invoice}`}\n                    target=\"_blank\"\n                  >\n                         <DescriptionOutlinedIcon color=\"secondary\" />\n                              </a>\n                             \n                        </div>\n                      \n                    </>\n                );\n            },\n        },\n    ];\n\n    rowStyle2 = (row, index) => {\n        const style = {}\n        var warningDate = moment(row.due_date).subtract(5, 'day').toDate();\n        // var warnformat = warningDate.format(\"YYYY-MM-DD\");\n        var aa = moment().toDate();\n         var cc = moment(row.due_date).toDate();\n        \n         if(row.paid_status != \"2\" && row.is_paid != \"1\" && cc < aa){\n            style.backgroundColor = \"#bfdfd2\";\n          style.color = \"#000111\"\n        }\n       else if(row.paid_status != \"2\" && row.is_paid != \"1\" && row.status != \"Complete\" && warningDate < aa)  {\n          style.backgroundColor = \"#c1d8f2\";\n          style.color = \"#000111\"\n        }\n       \n        else if(row.paid_status != \"2\" && row.is_paid != \"1\" && warningDate > aa){\n          style.backgroundColor = \"#fff\";\n          style.color = \"#000\"\n        }\n      \n        return style;\n      }\n  \n      \n    return (\n\n        <>\n            <Card>\n              \n             <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     invoice=\"admingenerated\" \n                     setRec={setRecords}\n                     records={records}\n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                <Records records={records} />\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                        rowStyle={ rowStyle2 }\n                    />\n\n                   \n                  \n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    generated = {\"edited\"}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default Generated;","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/Tds.js",["3995","3996","3997","3998","3999","4000","4001"],"import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { useHistory } from \"react-router\";\nimport { parseInt } from \"lodash\";\nimport Swal from \"sweetalert2\";\n\nfunction Tds (props)  {\n  const history = useHistory();\n    const userid = window.localStorage.getItem(\"adminkey\")\n    const f2 = useRef(null);\n    const [sac33, setSac] = useState([])\n    const [services2, setServices2] = useState();\n    const [services, setServices] = useState();\n    const [cgetTotal, setCgstTotal] = useState()\n    const [sgetTotal, setSgstTotal] = useState()\n    const [igetTotal, setIgstTotal] = useState()\n    const [gst, setGst] = useState()\n    const [tds2, setTds] = useState()\n    const [grandTotal, setgrandTotal] = useState();\n   const [total, setTotal] = useState()\n   const [pocketExp, setPocketExp] = useState()\n   const [cgetRate, setCgetRate] = useState()\n   const [igetRate, setIgetRate] = useState();\n   const [sgetRate, setSgetRate] = useState();\n   const [basicAmount, setBasicAmount] = useState()\n   const [billNo, setBillNo] = useState();\n   const [gstNum , setGstNum] = useState();\n   const [disabled, setDisabled] = useState(false)\n  \n\nvar tdsRate = 10;\nconst percent = {\n  display : \"flex\", \n  justifyContent : \"space-between\",\n  flexDirection : \"row\",\n  alignItems : \"center\"\n}\n  const getServices = () => {\n    axios.get(`${baseUrl}/tl/getServices`)\n    .then((res) => {\n\n      if(res.data.code === 1){\n        setServices(res.data.result);\n      }\n    })\n  }\n  useEffect(() => {\n    getServices();\n  }, [])\n  useEffect(() => {\n    if(props.generated == \"edited\"){\n    getDataild();\n    }\n    else {\n      setCgetRate(18);\n      setIgetRate(0);\n      setSgetRate(0)\n      setGstNum(props.gstNo);\n    setBillNo(props.billNo +\"/\" + props.id)\n    setBasicAmount(props.paidAmount)\n    setPocketExp(0)\n    setCgstTotal(parseInt(props.paidAmount * 18 / 100))\n    setIgstTotal(parseInt(0));\n    setSgstTotal(parseInt(0))\n    setGst(parseInt(props.paidAmount * 18 / 100))\n    setTds(parseInt(props.paidAmount * tdsRate / 100))\n    setTotal(parseInt(props.paidAmount) + parseInt(props.paidAmount * cgetRate / 100))\n    setgrandTotal(parseInt(parseInt(props.paidAmount) + parseInt(props.paidAmount * 18 / 100)) - parseInt(props.paidAmount * tdsRate / 100))\n    }\n  }, [props.paidAmount])\n    const { handleSubmit, register, errors, getValues, reset } = useForm();\n\nconst getDataild = () => {\n  axios\n  .get(`${baseUrl}/admin/getPaymentDetail?tl_id=${JSON.parse(userid)}&invoice=1&invoice_id=${props.id}`)\n.then((res) => {\n\nif(res.data.payment_detail){\n  res.data.payment_detail.map((i) => {\n   \n     setGstNum(i.gstin_no)\n setBillNo(i.billno)\n\n setBasicAmount(parseInt(i.paid_amount))\n setPocketExp(parseInt(i.opt_expenses));\n setCgstTotal(parseInt(i.cgst_amount));\n setIgstTotal(parseInt(i.igst_amount));\n setSgstTotal(parseInt(i.sgst_amount));\n setCgetRate(parseInt(i.cgst_rate));\n setIgetRate(parseInt(i.igst_rate));\n setSgetRate(parseInt(i.sgst_rate));\nsetTds(parseInt(i.tds_amount))\n setgrandTotal(parseInt(i.payable_amount))\n setTotal(parseInt(i.invoice_amount))\n setGst(parseInt(i.gst));\n setDisabled(true);\n  })\n}\n\n})\n}\n  // Cgst Tax function\nconst cgstFun = (e) => {\n  setCgetRate(e.target.value);\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n   let cget = parseInt(a * e.target.value / 100)\n   setCgstTotal(parseInt(cget));\n   setGst(parseInt(cget + igetTotal + sgetTotal))\n   setTotal(parseInt(cget + igetTotal + sgetTotal + a))\n   setgrandTotal(parseInt(cget + sgetTotal + igetTotal + a - tds2))\n\n}\n// Sgst tax function\nconst sgstFun = (e) => {\n  setSgetRate(e.target.value)\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n        let cget = parseInt(a * e.target.value / 100)\n        setSgstTotal(parseInt(cget))\n        setTotal(parseInt(cget + igetTotal + cgetTotal + a))\n        setGst(parseInt(cget + igetTotal + cgetTotal))\n        setgrandTotal(parseInt(cget + igetTotal + cgetTotal + a - tds2))\n }\n// Igst tax function\n const igstFun = (e) => {\n   setIgetRate(e.target.value)\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n      let cget = parseInt(a * e.target.value / 100) \n         setIgstTotal(cget) \n         setGst(parseInt(cget + sgetTotal + cgetTotal));\n         setTotal(parseInt(cget + sgetTotal + cgetTotal + a))\n         setgrandTotal(parseInt(cget + cgetTotal + sgetTotal + a - tds2))\n        \n }\n // Tds function\n const tdsFun = (e) => {\n  let a = parseInt(basicAmount) + parseInt(pocketExp);\n   let cget = (a * e.target.value / 100)\n      setTds(cget)\n    setgrandTotal(parseInt(total) - parseInt(cget))    \n } \n\n // Pocket Function\n const pocketExpFun = (e) => {\n  setPocketExp(e.target.value)\n  let a = parseInt(e.target.value) + parseInt(basicAmount);\n  if(e.target.value > 0){\n    setCgstTotal(a * cgetRate / 100);\n   setSgstTotal(a * sgetRate / 100);\n   setIgstTotal(a * igetRate / 100);\n   // })\n setGst((oldData) => {\n  return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100))\n })\n  setTotal((oldData) => {\n    return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a))\n  })\n  }\n  setgrandTotal((oldData) => {\n    return((parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a)) - parseInt(a * tdsRate / 100))\n  })\n  setTds((oldData) => {\n    return(parseInt(a * tdsRate / 100))\n  })\n}\n\nconst basicFun = (e) => {\n  let a = parseInt(e.target.value) + parseInt(pocketExp);\n  setBasicAmount(e.target.value);\n  if(e.target.value > 0){\n    setCgstTotal(a * cgetRate / 100);\n   setSgstTotal(a * sgetRate / 100);\n   setIgstTotal(a * igetRate / 100);\n setGst((oldData) => {\n  return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100))\n })\n  setTotal((oldData) => {\n    return(parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a))\n  })\n  }\n  setgrandTotal((oldData) => {\n    return((parseInt(a * cgetRate / 100) + parseInt(a * igetRate / 100) + parseInt(a * sgetRate / 100) + parseInt(a)) - parseInt(a * tdsRate / 100))\n  })\n  setTds((oldData) => {\n    return(parseInt(a * tdsRate / 100))\n  })\n}\n    const onSubmit= (value) => {\n      \n        let formData = new FormData();\n       formData.append(\"tl_id\", JSON.parse(userid));\n         formData.append(\"id\", props.id)\n         formData.append(\"qno\", props.report)\n         formData.append(\"description\", services2);\n         formData.append(\"serviceCode\", sac33);\n        formData.append(\"basic_amount\", basicAmount);\n        formData.append(\"cgst_rate\", cgetRate);\n        formData.append(\"opt_expenses\", pocketExp);\n        formData.append(\"cgst_total\", cgetTotal)\n        formData.append(\"sgst_rate\", sgetRate);\n       \n        formData.append(\"sgst_total\", sgetTotal)\n        formData.append(\"igst_rate\", igetRate);\n      \n        formData.append(\"igst_total\", igetTotal)\n        formData.append(\"total\", total);\n        formData.append(\"tds_rate\", tdsRate);\n        formData.append(\"gst\", gst);\n        formData.append(\"tds_total\", tds2)\n        formData.append(\"netpaid_amount\", grandTotal)\n        formData.append(\"gstin_no\", gstNum);\n        formData.append(\"bill_no\", billNo)\n        axios({\n            method : \"POST\",\n            data : formData,\n            url : `${baseUrl}/tl/generateInvoive`\n        })\n        .then((res) => {\n            if(res.data.code === 1){\n              Swal.fire({\n                title : \"success\", \n                html : \"Invoice generated successfully\",\n                icon : \"success\"\n              })\n                history.push(\"/admin/adinvoice\")\n            }\n          \n        })\n      \n    }\n  const serviceFun = (e) => {\n    \n   services.map((k) => {\n    \nif(k.id == e) {\nsetSac(k.sac)\nsetServices2(k.service)\n}\n   })\n     \n  }\n\n  \n    return(\n      \n        <Modal isOpen={props.tdsForm} toggle={props.addTdsToggle} size=\"sm\" style={{display : \"flxe\", maxWidth : \"600px\"}}>\n        <ModalHeader toggle={props.addTdsToggle}> Generate Invoice - \n        \n        </ModalHeader>\n        <ModalBody>\n    \n    <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\" ref={f2}>\n    <div className=\"container gutter-3\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>GSTIN</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         ref={register}\n         name=\"gst_in\"\n         value={gstNum}\n         onChange= {(e) => setGstNum(e.target.value)}\n         className=\"form-control\"\n          />\n            </div>\n          </div>\n          </div>\n          <div className=\"col-md-6\">\n          <div className=\"row\">\n          <div className=\"col-md-12\">\n          <label>Invoice No</label>\n            </div>\n            <div className=\"col-md-12\">\n         <input \n         type=\"text\"\n         ref={register}\n         name=\"bill_no\"\n         value={billNo}\n         disabled = {disabled}\n         className=\"form-control\"\n         onChange= {(e) => (setBillNo(e.target.value) + \"/id\")}\n          />\n            </div>\n          </div>\n            </div>\n        </div>\n            <div className=\"row my-2\">\n              {services === undefined ? \"\" : \n              <div className=\"col-md-6\">\n              <label>Descirption <span className=\"declined\">*</span></label>\n          <select \n           ref={register({ required: true })}\n           name=\"description\"\n        style={{height : \"33.5px\"}}\n          onChange = {(e) => serviceFun(e.target.value)}\n          className={classNames(\"form-control\", {\n            \"is-invalid\": errors.p_name,\n          })}>\n              <option value=\"\">--select--</option>\n          {services.map((i) => (\n               <option value={i.id} key={i.id} className=\"form-control\"> {i.service}</option>\n          ))}\n            </select>\n              </div>}\n                  <div className=\"col-md-6\">\n                  <label>Basic Amount</label>\n                    <input \n                    type=\"text\"\n\n                    name=\"basic_amount\"\n                    ref={register({required : true})}\n                    className=\"form-control\"\n                    placeholder=\"Amount\" \n                    onChange= {(e) => basicFun(e)}\n                  value={basicAmount}/>\n                    </div> \n            </div>\n           <div className=\"row my-2\">\n             <div className=\"col-md-6\">\n               <h5>Out of Pocket Expenses</h5>\n               </div>\n               <div className=\"col-md-6\">\n               <input \n                    type=\"text\"\n                    name=\"pocket_amount\"\n                    ref={register}\n                    className=\"form-control\"\n                    onChange={(e) => pocketExpFun(e)}\n                    value={pocketExp}\n                    placeholder=\"Pocket Amount\"  />\n               </div>\n             </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-4\">\n              <h4>CGST</h4>\n             <div className=\"row\">\n             <div className=\"col-md-6\" style={percent}>\n              <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    \n                    placeholder=\"Rate\"\n                    value={cgetRate}\n                    name=\"cgst_rate\"\n                    onChange= {(e) => cgstFun(e)} /> %\n                \n                  </div>\n                  <div className=\"col-md-6\">\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    placeholder=\"0\" \n                    disabled \n                    name=\"cgst_total\"\n                    value = {Math.round(cgetTotal)}/>\n                  </div>\n                 </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                  <h4>SGST/UTGST </h4>\n              <div className=\"row\">\n                  <div className=\"col-md-6\" style={percent}>\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    \n                    name=\"sgst_rate\"\n                    placeholder=\"Rate\" \n                   value = {sgetRate}\n                    onChange= {(e) => sgstFun(e)}/> %\n                      </div>\n                      <div className=\"col-md-6\">\n                      <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    ref={register}\n                    \n                    name=\"sgst_total\" \n                    disabled\n                    value={Number(sgetTotal).toFixed(0)}/>\n                          </div>\n                  </div>\n            \n                  </div>\n                  <div className=\"col-md-4\">\n              <h4>IGST</h4>\n              <div className=\"row\">\n              <div className=\"col-md-6\" style={percent}>\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                  \n                    placeholder=\"Rate\"\n                    ref={register}\n                    name=\"igst_rate\"\n                   value={igetRate}\n                    onChange= {(e) => igstFun(e)} /> %\n                    </div>\n                   \n                    <div className=\"col-md-6\">\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                  \n                    name=\"igst_total\"\n                    disabled\n                    ref={register}\n                    value={Number(igetTotal).toFixed(0)} />\n                    </div>\n                  </div>\n                  </div>\n                  </div>\n                \n          <hr/>\n          \n            <div className=\"row my-2\">\n                <div className=\"col-md-4\">\n                  <h4>Total GST</h4>\n                    </div>\n                    <div className=\"col-md-4\">\n                        </div>\n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"total\"\n                    disabled\n                   \n                    ref={register}\n                   value={Math.round(gst)} />\n                            </div>\n                </div>\n                <hr/>\n                <div className=\"row my-2\">\n                <div className=\"col-md-8\">\n                  <h4>Total Invoice Amount</h4>\n                    </div>\n                   \n                        <div className=\"col-md-4\">\n                       \n                    <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"totalAmount\"\n                    disabled\n                   \n                    ref={register}\n                   value={Number(total).toFixed(0)} />\n                            </div>\n                </div>\n           \n            <div className=\"row my-2\">\n              <div className=\"col-md-4 my-1\">\n              <h4>TDS </h4>\n                  </div>\n                <div className=\"col-md-4 my-1\">\n               <div className = \"row\">\n                \n                   <div className=\"col-md-6\"  style={percent}>\n                   <input \n                    type=\"text\"\n                    className=\"form-control\"\n                   \n                    placeholder=\"Rate\"\n                    name=\"tds_rate\"\n                    defaultValue={tdsRate}\n                    ref={register}\n                    onChange= {(e) => tdsFun(e)} /> %\n                     </div>\n                     <div className=\"col-md-6\">\n                   </div>\n                 </div>\n                    </div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                    value={Number(tds2).toFixed(0)} />\n                    </div>\n                   \n            </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-6 my-1\">\n              <h4>Net Payable Amount</h4>\n                  </div>\n                  <div className=\"col-md-2 my-1\"></div>\n                   \n                    <div className=\"col-md-4 my-1\">\n                <input \n                    type=\"text\"\n                    ref={register}\n                    className=\"form-control\"\n                    placeholder=\"Total\"\n                    name=\"tds_total\"\n                    disabled\n                  value={Number(grandTotal).toFixed(0)} />\n                    </div>\n                   \n            </div>\n        <ModalFooter>\n       \n             <>\n             <button  type=\"submit\" className=\"btn btn-success\">submit</button>\n          \n             <button  type=\"button\" className=\"btn btn-danger mx-3\" onClick={props.addTdsToggle}>Cancel</button> \n             </>\n        </ModalFooter>\n          </div>\n        </form>\n       \n           \n      \n        </ModalBody>\n      </Modal>\n    )\n}\nexport default Tds;","/home/pooja/MazarsRepo/src/pages/Admin/Invoice/CreateInvoice.js",["4002","4003","4004","4005"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport DiscardReport from \"../AssignmentTab/DiscardReport\";\nimport Tds from \"./Tds\";\nimport InvoiceFilter from \"../../../components/Search-Filter/InvoiceFilter\";\nimport Records from \"../../../components/Records/Records\";\nconst CreateInvoice = () => {\n    const userid = window.localStorage.getItem(\"adminkey\");\n    const [proposal, setProposal] = useState([]);\n    const [id, setId] = useState();\n    const [assignNo, setAssignNo] = useState('');  \n    const [ViewDiscussion, setViewDiscussion] = useState(false);\n    const [tdsForm , setTdsForm] = useState(false)\n    const [paidAmount, setPaidAmount] = useState()\n    const [installmentNo, setInstallmentNo] = useState();\n    const [billNo, setBillNo] = useState()\n    const [id2, setId2] = useState()\n    const [gstNo, setGstinNo] = useState();\n    const [records, setRecords] = useState([]);\n   const addTdsToggle = (key) => {\n      \n     setGstinNo(key.gstin_no);\n       setTdsForm(!tdsForm)\n       setAssignNo(key.assign_no)\n       setPaidAmount(key.paid_amount)\n       setId(key.id)\n       setInstallmentNo(key.installment_no)\n       setBillNo(key.billno);\n       setId2(key.id)\n   }\n    const ViewDiscussionToggel = (key) => {\n      \n        setViewDiscussion(!ViewDiscussion);\n        \n    }\n    \n    useEffect(() => {\n        getProposalList();\n    }, []);\n\n    const getProposalList = () => {\n        axios\n            .get(`${baseUrl}/admin/getPaymentDetail?&invoice=0`)\n            .then((res) => {\n               \n                if (res.data.code === 1) {\n                    setProposal(res.data.payment_detail);\n                    setRecords(res.data.payment_detail.length)\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"60px\" };\n            },\n        },\n       \n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n\n                return (\n                    <>\n\n                        <Link\n                            to={{\n                                pathname: `/admin/queries/${row.assign_id}`,\n                                index : 1,\n                                routes: \"adinvoice\",\n                                \n                            }}\n                        >\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Installment No\",\n            dataField: \"installment_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        }, \n        {\n            text: \"Due Date\",\n            dataField: \"due_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        }, \n        {\n            text: \"Amount\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row){\n                var nfObject = new Intl.NumberFormat('en-US')\n                 var x = row.paid_amount;\n                \n                 return(\n                   <p>{nfObject.format(x)}</p>\n                 )\n               }\n        }, \n        \n       \n       \n       \n    ];\n\n    return (\n\n        <>\n            <Card>\n              \n                <CardHeader>\n                    <InvoiceFilter\n                     setData={setProposal}\n                     getData={getProposalList}\n                     setRec={setRecords}\n                     records={records}\n                     invoice = \"admincreate\" \n                     userid = {JSON.parse(userid)}/>\n                    </CardHeader>\n\n                <CardBody>\n                <Records records={records} />\n                    <BootstrapTable\n                        bootstrap4\n                        keyField='id'\n                        data={proposal}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                   \n                    <DiscardReport\n                        ViewDiscussionToggel={ViewDiscussionToggel}\n                        ViewDiscussion={ViewDiscussion}\n                        report={assignNo}\n                        getData={getProposalList}\n                    />\n                    <Tds \n                    tdsForm = {tdsForm}\n                    addTdsToggle = {addTdsToggle}\n                    id={id}\n                    paidAmount={paidAmount}\n                    report = {assignNo}\n                    installmentNo = {installmentNo}\n                    billNo = {billNo}\n                    id = {id2}\n                    gstNo = {gstNo}\n                    />\n                </CardBody>\n            </Card>\n        </>\n     \n    );\n}\nexport default CreateInvoice;","/home/pooja/MazarsRepo/src/components/LoginForm/LoginForm.js",["4006"],"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Spinner } from \"reactstrap\";\nimport Mandatory from \"../Common/Mandatory\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport { useContext } from \"react\";\nimport { LoginData } from \"./LoginFun\";\nimport { Link } from \"react-router-dom\";\nconst LoginForm = (props) => {\n    const data3 = useContext(LoginData)\n    const Schema = yup.object().shape({\n        p_email: yup.string().email(\"invalid email\").required(\"\"),\n        password: yup\n          .string()\n          .required(\"\")\n         \n      });\n      \n   \n    const { handleSubmit, register, reset, errors } = useForm({\n        resolver: yupResolver(Schema),\n      });\n \nreturn(\n    <div class=\"form\">\n    <div class=\"heading\">\n      <h2>ADMIN LOGIN</h2>\n    </div>\n    <form onSubmit={handleSubmit(data3.onSubmit)} autoComplete=\"off\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Email<span className=\"declined\">*</span></label>\n            <input\n              type=\"text\"\n              className={classNames(\"form-control\", {\n                \"is-invalid\": errors.p_email,\n              })}\n              name=\"p_email\"\n              ref={register}\n              placeholder=\"Enter Email\"\n              autocomplete=\"off\"\n              onChange={(e) => data3.handleChange(e)}\n            />\n            {errors.p_email && (\n              <div className=\"invalid-feedback\">\n                {errors.p_email.message}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-md-12\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Password<span className=\"declined\">*</span></label>\n            <input\n              type={data3.isPasswordShow ? \"text\" : \"password\"}\n              className={classNames(\"form-control\", {\n                \"is-invalid\": errors.password,\n              })}\n              name=\"password\"\n              placeholder=\"Enter Password\"\n              ref={register}\n              onCopy={(e) => {\n                e.preventDefault();\n                return false\n              }}\n              onPaste={(e) => {\n                e.preventDefault();\n                return false\n              }}\n            />\n            <i\n              className={`fa ${data3.isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n              onClick={data3.togglePasssword}\n            />\n            {errors.password && (\n              <div className=\"invalid-feedback\">\n                {errors.password.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {\n        data3.loading ?\n          <div class=\"col-md-12\">\n            <Spinner color=\"primary\" />\n          </div>\n          :\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n      }\n\n      <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n        <Link\n          to={{\n            pathname: \"/admin/forget-password\",\n            email: `${data3.email}`,\n          }}\n        >\n          Forgot Password\n        </Link>\n      </div>\n\n      <Mandatory />\n    </form>\n  </div>\n\n)\n}\nexport default LoginForm;","/home/pooja/MazarsRepo/src/components/LoginForm/LoginFun.js",["4007","4008"],"import React from 'react';\nimport { useState, createContext } from 'react';\nimport axios from 'axios';\nimport { baseUrl } from '../../config/config';\nimport { useHistory } from 'react-router';\nimport { useAlert } from \"react-alert\";\nimport Login from '../../pages/Admin/Login/Login';\nimport Alerts from '../../common/Alerts';\nimport LoginForm from './LoginForm';\nconst LoginData = createContext();\nconst LoginFun = () => {\n  const alert = useAlert();\n  let history = useHistory();\n    const [email, setEmail] = useState(null);\n    const [show, setShow] = useState(false);\n    const [uid, setUid] = useState('')\n    const [isPasswordShow, setPasswordShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n  \n    const togglePasssword = () => {\n      setPasswordShow(!isPasswordShow)\n    };\n  \n    const onSubmit = (value) => {\n    \n      setLoading(true)\n  \n      let formData = new FormData();\n      formData.append(\"userid\", value.p_email);\n      formData.append(\"password\", value.password);\n  \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/admin/login`,\n        data: formData,\n      })\n        .then(function (response) {\n  \n          if (response.data.code === 1) {\n            setLoading(false)\n            setShow(true)\n            Alerts.SuccessNormal(\"As per your request, OTP has been sent to your registered email address.\")\n            setUid(response.data[\"user id\"])\n            logout();\n          } else if (response.data.code === 0) {\n            setLoading(false)\n            Alerts.ErrorNormal(\"Invalid email or password.\")\n          }\n        })\n        .catch((error) => {\n        \n        });\n    };\n  const logout = () => {\n    setTimeout(() => {\n      localStorage.removeItem(\"adminkey\");\n      localStorage.removeItem(\"adminEmail\");\n      history.push(\"/admin/login\");\n    }, 600000)\n  }\n    const handleChange = (e) => {\n  \n      setEmail(e.target.value);\n    };\n   \n  const valData = { handleChange, onSubmit, togglePasssword, isPasswordShow, email, show, uid, loading, setLoading}\n  return(\n      <>\n      <LoginData.Provider value={valData}>\n          <Login />\n          \n      </LoginData.Provider>\n      </>\n  )\n}\nexport default LoginFun;\nexport {LoginData}","/home/pooja/MazarsRepo/src/views/AddFressAssignment/WYSIWYGEditor.js",["4009"],"/home/pooja/MazarsRepo/src/pages/Admin/PaymentStatusTab/Paydetails.js",["4010","4011","4012","4013","4014","4015","4016","4017","4018","4019","4020","4021","4022","4023","4024","4025","4026","4027","4028","4029","4030","4031","4032"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport PaymentIcon from '@mui/icons-material/Payment';\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { baseUrl2, baseUrl3 } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Typography } from \"antd\";\n\nconst PayDetails = () => {\n    let history = useHistory();\n    const userId = window.localStorage.getItem(\"adminkey\");\n    const { id } = useParams();\n    const [paymentDetail, setPaymentDetail] = useState();\n    const [modal, setModal] = useState(false);\n    const [modalData, setModalData] = useState()\n    const [showTable, setShowTable] = useState(null);\n    const paydetails2 = () => {\naxios.get(`${baseUrl}/admin/getPaymentDetail?id=${id}`)\n.then((res) => {\n    if(res.data.code === 1){\n      \n        setPaymentDetail(res.data.payment_detail)\n       \n       if(res.data.payment_detail.length > 0){\n           setShowTable(true)\n       }\n       else {\n           setShowTable(false)\n       }\n    }\n   \n})\n    }\n    useEffect(() => {\n        paydetails2()\n    }, [])\n const openModal = (key) => {\n   if(key){\n       setModalData(key)\n   \n   }\nsetModal(!modal)\n\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Q.No\",\n            \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField: \"installment_no\",\n            text: \"Installment No\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"80px\" };\n            },\n           \n           \n        },\n        {\n            dataField: \"billno\",\n            text: \"Invoice No\",\n           \n            \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"150px\" };\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.invoice_generated == \"0\" ? \"\" : \n                    <p>{row.billno}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"due_date\",\n            text: \"Due Date\",\n           sort : true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        },\n       \n        {\n            dataField: \"invoice_amount\",\n            text: \"Invoice Amount\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField : \"tds_amount\",\n            text : \"Tds Deducted\",\n            style : {\n                fontSize : \"11px\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.tds_amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        {\n            dataField : \"amount\",\n            text : \"Amount Paid\",\n            style : {\n                fontSize : \"11px\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter: function (cell,row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        \n        {\n            dataField: \"invoice\",\n            text: \"Invoice\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                return(\n                   <>\n                   {row.invoice_generated == \"1\" ? \n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\n                   </>\n                )\n            },\n           \n        },\n        \n       \n       \n        {\n            dataField: \"\",\n            text: \"Pay\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n           \n           formatter: function dateFormat(cell, row){\n           \n               return(\n                <>\n                {row.invoice_generated == \"1\" ? \n              <>\n              {row.is_paid == \"0\" ? \n               \"\":   <>\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url}>Payment receipt</a> \n            : <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p> }\n            </>}\n              </>\n               : \"\"}\n                </>\n                  \n                   \n               )\n           }\n        },\n           \n      ];\n    \n      const Container = styled.div `\n      dispaly : flex;\n      width : 100%;\n      height : 100%;\n      justify-content : center;\n      align-items : center;\n      color: red`\nreturn(\n   <>\n       <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n    {paymentDetail === undefined ? \"\" : \n  <Card>\n      <CardHeader>\n         <Row>\n         <Col md=\"8\">\n              <h4>Payment Details</h4>\n              </Col>\n      <Col md=\"4\">\n              <button class=\"btn btn-success\" style={{display : \"flex\", margin : \"0 0 0 auto\"}} onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n         </Row>\n          </CardHeader>\n          <CardBody>\n  \n  \n  <BootstrapTable\n  bootstrap4\n  keyField=\"id\"\n  data={paymentDetail}\n  columns={columns}\n  classes=\"table-responsive\"\n/> \n\n</CardBody>\n</Card>}\n</Layout>                  \n   </>\n)\n}\nexport default PayDetails;","/home/pooja/MazarsRepo/src/pages/TL/PaymentStatus/Paydetails.js",["4033","4034","4035","4036","4037","4038","4039","4040","4041","4042","4043","4044","4045","4046","4047","4048","4049","4050","4051","4052","4053","4054","4055"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport PaymentIcon from '@mui/icons-material/Payment';\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { baseUrl2, baseUrl3 } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Typography } from \"antd\";\n\nconst PayDetails = () => {\n    let history = useHistory();\n    const userId = window.localStorage.getItem(\"tlkey\");\n    const { id } = useParams();\n    const [paymentDetail, setPaymentDetail] = useState();\n    const [modal, setModal] = useState(false);\n    const [modalData, setModalData] = useState()\n    const [showTable, setShowTable] = useState(null);\n    const paydetails2 = () => {\naxios.get(`${baseUrl}//admin/getPaymentDetail?id=${id}&&status=1`)\n.then((res) => {\n    if(res.data.code === 1){\n       \n        setPaymentDetail(res.data.payment_detail)\n        \n       if(res.data.payment_detail.length > 0){\n           setShowTable(true)\n       }\n       else {\n           setShowTable(false)\n       }\n    }\n   \n})\n    }\n    useEffect(() => {\n        paydetails2()\n    }, [])\n const openModal = (key) => {\n   if(key){\n       setModalData(key)\n   \n   }\nsetModal(!modal)\n\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Q.No\",\n            \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField: \"installment_no\",\n            text: \"Installment No\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"80px\" };\n            },\n           \n           \n        },\n        {\n            dataField: \"billno\",\n            text: \"Invoice No\",\n           \n            \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"150px\" };\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.invoice_generated == \"0\" ? \"\" : \n                    <p>{row.billno}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"due_date\",\n            text: \"Due Date\",\n           sort : true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        },\n       \n        {\n            dataField: \"invoice_amount\",\n            text: \"Invoice Amount\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField : \"tds_amount\",\n            text : \"Tds Deducted\",\n            style : {\n                fontSize : \"11px\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.tds_amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        {\n            dataField : \"amount\",\n            text : \"Amount Paid\",\n            style : {\n                fontSize : \"11px\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter: function (cell,row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        \n        {\n            dataField: \"invoice\",\n            text: \"Invoice\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                return(\n                   <>\n                   {row.invoice_generated == \"1\" ? \n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\n                   </>\n                )\n            },\n           \n        },\n        \n       \n       \n        {\n            dataField: \"\",\n            text: \"Pay\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n           \n           formatter: function dateFormat(cell, row){\n           \n               return(\n                <>\n                {row.invoice_generated == \"1\" ? \n              <>\n              {row.is_paid == \"0\" ? \n                \"\" :   <>\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url}>Payment receipt</a> \n            : <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p> }\n            </>}\n              </>\n               : \"\"}\n                </>\n                  \n                   \n               )\n           }\n        },\n           \n      ];\n    \n      const Container = styled.div `\n      dispaly : flex;\n      width : 100%;\n      height : 100%;\n      justify-content : center;\n      align-items : center;\n      color: red`\nreturn(\n   <>\n         <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n    {paymentDetail === undefined ? \"\" : \n  <Card>\n      <CardHeader>\n         <Row>\n         <Col md=\"8\">\n              <h4>Payment Details</h4>\n              </Col>\n      <Col md=\"4\">\n              <button class=\"btn btn-success\" style={{display : \"flex\", margin : \"0 0 0 auto\"}} onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n         </Row>\n          </CardHeader>\n          <CardBody>\n   \n  <BootstrapTable\n  bootstrap4\n  keyField=\"id\"\n  data={paymentDetail}\n  columns={columns}\n  classes=\"table-responsive\"\n/> \n</CardBody>\n</Card>}\n</Layout>                  \n   </>\n)\n}\nexport default PayDetails;","/home/pooja/MazarsRepo/src/pages/TP/PaymentStatus/Paydetails.js",["4056","4057","4058","4059","4060","4061","4062","4063","4064","4065","4066","4067","4068","4069","4070","4071","4072","4073","4074","4075","4076","4077","4078"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport PaymentIcon from '@mui/icons-material/Payment';\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { baseUrl2, baseUrl3 } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Typography } from \"antd\";\n\nconst PayDetails = () => {\n    let history = useHistory();\n    const userId = window.localStorage.getItem(\"tpkey\");\n    const { id } = useParams();\n    const [paymentDetail, setPaymentDetail] = useState();\n    const [modal, setModal] = useState(false);\n    const [modalData, setModalData] = useState()\n    const [showTable, setShowTable] = useState(null);\n    const paydetails2 = () => {\naxios.get(`${baseUrl}//admin/getPaymentDetail?id=${id}&&status=1`)\n.then((res) => {\n    if(res.data.code === 1){\n       \n        setPaymentDetail(res.data.payment_detail)\n       \n       if(res.data.payment_detail.length > 0){\n           setShowTable(true)\n       }\n       else {\n           setShowTable(false)\n       }\n    }\n   \n})\n    }\n    useEffect(() => {\n        paydetails2()\n    }, [])\n const openModal = (key) => {\n   if(key){\n       setModalData(key)\n   \n   }\nsetModal(!modal)\n\n    }\n    const columns = [\n        {\n            dataField: \"\",\n            text: \"S.No\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n        },\n        {\n            dataField: \"assign_no\",\n            text: \"Q.No\",\n            \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField: \"installment_no\",\n            text: \"Installment No\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"80px\" };\n            },\n           \n           \n        },\n        {\n            dataField: \"billno\",\n            text: \"Invoice No\",\n           \n            \n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"150px\" };\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.invoice_generated == \"0\" ? \"\" : \n                    <p>{row.billno}</p>}\n                    </>\n                )\n            }\n        },\n        {\n            dataField: \"due_date\",\n            text: \"Due Date\",\n           sort : true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n            formatter : function(cell, row){\n                let dueDate=row.due_date.split(\"-\").reverse().join(\"-\")\n\n                return(\n                   \n                    <>\n              {dueDate}\n                    </>\n                )\n            }\n        },\n       \n        {\n            dataField: \"invoice_amount\",\n            text: \"Invoice Amount\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"120px\" };\n            },\n        },\n        {\n            dataField : \"tds_amount\",\n            text : \"Tds Deducted\",\n            style : {\n                fontSize : \"11px\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter : function(cell, row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.tds_amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        {\n            dataField : \"amount\",\n            text : \"Amount Paid\",\n            style : {\n                fontSize : \"11px\"\n            }, \n            headerStyle : () => {\n                return { fontSize : \"11px\", width : \"100px\"}\n            },\n            formatter: function (cell,row){\n                return(\n                    <>\n                    {row.is_paid == \"1\" ? \n                    <p>{row.amount}</p> : \"\"}\n                    </>\n                )\n            }\n        },\n        \n        {\n            dataField: \"invoice\",\n            text: \"Invoice\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                return(\n                   <>\n                   {row.invoice_generated == \"1\" ? \n                    <a href={`${baseUrl3}/${row.invoice}`} target=\"_blank\">\n                          <DescriptionOutlinedIcon color=\"secondary\" /></a> : \"\"}\n                   </>\n                )\n            },\n           \n        },\n        \n       \n       \n        {\n            dataField: \"\",\n            text: \"Pay\",\n           \n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"90px\" };\n            },\n           \n           formatter: function dateFormat(cell, row){\n           \n               return(\n                <>\n                {row.invoice_generated == \"1\" ? \n              <>\n              {row.is_paid == \"0\" ? \n                \"\" :   <>\n            {row.is_paid == \"1\" ?  <a href={row.receipt_url}>Payment receipt</a> \n            : <p style={{fontWieght: \"800\", fontSize: \"16px\", padding: \"5px\", color : \"red\"}}>Declined</p> }\n            </>}\n              </>\n               : \"\"}\n                </>\n                  \n                   \n               )\n           }\n        },\n           \n      ];\n    \n      const Container = styled.div `\n      dispaly : flex;\n      width : 100%;\n      height : 100%;\n      justify-content : center;\n      align-items : center;\n      color: red`\nreturn(\n   <>\n        <Layout TPDashboard=\"TPDashboard\" TPuserId={userId}>\n    {paymentDetail === undefined ? \"\" : \n  <Card>\n      <CardHeader>\n         <Row>\n         <Col md=\"8\">\n              <h4>Payment Details</h4>\n              </Col>\n      <Col md=\"4\">\n              <button class=\"btn btn-success\" style={{display : \"flex\", margin : \"0 0 0 auto\"}} onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n         </Row>\n          </CardHeader>\n          <CardBody>\n  \n  <BootstrapTable\n  bootstrap4\n  keyField=\"id\"\n  data={paymentDetail}\n  columns={columns}\n  classes=\"table-responsive\"\n/> \n</CardBody>\n</Card>}\n</Layout>                  \n   </>\n)\n}\nexport default PayDetails;","/home/pooja/MazarsRepo/src/views/QueriesTab/RejectedModal.js",["4079","4080","4081","4082","4083"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport Swal from \"sweetalert2\";\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal({\n    showRejectedBox,\n    rejectedBox,\n    deleteCliente,\n    getQueriesData,\n    assignNo\n}) {\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n \n    setLoading(true)\n\n   let formData = new FormData();\n   formData.append(\"uid\", JSON.parse(userId));\n   formData.append(\"id\", assignNo);\n   formData.append(\"notes\" , value.p_chat);\n\n   axios({\n       method: \"POST\",\n       url: `${baseUrl}/customers/deleteQuery`,\n       data: formData,\n   })\n       .then(function (response) {\n         \n           if (response.data.code === 1) {\n            deleteCliente()\n               setLoading(false)\n               Swal.fire(\"\", \"Query deleted successfully.\", \"success\");\n               getQueriesData();\n           } else if (response.data.code === 0) {\n               setLoading(false)\n               Swal.fire(\"Oops...\", \"Query not deleted \", \"error\");\n           }\n       })\n       .catch((error) => {\n          \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={rejectedBox} toggle={deleteCliente} size=\"md\">\n        <ModalHeader toggle={deleteCliente}>Please provide the reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/home/pooja/MazarsRepo/src/views/ProposalView/RejectedModal22.js",["4084","4085","4086","4087","4088","4089"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\nimport { Spinner } from 'reactstrap';\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router\";\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"\"),\n});\n\nfunction RejectedModal22({\n    showRejectedBox,\n    rejectedBox,\n    deleteCliente,\n    getQueriesData,\n    assignNo\n}) {\nlet history = useHistory()\n  const userId = window.localStorage.getItem(\"userid\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = (value) => {\n setLoading(true)\n\n    let formData = new FormData();\n    formData.append(\"id\", assignNo);\n    formData.append(\"status\", 6);\n    formData.append(\"notes\", value.p_chat);\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/ProposalAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n       \n        if (response.data.code === 1) {\n          setLoading(false)\n          Swal.fire(\"Rejected!\", \"Proposal rejected successfully.\", \"success\");\n          history.push({\n            pathname: `/customer/proposal`,\n            index: 0,\n          });\n        } else {\n          setLoading(false)\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n     \n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={rejectedBox} toggle={deleteCliente} size=\"md\">\n        <ModalHeader toggle={deleteCliente}>Proposal Declined</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"Enter text here...\"\n              ></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              {\n                loading ?\n                  <Spinner color=\"primary\" />\n                  :\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n              }\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal22;\n",{"ruleId":"4090","replacedBy":"4091"},{"ruleId":"4092","replacedBy":"4093"},{"ruleId":"4094","severity":1,"message":"4095","line":75,"column":8,"nodeType":"4096","messageId":"4097","endLine":75,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4098","line":2,"column":27,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":38},{"ruleId":"4094","severity":1,"message":"4098","line":2,"column":27,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":38},{"ruleId":"4094","severity":1,"message":"4099","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4101","line":27,"column":9,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":28,"column":35,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4103","line":33,"column":10,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4104","line":36,"column":10,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4105","line":36,"column":16,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4106","line":41,"column":10,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4107","line":41,"column":17,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4109","line":65,"column":6,"nodeType":"4110","endLine":65,"endColumn":8,"suggestions":"4111"},{"ruleId":"4112","severity":1,"message":"4113","line":123,"column":23,"nodeType":"4114","messageId":"4115","endLine":123,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":142,"column":19,"nodeType":"4114","messageId":"4115","endLine":142,"endColumn":21},{"ruleId":"4112","severity":1,"message":"4113","line":144,"column":21,"nodeType":"4114","messageId":"4115","endLine":144,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":152,"column":25,"nodeType":"4114","messageId":"4115","endLine":152,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":153,"column":25,"nodeType":"4114","messageId":"4115","endLine":153,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":165,"column":31,"nodeType":"4114","messageId":"4115","endLine":165,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":165,"column":50,"nodeType":"4114","messageId":"4115","endLine":165,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":169,"column":29,"nodeType":"4114","messageId":"4115","endLine":169,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":169,"column":46,"nodeType":"4114","messageId":"4115","endLine":169,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4116","line":178,"column":33,"nodeType":"4114","messageId":"4115","endLine":178,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":206,"column":32,"nodeType":"4114","messageId":"4115","endLine":206,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":239,"column":28,"nodeType":"4114","messageId":"4115","endLine":239,"endColumn":30},{"ruleId":"4117","severity":1,"message":"4118","line":252,"column":45,"nodeType":"4119","messageId":"4120","endLine":252,"endColumn":47},{"ruleId":"4117","severity":1,"message":"4118","line":262,"column":45,"nodeType":"4119","messageId":"4120","endLine":262,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4113","line":388,"column":32,"nodeType":"4114","messageId":"4115","endLine":388,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":403,"column":33,"nodeType":"4114","messageId":"4115","endLine":403,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":417,"column":33,"nodeType":"4114","messageId":"4115","endLine":417,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4121","line":1,"column":10,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4122","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":16},{"ruleId":"4108","severity":1,"message":"4123","line":45,"column":6,"nodeType":"4110","endLine":45,"endColumn":12,"suggestions":"4124"},{"ruleId":"4094","severity":1,"message":"4125","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4126","line":113,"column":6,"nodeType":"4110","endLine":113,"endColumn":8,"suggestions":"4127"},{"ruleId":"4112","severity":1,"message":"4116","line":153,"column":31,"nodeType":"4114","messageId":"4115","endLine":153,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4116","line":153,"column":56,"nodeType":"4114","messageId":"4115","endLine":153,"endColumn":58},{"ruleId":"4112","severity":1,"message":"4116","line":168,"column":29,"nodeType":"4114","messageId":"4115","endLine":168,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4116","line":168,"column":55,"nodeType":"4114","messageId":"4115","endLine":168,"endColumn":57},{"ruleId":"4112","severity":1,"message":"4116","line":198,"column":22,"nodeType":"4114","messageId":"4115","endLine":198,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4116","line":248,"column":26,"nodeType":"4114","messageId":"4115","endLine":248,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4116","line":289,"column":27,"nodeType":"4114","messageId":"4115","endLine":289,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4128","line":11,"column":9,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4129","line":31,"column":10,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4113","line":91,"column":40,"nodeType":"4114","messageId":"4115","endLine":91,"endColumn":42},{"ruleId":"4108","severity":1,"message":"4130","line":173,"column":6,"nodeType":"4110","endLine":173,"endColumn":16,"suggestions":"4131"},{"ruleId":"4094","severity":1,"message":"4132","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4133","line":21,"column":9,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4101","line":22,"column":9,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4103","line":29,"column":10,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4134","line":29,"column":17,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4135","line":31,"column":21,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4136","line":34,"column":10,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4137","line":34,"column":21,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4138","line":39,"column":17,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4139","line":65,"column":9,"nodeType":"4096","messageId":"4097","endLine":65,"endColumn":24},{"ruleId":"4108","severity":1,"message":"4123","line":86,"column":6,"nodeType":"4110","endLine":86,"endColumn":12,"suggestions":"4140"},{"ruleId":"4094","severity":1,"message":"4141","line":95,"column":9,"nodeType":"4096","messageId":"4097","endLine":95,"endColumn":10},{"ruleId":"4112","severity":1,"message":"4113","line":119,"column":13,"nodeType":"4114","messageId":"4115","endLine":119,"endColumn":15},{"ruleId":"4117","severity":1,"message":"4142","line":127,"column":26,"nodeType":"4119","messageId":"4120","endLine":127,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":128,"column":27,"nodeType":"4114","messageId":"4115","endLine":128,"endColumn":29},{"ruleId":"4117","severity":1,"message":"4142","line":134,"column":27,"nodeType":"4119","messageId":"4120","endLine":134,"endColumn":29},{"ruleId":"4112","severity":1,"message":"4113","line":135,"column":15,"nodeType":"4114","messageId":"4115","endLine":135,"endColumn":17},{"ruleId":"4117","severity":1,"message":"4142","line":145,"column":23,"nodeType":"4119","messageId":"4120","endLine":145,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":146,"column":16,"nodeType":"4114","messageId":"4115","endLine":146,"endColumn":18},{"ruleId":"4117","severity":1,"message":"4142","line":152,"column":26,"nodeType":"4119","messageId":"4120","endLine":152,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":256,"column":36,"nodeType":"4114","messageId":"4115","endLine":256,"endColumn":38},{"ruleId":"4094","severity":1,"message":"4143","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4144","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":18},{"ruleId":"4108","severity":1,"message":"4145","line":38,"column":6,"nodeType":"4110","endLine":38,"endColumn":8,"suggestions":"4146"},{"ruleId":"4112","severity":1,"message":"4113","line":108,"column":34,"nodeType":"4114","messageId":"4115","endLine":108,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":111,"column":34,"nodeType":"4114","messageId":"4115","endLine":111,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":114,"column":34,"nodeType":"4114","messageId":"4115","endLine":114,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":118,"column":34,"nodeType":"4114","messageId":"4115","endLine":118,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4147","line":1,"column":36,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":46},{"ruleId":"4094","severity":1,"message":"4148","line":20,"column":10,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4101","line":28,"column":9,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4149","line":46,"column":10,"nodeType":"4096","messageId":"4097","endLine":46,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4150","line":83,"column":11,"nodeType":"4096","messageId":"4097","endLine":83,"endColumn":12},{"ruleId":"4112","severity":1,"message":"4113","line":84,"column":11,"nodeType":"4114","messageId":"4115","endLine":84,"endColumn":13},{"ruleId":"4112","severity":1,"message":"4113","line":151,"column":25,"nodeType":"4114","messageId":"4115","endLine":151,"endColumn":27},{"ruleId":"4108","severity":1,"message":"4151","line":36,"column":6,"nodeType":"4110","endLine":36,"endColumn":8,"suggestions":"4152"},{"ruleId":"4112","severity":1,"message":"4113","line":117,"column":34,"nodeType":"4114","messageId":"4115","endLine":117,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":120,"column":34,"nodeType":"4114","messageId":"4115","endLine":120,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":124,"column":34,"nodeType":"4114","messageId":"4115","endLine":124,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":128,"column":34,"nodeType":"4114","messageId":"4115","endLine":128,"endColumn":36},{"ruleId":"4108","severity":1,"message":"4153","line":35,"column":6,"nodeType":"4110","endLine":35,"endColumn":8,"suggestions":"4154"},{"ruleId":"4112","severity":1,"message":"4113","line":117,"column":34,"nodeType":"4114","messageId":"4115","endLine":117,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":120,"column":34,"nodeType":"4114","messageId":"4115","endLine":120,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":124,"column":34,"nodeType":"4114","messageId":"4115","endLine":124,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":128,"column":34,"nodeType":"4114","messageId":"4115","endLine":128,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4155","line":2,"column":27,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4101","line":27,"column":9,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":28,"column":35,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":66,"column":14,"nodeType":"4114","messageId":"4115","endLine":66,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4144","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4099","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4125","line":15,"column":33,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4156","line":20,"column":8,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4157","line":56,"column":18,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":30},{"ruleId":"4108","severity":1,"message":"4158","line":66,"column":6,"nodeType":"4110","endLine":66,"endColumn":8,"suggestions":"4159"},{"ruleId":"4112","severity":1,"message":"4113","line":259,"column":37,"nodeType":"4114","messageId":"4115","endLine":259,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":262,"column":39,"nodeType":"4114","messageId":"4115","endLine":262,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":265,"column":41,"nodeType":"4114","messageId":"4115","endLine":265,"endColumn":43},{"ruleId":"4112","severity":1,"message":"4113","line":281,"column":33,"nodeType":"4114","messageId":"4115","endLine":281,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":295,"column":35,"nodeType":"4114","messageId":"4115","endLine":295,"endColumn":37},{"ruleId":"4112","severity":1,"message":"4113","line":319,"column":32,"nodeType":"4114","messageId":"4115","endLine":319,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":320,"column":32,"nodeType":"4114","messageId":"4115","endLine":320,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":321,"column":33,"nodeType":"4114","messageId":"4115","endLine":321,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4160","line":10,"column":10,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4161","line":11,"column":13,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4162","line":13,"column":8,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4101","line":21,"column":9,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4123","line":45,"column":6,"nodeType":"4110","endLine":45,"endColumn":12,"suggestions":"4163"},{"ruleId":"4094","severity":1,"message":"4141","line":52,"column":9,"nodeType":"4096","messageId":"4097","endLine":52,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4102","line":20,"column":54,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":59},{"ruleId":"4108","severity":1,"message":"4123","line":35,"column":6,"nodeType":"4110","endLine":35,"endColumn":12,"suggestions":"4164"},{"ruleId":"4094","severity":1,"message":"4141","line":44,"column":9,"nodeType":"4096","messageId":"4097","endLine":44,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4166","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4167","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4143","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4168","line":17,"column":7,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4170","line":6,"column":9,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4144","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4099","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":10},{"ruleId":"4108","severity":1,"message":"4172","line":28,"column":6,"nodeType":"4110","endLine":28,"endColumn":10,"suggestions":"4173"},{"ruleId":"4094","severity":1,"message":"4144","line":9,"column":10,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4174","line":16,"column":8,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4148","line":17,"column":10,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4175","line":19,"column":10,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4176","line":52,"column":12,"nodeType":"4096","messageId":"4097","endLine":52,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4177","line":52,"column":18,"nodeType":"4096","messageId":"4097","endLine":52,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4109","line":67,"column":6,"nodeType":"4110","endLine":67,"endColumn":8,"suggestions":"4178"},{"ruleId":"4112","severity":1,"message":"4113","line":85,"column":22,"nodeType":"4114","messageId":"4115","endLine":85,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4179","line":144,"column":13,"nodeType":"4096","messageId":"4097","endLine":144,"endColumn":18},{"ruleId":"4112","severity":1,"message":"4113","line":195,"column":25,"nodeType":"4114","messageId":"4115","endLine":195,"endColumn":27},{"ruleId":"4180","severity":1,"message":"4181","line":366,"column":29,"nodeType":"4182","messageId":"4183","endLine":366,"endColumn":63},{"ruleId":"4184","severity":1,"message":"4185","line":502,"column":35,"nodeType":"4186","messageId":"4187","endLine":505,"endColumn":36,"fix":"4188"},{"ruleId":"4094","severity":1,"message":"4099","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4174","line":23,"column":8,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4189","line":44,"column":11,"nodeType":"4096","messageId":"4097","endLine":44,"endColumn":23},{"ruleId":"4108","severity":1,"message":"4190","line":58,"column":6,"nodeType":"4110","endLine":58,"endColumn":12,"suggestions":"4191"},{"ruleId":"4094","severity":1,"message":"4144","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":5,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4192","line":18,"column":8,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4193","line":26,"column":12,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4194","line":26,"column":18,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4195","line":40,"column":8,"nodeType":"4110","endLine":40,"endColumn":10,"suggestions":"4196"},{"ruleId":"4112","severity":1,"message":"4113","line":109,"column":45,"nodeType":"4114","messageId":"4115","endLine":109,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4144","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":5,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4125","line":15,"column":10,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4192","line":17,"column":8,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":22},{"ruleId":"4108","severity":1,"message":"4195","line":29,"column":8,"nodeType":"4110","endLine":29,"endColumn":10,"suggestions":"4197"},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4174","line":20,"column":8,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4198","line":32,"column":6,"nodeType":"4110","endLine":32,"endColumn":8,"suggestions":"4199"},{"ruleId":"4112","severity":1,"message":"4113","line":99,"column":34,"nodeType":"4114","messageId":"4115","endLine":99,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":102,"column":34,"nodeType":"4114","messageId":"4115","endLine":102,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":105,"column":34,"nodeType":"4114","messageId":"4115","endLine":105,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4166","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4167","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4200","line":7,"column":45,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":54},{"ruleId":"4094","severity":1,"message":"4101","line":30,"column":9,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":32,"column":35,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4125","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4101","line":31,"column":9,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":33,"column":35,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4201","line":42,"column":10,"nodeType":"4096","messageId":"4097","endLine":42,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4202","line":43,"column":10,"nodeType":"4096","messageId":"4097","endLine":43,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4203","line":48,"column":10,"nodeType":"4096","messageId":"4097","endLine":48,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4204","line":54,"column":10,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4205","line":56,"column":10,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4206","line":56,"column":21,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4207","line":58,"column":10,"nodeType":"4096","messageId":"4097","endLine":58,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4208","line":58,"column":25,"nodeType":"4096","messageId":"4097","endLine":58,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4209","line":60,"column":10,"nodeType":"4096","messageId":"4097","endLine":60,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4210","line":60,"column":23,"nodeType":"4096","messageId":"4097","endLine":60,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4211","line":62,"column":10,"nodeType":"4096","messageId":"4097","endLine":62,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4212","line":62,"column":22,"nodeType":"4096","messageId":"4097","endLine":62,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4213","line":65,"column":10,"nodeType":"4096","messageId":"4097","endLine":65,"endColumn":17},{"ruleId":"4214","severity":1,"message":"4215","line":129,"column":9,"nodeType":"4096","messageId":"4216","endLine":129,"endColumn":21},{"ruleId":"4117","severity":1,"message":"4118","line":133,"column":21,"nodeType":"4119","messageId":"4120","endLine":133,"endColumn":23},{"ruleId":"4117","severity":1,"message":"4118","line":138,"column":26,"nodeType":"4119","messageId":"4120","endLine":138,"endColumn":28},{"ruleId":"4117","severity":1,"message":"4118","line":193,"column":43,"nodeType":"4119","messageId":"4120","endLine":193,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4217","line":210,"column":7,"nodeType":"4096","messageId":"4097","endLine":210,"endColumn":15},{"ruleId":"4117","severity":1,"message":"4118","line":220,"column":15,"nodeType":"4119","messageId":"4120","endLine":220,"endColumn":17},{"ruleId":"4117","severity":1,"message":"4118","line":244,"column":17,"nodeType":"4119","messageId":"4120","endLine":244,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4218","line":328,"column":9,"nodeType":"4096","messageId":"4097","endLine":328,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4219","line":338,"column":9,"nodeType":"4096","messageId":"4097","endLine":338,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4113","line":524,"column":49,"nodeType":"4114","messageId":"4115","endLine":524,"endColumn":51},{"ruleId":"4112","severity":1,"message":"4113","line":531,"column":47,"nodeType":"4114","messageId":"4115","endLine":531,"endColumn":49},{"ruleId":"4112","severity":1,"message":"4113","line":121,"column":34,"nodeType":"4114","messageId":"4115","endLine":121,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":124,"column":34,"nodeType":"4114","messageId":"4115","endLine":124,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":128,"column":34,"nodeType":"4114","messageId":"4115","endLine":128,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":132,"column":34,"nodeType":"4114","messageId":"4115","endLine":132,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4101","line":31,"column":9,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":33,"column":35,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4201","line":42,"column":10,"nodeType":"4096","messageId":"4097","endLine":42,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4202","line":43,"column":10,"nodeType":"4096","messageId":"4097","endLine":43,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4203","line":48,"column":10,"nodeType":"4096","messageId":"4097","endLine":48,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4204","line":54,"column":10,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4220","line":55,"column":10,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4138","line":55,"column":17,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4213","line":59,"column":10,"nodeType":"4096","messageId":"4097","endLine":59,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4221","line":62,"column":10,"nodeType":"4096","messageId":"4097","endLine":62,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4222","line":62,"column":17,"nodeType":"4096","messageId":"4097","endLine":62,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4223","line":75,"column":7,"nodeType":"4096","messageId":"4097","endLine":75,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4224","line":87,"column":9,"nodeType":"4096","messageId":"4097","endLine":87,"endColumn":20},{"ruleId":"4214","severity":1,"message":"4215","line":134,"column":9,"nodeType":"4096","messageId":"4216","endLine":134,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4225","line":135,"column":9,"nodeType":"4096","messageId":"4097","endLine":135,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4226","line":137,"column":9,"nodeType":"4096","messageId":"4097","endLine":137,"endColumn":27},{"ruleId":"4117","severity":1,"message":"4118","line":138,"column":21,"nodeType":"4119","messageId":"4120","endLine":138,"endColumn":23},{"ruleId":"4117","severity":1,"message":"4118","line":195,"column":43,"nodeType":"4119","messageId":"4120","endLine":195,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4227","line":313,"column":9,"nodeType":"4096","messageId":"4097","endLine":313,"endColumn":10},{"ruleId":"4117","severity":1,"message":"4142","line":315,"column":27,"nodeType":"4119","messageId":"4120","endLine":315,"endColumn":29},{"ruleId":"4112","severity":1,"message":"4113","line":317,"column":16,"nodeType":"4114","messageId":"4115","endLine":317,"endColumn":18},{"ruleId":"4112","severity":1,"message":"4113","line":492,"column":49,"nodeType":"4114","messageId":"4115","endLine":492,"endColumn":51},{"ruleId":"4112","severity":1,"message":"4113","line":499,"column":47,"nodeType":"4114","messageId":"4115","endLine":499,"endColumn":49},{"ruleId":"4094","severity":1,"message":"4228","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4229","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4143","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4156","line":16,"column":8,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4128","line":23,"column":9,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4232","line":28,"column":24,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":105,"column":39,"nodeType":"4114","messageId":"4115","endLine":105,"endColumn":41},{"ruleId":"4108","severity":1,"message":"4233","line":210,"column":6,"nodeType":"4110","endLine":210,"endColumn":16,"suggestions":"4234"},{"ruleId":"4094","severity":1,"message":"4235","line":6,"column":27,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4143","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4101","line":35,"column":9,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":36,"column":43,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4236","line":47,"column":10,"nodeType":"4096","messageId":"4097","endLine":47,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4237","line":57,"column":9,"nodeType":"4096","messageId":"4097","endLine":57,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4238","line":74,"column":6,"nodeType":"4110","endLine":74,"endColumn":8,"suggestions":"4239"},{"ruleId":"4108","severity":1,"message":"4109","line":101,"column":6,"nodeType":"4110","endLine":101,"endColumn":15,"suggestions":"4240"},{"ruleId":"4112","severity":1,"message":"4113","line":124,"column":22,"nodeType":"4114","messageId":"4115","endLine":124,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4241","line":133,"column":9,"nodeType":"4096","messageId":"4097","endLine":133,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4242","line":176,"column":9,"nodeType":"4096","messageId":"4097","endLine":176,"endColumn":29},{"ruleId":"4112","severity":1,"message":"4113","line":181,"column":13,"nodeType":"4114","messageId":"4115","endLine":181,"endColumn":15},{"ruleId":"4112","severity":1,"message":"4113","line":189,"column":20,"nodeType":"4114","messageId":"4115","endLine":189,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4143","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":18,"column":3,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":19,"column":3,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":20,"column":3,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4243","line":22,"column":8,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4244","line":25,"column":8,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4245","line":40,"column":11,"nodeType":"4096","messageId":"4097","endLine":40,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4101","line":43,"column":9,"nodeType":"4096","messageId":"4097","endLine":43,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4246","line":51,"column":10,"nodeType":"4096","messageId":"4097","endLine":51,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4247","line":51,"column":18,"nodeType":"4096","messageId":"4097","endLine":51,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4248","line":53,"column":10,"nodeType":"4096","messageId":"4097","endLine":53,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4249","line":54,"column":10,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4250","line":54,"column":17,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4251","line":55,"column":10,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4252","line":55,"column":21,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4213","line":65,"column":10,"nodeType":"4096","messageId":"4097","endLine":65,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4202","line":69,"column":10,"nodeType":"4096","messageId":"4097","endLine":69,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4106","line":70,"column":10,"nodeType":"4096","messageId":"4097","endLine":70,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4253","line":71,"column":10,"nodeType":"4096","messageId":"4097","endLine":71,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4203","line":72,"column":10,"nodeType":"4096","messageId":"4097","endLine":72,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4254","line":79,"column":11,"nodeType":"4096","messageId":"4097","endLine":79,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4255","line":79,"column":25,"nodeType":"4096","messageId":"4097","endLine":79,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4102","line":79,"column":35,"nodeType":"4096","messageId":"4097","endLine":79,"endColumn":40},{"ruleId":"4108","severity":1,"message":"4256","line":107,"column":6,"nodeType":"4110","endLine":107,"endColumn":10,"suggestions":"4257"},{"ruleId":"4117","severity":1,"message":"4118","line":176,"column":21,"nodeType":"4119","messageId":"4120","endLine":176,"endColumn":23},{"ruleId":"4117","severity":1,"message":"4118","line":180,"column":26,"nodeType":"4119","messageId":"4120","endLine":180,"endColumn":28},{"ruleId":"4258","severity":1,"message":"4259","line":201,"column":6,"nodeType":"4260","messageId":"4261","endLine":203,"endColumn":39},{"ruleId":"4258","severity":1,"message":"4259","line":204,"column":7,"nodeType":"4260","messageId":"4261","endLine":206,"endColumn":45},{"ruleId":"4258","severity":1,"message":"4259","line":207,"column":6,"nodeType":"4260","messageId":"4261","endLine":208,"endColumn":40},{"ruleId":"4258","severity":1,"message":"4259","line":209,"column":6,"nodeType":"4260","messageId":"4261","endLine":210,"endColumn":38},{"ruleId":"4258","severity":1,"message":"4259","line":211,"column":7,"nodeType":"4260","messageId":"4261","endLine":213,"endColumn":45},{"ruleId":"4258","severity":1,"message":"4259","line":214,"column":6,"nodeType":"4260","messageId":"4261","endLine":215,"endColumn":43},{"ruleId":"4117","severity":1,"message":"4118","line":238,"column":43,"nodeType":"4119","messageId":"4120","endLine":238,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4217","line":301,"column":7,"nodeType":"4096","messageId":"4097","endLine":301,"endColumn":15},{"ruleId":"4117","severity":1,"message":"4118","line":310,"column":15,"nodeType":"4119","messageId":"4120","endLine":310,"endColumn":17},{"ruleId":"4117","severity":1,"message":"4118","line":329,"column":17,"nodeType":"4119","messageId":"4120","endLine":329,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4225","line":427,"column":6,"nodeType":"4096","messageId":"4097","endLine":427,"endColumn":8},{"ruleId":"4117","severity":1,"message":"4118","line":434,"column":19,"nodeType":"4119","messageId":"4120","endLine":434,"endColumn":21},{"ruleId":"4117","severity":1,"message":"4118","line":437,"column":21,"nodeType":"4119","messageId":"4120","endLine":437,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4116","line":454,"column":10,"nodeType":"4114","messageId":"4115","endLine":454,"endColumn":12},{"ruleId":"4112","severity":1,"message":"4116","line":457,"column":10,"nodeType":"4114","messageId":"4115","endLine":457,"endColumn":12},{"ruleId":"4112","severity":1,"message":"4113","line":541,"column":23,"nodeType":"4114","messageId":"4115","endLine":541,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":574,"column":46,"nodeType":"4114","messageId":"4115","endLine":574,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":593,"column":47,"nodeType":"4114","messageId":"4115","endLine":593,"endColumn":49},{"ruleId":"4112","severity":1,"message":"4113","line":669,"column":53,"nodeType":"4114","messageId":"4115","endLine":669,"endColumn":55},{"ruleId":"4112","severity":1,"message":"4113","line":676,"column":52,"nodeType":"4114","messageId":"4115","endLine":676,"endColumn":54},{"ruleId":"4094","severity":1,"message":"4262","line":1,"column":56,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":69},{"ruleId":"4112","severity":1,"message":"4113","line":106,"column":34,"nodeType":"4114","messageId":"4115","endLine":106,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":109,"column":34,"nodeType":"4114","messageId":"4115","endLine":109,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":112,"column":34,"nodeType":"4114","messageId":"4115","endLine":112,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":116,"column":34,"nodeType":"4114","messageId":"4115","endLine":116,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4263","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":30},{"ruleId":"4094","severity":1,"message":"4143","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":18,"column":3,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":19,"column":3,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":20,"column":3,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4245","line":41,"column":11,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4101","line":44,"column":9,"nodeType":"4096","messageId":"4097","endLine":44,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4246","line":52,"column":10,"nodeType":"4096","messageId":"4097","endLine":52,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4247","line":52,"column":18,"nodeType":"4096","messageId":"4097","endLine":52,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4248","line":54,"column":10,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4249","line":55,"column":10,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4250","line":55,"column":17,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4251","line":56,"column":10,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4252","line":56,"column":21,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4264","line":59,"column":10,"nodeType":"4096","messageId":"4097","endLine":59,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4213","line":66,"column":10,"nodeType":"4096","messageId":"4097","endLine":66,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4202","line":70,"column":10,"nodeType":"4096","messageId":"4097","endLine":70,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4106","line":71,"column":10,"nodeType":"4096","messageId":"4097","endLine":71,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4253","line":72,"column":10,"nodeType":"4096","messageId":"4097","endLine":72,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4203","line":73,"column":10,"nodeType":"4096","messageId":"4097","endLine":73,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4265","line":74,"column":10,"nodeType":"4096","messageId":"4097","endLine":74,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4266","line":74,"column":22,"nodeType":"4096","messageId":"4097","endLine":74,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4267","line":75,"column":10,"nodeType":"4096","messageId":"4097","endLine":75,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4268","line":75,"column":14,"nodeType":"4096","messageId":"4097","endLine":75,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4221","line":76,"column":10,"nodeType":"4096","messageId":"4097","endLine":76,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4222","line":76,"column":17,"nodeType":"4096","messageId":"4097","endLine":76,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4269","line":77,"column":10,"nodeType":"4096","messageId":"4097","endLine":77,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4270","line":77,"column":16,"nodeType":"4096","messageId":"4097","endLine":77,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4271","line":78,"column":10,"nodeType":"4096","messageId":"4097","endLine":78,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4272","line":78,"column":19,"nodeType":"4096","messageId":"4097","endLine":78,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4254","line":87,"column":11,"nodeType":"4096","messageId":"4097","endLine":87,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4102","line":87,"column":35,"nodeType":"4096","messageId":"4097","endLine":87,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4273","line":93,"column":7,"nodeType":"4096","messageId":"4097","endLine":93,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4274","line":95,"column":7,"nodeType":"4096","messageId":"4097","endLine":95,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4275","line":96,"column":7,"nodeType":"4096","messageId":"4097","endLine":96,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4276","line":97,"column":7,"nodeType":"4096","messageId":"4097","endLine":97,"endColumn":21},{"ruleId":"4214","severity":1,"message":"4277","line":98,"column":7,"nodeType":"4096","messageId":"4216","endLine":98,"endColumn":9},{"ruleId":"4108","severity":1,"message":"4278","line":142,"column":6,"nodeType":"4110","endLine":142,"endColumn":10,"suggestions":"4279"},{"ruleId":"4094","severity":1,"message":"4225","line":177,"column":9,"nodeType":"4096","messageId":"4097","endLine":177,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4226","line":178,"column":9,"nodeType":"4096","messageId":"4097","endLine":178,"endColumn":27},{"ruleId":"4117","severity":1,"message":"4118","line":179,"column":21,"nodeType":"4119","messageId":"4120","endLine":179,"endColumn":23},{"ruleId":"4258","severity":1,"message":"4259","line":204,"column":7,"nodeType":"4260","messageId":"4261","endLine":206,"endColumn":41},{"ruleId":"4258","severity":1,"message":"4259","line":207,"column":9,"nodeType":"4260","messageId":"4261","endLine":209,"endColumn":47},{"ruleId":"4258","severity":1,"message":"4259","line":214,"column":7,"nodeType":"4260","messageId":"4261","endLine":217,"endColumn":8},{"ruleId":"4258","severity":1,"message":"4259","line":221,"column":7,"nodeType":"4260","messageId":"4261","endLine":224,"endColumn":8},{"ruleId":"4258","severity":1,"message":"4259","line":227,"column":7,"nodeType":"4260","messageId":"4261","endLine":231,"endColumn":8},{"ruleId":"4258","severity":1,"message":"4259","line":233,"column":7,"nodeType":"4260","messageId":"4261","endLine":236,"endColumn":8},{"ruleId":"4117","severity":1,"message":"4118","line":258,"column":43,"nodeType":"4119","messageId":"4120","endLine":258,"endColumn":45},{"ruleId":"4112","severity":1,"message":"4116","line":432,"column":11,"nodeType":"4114","messageId":"4115","endLine":432,"endColumn":13},{"ruleId":"4112","severity":1,"message":"4113","line":512,"column":23,"nodeType":"4114","messageId":"4115","endLine":512,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":571,"column":47,"nodeType":"4114","messageId":"4115","endLine":571,"endColumn":49},{"ruleId":"4112","severity":1,"message":"4113","line":592,"column":45,"nodeType":"4114","messageId":"4115","endLine":592,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4113","line":664,"column":53,"nodeType":"4114","messageId":"4115","endLine":664,"endColumn":55},{"ruleId":"4112","severity":1,"message":"4113","line":671,"column":52,"nodeType":"4114","messageId":"4115","endLine":671,"endColumn":54},{"ruleId":"4112","severity":1,"message":"4113","line":90,"column":46,"nodeType":"4114","messageId":"4115","endLine":90,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":93,"column":46,"nodeType":"4114","messageId":"4115","endLine":93,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":96,"column":46,"nodeType":"4114","messageId":"4115","endLine":96,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":100,"column":34,"nodeType":"4114","messageId":"4115","endLine":100,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":103,"column":34,"nodeType":"4114","messageId":"4115","endLine":103,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":106,"column":34,"nodeType":"4114","messageId":"4115","endLine":106,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4101","line":20,"column":9,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4280","line":23,"column":10,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4281","line":23,"column":18,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4225","line":26,"column":7,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":9},{"ruleId":"4258","severity":1,"message":"4259","line":40,"column":5,"nodeType":"4260","messageId":"4261","endLine":53,"endColumn":6},{"ruleId":"4112","severity":1,"message":"4113","line":150,"column":27,"nodeType":"4114","messageId":"4115","endLine":150,"endColumn":29},{"ruleId":"4112","severity":1,"message":"4113","line":156,"column":29,"nodeType":"4114","messageId":"4115","endLine":156,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":164,"column":33,"nodeType":"4114","messageId":"4115","endLine":164,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":166,"column":35,"nodeType":"4114","messageId":"4115","endLine":166,"endColumn":37},{"ruleId":"4108","severity":1,"message":"4256","line":225,"column":6,"nodeType":"4110","endLine":225,"endColumn":8,"suggestions":"4282"},{"ruleId":"4094","severity":1,"message":"4283","line":230,"column":11,"nodeType":"4096","messageId":"4097","endLine":230,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4284","line":241,"column":9,"nodeType":"4096","messageId":"4097","endLine":241,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4263","line":20,"column":8,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":30},{"ruleId":"4094","severity":1,"message":"4101","line":23,"column":9,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4285","line":28,"column":10,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4286","line":28,"column":21,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4284","line":257,"column":9,"nodeType":"4096","messageId":"4097","endLine":257,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4192","line":16,"column":8,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4101","line":21,"column":9,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4112","severity":1,"message":"4116","line":35,"column":27,"nodeType":"4114","messageId":"4115","endLine":35,"endColumn":29},{"ruleId":"4112","severity":1,"message":"4113","line":89,"column":32,"nodeType":"4114","messageId":"4115","endLine":89,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4155","line":2,"column":27,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4162","line":12,"column":8,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4101","line":25,"column":9,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":27,"column":35,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":65,"column":14,"nodeType":"4114","messageId":"4115","endLine":65,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4099","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4232","line":22,"column":24,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":39},{"ruleId":"4108","severity":1,"message":"4233","line":43,"column":6,"nodeType":"4110","endLine":43,"endColumn":16,"suggestions":"4287"},{"ruleId":"4112","severity":1,"message":"4113","line":192,"column":42,"nodeType":"4114","messageId":"4115","endLine":192,"endColumn":44},{"ruleId":"4112","severity":1,"message":"4113","line":192,"column":72,"nodeType":"4114","messageId":"4115","endLine":192,"endColumn":74},{"ruleId":"4112","severity":1,"message":"4113","line":224,"column":39,"nodeType":"4114","messageId":"4115","endLine":224,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4160","line":8,"column":10,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4161","line":9,"column":13,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4162","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4101","line":21,"column":9,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4235","line":6,"column":27,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4144","line":7,"column":10,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4143","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4099","line":12,"column":5,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4100","line":15,"column":5,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4171","line":16,"column":5,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4102","line":33,"column":45,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":50},{"ruleId":"4094","severity":1,"message":"4165","line":2,"column":17,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":2,"column":27,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4169","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4288","line":7,"column":9,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4289","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4290","line":3,"column":15,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4291","line":3,"column":21,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4292","line":3,"column":30,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":38},{"ruleId":"4094","severity":1,"message":"4293","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4228","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4229","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4099","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4294","line":16,"column":12,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4295","line":16,"column":22,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4144","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":5,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4192","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4193","line":27,"column":12,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4194","line":27,"column":18,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4195","line":32,"column":8,"nodeType":"4110","endLine":32,"endColumn":10,"suggestions":"4296"},{"ruleId":"4112","severity":1,"message":"4113","line":98,"column":45,"nodeType":"4114","messageId":"4115","endLine":98,"endColumn":47},{"ruleId":"4258","severity":1,"message":"4297","line":177,"column":1,"nodeType":"4260","messageId":"4298","endLine":192,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4099","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":18,"column":3,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4101","line":39,"column":9,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4190","line":66,"column":6,"nodeType":"4110","endLine":66,"endColumn":12,"suggestions":"4299"},{"ruleId":"4094","severity":1,"message":"4144","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4099","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":10},{"ruleId":"4108","severity":1,"message":"4172","line":28,"column":6,"nodeType":"4110","endLine":28,"endColumn":10,"suggestions":"4300"},{"ruleId":"4094","severity":1,"message":"4301","line":26,"column":11,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":16},{"ruleId":"4108","severity":1,"message":"4302","line":40,"column":8,"nodeType":"4110","endLine":40,"endColumn":10,"suggestions":"4303"},{"ruleId":"4094","severity":1,"message":"4100","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4125","line":14,"column":10,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4263","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":30},{"ruleId":"4094","severity":1,"message":"4101","line":23,"column":9,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4285","line":27,"column":10,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4286","line":27,"column":21,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4304","line":31,"column":7,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":13},{"ruleId":"4258","severity":1,"message":"4259","line":185,"column":5,"nodeType":"4260","messageId":"4261","endLine":197,"endColumn":6},{"ruleId":"4305","severity":1,"message":"4306","line":186,"column":12,"nodeType":"4307","messageId":"4308","endLine":186,"endColumn":13,"fix":"4309"},{"ruleId":"4094","severity":1,"message":"4310","line":204,"column":9,"nodeType":"4096","messageId":"4097","endLine":204,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4162","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4101","line":29,"column":9,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":30,"column":35,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4311","line":17,"column":12,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4312","line":17,"column":25,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4313","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4201","line":26,"column":10,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4314","line":28,"column":10,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4203","line":29,"column":10,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4217","line":39,"column":7,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4315","line":40,"column":7,"nodeType":"4096","messageId":"4097","endLine":40,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4316","line":41,"column":7,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4128","line":43,"column":7,"nodeType":"4096","messageId":"4097","endLine":43,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4200","line":44,"column":45,"nodeType":"4096","messageId":"4097","endLine":44,"endColumn":54},{"ruleId":"4108","severity":1,"message":"4317","line":79,"column":6,"nodeType":"4110","endLine":79,"endColumn":8,"suggestions":"4318"},{"ruleId":"4094","severity":1,"message":"4283","line":84,"column":11,"nodeType":"4096","messageId":"4097","endLine":84,"endColumn":13},{"ruleId":"4108","severity":1,"message":"4319","line":95,"column":6,"nodeType":"4110","endLine":95,"endColumn":13,"suggestions":"4320"},{"ruleId":"4117","severity":1,"message":"4118","line":237,"column":19,"nodeType":"4119","messageId":"4120","endLine":237,"endColumn":21},{"ruleId":"4117","severity":1,"message":"4118","line":283,"column":17,"nodeType":"4119","messageId":"4120","endLine":283,"endColumn":19},{"ruleId":"4117","severity":1,"message":"4118","line":292,"column":15,"nodeType":"4119","messageId":"4120","endLine":292,"endColumn":17},{"ruleId":"4117","severity":1,"message":"4118","line":302,"column":15,"nodeType":"4119","messageId":"4120","endLine":302,"endColumn":17},{"ruleId":"4112","severity":1,"message":"4113","line":386,"column":49,"nodeType":"4114","messageId":"4115","endLine":386,"endColumn":51},{"ruleId":"4112","severity":1,"message":"4113","line":393,"column":47,"nodeType":"4114","messageId":"4115","endLine":393,"endColumn":49},{"ruleId":"4094","severity":1,"message":"4125","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4321","line":53,"column":23,"nodeType":"4096","messageId":"4097","endLine":53,"endColumn":43},{"ruleId":"4094","severity":1,"message":"4322","line":54,"column":5,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":28},{"ruleId":"4108","severity":1,"message":"4323","line":153,"column":6,"nodeType":"4110","endLine":153,"endColumn":8,"suggestions":"4324"},{"ruleId":"4094","severity":1,"message":"4325","line":157,"column":7,"nodeType":"4096","messageId":"4097","endLine":157,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4160","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4161","line":6,"column":13,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4326","line":27,"column":35,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4125","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4100","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":8},{"ruleId":"4108","severity":1,"message":"4319","line":27,"column":6,"nodeType":"4110","endLine":27,"endColumn":8,"suggestions":"4327"},{"ruleId":"4094","severity":1,"message":"4284","line":156,"column":9,"nodeType":"4096","messageId":"4097","endLine":156,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4125","line":4,"column":33,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4144","line":7,"column":10,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4143","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4328","line":19,"column":10,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4326","line":23,"column":35,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4329","line":25,"column":10,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":26},{"ruleId":"4108","severity":1,"message":"4330","line":34,"column":6,"nodeType":"4110","endLine":34,"endColumn":8,"suggestions":"4331"},{"ruleId":"4112","severity":1,"message":"4113","line":53,"column":39,"nodeType":"4114","messageId":"4115","endLine":53,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":53,"column":65,"nodeType":"4114","messageId":"4115","endLine":53,"endColumn":67},{"ruleId":"4112","severity":1,"message":"4113","line":163,"column":38,"nodeType":"4114","messageId":"4115","endLine":163,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":164,"column":37,"nodeType":"4114","messageId":"4115","endLine":164,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":165,"column":34,"nodeType":"4114","messageId":"4115","endLine":165,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":166,"column":38,"nodeType":"4114","messageId":"4115","endLine":166,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":167,"column":33,"nodeType":"4114","messageId":"4115","endLine":167,"endColumn":35},{"ruleId":"4108","severity":1,"message":"4323","line":104,"column":8,"nodeType":"4110","endLine":104,"endColumn":10,"suggestions":"4332"},{"ruleId":"4112","severity":1,"message":"4113","line":119,"column":46,"nodeType":"4114","messageId":"4115","endLine":119,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":122,"column":46,"nodeType":"4114","messageId":"4115","endLine":122,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":125,"column":46,"nodeType":"4114","messageId":"4115","endLine":125,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":128,"column":46,"nodeType":"4114","messageId":"4115","endLine":128,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4128","line":11,"column":9,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4333","line":28,"column":10,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4129","line":29,"column":10,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4113","line":90,"column":40,"nodeType":"4114","messageId":"4115","endLine":90,"endColumn":42},{"ruleId":"4108","severity":1,"message":"4130","line":188,"column":6,"nodeType":"4110","endLine":188,"endColumn":16,"suggestions":"4334"},{"ruleId":"4094","severity":1,"message":"4326","line":13,"column":35,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4102","line":13,"column":43,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4143","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4101","line":34,"column":9,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4335","line":56,"column":9,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4336","line":75,"column":6,"nodeType":"4110","endLine":75,"endColumn":8,"suggestions":"4337"},{"ruleId":"4108","severity":1,"message":"4109","line":104,"column":6,"nodeType":"4110","endLine":104,"endColumn":15,"suggestions":"4338"},{"ruleId":"4112","severity":1,"message":"4113","line":128,"column":22,"nodeType":"4114","messageId":"4115","endLine":128,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4192","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4101","line":19,"column":9,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4339","line":26,"column":6,"nodeType":"4110","endLine":26,"endColumn":8,"suggestions":"4340"},{"ruleId":"4112","severity":1,"message":"4113","line":76,"column":29,"nodeType":"4114","messageId":"4115","endLine":76,"endColumn":31},{"ruleId":"4108","severity":1,"message":"4198","line":32,"column":6,"nodeType":"4110","endLine":32,"endColumn":8,"suggestions":"4341"},{"ruleId":"4112","severity":1,"message":"4113","line":97,"column":34,"nodeType":"4114","messageId":"4115","endLine":97,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":100,"column":34,"nodeType":"4114","messageId":"4115","endLine":100,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":103,"column":34,"nodeType":"4114","messageId":"4115","endLine":103,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4108","severity":1,"message":"4323","line":89,"column":6,"nodeType":"4110","endLine":89,"endColumn":8,"suggestions":"4342"},{"ruleId":"4112","severity":1,"message":"4113","line":104,"column":34,"nodeType":"4114","messageId":"4115","endLine":104,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":107,"column":34,"nodeType":"4114","messageId":"4115","endLine":107,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":110,"column":34,"nodeType":"4114","messageId":"4115","endLine":110,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4343","line":23,"column":10,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":18},{"ruleId":"4108","severity":1,"message":"4323","line":114,"column":6,"nodeType":"4110","endLine":114,"endColumn":8,"suggestions":"4344"},{"ruleId":"4112","severity":1,"message":"4113","line":131,"column":34,"nodeType":"4114","messageId":"4115","endLine":131,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":135,"column":34,"nodeType":"4114","messageId":"4115","endLine":135,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":138,"column":34,"nodeType":"4114","messageId":"4115","endLine":138,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":141,"column":34,"nodeType":"4114","messageId":"4115","endLine":141,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4125","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":8},{"ruleId":"4108","severity":1,"message":"4345","line":32,"column":6,"nodeType":"4110","endLine":32,"endColumn":16,"suggestions":"4346"},{"ruleId":"4112","severity":1,"message":"4113","line":295,"column":39,"nodeType":"4114","messageId":"4115","endLine":295,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4144","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4099","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":10},{"ruleId":"4108","severity":1,"message":"4347","line":26,"column":6,"nodeType":"4110","endLine":26,"endColumn":8,"suggestions":"4348"},{"ruleId":"4184","severity":1,"message":"4185","line":86,"column":29,"nodeType":"4186","messageId":"4187","endLine":89,"endColumn":30,"fix":"4349"},{"ruleId":"4094","severity":1,"message":"4099","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4326","line":23,"column":35,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4350","line":23,"column":50,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":58},{"ruleId":"4108","severity":1,"message":"4330","line":34,"column":6,"nodeType":"4110","endLine":34,"endColumn":8,"suggestions":"4351"},{"ruleId":"4108","severity":1,"message":"4352","line":49,"column":6,"nodeType":"4110","endLine":49,"endColumn":16,"suggestions":"4353"},{"ruleId":"4112","severity":1,"message":"4113","line":136,"column":35,"nodeType":"4114","messageId":"4115","endLine":136,"endColumn":37},{"ruleId":"4112","severity":1,"message":"4113","line":309,"column":26,"nodeType":"4114","messageId":"4115","endLine":309,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":323,"column":26,"nodeType":"4114","messageId":"4115","endLine":323,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":336,"column":26,"nodeType":"4114","messageId":"4115","endLine":336,"endColumn":28},{"ruleId":"4184","severity":1,"message":"4185","line":398,"column":29,"nodeType":"4186","messageId":"4187","endLine":401,"endColumn":30,"fix":"4354"},{"ruleId":"4094","severity":1,"message":"4155","line":2,"column":27,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4101","line":22,"column":9,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":24,"column":35,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":61,"column":14,"nodeType":"4114","messageId":"4115","endLine":61,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4144","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4099","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":10},{"ruleId":"4108","severity":1,"message":"4172","line":28,"column":6,"nodeType":"4110","endLine":28,"endColumn":10,"suggestions":"4355"},{"ruleId":"4094","severity":1,"message":"4160","line":8,"column":10,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4161","line":9,"column":13,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4162","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4101","line":20,"column":9,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4141","line":49,"column":7,"nodeType":"4096","messageId":"4097","endLine":49,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":5,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4192","line":18,"column":8,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4101","line":23,"column":11,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4193","line":27,"column":12,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4194","line":27,"column":18,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4195","line":37,"column":8,"nodeType":"4110","endLine":37,"endColumn":10,"suggestions":"4356"},{"ruleId":"4112","severity":1,"message":"4113","line":104,"column":45,"nodeType":"4114","messageId":"4115","endLine":104,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4099","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4101","line":33,"column":9,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4189","line":44,"column":11,"nodeType":"4096","messageId":"4097","endLine":44,"endColumn":23},{"ruleId":"4108","severity":1,"message":"4190","line":59,"column":6,"nodeType":"4110","endLine":59,"endColumn":8,"suggestions":"4357"},{"ruleId":"4108","severity":1,"message":"4358","line":63,"column":6,"nodeType":"4110","endLine":63,"endColumn":12,"suggestions":"4359"},{"ruleId":"4258","severity":1,"message":"4259","line":87,"column":5,"nodeType":"4260","messageId":"4261","endLine":91,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4116","line":88,"column":18,"nodeType":"4114","messageId":"4115","endLine":88,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4289","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4290","line":3,"column":15,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4291","line":3,"column":21,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4292","line":3,"column":30,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":38},{"ruleId":"4094","severity":1,"message":"4293","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4228","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4229","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4099","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4294","line":16,"column":12,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4295","line":16,"column":22,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4360","line":17,"column":11,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4361","line":26,"column":11,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4169","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4362","line":34,"column":12,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":17},{"ruleId":"4108","severity":1,"message":"4363","line":87,"column":8,"nodeType":"4110","endLine":87,"endColumn":10,"suggestions":"4364"},{"ruleId":"4112","severity":1,"message":"4113","line":232,"column":36,"nodeType":"4114","messageId":"4115","endLine":232,"endColumn":38},{"ruleId":"4112","severity":1,"message":"4113","line":352,"column":41,"nodeType":"4114","messageId":"4115","endLine":352,"endColumn":43},{"ruleId":"4094","severity":1,"message":"4169","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4101","line":30,"column":9,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4365","line":31,"column":11,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4362","line":36,"column":10,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":15},{"ruleId":"4108","severity":1,"message":"4363","line":88,"column":6,"nodeType":"4110","endLine":88,"endColumn":8,"suggestions":"4366"},{"ruleId":"4112","severity":1,"message":"4113","line":234,"column":32,"nodeType":"4114","messageId":"4115","endLine":234,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":354,"column":35,"nodeType":"4114","messageId":"4115","endLine":354,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4169","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4144","line":18,"column":10,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4365","line":31,"column":11,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4362","line":35,"column":10,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":15},{"ruleId":"4108","severity":1,"message":"4363","line":87,"column":6,"nodeType":"4110","endLine":87,"endColumn":8,"suggestions":"4367"},{"ruleId":"4112","severity":1,"message":"4113","line":233,"column":32,"nodeType":"4114","messageId":"4115","endLine":233,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":364,"column":35,"nodeType":"4114","messageId":"4115","endLine":364,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4368","line":458,"column":9,"nodeType":"4096","messageId":"4097","endLine":458,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4369","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4370","severity":1,"message":"4371","line":135,"column":1,"nodeType":"4372","endLine":145,"endColumn":3},{"ruleId":"4094","severity":1,"message":"4227","line":30,"column":9,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":10},{"ruleId":"4370","severity":1,"message":"4371","line":43,"column":1,"nodeType":"4372","endLine":48,"endColumn":3},{"ruleId":"4094","severity":1,"message":"4125","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4373","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4374","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4375","line":34,"column":9,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4376","line":43,"column":20,"nodeType":"4096","messageId":"4097","endLine":43,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4377","line":44,"column":21,"nodeType":"4096","messageId":"4097","endLine":44,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4378","line":45,"column":24,"nodeType":"4096","messageId":"4097","endLine":45,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4379","line":46,"column":24,"nodeType":"4096","messageId":"4097","endLine":46,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4380","line":55,"column":23,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":37},{"ruleId":"4108","severity":1,"message":"4381","line":61,"column":6,"nodeType":"4110","endLine":61,"endColumn":8,"suggestions":"4382"},{"ruleId":"4214","severity":1,"message":"4383","line":386,"column":17,"nodeType":"4096","messageId":"4216","endLine":386,"endColumn":20},{"ruleId":"4117","severity":1,"message":"4142","line":400,"column":26,"nodeType":"4119","messageId":"4120","endLine":400,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":401,"column":21,"nodeType":"4114","messageId":"4115","endLine":401,"endColumn":23},{"ruleId":"4214","severity":1,"message":"4384","line":409,"column":13,"nodeType":"4096","messageId":"4216","endLine":409,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4128","line":17,"column":9,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4326","line":11,"column":27,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4102","line":11,"column":35,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4386","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":5,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4122","line":14,"column":5,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":11},{"ruleId":"4108","severity":1,"message":"4302","line":39,"column":8,"nodeType":"4110","endLine":39,"endColumn":10,"suggestions":"4387"},{"ruleId":"4258","severity":1,"message":"4297","line":129,"column":2,"nodeType":"4260","messageId":"4298","endLine":131,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":5,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":5,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":5,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":10},{"ruleId":"4108","severity":1,"message":"4388","line":37,"column":8,"nodeType":"4110","endLine":37,"endColumn":10,"suggestions":"4389"},{"ruleId":"4112","severity":1,"message":"4113","line":155,"column":44,"nodeType":"4114","messageId":"4115","endLine":155,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":161,"column":48,"nodeType":"4114","messageId":"4115","endLine":161,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":166,"column":52,"nodeType":"4114","messageId":"4115","endLine":166,"endColumn":54},{"ruleId":"4112","severity":1,"message":"4113","line":188,"column":40,"nodeType":"4114","messageId":"4115","endLine":188,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":199,"column":35,"nodeType":"4114","messageId":"4115","endLine":199,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4128","line":21,"column":11,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4326","line":24,"column":37,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":43},{"ruleId":"4094","severity":1,"message":"4390","line":25,"column":21,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4362","line":26,"column":12,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4365","line":28,"column":12,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4391","line":28,"column":16,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4392","line":36,"column":12,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4393","line":36,"column":18,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4330","line":56,"column":8,"nodeType":"4110","endLine":56,"endColumn":10,"suggestions":"4394"},{"ruleId":"4112","severity":1,"message":"4116","line":74,"column":29,"nodeType":"4114","messageId":"4115","endLine":74,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4395","line":120,"column":11,"nodeType":"4096","messageId":"4097","endLine":120,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":267,"column":48,"nodeType":"4114","messageId":"4115","endLine":267,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":284,"column":37,"nodeType":"4114","messageId":"4115","endLine":284,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":314,"column":37,"nodeType":"4114","messageId":"4115","endLine":314,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":332,"column":34,"nodeType":"4114","messageId":"4115","endLine":332,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":344,"column":30,"nodeType":"4114","messageId":"4115","endLine":344,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":344,"column":65,"nodeType":"4114","messageId":"4115","endLine":344,"endColumn":67},{"ruleId":"4112","severity":1,"message":"4113","line":344,"column":104,"nodeType":"4114","messageId":"4115","endLine":344,"endColumn":106},{"ruleId":"4112","severity":1,"message":"4113","line":344,"column":142,"nodeType":"4114","messageId":"4115","endLine":344,"endColumn":144},{"ruleId":"4112","severity":1,"message":"4116","line":416,"column":28,"nodeType":"4114","messageId":"4115","endLine":416,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4116","line":416,"column":49,"nodeType":"4114","messageId":"4115","endLine":416,"endColumn":51},{"ruleId":"4112","severity":1,"message":"4116","line":420,"column":33,"nodeType":"4114","messageId":"4115","endLine":420,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4128","line":21,"column":11,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4326","line":24,"column":37,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":43},{"ruleId":"4094","severity":1,"message":"4390","line":25,"column":21,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4362","line":26,"column":12,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4396","line":29,"column":12,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4397","line":29,"column":21,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4398","line":33,"column":12,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4392","line":36,"column":12,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4393","line":36,"column":18,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4330","line":59,"column":8,"nodeType":"4110","endLine":59,"endColumn":10,"suggestions":"4399"},{"ruleId":"4112","severity":1,"message":"4116","line":77,"column":29,"nodeType":"4114","messageId":"4115","endLine":77,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4395","line":123,"column":11,"nodeType":"4096","messageId":"4097","endLine":123,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4116","line":142,"column":24,"nodeType":"4114","messageId":"4115","endLine":142,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4116","line":142,"column":45,"nodeType":"4114","messageId":"4115","endLine":142,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4116","line":146,"column":29,"nodeType":"4114","messageId":"4115","endLine":146,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":285,"column":48,"nodeType":"4114","messageId":"4115","endLine":285,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":302,"column":37,"nodeType":"4114","messageId":"4115","endLine":302,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":332,"column":37,"nodeType":"4114","messageId":"4115","endLine":332,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":350,"column":34,"nodeType":"4114","messageId":"4115","endLine":350,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":361,"column":43,"nodeType":"4114","messageId":"4115","endLine":361,"endColumn":45},{"ruleId":"4112","severity":1,"message":"4113","line":361,"column":78,"nodeType":"4114","messageId":"4115","endLine":361,"endColumn":80},{"ruleId":"4112","severity":1,"message":"4116","line":361,"column":113,"nodeType":"4114","messageId":"4115","endLine":361,"endColumn":115},{"ruleId":"4112","severity":1,"message":"4113","line":373,"column":43,"nodeType":"4114","messageId":"4115","endLine":373,"endColumn":45},{"ruleId":"4112","severity":1,"message":"4113","line":373,"column":78,"nodeType":"4114","messageId":"4115","endLine":373,"endColumn":80},{"ruleId":"4112","severity":1,"message":"4113","line":373,"column":117,"nodeType":"4114","messageId":"4115","endLine":373,"endColumn":119},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4400","line":22,"column":8,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4401","line":23,"column":13,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4128","line":32,"column":9,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4326","line":35,"column":35,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4390","line":36,"column":19,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4362","line":37,"column":10,"nodeType":"4096","messageId":"4097","endLine":37,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4402","line":53,"column":10,"nodeType":"4096","messageId":"4097","endLine":53,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4376","line":53,"column":20,"nodeType":"4096","messageId":"4097","endLine":53,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4403","line":54,"column":10,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4377","line":54,"column":21,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4404","line":55,"column":10,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4378","line":55,"column":24,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4405","line":56,"column":10,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4379","line":56,"column":24,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":39},{"ruleId":"4108","severity":1,"message":"4330","line":80,"column":6,"nodeType":"4110","endLine":80,"endColumn":8,"suggestions":"4406"},{"ruleId":"4112","severity":1,"message":"4116","line":98,"column":22,"nodeType":"4114","messageId":"4115","endLine":98,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4113","line":230,"column":30,"nodeType":"4114","messageId":"4115","endLine":230,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":286,"column":40,"nodeType":"4114","messageId":"4115","endLine":286,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":303,"column":31,"nodeType":"4114","messageId":"4115","endLine":303,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":333,"column":31,"nodeType":"4114","messageId":"4115","endLine":333,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":351,"column":28,"nodeType":"4114","messageId":"4115","endLine":351,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":361,"column":37,"nodeType":"4114","messageId":"4115","endLine":361,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":361,"column":72,"nodeType":"4114","messageId":"4115","endLine":361,"endColumn":74},{"ruleId":"4112","severity":1,"message":"4116","line":361,"column":107,"nodeType":"4114","messageId":"4115","endLine":361,"endColumn":109},{"ruleId":"4112","severity":1,"message":"4113","line":373,"column":37,"nodeType":"4114","messageId":"4115","endLine":373,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":373,"column":72,"nodeType":"4114","messageId":"4115","endLine":373,"endColumn":74},{"ruleId":"4112","severity":1,"message":"4113","line":373,"column":111,"nodeType":"4114","messageId":"4115","endLine":373,"endColumn":113},{"ruleId":"4112","severity":1,"message":"4113","line":385,"column":24,"nodeType":"4114","messageId":"4115","endLine":385,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4113","line":385,"column":59,"nodeType":"4114","messageId":"4115","endLine":385,"endColumn":61},{"ruleId":"4112","severity":1,"message":"4113","line":385,"column":98,"nodeType":"4114","messageId":"4115","endLine":385,"endColumn":100},{"ruleId":"4112","severity":1,"message":"4113","line":385,"column":136,"nodeType":"4114","messageId":"4115","endLine":385,"endColumn":138},{"ruleId":"4112","severity":1,"message":"4116","line":456,"column":24,"nodeType":"4114","messageId":"4115","endLine":456,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4116","line":456,"column":45,"nodeType":"4114","messageId":"4115","endLine":456,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4116","line":460,"column":29,"nodeType":"4114","messageId":"4115","endLine":460,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":624,"column":22,"nodeType":"4114","messageId":"4115","endLine":624,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4169","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4407","line":23,"column":8,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4408","line":26,"column":8,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4101","line":31,"column":11,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4365","line":32,"column":13,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4409","line":34,"column":11,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4362","line":38,"column":12,"nodeType":"4096","messageId":"4097","endLine":38,"endColumn":17},{"ruleId":"4108","severity":1,"message":"4363","line":55,"column":8,"nodeType":"4110","endLine":55,"endColumn":10,"suggestions":"4410"},{"ruleId":"4112","severity":1,"message":"4113","line":349,"column":53,"nodeType":"4114","messageId":"4115","endLine":349,"endColumn":55},{"ruleId":"4094","severity":1,"message":"4411","line":2,"column":19,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":32},{"ruleId":"4094","severity":1,"message":"4099","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4412","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4162","line":22,"column":8,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4103","line":38,"column":10,"nodeType":"4096","messageId":"4097","endLine":38,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4107","line":42,"column":17,"nodeType":"4096","messageId":"4097","endLine":42,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4413","line":71,"column":6,"nodeType":"4110","endLine":71,"endColumn":8,"suggestions":"4414"},{"ruleId":"4112","severity":1,"message":"4113","line":96,"column":23,"nodeType":"4114","messageId":"4115","endLine":96,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":118,"column":19,"nodeType":"4114","messageId":"4115","endLine":118,"endColumn":21},{"ruleId":"4112","severity":1,"message":"4113","line":120,"column":21,"nodeType":"4114","messageId":"4115","endLine":120,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":128,"column":25,"nodeType":"4114","messageId":"4115","endLine":128,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":129,"column":25,"nodeType":"4114","messageId":"4115","endLine":129,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":143,"column":31,"nodeType":"4114","messageId":"4115","endLine":143,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":143,"column":50,"nodeType":"4114","messageId":"4115","endLine":143,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":148,"column":29,"nodeType":"4114","messageId":"4115","endLine":148,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":148,"column":46,"nodeType":"4114","messageId":"4115","endLine":148,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4116","line":158,"column":33,"nodeType":"4114","messageId":"4115","endLine":158,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":185,"column":32,"nodeType":"4114","messageId":"4115","endLine":185,"endColumn":34},{"ruleId":"4117","severity":1,"message":"4118","line":220,"column":45,"nodeType":"4119","messageId":"4120","endLine":220,"endColumn":47},{"ruleId":"4117","severity":1,"message":"4118","line":230,"column":45,"nodeType":"4119","messageId":"4120","endLine":230,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4113","line":251,"column":28,"nodeType":"4114","messageId":"4115","endLine":251,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":368,"column":32,"nodeType":"4114","messageId":"4115","endLine":368,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":383,"column":33,"nodeType":"4114","messageId":"4115","endLine":383,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":396,"column":33,"nodeType":"4114","messageId":"4115","endLine":396,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4169","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4407","line":24,"column":8,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4101","line":31,"column":11,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4365","line":32,"column":13,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4409","line":34,"column":11,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4362","line":38,"column":12,"nodeType":"4096","messageId":"4097","endLine":38,"endColumn":17},{"ruleId":"4108","severity":1,"message":"4363","line":61,"column":8,"nodeType":"4110","endLine":61,"endColumn":10,"suggestions":"4415"},{"ruleId":"4112","severity":1,"message":"4116","line":103,"column":24,"nodeType":"4114","messageId":"4115","endLine":103,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4116","line":103,"column":45,"nodeType":"4114","messageId":"4115","endLine":103,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4113","line":226,"column":38,"nodeType":"4114","messageId":"4115","endLine":226,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":418,"column":48,"nodeType":"4114","messageId":"4115","endLine":418,"endColumn":50},{"ruleId":"4184","severity":1,"message":"4185","line":506,"column":53,"nodeType":"4186","messageId":"4187","endLine":506,"endColumn":93,"fix":"4416"},{"ruleId":"4094","severity":1,"message":"4169","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4408","line":24,"column":8,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4101","line":32,"column":11,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4365","line":33,"column":13,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4409","line":35,"column":11,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4362","line":39,"column":12,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":17},{"ruleId":"4108","severity":1,"message":"4363","line":64,"column":8,"nodeType":"4110","endLine":64,"endColumn":10,"suggestions":"4417"},{"ruleId":"4112","severity":1,"message":"4116","line":106,"column":24,"nodeType":"4114","messageId":"4115","endLine":106,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4116","line":106,"column":45,"nodeType":"4114","messageId":"4115","endLine":106,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4113","line":225,"column":38,"nodeType":"4114","messageId":"4115","endLine":225,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":418,"column":48,"nodeType":"4114","messageId":"4115","endLine":418,"endColumn":50},{"ruleId":"4184","severity":1,"message":"4185","line":508,"column":53,"nodeType":"4186","messageId":"4187","endLine":508,"endColumn":93,"fix":"4418"},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4419","line":18,"column":10,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4420","line":26,"column":10,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4421","line":31,"column":9,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":29},{"ruleId":"4108","severity":1,"message":"4388","line":40,"column":6,"nodeType":"4110","endLine":40,"endColumn":8,"suggestions":"4422"},{"ruleId":"4112","severity":1,"message":"4113","line":174,"column":38,"nodeType":"4114","messageId":"4115","endLine":174,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":180,"column":42,"nodeType":"4114","messageId":"4115","endLine":180,"endColumn":44},{"ruleId":"4112","severity":1,"message":"4113","line":185,"column":46,"nodeType":"4114","messageId":"4115","endLine":185,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":305,"column":33,"nodeType":"4114","messageId":"4115","endLine":305,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4108","severity":1,"message":"4388","line":34,"column":6,"nodeType":"4110","endLine":34,"endColumn":8,"suggestions":"4423"},{"ruleId":"4112","severity":1,"message":"4113","line":152,"column":28,"nodeType":"4114","messageId":"4115","endLine":152,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":157,"column":30,"nodeType":"4114","messageId":"4115","endLine":157,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":162,"column":32,"nodeType":"4114","messageId":"4115","endLine":162,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":183,"column":30,"nodeType":"4114","messageId":"4115","endLine":183,"endColumn":32},{"ruleId":"4108","severity":1,"message":"4424","line":41,"column":6,"nodeType":"4110","endLine":41,"endColumn":8,"suggestions":"4425"},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4244","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4255","line":20,"column":25,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4101","line":21,"column":9,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4128","line":22,"column":9,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4426","line":24,"column":22,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4427","line":25,"column":5,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4428","line":25,"column":20,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4429","line":25,"column":39,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4430","line":26,"column":15,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4157","line":26,"column":28,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4431","line":26,"column":42,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":55},{"ruleId":"4094","severity":1,"message":"4432","line":57,"column":9,"nodeType":"4096","messageId":"4097","endLine":57,"endColumn":22},{"ruleId":"4112","severity":1,"message":"4113","line":90,"column":28,"nodeType":"4114","messageId":"4115","endLine":90,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":93,"column":37,"nodeType":"4114","messageId":"4115","endLine":93,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4433","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4244","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4434","line":21,"column":6,"nodeType":"4110","endLine":21,"endColumn":14,"suggestions":"4435"},{"ruleId":"4112","severity":1,"message":"4116","line":24,"column":14,"nodeType":"4114","messageId":"4115","endLine":24,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":52,"column":41,"nodeType":"4114","messageId":"4115","endLine":52,"endColumn":43},{"ruleId":"4112","severity":1,"message":"4113","line":58,"column":32,"nodeType":"4114","messageId":"4115","endLine":58,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4228","line":3,"column":3,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4229","line":4,"column":3,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4143","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4436","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4228","line":3,"column":3,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4229","line":4,"column":3,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4143","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4436","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4125","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4437","line":36,"column":7,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4326","line":11,"column":35,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4438","line":13,"column":11,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":18},{"ruleId":"4112","severity":1,"message":"4116","line":41,"column":22,"nodeType":"4114","messageId":"4115","endLine":41,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4113","line":89,"column":15,"nodeType":"4114","messageId":"4115","endLine":89,"endColumn":17},{"ruleId":"4112","severity":1,"message":"4113","line":113,"column":30,"nodeType":"4114","messageId":"4115","endLine":113,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":136,"column":33,"nodeType":"4114","messageId":"4115","endLine":136,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":158,"column":23,"nodeType":"4114","messageId":"4115","endLine":158,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":182,"column":18,"nodeType":"4114","messageId":"4115","endLine":182,"endColumn":20},{"ruleId":"4112","severity":1,"message":"4113","line":206,"column":28,"nodeType":"4114","messageId":"4115","endLine":206,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":229,"column":26,"nodeType":"4114","messageId":"4115","endLine":229,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":252,"column":26,"nodeType":"4114","messageId":"4115","endLine":252,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":276,"column":20,"nodeType":"4114","messageId":"4115","endLine":276,"endColumn":22},{"ruleId":"4112","severity":1,"message":"4113","line":299,"column":20,"nodeType":"4114","messageId":"4115","endLine":299,"endColumn":22},{"ruleId":"4112","severity":1,"message":"4113","line":318,"column":16,"nodeType":"4114","messageId":"4115","endLine":318,"endColumn":18},{"ruleId":"4112","severity":1,"message":"4113","line":337,"column":14,"nodeType":"4114","messageId":"4115","endLine":337,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":456,"column":26,"nodeType":"4114","messageId":"4115","endLine":456,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":470,"column":41,"nodeType":"4114","messageId":"4115","endLine":470,"endColumn":43},{"ruleId":"4112","severity":1,"message":"4113","line":485,"column":34,"nodeType":"4114","messageId":"4115","endLine":485,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":500,"column":29,"nodeType":"4114","messageId":"4115","endLine":500,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":514,"column":39,"nodeType":"4114","messageId":"4115","endLine":514,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":527,"column":31,"nodeType":"4114","messageId":"4115","endLine":527,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":540,"column":31,"nodeType":"4114","messageId":"4115","endLine":540,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4439","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4128","line":27,"column":7,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4440","line":49,"column":4,"nodeType":"4110","endLine":49,"endColumn":20,"suggestions":"4441"},{"ruleId":"4112","severity":1,"message":"4116","line":55,"column":21,"nodeType":"4114","messageId":"4115","endLine":55,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4116","line":60,"column":27,"nodeType":"4114","messageId":"4115","endLine":60,"endColumn":29},{"ruleId":"4112","severity":1,"message":"4113","line":67,"column":48,"nodeType":"4114","messageId":"4115","endLine":67,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":67,"column":108,"nodeType":"4114","messageId":"4115","endLine":67,"endColumn":110},{"ruleId":"4112","severity":1,"message":"4116","line":73,"column":17,"nodeType":"4114","messageId":"4115","endLine":73,"endColumn":19},{"ruleId":"4112","severity":1,"message":"4116","line":78,"column":24,"nodeType":"4114","messageId":"4115","endLine":78,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4113","line":84,"column":47,"nodeType":"4114","messageId":"4115","endLine":84,"endColumn":49},{"ruleId":"4112","severity":1,"message":"4113","line":84,"column":107,"nodeType":"4114","messageId":"4115","endLine":84,"endColumn":109},{"ruleId":"4112","severity":1,"message":"4116","line":93,"column":18,"nodeType":"4114","messageId":"4115","endLine":93,"endColumn":20},{"ruleId":"4112","severity":1,"message":"4116","line":98,"column":26,"nodeType":"4114","messageId":"4115","endLine":98,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":104,"column":48,"nodeType":"4114","messageId":"4115","endLine":104,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":104,"column":108,"nodeType":"4114","messageId":"4115","endLine":104,"endColumn":110},{"ruleId":"4442","severity":1,"message":"4443","line":137,"column":15,"nodeType":"4186","endLine":137,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4245","line":8,"column":11,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4326","line":9,"column":35,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4444","line":23,"column":10,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4445","line":24,"column":10,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4446","line":24,"column":16,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4246","line":25,"column":10,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4447","line":26,"column":10,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4448","line":31,"column":10,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":14},{"ruleId":"4112","severity":1,"message":"4113","line":50,"column":16,"nodeType":"4114","messageId":"4115","endLine":50,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":5,"column":38,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":5,"column":49,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":5,"column":54,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4362","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4365","line":20,"column":12,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4449","line":23,"column":11,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":22},{"ruleId":"4108","severity":1,"message":"4450","line":37,"column":8,"nodeType":"4110","endLine":37,"endColumn":10,"suggestions":"4451"},{"ruleId":"4112","severity":1,"message":"4113","line":187,"column":44,"nodeType":"4114","messageId":"4115","endLine":187,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":249,"column":50,"nodeType":"4114","messageId":"4115","endLine":249,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":260,"column":53,"nodeType":"4114","messageId":"4115","endLine":260,"endColumn":55},{"ruleId":"4184","severity":1,"message":"4185","line":276,"column":37,"nodeType":"4186","messageId":"4187","endLine":279,"endColumn":38,"fix":"4452"},{"ruleId":"4112","severity":1,"message":"4113","line":293,"column":48,"nodeType":"4114","messageId":"4115","endLine":293,"endColumn":50},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":5,"column":38,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":5,"column":49,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":5,"column":54,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4362","line":18,"column":12,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4365","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4449","line":22,"column":11,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":22},{"ruleId":"4108","severity":1,"message":"4450","line":37,"column":8,"nodeType":"4110","endLine":37,"endColumn":10,"suggestions":"4453"},{"ruleId":"4112","severity":1,"message":"4113","line":187,"column":44,"nodeType":"4114","messageId":"4115","endLine":187,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":248,"column":50,"nodeType":"4114","messageId":"4115","endLine":248,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":259,"column":53,"nodeType":"4114","messageId":"4115","endLine":259,"endColumn":55},{"ruleId":"4112","severity":1,"message":"4113","line":272,"column":71,"nodeType":"4114","messageId":"4115","endLine":272,"endColumn":73},{"ruleId":"4184","severity":1,"message":"4185","line":275,"column":37,"nodeType":"4186","messageId":"4187","endLine":278,"endColumn":38,"fix":"4454"},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":5,"column":38,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":5,"column":49,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":5,"column":54,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4362","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":17},{"ruleId":"4108","severity":1,"message":"4450","line":37,"column":8,"nodeType":"4110","endLine":37,"endColumn":10,"suggestions":"4455"},{"ruleId":"4112","severity":1,"message":"4113","line":187,"column":44,"nodeType":"4114","messageId":"4115","endLine":187,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":193,"column":48,"nodeType":"4114","messageId":"4115","endLine":193,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":198,"column":52,"nodeType":"4114","messageId":"4115","endLine":198,"endColumn":54},{"ruleId":"4112","severity":1,"message":"4113","line":261,"column":50,"nodeType":"4114","messageId":"4115","endLine":261,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":272,"column":53,"nodeType":"4114","messageId":"4115","endLine":272,"endColumn":55},{"ruleId":"4112","severity":1,"message":"4116","line":272,"column":76,"nodeType":"4114","messageId":"4115","endLine":272,"endColumn":78},{"ruleId":"4112","severity":1,"message":"4113","line":290,"column":48,"nodeType":"4114","messageId":"4115","endLine":290,"endColumn":50},{"ruleId":"4184","severity":1,"message":"4185","line":322,"column":37,"nodeType":"4186","messageId":"4187","endLine":325,"endColumn":38,"fix":"4456"},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":5,"column":38,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":5,"column":49,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":5,"column":54,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4457","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4362","line":21,"column":12,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4458","line":25,"column":12,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4459","line":25,"column":17,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4460","line":26,"column":12,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4461","line":26,"column":17,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":23},{"ruleId":"4108","severity":1,"message":"4450","line":47,"column":8,"nodeType":"4110","endLine":47,"endColumn":10,"suggestions":"4462"},{"ruleId":"4112","severity":1,"message":"4113","line":195,"column":44,"nodeType":"4114","messageId":"4115","endLine":195,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":203,"column":48,"nodeType":"4114","messageId":"4115","endLine":203,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":207,"column":52,"nodeType":"4114","messageId":"4115","endLine":207,"endColumn":54},{"ruleId":"4112","severity":1,"message":"4113","line":268,"column":50,"nodeType":"4114","messageId":"4115","endLine":268,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":279,"column":53,"nodeType":"4114","messageId":"4115","endLine":279,"endColumn":55},{"ruleId":"4112","severity":1,"message":"4116","line":279,"column":74,"nodeType":"4114","messageId":"4115","endLine":279,"endColumn":76},{"ruleId":"4112","severity":1,"message":"4113","line":292,"column":71,"nodeType":"4114","messageId":"4115","endLine":292,"endColumn":73},{"ruleId":"4184","severity":1,"message":"4185","line":296,"column":37,"nodeType":"4186","messageId":"4187","endLine":299,"endColumn":38,"fix":"4463"},{"ruleId":"4112","severity":1,"message":"4113","line":316,"column":48,"nodeType":"4114","messageId":"4115","endLine":316,"endColumn":50},{"ruleId":"4258","severity":1,"message":"4297","line":410,"column":1,"nodeType":"4260","messageId":"4298","endLine":420,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4228","line":3,"column":3,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4229","line":4,"column":3,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4143","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4436","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":29},{"ruleId":"4112","severity":1,"message":"4116","line":44,"column":22,"nodeType":"4114","messageId":"4115","endLine":44,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4113","line":64,"column":32,"nodeType":"4114","messageId":"4115","endLine":64,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4464","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4125","line":2,"column":22,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4465","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4466","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4467","line":8,"column":8,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4192","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4326","line":9,"column":35,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4245","line":10,"column":11,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4390","line":10,"column":19,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4444","line":12,"column":10,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4468","line":12,"column":24,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":30,"column":16,"nodeType":"4114","messageId":"4115","endLine":30,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4125","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4373","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4374","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4174","line":27,"column":8,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4375","line":48,"column":9,"nodeType":"4096","messageId":"4097","endLine":48,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4469","line":51,"column":10,"nodeType":"4096","messageId":"4097","endLine":51,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4376","line":57,"column":20,"nodeType":"4096","messageId":"4097","endLine":57,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4377","line":58,"column":21,"nodeType":"4096","messageId":"4097","endLine":58,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4378","line":59,"column":24,"nodeType":"4096","messageId":"4097","endLine":59,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4470","line":60,"column":25,"nodeType":"4096","messageId":"4097","endLine":60,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4379","line":61,"column":24,"nodeType":"4096","messageId":"4097","endLine":61,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4380","line":70,"column":23,"nodeType":"4096","messageId":"4097","endLine":70,"endColumn":37},{"ruleId":"4108","severity":1,"message":"4471","line":76,"column":6,"nodeType":"4110","endLine":76,"endColumn":8,"suggestions":"4472"},{"ruleId":"4214","severity":1,"message":"4383","line":402,"column":17,"nodeType":"4096","messageId":"4216","endLine":402,"endColumn":20},{"ruleId":"4117","severity":1,"message":"4142","line":416,"column":26,"nodeType":"4119","messageId":"4120","endLine":416,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":417,"column":21,"nodeType":"4114","messageId":"4115","endLine":417,"endColumn":23},{"ruleId":"4214","severity":1,"message":"4384","line":425,"column":13,"nodeType":"4096","messageId":"4216","endLine":425,"endColumn":21},{"ruleId":"4370","severity":1,"message":"4371","line":23,"column":1,"nodeType":"4372","endLine":29,"endColumn":3},{"ruleId":"4094","severity":1,"message":"4326","line":11,"column":27,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4102","line":11,"column":35,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4099","line":8,"column":5,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4433","line":17,"column":10,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4473","line":19,"column":10,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4474","line":33,"column":12,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":24},{"ruleId":"4184","severity":1,"message":"4185","line":425,"column":53,"nodeType":"4186","messageId":"4187","endLine":425,"endColumn":93,"fix":"4475"},{"ruleId":"4094","severity":1,"message":"4099","line":8,"column":5,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4433","line":17,"column":10,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4473","line":19,"column":10,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4474","line":32,"column":12,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4113","line":188,"column":38,"nodeType":"4114","messageId":"4115","endLine":188,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":315,"column":42,"nodeType":"4114","messageId":"4115","endLine":315,"endColumn":44},{"ruleId":"4094","severity":1,"message":"4433","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4244","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4434","line":21,"column":6,"nodeType":"4110","endLine":21,"endColumn":14,"suggestions":"4476"},{"ruleId":"4112","severity":1,"message":"4116","line":25,"column":13,"nodeType":"4114","messageId":"4115","endLine":25,"endColumn":15},{"ruleId":"4112","severity":1,"message":"4113","line":54,"column":41,"nodeType":"4114","messageId":"4115","endLine":54,"endColumn":43},{"ruleId":"4112","severity":1,"message":"4113","line":60,"column":32,"nodeType":"4114","messageId":"4115","endLine":60,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4144","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4102","line":25,"column":35,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4326","line":9,"column":35,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4477","line":25,"column":5,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":15},{"ruleId":"4112","severity":1,"message":"4116","line":44,"column":29,"nodeType":"4114","messageId":"4115","endLine":44,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":94,"column":18,"nodeType":"4114","messageId":"4115","endLine":94,"endColumn":20},{"ruleId":"4112","severity":1,"message":"4113","line":113,"column":30,"nodeType":"4114","messageId":"4115","endLine":113,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":133,"column":25,"nodeType":"4114","messageId":"4115","endLine":133,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":151,"column":23,"nodeType":"4114","messageId":"4115","endLine":151,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":167,"column":28,"nodeType":"4114","messageId":"4115","endLine":167,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":186,"column":21,"nodeType":"4114","messageId":"4115","endLine":186,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":205,"column":28,"nodeType":"4114","messageId":"4115","endLine":205,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":224,"column":17,"nodeType":"4114","messageId":"4115","endLine":224,"endColumn":19},{"ruleId":"4112","severity":1,"message":"4113","line":242,"column":20,"nodeType":"4114","messageId":"4115","endLine":242,"endColumn":22},{"ruleId":"4112","severity":1,"message":"4113","line":260,"column":16,"nodeType":"4114","messageId":"4115","endLine":260,"endColumn":18},{"ruleId":"4112","severity":1,"message":"4113","line":278,"column":14,"nodeType":"4114","messageId":"4115","endLine":278,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":398,"column":29,"nodeType":"4114","messageId":"4115","endLine":398,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":412,"column":36,"nodeType":"4114","messageId":"4115","endLine":412,"endColumn":38},{"ruleId":"4112","severity":1,"message":"4113","line":428,"column":34,"nodeType":"4114","messageId":"4115","endLine":428,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":441,"column":32,"nodeType":"4114","messageId":"4115","endLine":441,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":455,"column":39,"nodeType":"4114","messageId":"4115","endLine":455,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":468,"column":31,"nodeType":"4114","messageId":"4115","endLine":468,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4102","line":23,"column":35,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4228","line":3,"column":3,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4229","line":4,"column":3,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4143","line":5,"column":3,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4436","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4385","line":4,"column":41,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":52},{"ruleId":"4108","severity":1,"message":"4478","line":12,"column":6,"nodeType":"4110","endLine":12,"endColumn":11,"suggestions":"4479"},{"ruleId":"4094","severity":1,"message":"4480","line":10,"column":39,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":53},{"ruleId":"4094","severity":1,"message":"4128","line":12,"column":9,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":16},{"ruleId":"4442","severity":1,"message":"4481","line":26,"column":17,"nodeType":"4186","endLine":29,"endColumn":18},{"ruleId":"4112","severity":1,"message":"4113","line":57,"column":57,"nodeType":"4114","messageId":"4115","endLine":57,"endColumn":59},{"ruleId":"4112","severity":1,"message":"4113","line":64,"column":21,"nodeType":"4114","messageId":"4115","endLine":64,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":68,"column":21,"nodeType":"4114","messageId":"4115","endLine":68,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":72,"column":21,"nodeType":"4114","messageId":"4115","endLine":72,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":75,"column":22,"nodeType":"4114","messageId":"4115","endLine":75,"endColumn":24},{"ruleId":"4442","severity":1,"message":"4481","line":81,"column":17,"nodeType":"4186","endLine":86,"endColumn":18},{"ruleId":"4112","severity":1,"message":"4113","line":99,"column":27,"nodeType":"4114","messageId":"4115","endLine":99,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4386","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4100","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4122","line":12,"column":5,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4482","line":18,"column":8,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":22},{"ruleId":"4108","severity":1,"message":"4302","line":39,"column":8,"nodeType":"4110","endLine":39,"endColumn":10,"suggestions":"4483"},{"ruleId":"4094","severity":1,"message":"4170","line":10,"column":11,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":17},{"ruleId":"4184","severity":1,"message":"4185","line":61,"column":45,"nodeType":"4186","messageId":"4187","endLine":64,"endColumn":46,"fix":"4484"},{"ruleId":"4112","severity":1,"message":"4113","line":33,"column":33,"nodeType":"4114","messageId":"4115","endLine":33,"endColumn":35},{"ruleId":"4184","severity":1,"message":"4185","line":37,"column":23,"nodeType":"4186","messageId":"4187","endLine":40,"endColumn":24,"fix":"4485"},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4101","line":15,"column":9,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4486","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4487","line":13,"column":11,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4488","line":15,"column":9,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4489","line":20,"column":9,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":19},{"ruleId":"4112","severity":1,"message":"4113","line":95,"column":38,"nodeType":"4114","messageId":"4115","endLine":95,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":96,"column":37,"nodeType":"4114","messageId":"4115","endLine":96,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":97,"column":34,"nodeType":"4114","messageId":"4115","endLine":97,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":98,"column":38,"nodeType":"4114","messageId":"4115","endLine":98,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":112,"column":38,"nodeType":"4114","messageId":"4115","endLine":112,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":112,"column":86,"nodeType":"4114","messageId":"4115","endLine":112,"endColumn":88},{"ruleId":"4184","severity":1,"message":"4185","line":116,"column":27,"nodeType":"4186","messageId":"4187","endLine":119,"endColumn":28,"fix":"4490"},{"ruleId":"4112","severity":1,"message":"4113","line":124,"column":42,"nodeType":"4114","messageId":"4115","endLine":124,"endColumn":44},{"ruleId":"4491","severity":1,"message":"4492","line":124,"column":74,"nodeType":"4493","messageId":"4494","endLine":124,"endColumn":76},{"ruleId":"4491","severity":1,"message":"4492","line":124,"column":92,"nodeType":"4493","messageId":"4494","endLine":124,"endColumn":94},{"ruleId":"4491","severity":1,"message":"4495","line":124,"column":92,"nodeType":"4493","messageId":"4494","endLine":124,"endColumn":94},{"ruleId":"4112","severity":1,"message":"4113","line":124,"column":109,"nodeType":"4114","messageId":"4115","endLine":124,"endColumn":111},{"ruleId":"4491","severity":1,"message":"4495","line":124,"column":141,"nodeType":"4493","messageId":"4494","endLine":124,"endColumn":143},{"ruleId":"4491","severity":1,"message":"4495","line":124,"column":159,"nodeType":"4493","messageId":"4494","endLine":124,"endColumn":161},{"ruleId":"4491","severity":1,"message":"4495","line":124,"column":186,"nodeType":"4493","messageId":"4494","endLine":124,"endColumn":188},{"ruleId":"4112","severity":1,"message":"4113","line":127,"column":37,"nodeType":"4114","messageId":"4115","endLine":127,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4496","line":37,"column":11,"nodeType":"4096","messageId":"4097","endLine":37,"endColumn":17},{"ruleId":"4112","severity":1,"message":"4113","line":153,"column":29,"nodeType":"4114","messageId":"4115","endLine":153,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":188,"column":35,"nodeType":"4114","messageId":"4115","endLine":188,"endColumn":37},{"ruleId":"4112","severity":1,"message":"4113","line":191,"column":37,"nodeType":"4114","messageId":"4115","endLine":191,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":194,"column":39,"nodeType":"4114","messageId":"4115","endLine":194,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":210,"column":31,"nodeType":"4114","messageId":"4115","endLine":210,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":224,"column":33,"nodeType":"4114","messageId":"4115","endLine":224,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":254,"column":33,"nodeType":"4114","messageId":"4115","endLine":254,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":255,"column":33,"nodeType":"4114","messageId":"4115","endLine":255,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":256,"column":34,"nodeType":"4114","messageId":"4115","endLine":256,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":279,"column":33,"nodeType":"4114","messageId":"4115","endLine":279,"endColumn":35},{"ruleId":"4184","severity":1,"message":"4185","line":285,"column":21,"nodeType":"4186","messageId":"4187","endLine":285,"endColumn":76,"fix":"4497"},{"ruleId":"4112","severity":1,"message":"4113","line":288,"column":33,"nodeType":"4114","messageId":"4115","endLine":288,"endColumn":35},{"ruleId":"4184","severity":1,"message":"4185","line":291,"column":23,"nodeType":"4186","messageId":"4187","endLine":291,"endColumn":64,"fix":"4498"},{"ruleId":"4112","severity":1,"message":"4113","line":318,"column":29,"nodeType":"4114","messageId":"4115","endLine":318,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":332,"column":30,"nodeType":"4114","messageId":"4115","endLine":332,"endColumn":32},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4184","severity":1,"message":"4185","line":73,"column":21,"nodeType":"4186","messageId":"4187","endLine":76,"endColumn":22,"fix":"4499"},{"ruleId":"4112","severity":1,"message":"4113","line":119,"column":22,"nodeType":"4114","messageId":"4115","endLine":119,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4113","line":119,"column":45,"nodeType":"4114","messageId":"4115","endLine":119,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4113","line":122,"column":28,"nodeType":"4114","messageId":"4115","endLine":122,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":122,"column":51,"nodeType":"4114","messageId":"4115","endLine":122,"endColumn":53},{"ruleId":"4112","severity":1,"message":"4113","line":125,"column":30,"nodeType":"4114","messageId":"4115","endLine":125,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":137,"column":27,"nodeType":"4114","messageId":"4115","endLine":137,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4433","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4244","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4434","line":21,"column":6,"nodeType":"4110","endLine":21,"endColumn":14,"suggestions":"4500"},{"ruleId":"4112","severity":1,"message":"4116","line":26,"column":17,"nodeType":"4114","messageId":"4115","endLine":26,"endColumn":19},{"ruleId":"4112","severity":1,"message":"4113","line":55,"column":41,"nodeType":"4114","messageId":"4115","endLine":55,"endColumn":43},{"ruleId":"4112","severity":1,"message":"4113","line":61,"column":32,"nodeType":"4114","messageId":"4115","endLine":61,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4326","line":9,"column":35,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4438","line":12,"column":5,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4477","line":23,"column":5,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":15},{"ruleId":"4112","severity":1,"message":"4116","line":42,"column":23,"nodeType":"4114","messageId":"4115","endLine":42,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":94,"column":26,"nodeType":"4114","messageId":"4115","endLine":94,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":110,"column":33,"nodeType":"4114","messageId":"4115","endLine":110,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":126,"column":26,"nodeType":"4114","messageId":"4115","endLine":126,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":142,"column":25,"nodeType":"4114","messageId":"4115","endLine":142,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":158,"column":28,"nodeType":"4114","messageId":"4115","endLine":158,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":174,"column":20,"nodeType":"4114","messageId":"4115","endLine":174,"endColumn":22},{"ruleId":"4112","severity":1,"message":"4113","line":190,"column":26,"nodeType":"4114","messageId":"4115","endLine":190,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":206,"column":20,"nodeType":"4114","messageId":"4115","endLine":206,"endColumn":22},{"ruleId":"4112","severity":1,"message":"4113","line":222,"column":16,"nodeType":"4114","messageId":"4115","endLine":222,"endColumn":18},{"ruleId":"4112","severity":1,"message":"4113","line":238,"column":14,"nodeType":"4114","messageId":"4115","endLine":238,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":254,"column":21,"nodeType":"4114","messageId":"4115","endLine":254,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":367,"column":31,"nodeType":"4114","messageId":"4115","endLine":367,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":382,"column":44,"nodeType":"4114","messageId":"4115","endLine":382,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":395,"column":39,"nodeType":"4114","messageId":"4115","endLine":395,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":408,"column":32,"nodeType":"4114","messageId":"4115","endLine":408,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":422,"column":36,"nodeType":"4114","messageId":"4115","endLine":422,"endColumn":38},{"ruleId":"4112","severity":1,"message":"4113","line":437,"column":31,"nodeType":"4114","messageId":"4115","endLine":437,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4501","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4502","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4503","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4504","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4505","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4506","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4385","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4122","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4507","line":20,"column":17,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":20},{"ruleId":"4508","severity":1,"message":"4509","line":122,"column":153,"nodeType":"4114","messageId":"4510","endLine":122,"endColumn":154},{"ruleId":"4508","severity":1,"message":"4509","line":122,"column":156,"nodeType":"4114","messageId":"4510","endLine":122,"endColumn":157},{"ruleId":"4305","severity":1,"message":"4306","line":123,"column":33,"nodeType":"4307","messageId":"4308","endLine":123,"endColumn":34,"fix":"4511"},{"ruleId":"4117","severity":1,"message":"4118","line":197,"column":47,"nodeType":"4119","messageId":"4120","endLine":197,"endColumn":49},{"ruleId":"4117","severity":1,"message":"4118","line":230,"column":47,"nodeType":"4119","messageId":"4120","endLine":230,"endColumn":49},{"ruleId":"4094","severity":1,"message":"4512","line":232,"column":13,"nodeType":"4096","messageId":"4097","endLine":232,"endColumn":17},{"ruleId":"4117","severity":1,"message":"4118","line":349,"column":45,"nodeType":"4119","messageId":"4120","endLine":349,"endColumn":47},{"ruleId":"4117","severity":1,"message":"4118","line":433,"column":20,"nodeType":"4119","messageId":"4120","endLine":433,"endColumn":22},{"ruleId":"4513","severity":1,"message":"4514","line":481,"column":7,"nodeType":"4307","messageId":"4515","endLine":481,"endColumn":17},{"ruleId":"4513","severity":1,"message":"4514","line":484,"column":7,"nodeType":"4307","messageId":"4515","endLine":484,"endColumn":17},{"ruleId":"4112","severity":1,"message":"4113","line":682,"column":33,"nodeType":"4114","messageId":"4115","endLine":682,"endColumn":35},{"ruleId":"4516","severity":1,"message":"4517","line":684,"column":8,"nodeType":"4096","messageId":"4518","endLine":684,"endColumn":18},{"ruleId":"4112","severity":1,"message":"4113","line":833,"column":29,"nodeType":"4114","messageId":"4115","endLine":833,"endColumn":31},{"ruleId":"4519","severity":1,"message":"4520","line":835,"column":6,"nodeType":"4186","endLine":835,"endColumn":55},{"ruleId":"4108","severity":1,"message":"4478","line":18,"column":8,"nodeType":"4110","endLine":18,"endColumn":18,"suggestions":"4521"},{"ruleId":"4112","severity":1,"message":"4116","line":27,"column":42,"nodeType":"4114","messageId":"4115","endLine":27,"endColumn":44},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4122","line":2,"column":54,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":60},{"ruleId":"4094","severity":1,"message":"4192","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4244","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4326","line":18,"column":37,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":43},{"ruleId":"4094","severity":1,"message":"4522","line":23,"column":38,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":43},{"ruleId":"4112","severity":1,"message":"4116","line":33,"column":30,"nodeType":"4114","messageId":"4115","endLine":33,"endColumn":32},{"ruleId":"4094","severity":1,"message":"4523","line":39,"column":25,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4524","line":41,"column":13,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4525","line":1,"column":10,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4148","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4101","line":12,"column":9,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":13,"column":35,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4122","line":2,"column":54,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":60},{"ruleId":"4094","severity":1,"message":"4433","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4526","line":14,"column":7,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":13},{"ruleId":"4108","severity":1,"message":"4527","line":87,"column":6,"nodeType":"4110","endLine":87,"endColumn":14,"suggestions":"4528"},{"ruleId":"4184","severity":1,"message":"4185","line":147,"column":27,"nodeType":"4186","messageId":"4187","endLine":150,"endColumn":28,"fix":"4529"},{"ruleId":"4184","severity":1,"message":"4185","line":160,"column":23,"nodeType":"4186","messageId":"4187","endLine":163,"endColumn":28,"fix":"4530"},{"ruleId":"4112","severity":1,"message":"4113","line":170,"column":41,"nodeType":"4114","messageId":"4115","endLine":170,"endColumn":43},{"ruleId":"4491","severity":1,"message":"4492","line":170,"column":46,"nodeType":"4493","messageId":"4494","endLine":170,"endColumn":48},{"ruleId":"4491","severity":1,"message":"4492","line":170,"column":64,"nodeType":"4493","messageId":"4494","endLine":170,"endColumn":66},{"ruleId":"4491","severity":1,"message":"4495","line":170,"column":64,"nodeType":"4493","messageId":"4494","endLine":170,"endColumn":66},{"ruleId":"4112","severity":1,"message":"4113","line":170,"column":81,"nodeType":"4114","messageId":"4115","endLine":170,"endColumn":83},{"ruleId":"4491","severity":1,"message":"4495","line":170,"column":86,"nodeType":"4493","messageId":"4494","endLine":170,"endColumn":88},{"ruleId":"4112","severity":1,"message":"4113","line":176,"column":39,"nodeType":"4114","messageId":"4115","endLine":176,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":179,"column":40,"nodeType":"4114","messageId":"4115","endLine":179,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":182,"column":42,"nodeType":"4114","messageId":"4115","endLine":182,"endColumn":44},{"ruleId":"4112","severity":1,"message":"4113","line":193,"column":44,"nodeType":"4114","messageId":"4115","endLine":193,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":221,"column":46,"nodeType":"4114","messageId":"4115","endLine":221,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4101","line":14,"column":9,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":15,"column":35,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4099","line":8,"column":5,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4433","line":17,"column":10,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4473","line":19,"column":10,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4474","line":33,"column":12,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4113","line":195,"column":38,"nodeType":"4114","messageId":"4115","endLine":195,"endColumn":40},{"ruleId":"4184","severity":1,"message":"4185","line":435,"column":53,"nodeType":"4186","messageId":"4187","endLine":435,"endColumn":93,"fix":"4531"},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4532","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4288","line":26,"column":9,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4326","line":29,"column":35,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4390","line":30,"column":19,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4533","line":31,"column":10,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4398","line":35,"column":10,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4395","line":114,"column":9,"nodeType":"4096","messageId":"4097","endLine":114,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":255,"column":40,"nodeType":"4114","messageId":"4115","endLine":255,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":273,"column":31,"nodeType":"4114","messageId":"4115","endLine":273,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4116","line":358,"column":24,"nodeType":"4114","messageId":"4115","endLine":358,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4116","line":358,"column":45,"nodeType":"4114","messageId":"4115","endLine":358,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4116","line":362,"column":29,"nodeType":"4114","messageId":"4115","endLine":362,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4532","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4288","line":26,"column":9,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4326","line":29,"column":35,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4390","line":30,"column":19,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4533","line":31,"column":10,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4398","line":35,"column":10,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4395","line":114,"column":9,"nodeType":"4096","messageId":"4097","endLine":114,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":256,"column":40,"nodeType":"4114","messageId":"4115","endLine":256,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":274,"column":31,"nodeType":"4114","messageId":"4115","endLine":274,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4116","line":359,"column":24,"nodeType":"4114","messageId":"4115","endLine":359,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4116","line":359,"column":45,"nodeType":"4114","messageId":"4115","endLine":359,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4116","line":363,"column":29,"nodeType":"4114","messageId":"4115","endLine":363,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4532","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4288","line":27,"column":9,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4326","line":30,"column":35,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4390","line":31,"column":19,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4533","line":32,"column":10,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4534","line":60,"column":10,"nodeType":"4096","messageId":"4097","endLine":60,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4535","line":62,"column":9,"nodeType":"4096","messageId":"4097","endLine":62,"endColumn":20},{"ruleId":"4112","severity":1,"message":"4113","line":215,"column":32,"nodeType":"4114","messageId":"4115","endLine":215,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":272,"column":40,"nodeType":"4114","messageId":"4115","endLine":272,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":289,"column":31,"nodeType":"4114","messageId":"4115","endLine":289,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4116","line":372,"column":24,"nodeType":"4114","messageId":"4115","endLine":372,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4116","line":372,"column":45,"nodeType":"4114","messageId":"4115","endLine":372,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4113","line":511,"column":22,"nodeType":"4114","messageId":"4115","endLine":511,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4536","line":1,"column":38,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4537","line":14,"column":10,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":19},{"ruleId":"4108","severity":1,"message":"4538","line":33,"column":6,"nodeType":"4110","endLine":33,"endColumn":21,"suggestions":"4539"},{"ruleId":"4112","severity":1,"message":"4113","line":133,"column":28,"nodeType":"4114","messageId":"4115","endLine":133,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":139,"column":30,"nodeType":"4114","messageId":"4115","endLine":139,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":144,"column":32,"nodeType":"4114","messageId":"4115","endLine":144,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":164,"column":24,"nodeType":"4114","messageId":"4115","endLine":164,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4116","line":225,"column":26,"nodeType":"4114","messageId":"4115","endLine":225,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4099","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4433","line":13,"column":10,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4473","line":15,"column":10,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4419","line":16,"column":16,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":129,"column":28,"nodeType":"4114","messageId":"4115","endLine":129,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":134,"column":30,"nodeType":"4114","messageId":"4115","endLine":134,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":138,"column":32,"nodeType":"4114","messageId":"4115","endLine":138,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4254","line":28,"column":11,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4255","line":28,"column":25,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4326","line":28,"column":35,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4102","line":28,"column":43,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4245","line":29,"column":11,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4390","line":29,"column":19,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4444","line":32,"column":10,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4468","line":32,"column":24,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":144,"column":28,"nodeType":"4114","messageId":"4115","endLine":144,"endColumn":30},{"ruleId":"4094","severity":1,"message":"4419","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4464","line":5,"column":21,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4503","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4505","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4506","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4385","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4122","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4433","line":20,"column":10,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4473","line":22,"column":10,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4162","line":26,"column":8,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4444","line":33,"column":10,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4468","line":33,"column":24,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":164,"column":28,"nodeType":"4114","messageId":"4115","endLine":164,"endColumn":30},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4102","line":24,"column":35,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4433","line":13,"column":10,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4473","line":15,"column":10,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":182,"column":28,"nodeType":"4114","messageId":"4115","endLine":182,"endColumn":30},{"ruleId":"4184","severity":1,"message":"4185","line":256,"column":19,"nodeType":"4186","messageId":"4187","endLine":259,"endColumn":20,"fix":"4540"},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4433","line":13,"column":10,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4473","line":15,"column":10,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":183,"column":28,"nodeType":"4114","messageId":"4115","endLine":183,"endColumn":30},{"ruleId":"4184","severity":1,"message":"4185","line":258,"column":19,"nodeType":"4186","messageId":"4187","endLine":261,"endColumn":20,"fix":"4541"},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4433","line":13,"column":10,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4473","line":15,"column":10,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":180,"column":28,"nodeType":"4114","messageId":"4115","endLine":180,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":251,"column":55,"nodeType":"4114","messageId":"4115","endLine":251,"endColumn":57},{"ruleId":"4184","severity":1,"message":"4185","line":253,"column":19,"nodeType":"4186","messageId":"4187","endLine":256,"endColumn":20,"fix":"4542"},{"ruleId":"4094","severity":1,"message":"4099","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4543","line":14,"column":16,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":189,"column":28,"nodeType":"4114","messageId":"4115","endLine":189,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":197,"column":30,"nodeType":"4114","messageId":"4115","endLine":197,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":201,"column":32,"nodeType":"4114","messageId":"4115","endLine":201,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":272,"column":55,"nodeType":"4114","messageId":"4115","endLine":272,"endColumn":57},{"ruleId":"4184","severity":1,"message":"4185","line":274,"column":19,"nodeType":"4186","messageId":"4187","endLine":277,"endColumn":20,"fix":"4544"},{"ruleId":"4112","severity":1,"message":"4113","line":65,"column":32,"nodeType":"4114","messageId":"4115","endLine":65,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4128","line":17,"column":9,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4258","severity":1,"message":"4297","line":70,"column":1,"nodeType":"4260","messageId":"4298","endLine":79,"endColumn":2},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4433","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4526","line":10,"column":7,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4545","line":28,"column":7,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":16},{"ruleId":"4108","severity":1,"message":"4527","line":35,"column":6,"nodeType":"4110","endLine":35,"endColumn":14,"suggestions":"4546"},{"ruleId":"4184","severity":1,"message":"4185","line":96,"column":27,"nodeType":"4186","messageId":"4187","endLine":99,"endColumn":28,"fix":"4547"},{"ruleId":"4184","severity":1,"message":"4185","line":109,"column":23,"nodeType":"4186","messageId":"4187","endLine":112,"endColumn":28,"fix":"4548"},{"ruleId":"4112","severity":1,"message":"4113","line":123,"column":41,"nodeType":"4114","messageId":"4115","endLine":123,"endColumn":43},{"ruleId":"4491","severity":1,"message":"4492","line":123,"column":46,"nodeType":"4493","messageId":"4494","endLine":123,"endColumn":48},{"ruleId":"4491","severity":1,"message":"4492","line":123,"column":64,"nodeType":"4493","messageId":"4494","endLine":123,"endColumn":66},{"ruleId":"4491","severity":1,"message":"4495","line":123,"column":64,"nodeType":"4493","messageId":"4494","endLine":123,"endColumn":66},{"ruleId":"4112","severity":1,"message":"4113","line":123,"column":81,"nodeType":"4114","messageId":"4115","endLine":123,"endColumn":83},{"ruleId":"4491","severity":1,"message":"4495","line":123,"column":86,"nodeType":"4493","messageId":"4494","endLine":123,"endColumn":88},{"ruleId":"4112","severity":1,"message":"4113","line":130,"column":39,"nodeType":"4114","messageId":"4115","endLine":130,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":133,"column":40,"nodeType":"4114","messageId":"4115","endLine":133,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":136,"column":42,"nodeType":"4114","messageId":"4115","endLine":136,"endColumn":44},{"ruleId":"4112","severity":1,"message":"4113","line":147,"column":44,"nodeType":"4114","messageId":"4115","endLine":147,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":175,"column":46,"nodeType":"4114","messageId":"4115","endLine":175,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4549","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4125","line":25,"column":10,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4469","line":33,"column":10,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4550","line":34,"column":10,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4376","line":37,"column":20,"nodeType":"4096","messageId":"4097","endLine":37,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4377","line":38,"column":21,"nodeType":"4096","messageId":"4097","endLine":38,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4378","line":39,"column":24,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4379","line":40,"column":24,"nodeType":"4096","messageId":"4097","endLine":40,"endColumn":39},{"ruleId":"4108","severity":1,"message":"4381","line":56,"column":6,"nodeType":"4110","endLine":56,"endColumn":8,"suggestions":"4551"},{"ruleId":"4094","severity":1,"message":"4552","line":259,"column":9,"nodeType":"4096","messageId":"4097","endLine":259,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4326","line":12,"column":27,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4102","line":12,"column":35,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4326","line":11,"column":27,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4102","line":11,"column":35,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4553","severity":1,"message":"4554","line":17,"column":11,"nodeType":"4186","endLine":18,"endColumn":42},{"ruleId":"4094","severity":1,"message":"4401","line":2,"column":13,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":20},{"ruleId":"4442","severity":1,"message":"4443","line":65,"column":15,"nodeType":"4186","endLine":68,"endColumn":16},{"ruleId":"4258","severity":1,"message":"4297","line":108,"column":1,"nodeType":"4260","messageId":"4298","endLine":110,"endColumn":2},{"ruleId":"4258","severity":1,"message":"4297","line":124,"column":1,"nodeType":"4260","messageId":"4298","endLine":156,"endColumn":2},{"ruleId":"4258","severity":1,"message":"4297","line":157,"column":1,"nodeType":"4260","messageId":"4298","endLine":173,"endColumn":2},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4555","line":4,"column":19,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":5,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4401","line":17,"column":13,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4556","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4557","line":20,"column":8,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4558","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4244","line":25,"column":8,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4559","line":26,"column":8,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4128","line":32,"column":11,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4101","line":33,"column":11,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4533","line":36,"column":12,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":27},{"ruleId":"4108","severity":1,"message":"4560","line":60,"column":8,"nodeType":"4110","endLine":60,"endColumn":10,"suggestions":"4561"},{"ruleId":"4112","severity":1,"message":"4113","line":157,"column":38,"nodeType":"4114","messageId":"4115","endLine":157,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":213,"column":48,"nodeType":"4114","messageId":"4115","endLine":213,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":231,"column":14,"nodeType":"4114","messageId":"4115","endLine":231,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":231,"column":55,"nodeType":"4114","messageId":"4115","endLine":231,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4555","line":4,"column":19,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4401","line":17,"column":13,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4556","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4557","line":20,"column":8,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4558","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4559","line":26,"column":8,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4128","line":32,"column":9,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4101","line":33,"column":9,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4533","line":36,"column":10,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4560","line":60,"column":6,"nodeType":"4110","endLine":60,"endColumn":8,"suggestions":"4562"},{"ruleId":"4112","severity":1,"message":"4113","line":157,"column":32,"nodeType":"4114","messageId":"4115","endLine":157,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":213,"column":40,"nodeType":"4114","messageId":"4115","endLine":213,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":231,"column":26,"nodeType":"4114","messageId":"4115","endLine":231,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":245,"column":38,"nodeType":"4114","messageId":"4115","endLine":245,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4555","line":4,"column":19,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4464","line":15,"column":16,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4401","line":17,"column":13,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4144","line":18,"column":10,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4556","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4557","line":20,"column":8,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4559","line":26,"column":8,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4533","line":34,"column":10,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4563","line":37,"column":10,"nodeType":"4096","messageId":"4097","endLine":37,"endColumn":18},{"ruleId":"4108","severity":1,"message":"4560","line":66,"column":6,"nodeType":"4110","endLine":66,"endColumn":8,"suggestions":"4564"},{"ruleId":"4112","severity":1,"message":"4113","line":163,"column":32,"nodeType":"4114","messageId":"4115","endLine":163,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":219,"column":40,"nodeType":"4114","messageId":"4115","endLine":219,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":238,"column":14,"nodeType":"4114","messageId":"4115","endLine":238,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":238,"column":55,"nodeType":"4114","messageId":"4115","endLine":238,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4565","line":318,"column":9,"nodeType":"4096","messageId":"4097","endLine":318,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4555","line":4,"column":19,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4401","line":17,"column":13,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4556","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4244","line":23,"column":8,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4128","line":29,"column":9,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4101","line":30,"column":9,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4533","line":33,"column":10,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4402","line":36,"column":10,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4376","line":36,"column":20,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4403","line":37,"column":10,"nodeType":"4096","messageId":"4097","endLine":37,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4377","line":37,"column":21,"nodeType":"4096","messageId":"4097","endLine":37,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4404","line":38,"column":10,"nodeType":"4096","messageId":"4097","endLine":38,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4378","line":38,"column":24,"nodeType":"4096","messageId":"4097","endLine":38,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4405","line":39,"column":10,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4379","line":39,"column":24,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4566","line":41,"column":10,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4567","line":48,"column":9,"nodeType":"4096","messageId":"4097","endLine":48,"endColumn":22},{"ruleId":"4108","severity":1,"message":"4560","line":72,"column":6,"nodeType":"4110","endLine":72,"endColumn":8,"suggestions":"4568"},{"ruleId":"4112","severity":1,"message":"4113","line":171,"column":32,"nodeType":"4114","messageId":"4115","endLine":171,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":227,"column":40,"nodeType":"4114","messageId":"4115","endLine":227,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":245,"column":26,"nodeType":"4114","messageId":"4115","endLine":245,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":245,"column":67,"nodeType":"4114","messageId":"4115","endLine":245,"endColumn":69},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":12,"column":5,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":5,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4556","line":20,"column":8,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4101","line":26,"column":11,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4569","line":30,"column":12,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4365","line":33,"column":12,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4391","line":33,"column":16,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4570","line":34,"column":12,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4571","line":34,"column":20,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":31},{"ruleId":"4108","severity":1,"message":"4572","line":40,"column":8,"nodeType":"4110","endLine":40,"endColumn":10,"suggestions":"4573"},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":12,"column":5,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":5,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4556","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4101","line":25,"column":11,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4569","line":29,"column":12,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4365","line":32,"column":12,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4391","line":32,"column":16,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4570","line":33,"column":12,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4571","line":33,"column":20,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":31},{"ruleId":"4108","severity":1,"message":"4572","line":44,"column":8,"nodeType":"4110","endLine":44,"endColumn":10,"suggestions":"4574"},{"ruleId":"4184","severity":1,"message":"4185","line":290,"column":37,"nodeType":"4186","messageId":"4187","endLine":293,"endColumn":38,"fix":"4575"},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4556","line":15,"column":8,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4244","line":17,"column":8,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4101","line":25,"column":11,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4569","line":29,"column":12,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4365","line":32,"column":12,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4391","line":32,"column":16,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4570","line":33,"column":12,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":18},{"ruleId":"4108","severity":1,"message":"4572","line":43,"column":8,"nodeType":"4110","endLine":43,"endColumn":10,"suggestions":"4576"},{"ruleId":"4112","severity":1,"message":"4113","line":190,"column":44,"nodeType":"4114","messageId":"4115","endLine":190,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":198,"column":48,"nodeType":"4114","messageId":"4115","endLine":198,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":205,"column":52,"nodeType":"4114","messageId":"4115","endLine":205,"endColumn":54},{"ruleId":"4184","severity":1,"message":"4185","line":311,"column":49,"nodeType":"4186","messageId":"4187","endLine":314,"endColumn":50,"fix":"4577"},{"ruleId":"4112","severity":1,"message":"4113","line":326,"column":56,"nodeType":"4114","messageId":"4115","endLine":326,"endColumn":58},{"ruleId":"4094","severity":1,"message":"4578","line":354,"column":11,"nodeType":"4096","messageId":"4097","endLine":354,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":12,"column":5,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":5,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4556","line":19,"column":8,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4244","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4162","line":22,"column":8,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4101","line":29,"column":11,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4569","line":33,"column":12,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4570","line":35,"column":12,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4571","line":35,"column":20,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":31},{"ruleId":"4108","severity":1,"message":"4572","line":55,"column":8,"nodeType":"4110","endLine":55,"endColumn":10,"suggestions":"4579"},{"ruleId":"4112","severity":1,"message":"4113","line":205,"column":44,"nodeType":"4114","messageId":"4115","endLine":205,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":213,"column":48,"nodeType":"4114","messageId":"4115","endLine":213,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":219,"column":52,"nodeType":"4114","messageId":"4115","endLine":219,"endColumn":54},{"ruleId":"4184","severity":1,"message":"4185","line":324,"column":49,"nodeType":"4186","messageId":"4187","endLine":327,"endColumn":50,"fix":"4580"},{"ruleId":"4112","severity":1,"message":"4113","line":339,"column":56,"nodeType":"4114","messageId":"4115","endLine":339,"endColumn":58},{"ruleId":"4258","severity":1,"message":"4297","line":415,"column":1,"nodeType":"4260","messageId":"4298","endLine":421,"endColumn":51},{"ruleId":"4094","severity":1,"message":"4581","line":1,"column":38,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4101","line":23,"column":9,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4582","line":26,"column":10,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4420","line":28,"column":10,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":18},{"ruleId":"4108","severity":1,"message":"4583","line":32,"column":6,"nodeType":"4110","endLine":32,"endColumn":8,"suggestions":"4584"},{"ruleId":"4094","severity":1,"message":"4421","line":34,"column":9,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":29},{"ruleId":"4112","severity":1,"message":"4113","line":145,"column":26,"nodeType":"4114","messageId":"4115","endLine":145,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":171,"column":26,"nodeType":"4114","messageId":"4115","endLine":171,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":178,"column":53,"nodeType":"4114","messageId":"4115","endLine":178,"endColumn":55},{"ruleId":"4112","severity":1,"message":"4113","line":178,"column":112,"nodeType":"4114","messageId":"4115","endLine":178,"endColumn":114},{"ruleId":"4491","severity":1,"message":"4585","line":182,"column":58,"nodeType":"4114","messageId":"4494","endLine":182,"endColumn":59},{"ruleId":"4491","severity":1,"message":"4585","line":182,"column":68,"nodeType":"4114","messageId":"4494","endLine":182,"endColumn":71},{"ruleId":"4094","severity":1,"message":"4581","line":1,"column":38,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4101","line":29,"column":9,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4582","line":32,"column":10,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":22},{"ruleId":"4108","severity":1,"message":"4583","line":50,"column":6,"nodeType":"4110","endLine":50,"endColumn":8,"suggestions":"4586"},{"ruleId":"4112","severity":1,"message":"4113","line":146,"column":28,"nodeType":"4114","messageId":"4115","endLine":146,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":154,"column":30,"nodeType":"4114","messageId":"4115","endLine":154,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":159,"column":32,"nodeType":"4114","messageId":"4115","endLine":159,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":164,"column":34,"nodeType":"4114","messageId":"4115","endLine":164,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":190,"column":34,"nodeType":"4114","messageId":"4115","endLine":190,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4116","line":193,"column":43,"nodeType":"4114","messageId":"4115","endLine":193,"endColumn":45},{"ruleId":"4112","severity":1,"message":"4113","line":216,"column":26,"nodeType":"4114","messageId":"4115","endLine":216,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":221,"column":37,"nodeType":"4114","messageId":"4115","endLine":221,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":221,"column":63,"nodeType":"4114","messageId":"4115","endLine":221,"endColumn":65},{"ruleId":"4112","severity":1,"message":"4113","line":221,"column":89,"nodeType":"4114","messageId":"4115","endLine":221,"endColumn":91},{"ruleId":"4112","severity":1,"message":"4113","line":285,"column":57,"nodeType":"4114","messageId":"4115","endLine":285,"endColumn":59},{"ruleId":"4112","severity":1,"message":"4113","line":285,"column":116,"nodeType":"4114","messageId":"4115","endLine":285,"endColumn":118},{"ruleId":"4491","severity":1,"message":"4585","line":289,"column":62,"nodeType":"4114","messageId":"4494","endLine":289,"endColumn":63},{"ruleId":"4491","severity":1,"message":"4585","line":289,"column":72,"nodeType":"4114","messageId":"4494","endLine":289,"endColumn":75},{"ruleId":"4112","severity":1,"message":"4113","line":307,"column":47,"nodeType":"4114","messageId":"4115","endLine":307,"endColumn":49},{"ruleId":"4094","severity":1,"message":"4587","line":455,"column":7,"nodeType":"4096","messageId":"4097","endLine":455,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4581","line":1,"column":38,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4100","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4588","line":24,"column":10,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4582","line":33,"column":12,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4589","line":35,"column":21,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":31},{"ruleId":"4108","severity":1,"message":"4583","line":64,"column":8,"nodeType":"4110","endLine":64,"endColumn":10,"suggestions":"4590"},{"ruleId":"4112","severity":1,"message":"4113","line":154,"column":44,"nodeType":"4114","messageId":"4115","endLine":154,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":159,"column":48,"nodeType":"4114","messageId":"4115","endLine":159,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":164,"column":52,"nodeType":"4114","messageId":"4115","endLine":164,"endColumn":54},{"ruleId":"4112","severity":1,"message":"4113","line":190,"column":40,"nodeType":"4114","messageId":"4115","endLine":190,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4116","line":193,"column":49,"nodeType":"4114","messageId":"4115","endLine":193,"endColumn":51},{"ruleId":"4112","severity":1,"message":"4113","line":220,"column":40,"nodeType":"4114","messageId":"4115","endLine":220,"endColumn":42},{"ruleId":"4491","severity":1,"message":"4585","line":222,"column":42,"nodeType":"4114","messageId":"4494","endLine":222,"endColumn":43},{"ruleId":"4491","severity":1,"message":"4585","line":222,"column":52,"nodeType":"4114","messageId":"4494","endLine":222,"endColumn":55},{"ruleId":"4112","severity":1,"message":"4113","line":242,"column":41,"nodeType":"4114","messageId":"4115","endLine":242,"endColumn":43},{"ruleId":"4112","severity":1,"message":"4113","line":242,"column":67,"nodeType":"4114","messageId":"4115","endLine":242,"endColumn":69},{"ruleId":"4112","severity":1,"message":"4113","line":242,"column":93,"nodeType":"4114","messageId":"4115","endLine":242,"endColumn":95},{"ruleId":"4112","severity":1,"message":"4113","line":306,"column":41,"nodeType":"4114","messageId":"4115","endLine":306,"endColumn":43},{"ruleId":"4112","severity":1,"message":"4113","line":306,"column":100,"nodeType":"4114","messageId":"4115","endLine":306,"endColumn":102},{"ruleId":"4491","severity":1,"message":"4585","line":310,"column":46,"nodeType":"4114","messageId":"4494","endLine":310,"endColumn":47},{"ruleId":"4491","severity":1,"message":"4585","line":310,"column":56,"nodeType":"4114","messageId":"4494","endLine":310,"endColumn":59},{"ruleId":"4112","severity":1,"message":"4113","line":327,"column":57,"nodeType":"4114","messageId":"4115","endLine":327,"endColumn":59},{"ruleId":"4112","severity":1,"message":"4113","line":335,"column":50,"nodeType":"4114","messageId":"4115","endLine":335,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4581","line":1,"column":38,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":45},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4591","line":20,"column":8,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4556","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4592","line":22,"column":8,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4101","line":27,"column":9,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4582","line":30,"column":10,"nodeType":"4096","messageId":"4097","endLine":30,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4420","line":33,"column":10,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4421","line":35,"column":9,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":29},{"ruleId":"4108","severity":1,"message":"4583","line":42,"column":6,"nodeType":"4110","endLine":42,"endColumn":8,"suggestions":"4593"},{"ruleId":"4112","severity":1,"message":"4113","line":138,"column":28,"nodeType":"4114","messageId":"4115","endLine":138,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":143,"column":30,"nodeType":"4114","messageId":"4115","endLine":143,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":148,"column":32,"nodeType":"4114","messageId":"4115","endLine":148,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":173,"column":26,"nodeType":"4114","messageId":"4115","endLine":173,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4433","line":2,"column":10,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4160","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4161","line":4,"column":13,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4594","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4369","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4144","line":9,"column":10,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4156","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4326","line":13,"column":27,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4102","line":13,"column":35,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4113","line":50,"column":40,"nodeType":"4114","messageId":"4115","endLine":50,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4116","line":75,"column":22,"nodeType":"4114","messageId":"4115","endLine":75,"endColumn":24},{"ruleId":"4180","severity":1,"message":"4181","line":104,"column":17,"nodeType":"4182","messageId":"4183","endLine":106,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4099","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4101","line":27,"column":9,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":28,"column":35,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4103","line":33,"column":10,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4104","line":36,"column":10,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4105","line":36,"column":16,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4106","line":41,"column":10,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4107","line":41,"column":17,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4109","line":65,"column":6,"nodeType":"4110","endLine":65,"endColumn":8,"suggestions":"4595"},{"ruleId":"4112","severity":1,"message":"4113","line":126,"column":23,"nodeType":"4114","messageId":"4115","endLine":126,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":145,"column":19,"nodeType":"4114","messageId":"4115","endLine":145,"endColumn":21},{"ruleId":"4112","severity":1,"message":"4113","line":147,"column":21,"nodeType":"4114","messageId":"4115","endLine":147,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":156,"column":25,"nodeType":"4114","messageId":"4115","endLine":156,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":157,"column":25,"nodeType":"4114","messageId":"4115","endLine":157,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":168,"column":31,"nodeType":"4114","messageId":"4115","endLine":168,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":168,"column":50,"nodeType":"4114","messageId":"4115","endLine":168,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":172,"column":29,"nodeType":"4114","messageId":"4115","endLine":172,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":172,"column":46,"nodeType":"4114","messageId":"4115","endLine":172,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4116","line":181,"column":33,"nodeType":"4114","messageId":"4115","endLine":181,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":209,"column":32,"nodeType":"4114","messageId":"4115","endLine":209,"endColumn":34},{"ruleId":"4117","severity":1,"message":"4118","line":251,"column":45,"nodeType":"4119","messageId":"4120","endLine":251,"endColumn":47},{"ruleId":"4117","severity":1,"message":"4118","line":260,"column":45,"nodeType":"4119","messageId":"4120","endLine":260,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4113","line":385,"column":32,"nodeType":"4114","messageId":"4115","endLine":385,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":401,"column":33,"nodeType":"4114","messageId":"4115","endLine":401,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":415,"column":33,"nodeType":"4114","messageId":"4115","endLine":415,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4144","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4099","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":10},{"ruleId":"4108","severity":1,"message":"4172","line":28,"column":6,"nodeType":"4110","endLine":28,"endColumn":10,"suggestions":"4596"},{"ruleId":"4094","severity":1,"message":"4386","line":3,"column":8,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4597","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":5,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4122","line":14,"column":5,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4482","line":21,"column":8,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":22},{"ruleId":"4108","severity":1,"message":"4302","line":41,"column":8,"nodeType":"4110","endLine":41,"endColumn":10,"suggestions":"4598"},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4288","line":6,"column":9,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4192","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4101","line":19,"column":9,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4339","line":26,"column":6,"nodeType":"4110","endLine":26,"endColumn":8,"suggestions":"4599"},{"ruleId":"4112","severity":1,"message":"4113","line":76,"column":29,"nodeType":"4114","messageId":"4115","endLine":76,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":5,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4192","line":18,"column":8,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4101","line":22,"column":11,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4193","line":26,"column":12,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4194","line":26,"column":18,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4195","line":36,"column":8,"nodeType":"4110","endLine":36,"endColumn":10,"suggestions":"4600"},{"ruleId":"4112","severity":1,"message":"4113","line":103,"column":45,"nodeType":"4114","messageId":"4115","endLine":103,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4099","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4101","line":33,"column":9,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4189","line":44,"column":11,"nodeType":"4096","messageId":"4097","endLine":44,"endColumn":23},{"ruleId":"4108","severity":1,"message":"4190","line":59,"column":6,"nodeType":"4110","endLine":59,"endColumn":8,"suggestions":"4601"},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4289","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4290","line":3,"column":15,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4291","line":3,"column":21,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4292","line":3,"column":30,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":38},{"ruleId":"4094","severity":1,"message":"4293","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4228","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":7},{"ruleId":"4094","severity":1,"message":"4229","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4099","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4294","line":16,"column":12,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4295","line":16,"column":22,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4360","line":17,"column":11,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4361","line":26,"column":11,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":19},{"ruleId":"4108","severity":1,"message":"4198","line":32,"column":6,"nodeType":"4110","endLine":32,"endColumn":8,"suggestions":"4602"},{"ruleId":"4112","severity":1,"message":"4113","line":96,"column":34,"nodeType":"4114","messageId":"4115","endLine":96,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":99,"column":34,"nodeType":"4114","messageId":"4115","endLine":99,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":102,"column":34,"nodeType":"4114","messageId":"4115","endLine":102,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4125","line":4,"column":33,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4144","line":7,"column":10,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4143","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4326","line":23,"column":35,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4329","line":25,"column":10,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":26},{"ruleId":"4108","severity":1,"message":"4330","line":34,"column":6,"nodeType":"4110","endLine":34,"endColumn":8,"suggestions":"4603"},{"ruleId":"4112","severity":1,"message":"4113","line":51,"column":39,"nodeType":"4114","messageId":"4115","endLine":51,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":51,"column":65,"nodeType":"4114","messageId":"4115","endLine":51,"endColumn":67},{"ruleId":"4112","severity":1,"message":"4113","line":165,"column":38,"nodeType":"4114","messageId":"4115","endLine":165,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":166,"column":37,"nodeType":"4114","messageId":"4115","endLine":166,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":167,"column":34,"nodeType":"4114","messageId":"4115","endLine":167,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":168,"column":38,"nodeType":"4114","messageId":"4115","endLine":168,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":169,"column":33,"nodeType":"4114","messageId":"4115","endLine":169,"endColumn":35},{"ruleId":"4108","severity":1,"message":"4323","line":89,"column":6,"nodeType":"4110","endLine":89,"endColumn":8,"suggestions":"4604"},{"ruleId":"4112","severity":1,"message":"4113","line":104,"column":34,"nodeType":"4114","messageId":"4115","endLine":104,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":107,"column":34,"nodeType":"4114","messageId":"4115","endLine":107,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":110,"column":34,"nodeType":"4114","messageId":"4115","endLine":110,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4165","line":2,"column":17,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":2,"column":27,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4101","line":21,"column":9,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":23,"column":35,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":62,"column":14,"nodeType":"4114","messageId":"4115","endLine":62,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4160","line":8,"column":10,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4161","line":9,"column":13,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4162","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4605","line":16,"column":10,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4101","line":21,"column":9,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4141","line":50,"column":7,"nodeType":"4096","messageId":"4097","endLine":50,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4321","line":53,"column":23,"nodeType":"4096","messageId":"4097","endLine":53,"endColumn":43},{"ruleId":"4094","severity":1,"message":"4322","line":54,"column":5,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":28},{"ruleId":"4108","severity":1,"message":"4323","line":153,"column":6,"nodeType":"4110","endLine":153,"endColumn":8,"suggestions":"4606"},{"ruleId":"4094","severity":1,"message":"4325","line":157,"column":7,"nodeType":"4096","messageId":"4097","endLine":157,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4155","line":2,"column":27,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4166","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4167","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4162","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4101","line":21,"column":9,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":26,"column":54,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":59},{"ruleId":"4094","severity":1,"message":"4106","line":28,"column":10,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4107","line":28,"column":17,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":36,"column":37,"nodeType":"4114","messageId":"4115","endLine":36,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":44,"column":39,"nodeType":"4114","messageId":"4115","endLine":44,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":51,"column":41,"nodeType":"4114","messageId":"4115","endLine":51,"endColumn":43},{"ruleId":"4108","severity":1,"message":"4323","line":104,"column":8,"nodeType":"4110","endLine":104,"endColumn":10,"suggestions":"4607"},{"ruleId":"4112","severity":1,"message":"4113","line":119,"column":46,"nodeType":"4114","messageId":"4115","endLine":119,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":122,"column":46,"nodeType":"4114","messageId":"4115","endLine":122,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":125,"column":46,"nodeType":"4114","messageId":"4115","endLine":125,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":128,"column":46,"nodeType":"4114","messageId":"4115","endLine":128,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4608","line":22,"column":10,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4343","line":25,"column":10,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":18},{"ruleId":"4108","severity":1,"message":"4323","line":119,"column":6,"nodeType":"4110","endLine":119,"endColumn":8,"suggestions":"4609"},{"ruleId":"4112","severity":1,"message":"4113","line":136,"column":34,"nodeType":"4114","messageId":"4115","endLine":136,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":139,"column":34,"nodeType":"4114","messageId":"4115","endLine":139,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":142,"column":34,"nodeType":"4114","messageId":"4115","endLine":142,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4128","line":11,"column":9,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":16},{"ruleId":"4108","severity":1,"message":"4130","line":162,"column":6,"nodeType":"4110","endLine":162,"endColumn":16,"suggestions":"4610"},{"ruleId":"4094","severity":1,"message":"4101","line":29,"column":9,"nodeType":"4096","messageId":"4097","endLine":29,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":31,"column":35,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4288","line":6,"column":9,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4122","line":2,"column":54,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":60},{"ruleId":"4094","severity":1,"message":"4433","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4144","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4160","line":7,"column":10,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4156","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4526","line":16,"column":7,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":13},{"ruleId":"4108","severity":1,"message":"4527","line":47,"column":6,"nodeType":"4110","endLine":47,"endColumn":14,"suggestions":"4611"},{"ruleId":"4094","severity":1,"message":"4612","line":98,"column":15,"nodeType":"4096","messageId":"4097","endLine":98,"endColumn":23},{"ruleId":"4184","severity":1,"message":"4185","line":161,"column":27,"nodeType":"4186","messageId":"4187","endLine":164,"endColumn":28,"fix":"4613"},{"ruleId":"4184","severity":1,"message":"4185","line":174,"column":23,"nodeType":"4186","messageId":"4187","endLine":177,"endColumn":28,"fix":"4614"},{"ruleId":"4112","severity":1,"message":"4113","line":184,"column":41,"nodeType":"4114","messageId":"4115","endLine":184,"endColumn":43},{"ruleId":"4491","severity":1,"message":"4492","line":184,"column":46,"nodeType":"4493","messageId":"4494","endLine":184,"endColumn":48},{"ruleId":"4491","severity":1,"message":"4492","line":184,"column":64,"nodeType":"4493","messageId":"4494","endLine":184,"endColumn":66},{"ruleId":"4491","severity":1,"message":"4495","line":184,"column":64,"nodeType":"4493","messageId":"4494","endLine":184,"endColumn":66},{"ruleId":"4112","severity":1,"message":"4113","line":184,"column":81,"nodeType":"4114","messageId":"4115","endLine":184,"endColumn":83},{"ruleId":"4491","severity":1,"message":"4495","line":184,"column":86,"nodeType":"4493","messageId":"4494","endLine":184,"endColumn":88},{"ruleId":"4112","severity":1,"message":"4113","line":189,"column":37,"nodeType":"4114","messageId":"4115","endLine":189,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":192,"column":38,"nodeType":"4114","messageId":"4115","endLine":192,"endColumn":40},{"ruleId":"4112","severity":1,"message":"4113","line":230,"column":40,"nodeType":"4114","messageId":"4115","endLine":230,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":240,"column":42,"nodeType":"4114","messageId":"4115","endLine":240,"endColumn":44},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4144","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4102","line":26,"column":35,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4101","line":20,"column":9,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4128","line":21,"column":9,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4426","line":23,"column":15,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4428","line":24,"column":20,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":37},{"ruleId":"4094","severity":1,"message":"4430","line":25,"column":15,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4157","line":25,"column":28,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4431","line":25,"column":42,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":55},{"ruleId":"4112","severity":1,"message":"4113","line":90,"column":31,"nodeType":"4114","messageId":"4115","endLine":90,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":103,"column":33,"nodeType":"4114","messageId":"4115","endLine":103,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":121,"column":31,"nodeType":"4114","messageId":"4115","endLine":121,"endColumn":33},{"ruleId":"4258","severity":1,"message":"4297","line":149,"column":1,"nodeType":"4260","messageId":"4298","endLine":168,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":36,"column":37,"nodeType":"4114","messageId":"4115","endLine":36,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":44,"column":39,"nodeType":"4114","messageId":"4115","endLine":44,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":51,"column":41,"nodeType":"4114","messageId":"4115","endLine":51,"endColumn":43},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4326","line":11,"column":27,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4102","line":11,"column":35,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4128","line":19,"column":11,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4326","line":22,"column":37,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":43},{"ruleId":"4094","severity":1,"message":"4390","line":23,"column":21,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4362","line":24,"column":12,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4365","line":26,"column":12,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4391","line":26,"column":16,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4392","line":34,"column":12,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4393","line":34,"column":18,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4420","line":40,"column":12,"nodeType":"4096","messageId":"4097","endLine":40,"endColumn":20},{"ruleId":"4108","severity":1,"message":"4330","line":56,"column":8,"nodeType":"4110","endLine":56,"endColumn":10,"suggestions":"4615"},{"ruleId":"4094","severity":1,"message":"4395","line":118,"column":11,"nodeType":"4096","messageId":"4097","endLine":118,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":260,"column":48,"nodeType":"4114","messageId":"4115","endLine":260,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":277,"column":37,"nodeType":"4114","messageId":"4115","endLine":277,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":308,"column":34,"nodeType":"4114","messageId":"4115","endLine":308,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":327,"column":34,"nodeType":"4114","messageId":"4115","endLine":327,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":338,"column":30,"nodeType":"4114","messageId":"4115","endLine":338,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":338,"column":65,"nodeType":"4114","messageId":"4115","endLine":338,"endColumn":67},{"ruleId":"4112","severity":1,"message":"4113","line":338,"column":104,"nodeType":"4114","messageId":"4115","endLine":338,"endColumn":106},{"ruleId":"4112","severity":1,"message":"4113","line":338,"column":142,"nodeType":"4114","messageId":"4115","endLine":338,"endColumn":144},{"ruleId":"4094","severity":1,"message":"4128","line":23,"column":11,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4326","line":26,"column":37,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":43},{"ruleId":"4094","severity":1,"message":"4390","line":27,"column":21,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4362","line":28,"column":12,"nodeType":"4096","messageId":"4097","endLine":28,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4396","line":31,"column":12,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4397","line":31,"column":21,"nodeType":"4096","messageId":"4097","endLine":31,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4398","line":35,"column":12,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4392","line":38,"column":12,"nodeType":"4096","messageId":"4097","endLine":38,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4393","line":38,"column":18,"nodeType":"4096","messageId":"4097","endLine":38,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4330","line":65,"column":8,"nodeType":"4110","endLine":65,"endColumn":10,"suggestions":"4616"},{"ruleId":"4112","severity":1,"message":"4116","line":83,"column":29,"nodeType":"4114","messageId":"4115","endLine":83,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4395","line":129,"column":11,"nodeType":"4096","messageId":"4097","endLine":129,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":265,"column":48,"nodeType":"4114","messageId":"4115","endLine":265,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":282,"column":37,"nodeType":"4114","messageId":"4115","endLine":282,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":313,"column":34,"nodeType":"4114","messageId":"4115","endLine":313,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":332,"column":34,"nodeType":"4114","messageId":"4115","endLine":332,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":342,"column":43,"nodeType":"4114","messageId":"4115","endLine":342,"endColumn":45},{"ruleId":"4112","severity":1,"message":"4113","line":342,"column":78,"nodeType":"4114","messageId":"4115","endLine":342,"endColumn":80},{"ruleId":"4112","severity":1,"message":"4116","line":342,"column":113,"nodeType":"4114","messageId":"4115","endLine":342,"endColumn":115},{"ruleId":"4112","severity":1,"message":"4113","line":354,"column":43,"nodeType":"4114","messageId":"4115","endLine":354,"endColumn":45},{"ruleId":"4112","severity":1,"message":"4113","line":354,"column":78,"nodeType":"4114","messageId":"4115","endLine":354,"endColumn":80},{"ruleId":"4112","severity":1,"message":"4113","line":354,"column":117,"nodeType":"4114","messageId":"4115","endLine":354,"endColumn":119},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4171","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":10},{"ruleId":"4094","severity":1,"message":"4597","line":22,"column":8,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":29},{"ruleId":"4094","severity":1,"message":"4401","line":23,"column":13,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4128","line":32,"column":9,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4326","line":35,"column":35,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4390","line":36,"column":19,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4362","line":37,"column":10,"nodeType":"4096","messageId":"4097","endLine":37,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4402","line":53,"column":10,"nodeType":"4096","messageId":"4097","endLine":53,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4376","line":53,"column":20,"nodeType":"4096","messageId":"4097","endLine":53,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4403","line":54,"column":10,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4377","line":54,"column":21,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4404","line":55,"column":10,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4378","line":55,"column":24,"nodeType":"4096","messageId":"4097","endLine":55,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4405","line":56,"column":10,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4379","line":56,"column":24,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":39},{"ruleId":"4108","severity":1,"message":"4330","line":78,"column":6,"nodeType":"4110","endLine":78,"endColumn":8,"suggestions":"4617"},{"ruleId":"4112","severity":1,"message":"4116","line":96,"column":23,"nodeType":"4114","messageId":"4115","endLine":96,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":227,"column":30,"nodeType":"4114","messageId":"4115","endLine":227,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":284,"column":40,"nodeType":"4114","messageId":"4115","endLine":284,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":301,"column":31,"nodeType":"4114","messageId":"4115","endLine":301,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":332,"column":28,"nodeType":"4114","messageId":"4115","endLine":332,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":351,"column":28,"nodeType":"4114","messageId":"4115","endLine":351,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":361,"column":37,"nodeType":"4114","messageId":"4115","endLine":361,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":361,"column":72,"nodeType":"4114","messageId":"4115","endLine":361,"endColumn":74},{"ruleId":"4112","severity":1,"message":"4116","line":361,"column":107,"nodeType":"4114","messageId":"4115","endLine":361,"endColumn":109},{"ruleId":"4112","severity":1,"message":"4113","line":373,"column":37,"nodeType":"4114","messageId":"4115","endLine":373,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":373,"column":72,"nodeType":"4114","messageId":"4115","endLine":373,"endColumn":74},{"ruleId":"4112","severity":1,"message":"4113","line":373,"column":111,"nodeType":"4114","messageId":"4115","endLine":373,"endColumn":113},{"ruleId":"4112","severity":1,"message":"4113","line":385,"column":24,"nodeType":"4114","messageId":"4115","endLine":385,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4113","line":385,"column":59,"nodeType":"4114","messageId":"4115","endLine":385,"endColumn":61},{"ruleId":"4112","severity":1,"message":"4113","line":385,"column":98,"nodeType":"4114","messageId":"4115","endLine":385,"endColumn":100},{"ruleId":"4112","severity":1,"message":"4113","line":385,"column":136,"nodeType":"4114","messageId":"4115","endLine":385,"endColumn":138},{"ruleId":"4112","severity":1,"message":"4116","line":456,"column":24,"nodeType":"4114","messageId":"4115","endLine":456,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4116","line":456,"column":45,"nodeType":"4114","messageId":"4115","endLine":456,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4113","line":620,"column":22,"nodeType":"4114","messageId":"4115","endLine":620,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4169","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4407","line":23,"column":8,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4559","line":24,"column":8,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4101","line":32,"column":11,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4365","line":33,"column":13,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4409","line":35,"column":11,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4362","line":39,"column":12,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":17},{"ruleId":"4108","severity":1,"message":"4363","line":57,"column":8,"nodeType":"4110","endLine":57,"endColumn":10,"suggestions":"4618"},{"ruleId":"4112","severity":1,"message":"4116","line":103,"column":24,"nodeType":"4114","messageId":"4115","endLine":103,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4116","line":103,"column":45,"nodeType":"4114","messageId":"4115","endLine":103,"endColumn":47},{"ruleId":"4184","severity":1,"message":"4185","line":496,"column":53,"nodeType":"4186","messageId":"4187","endLine":496,"endColumn":93,"fix":"4619"},{"ruleId":"4094","severity":1,"message":"4169","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4407","line":23,"column":8,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4101","line":32,"column":11,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4365","line":33,"column":13,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4409","line":35,"column":11,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4362","line":39,"column":12,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":17},{"ruleId":"4108","severity":1,"message":"4363","line":56,"column":8,"nodeType":"4110","endLine":56,"endColumn":10,"suggestions":"4620"},{"ruleId":"4112","severity":1,"message":"4113","line":316,"column":49,"nodeType":"4114","messageId":"4115","endLine":316,"endColumn":51},{"ruleId":"4112","severity":1,"message":"4113","line":329,"column":50,"nodeType":"4114","messageId":"4115","endLine":329,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4169","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4559","line":23,"column":8,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4408","line":24,"column":8,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4101","line":32,"column":11,"nodeType":"4096","messageId":"4097","endLine":32,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4365","line":33,"column":13,"nodeType":"4096","messageId":"4097","endLine":33,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4409","line":35,"column":11,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4362","line":39,"column":12,"nodeType":"4096","messageId":"4097","endLine":39,"endColumn":17},{"ruleId":"4108","severity":1,"message":"4363","line":62,"column":8,"nodeType":"4110","endLine":62,"endColumn":10,"suggestions":"4621"},{"ruleId":"4112","severity":1,"message":"4116","line":104,"column":24,"nodeType":"4114","messageId":"4115","endLine":104,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4116","line":104,"column":45,"nodeType":"4114","messageId":"4115","endLine":104,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4113","line":221,"column":38,"nodeType":"4114","messageId":"4115","endLine":221,"endColumn":40},{"ruleId":"4184","severity":1,"message":"4185","line":499,"column":53,"nodeType":"4186","messageId":"4187","endLine":499,"endColumn":93,"fix":"4622"},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4128","line":17,"column":9,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4125","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4373","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4374","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4376","line":41,"column":20,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4377","line":42,"column":21,"nodeType":"4096","messageId":"4097","endLine":42,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4378","line":43,"column":24,"nodeType":"4096","messageId":"4097","endLine":43,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4379","line":44,"column":24,"nodeType":"4096","messageId":"4097","endLine":44,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4380","line":53,"column":23,"nodeType":"4096","messageId":"4097","endLine":53,"endColumn":37},{"ruleId":"4108","severity":1,"message":"4381","line":59,"column":6,"nodeType":"4110","endLine":59,"endColumn":8,"suggestions":"4623"},{"ruleId":"4214","severity":1,"message":"4383","line":379,"column":17,"nodeType":"4096","messageId":"4216","endLine":379,"endColumn":20},{"ruleId":"4117","severity":1,"message":"4142","line":393,"column":26,"nodeType":"4119","messageId":"4120","endLine":393,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":394,"column":21,"nodeType":"4114","messageId":"4115","endLine":394,"endColumn":23},{"ruleId":"4214","severity":1,"message":"4384","line":402,"column":13,"nodeType":"4096","messageId":"4216","endLine":402,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4326","line":10,"column":35,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":41},{"ruleId":"4094","severity":1,"message":"4477","line":26,"column":5,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":15},{"ruleId":"4112","severity":1,"message":"4116","line":45,"column":23,"nodeType":"4114","messageId":"4115","endLine":45,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":93,"column":18,"nodeType":"4114","messageId":"4115","endLine":93,"endColumn":20},{"ruleId":"4112","severity":1,"message":"4113","line":111,"column":30,"nodeType":"4114","messageId":"4115","endLine":111,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":130,"column":25,"nodeType":"4114","messageId":"4115","endLine":130,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":148,"column":23,"nodeType":"4114","messageId":"4115","endLine":148,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":164,"column":28,"nodeType":"4114","messageId":"4115","endLine":164,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":183,"column":21,"nodeType":"4114","messageId":"4115","endLine":183,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":202,"column":28,"nodeType":"4114","messageId":"4115","endLine":202,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":221,"column":17,"nodeType":"4114","messageId":"4115","endLine":221,"endColumn":19},{"ruleId":"4112","severity":1,"message":"4113","line":239,"column":20,"nodeType":"4114","messageId":"4115","endLine":239,"endColumn":22},{"ruleId":"4112","severity":1,"message":"4113","line":255,"column":16,"nodeType":"4114","messageId":"4115","endLine":255,"endColumn":18},{"ruleId":"4112","severity":1,"message":"4113","line":271,"column":14,"nodeType":"4114","messageId":"4115","endLine":271,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":389,"column":29,"nodeType":"4114","messageId":"4115","endLine":389,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":403,"column":36,"nodeType":"4114","messageId":"4115","endLine":403,"endColumn":38},{"ruleId":"4112","severity":1,"message":"4113","line":419,"column":34,"nodeType":"4114","messageId":"4115","endLine":419,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":432,"column":32,"nodeType":"4114","messageId":"4115","endLine":432,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":446,"column":39,"nodeType":"4114","messageId":"4115","endLine":446,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":459,"column":31,"nodeType":"4114","messageId":"4115","endLine":459,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":5,"column":38,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":5,"column":49,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":5,"column":54,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4362","line":21,"column":12,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":17},{"ruleId":"4108","severity":1,"message":"4450","line":42,"column":8,"nodeType":"4110","endLine":42,"endColumn":10,"suggestions":"4624"},{"ruleId":"4112","severity":1,"message":"4113","line":190,"column":44,"nodeType":"4114","messageId":"4115","endLine":190,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":198,"column":48,"nodeType":"4114","messageId":"4115","endLine":198,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":202,"column":52,"nodeType":"4114","messageId":"4115","endLine":202,"endColumn":54},{"ruleId":"4112","severity":1,"message":"4113","line":263,"column":50,"nodeType":"4114","messageId":"4115","endLine":263,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":274,"column":53,"nodeType":"4114","messageId":"4115","endLine":274,"endColumn":55},{"ruleId":"4112","severity":1,"message":"4113","line":287,"column":72,"nodeType":"4114","messageId":"4115","endLine":287,"endColumn":74},{"ruleId":"4184","severity":1,"message":"4185","line":290,"column":37,"nodeType":"4186","messageId":"4187","endLine":293,"endColumn":38,"fix":"4625"},{"ruleId":"4112","severity":1,"message":"4113","line":307,"column":48,"nodeType":"4114","messageId":"4115","endLine":307,"endColumn":50},{"ruleId":"4258","severity":1,"message":"4297","line":397,"column":1,"nodeType":"4260","messageId":"4298","endLine":407,"endColumn":39},{"ruleId":"4094","severity":1,"message":"4411","line":2,"column":19,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":32},{"ruleId":"4094","severity":1,"message":"4099","line":10,"column":3,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4100","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4412","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4103","line":37,"column":10,"nodeType":"4096","messageId":"4097","endLine":37,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4107","line":41,"column":17,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":25},{"ruleId":"4108","severity":1,"message":"4413","line":71,"column":6,"nodeType":"4110","endLine":71,"endColumn":8,"suggestions":"4626"},{"ruleId":"4112","severity":1,"message":"4113","line":94,"column":23,"nodeType":"4114","messageId":"4115","endLine":94,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":116,"column":19,"nodeType":"4114","messageId":"4115","endLine":116,"endColumn":21},{"ruleId":"4112","severity":1,"message":"4113","line":118,"column":21,"nodeType":"4114","messageId":"4115","endLine":118,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":126,"column":25,"nodeType":"4114","messageId":"4115","endLine":126,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":127,"column":25,"nodeType":"4114","messageId":"4115","endLine":127,"endColumn":27},{"ruleId":"4112","severity":1,"message":"4113","line":144,"column":31,"nodeType":"4114","messageId":"4115","endLine":144,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":144,"column":50,"nodeType":"4114","messageId":"4115","endLine":144,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":149,"column":29,"nodeType":"4114","messageId":"4115","endLine":149,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":149,"column":46,"nodeType":"4114","messageId":"4115","endLine":149,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4116","line":159,"column":33,"nodeType":"4114","messageId":"4115","endLine":159,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":186,"column":32,"nodeType":"4114","messageId":"4115","endLine":186,"endColumn":34},{"ruleId":"4117","severity":1,"message":"4118","line":220,"column":45,"nodeType":"4119","messageId":"4120","endLine":220,"endColumn":47},{"ruleId":"4117","severity":1,"message":"4118","line":230,"column":45,"nodeType":"4119","messageId":"4120","endLine":230,"endColumn":47},{"ruleId":"4112","severity":1,"message":"4113","line":363,"column":32,"nodeType":"4114","messageId":"4115","endLine":363,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":378,"column":33,"nodeType":"4114","messageId":"4115","endLine":378,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4113","line":391,"column":33,"nodeType":"4114","messageId":"4115","endLine":391,"endColumn":35},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":5,"column":38,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":5,"column":49,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":5,"column":54,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4362","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":17},{"ruleId":"4108","severity":1,"message":"4450","line":38,"column":8,"nodeType":"4110","endLine":38,"endColumn":10,"suggestions":"4627"},{"ruleId":"4112","severity":1,"message":"4113","line":187,"column":44,"nodeType":"4114","messageId":"4115","endLine":187,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":193,"column":48,"nodeType":"4114","messageId":"4115","endLine":193,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":198,"column":52,"nodeType":"4114","messageId":"4115","endLine":198,"endColumn":54},{"ruleId":"4112","severity":1,"message":"4113","line":261,"column":50,"nodeType":"4114","messageId":"4115","endLine":261,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":272,"column":53,"nodeType":"4114","messageId":"4115","endLine":272,"endColumn":55},{"ruleId":"4112","severity":1,"message":"4113","line":285,"column":72,"nodeType":"4114","messageId":"4115","endLine":285,"endColumn":74},{"ruleId":"4184","severity":1,"message":"4185","line":288,"column":37,"nodeType":"4186","messageId":"4187","endLine":291,"endColumn":38,"fix":"4628"},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":5,"column":38,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":5,"column":49,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":5,"column":54,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4362","line":18,"column":12,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4365","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4449","line":22,"column":11,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":22},{"ruleId":"4108","severity":1,"message":"4450","line":32,"column":8,"nodeType":"4110","endLine":32,"endColumn":10,"suggestions":"4629"},{"ruleId":"4112","severity":1,"message":"4113","line":181,"column":44,"nodeType":"4114","messageId":"4115","endLine":181,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":242,"column":50,"nodeType":"4114","messageId":"4115","endLine":242,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":253,"column":53,"nodeType":"4114","messageId":"4115","endLine":253,"endColumn":55},{"ruleId":"4184","severity":1,"message":"4185","line":269,"column":37,"nodeType":"4186","messageId":"4187","endLine":272,"endColumn":38,"fix":"4630"},{"ruleId":"4112","severity":1,"message":"4113","line":284,"column":48,"nodeType":"4114","messageId":"4115","endLine":284,"endColumn":50},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":5,"column":38,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":5,"column":49,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":5,"column":54,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4362","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4365","line":20,"column":12,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4449","line":23,"column":11,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":22},{"ruleId":"4108","severity":1,"message":"4450","line":37,"column":8,"nodeType":"4110","endLine":37,"endColumn":10,"suggestions":"4631"},{"ruleId":"4112","severity":1,"message":"4113","line":186,"column":44,"nodeType":"4114","messageId":"4115","endLine":186,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":248,"column":50,"nodeType":"4114","messageId":"4115","endLine":248,"endColumn":52},{"ruleId":"4112","severity":1,"message":"4113","line":259,"column":53,"nodeType":"4114","messageId":"4115","endLine":259,"endColumn":55},{"ruleId":"4184","severity":1,"message":"4185","line":275,"column":37,"nodeType":"4186","messageId":"4187","endLine":278,"endColumn":38,"fix":"4632"},{"ruleId":"4112","severity":1,"message":"4113","line":292,"column":48,"nodeType":"4114","messageId":"4115","endLine":292,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":321,"column":48,"nodeType":"4114","messageId":"4115","endLine":321,"endColumn":50},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":5,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":5,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":5,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":5,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":10},{"ruleId":"4108","severity":1,"message":"4388","line":37,"column":8,"nodeType":"4110","endLine":37,"endColumn":10,"suggestions":"4633"},{"ruleId":"4112","severity":1,"message":"4113","line":145,"column":44,"nodeType":"4114","messageId":"4115","endLine":145,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":151,"column":48,"nodeType":"4114","messageId":"4115","endLine":151,"endColumn":50},{"ruleId":"4112","severity":1,"message":"4113","line":156,"column":52,"nodeType":"4114","messageId":"4115","endLine":156,"endColumn":54},{"ruleId":"4112","severity":1,"message":"4113","line":178,"column":37,"nodeType":"4114","messageId":"4115","endLine":178,"endColumn":39},{"ruleId":"4112","severity":1,"message":"4113","line":189,"column":35,"nodeType":"4114","messageId":"4115","endLine":189,"endColumn":37},{"ruleId":"4108","severity":1,"message":"4424","line":42,"column":6,"nodeType":"4110","endLine":42,"endColumn":8,"suggestions":"4634"},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4108","severity":1,"message":"4388","line":34,"column":6,"nodeType":"4110","endLine":34,"endColumn":8,"suggestions":"4635"},{"ruleId":"4112","severity":1,"message":"4113","line":142,"column":28,"nodeType":"4114","messageId":"4115","endLine":142,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":147,"column":30,"nodeType":"4114","messageId":"4115","endLine":147,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":152,"column":32,"nodeType":"4114","messageId":"4115","endLine":152,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":174,"column":31,"nodeType":"4114","messageId":"4115","endLine":174,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":185,"column":29,"nodeType":"4114","messageId":"4115","endLine":185,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4108","severity":1,"message":"4388","line":29,"column":6,"nodeType":"4110","endLine":29,"endColumn":8,"suggestions":"4636"},{"ruleId":"4112","severity":1,"message":"4113","line":137,"column":28,"nodeType":"4114","messageId":"4115","endLine":137,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":142,"column":30,"nodeType":"4114","messageId":"4115","endLine":142,"endColumn":32},{"ruleId":"4112","severity":1,"message":"4113","line":147,"column":32,"nodeType":"4114","messageId":"4115","endLine":147,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4099","line":6,"column":3,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4230","line":7,"column":3,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4231","line":8,"column":3,"nodeType":"4096","messageId":"4097","endLine":8,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4100","line":9,"column":3,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":8},{"ruleId":"4108","severity":1,"message":"4388","line":27,"column":6,"nodeType":"4110","endLine":27,"endColumn":8,"suggestions":"4637"},{"ruleId":"4112","severity":1,"message":"4113","line":135,"column":28,"nodeType":"4114","messageId":"4115","endLine":135,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":63,"column":32,"nodeType":"4114","messageId":"4115","endLine":63,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4638","line":10,"column":5,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4639","line":11,"column":5,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":20},{"ruleId":"4508","severity":1,"message":"4509","line":87,"column":153,"nodeType":"4114","messageId":"4510","endLine":87,"endColumn":154},{"ruleId":"4508","severity":1,"message":"4509","line":87,"column":156,"nodeType":"4114","messageId":"4510","endLine":87,"endColumn":157},{"ruleId":"4305","severity":1,"message":"4306","line":88,"column":38,"nodeType":"4307","messageId":"4308","endLine":88,"endColumn":39,"fix":"4640"},{"ruleId":"4513","severity":1,"message":"4514","line":93,"column":9,"nodeType":"4307","messageId":"4515","endLine":93,"endColumn":19},{"ruleId":"4117","severity":1,"message":"4118","line":148,"column":47,"nodeType":"4119","messageId":"4120","endLine":148,"endColumn":49},{"ruleId":"4117","severity":1,"message":"4118","line":182,"column":47,"nodeType":"4119","messageId":"4120","endLine":182,"endColumn":49},{"ruleId":"4112","severity":1,"message":"4116","line":274,"column":17,"nodeType":"4114","messageId":"4115","endLine":274,"endColumn":19},{"ruleId":"4117","severity":1,"message":"4118","line":289,"column":45,"nodeType":"4119","messageId":"4120","endLine":289,"endColumn":47},{"ruleId":"4117","severity":1,"message":"4118","line":367,"column":21,"nodeType":"4119","messageId":"4120","endLine":367,"endColumn":23},{"ruleId":"4513","severity":1,"message":"4514","line":410,"column":7,"nodeType":"4307","messageId":"4515","endLine":410,"endColumn":17},{"ruleId":"4513","severity":1,"message":"4514","line":412,"column":7,"nodeType":"4307","messageId":"4515","endLine":412,"endColumn":17},{"ruleId":"4513","severity":1,"message":"4514","line":421,"column":11,"nodeType":"4307","messageId":"4515","endLine":421,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4101","line":12,"column":9,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":13,"column":35,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4122","line":2,"column":54,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":60},{"ruleId":"4094","severity":1,"message":"4433","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4526","line":14,"column":7,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":13},{"ruleId":"4108","severity":1,"message":"4527","line":88,"column":6,"nodeType":"4110","endLine":88,"endColumn":14,"suggestions":"4641"},{"ruleId":"4184","severity":1,"message":"4185","line":148,"column":27,"nodeType":"4186","messageId":"4187","endLine":151,"endColumn":28,"fix":"4642"},{"ruleId":"4184","severity":1,"message":"4185","line":161,"column":23,"nodeType":"4186","messageId":"4187","endLine":164,"endColumn":28,"fix":"4643"},{"ruleId":"4112","severity":1,"message":"4113","line":171,"column":41,"nodeType":"4114","messageId":"4115","endLine":171,"endColumn":43},{"ruleId":"4491","severity":1,"message":"4492","line":171,"column":46,"nodeType":"4493","messageId":"4494","endLine":171,"endColumn":48},{"ruleId":"4491","severity":1,"message":"4492","line":171,"column":64,"nodeType":"4493","messageId":"4494","endLine":171,"endColumn":66},{"ruleId":"4491","severity":1,"message":"4495","line":171,"column":64,"nodeType":"4493","messageId":"4494","endLine":171,"endColumn":66},{"ruleId":"4112","severity":1,"message":"4113","line":171,"column":81,"nodeType":"4114","messageId":"4115","endLine":171,"endColumn":83},{"ruleId":"4491","severity":1,"message":"4495","line":171,"column":86,"nodeType":"4493","messageId":"4494","endLine":171,"endColumn":88},{"ruleId":"4112","severity":1,"message":"4113","line":176,"column":39,"nodeType":"4114","messageId":"4115","endLine":176,"endColumn":41},{"ruleId":"4112","severity":1,"message":"4113","line":179,"column":40,"nodeType":"4114","messageId":"4115","endLine":179,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":182,"column":42,"nodeType":"4114","messageId":"4115","endLine":182,"endColumn":44},{"ruleId":"4112","severity":1,"message":"4113","line":193,"column":44,"nodeType":"4114","messageId":"4115","endLine":193,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":221,"column":46,"nodeType":"4114","messageId":"4115","endLine":221,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4433","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4244","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4108","severity":1,"message":"4434","line":21,"column":6,"nodeType":"4110","endLine":21,"endColumn":14,"suggestions":"4644"},{"ruleId":"4112","severity":1,"message":"4116","line":25,"column":14,"nodeType":"4114","messageId":"4115","endLine":25,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":53,"column":41,"nodeType":"4114","messageId":"4115","endLine":53,"endColumn":43},{"ruleId":"4112","severity":1,"message":"4113","line":59,"column":32,"nodeType":"4114","messageId":"4115","endLine":59,"endColumn":34},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4101","line":14,"column":9,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":15,"column":35,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4144","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4102","line":25,"column":35,"nodeType":"4096","messageId":"4097","endLine":25,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4385","line":4,"column":41,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":52},{"ruleId":"4108","severity":1,"message":"4478","line":12,"column":6,"nodeType":"4110","endLine":12,"endColumn":11,"suggestions":"4645"},{"ruleId":"4094","severity":1,"message":"4525","line":1,"column":10,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4148","line":3,"column":10,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4102","line":23,"column":35,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4501","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4502","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4503","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4504","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4505","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4506","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4385","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4122","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4507","line":21,"column":17,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":20},{"ruleId":"4508","severity":1,"message":"4509","line":122,"column":153,"nodeType":"4114","messageId":"4510","endLine":122,"endColumn":154},{"ruleId":"4508","severity":1,"message":"4509","line":122,"column":156,"nodeType":"4114","messageId":"4510","endLine":122,"endColumn":157},{"ruleId":"4305","severity":1,"message":"4306","line":123,"column":33,"nodeType":"4307","messageId":"4308","endLine":123,"endColumn":34,"fix":"4646"},{"ruleId":"4117","severity":1,"message":"4118","line":198,"column":47,"nodeType":"4119","messageId":"4120","endLine":198,"endColumn":49},{"ruleId":"4117","severity":1,"message":"4118","line":228,"column":47,"nodeType":"4119","messageId":"4120","endLine":228,"endColumn":49},{"ruleId":"4094","severity":1,"message":"4512","line":229,"column":13,"nodeType":"4096","messageId":"4097","endLine":229,"endColumn":17},{"ruleId":"4112","severity":1,"message":"4116","line":320,"column":17,"nodeType":"4114","messageId":"4115","endLine":320,"endColumn":19},{"ruleId":"4117","severity":1,"message":"4118","line":335,"column":45,"nodeType":"4119","messageId":"4120","endLine":335,"endColumn":47},{"ruleId":"4117","severity":1,"message":"4118","line":416,"column":21,"nodeType":"4119","messageId":"4120","endLine":416,"endColumn":23},{"ruleId":"4513","severity":1,"message":"4514","line":466,"column":7,"nodeType":"4307","messageId":"4515","endLine":466,"endColumn":17},{"ruleId":"4513","severity":1,"message":"4514","line":468,"column":7,"nodeType":"4307","messageId":"4515","endLine":468,"endColumn":17},{"ruleId":"4513","severity":1,"message":"4514","line":478,"column":11,"nodeType":"4307","messageId":"4515","endLine":478,"endColumn":21},{"ruleId":"4112","severity":1,"message":"4113","line":665,"column":31,"nodeType":"4114","messageId":"4115","endLine":665,"endColumn":33},{"ruleId":"4516","severity":1,"message":"4517","line":667,"column":6,"nodeType":"4096","messageId":"4518","endLine":667,"endColumn":16},{"ruleId":"4112","severity":1,"message":"4113","line":813,"column":29,"nodeType":"4114","messageId":"4115","endLine":813,"endColumn":31},{"ruleId":"4519","severity":1,"message":"4520","line":815,"column":6,"nodeType":"4186","endLine":815,"endColumn":55},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4102","line":24,"column":35,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4501","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4502","line":5,"column":8,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4503","line":11,"column":3,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4504","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4505","line":13,"column":3,"nodeType":"4096","messageId":"4097","endLine":13,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4506","line":14,"column":3,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4385","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4122","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4507","line":20,"column":17,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":20},{"ruleId":"4508","severity":1,"message":"4509","line":121,"column":153,"nodeType":"4114","messageId":"4510","endLine":121,"endColumn":154},{"ruleId":"4508","severity":1,"message":"4509","line":121,"column":156,"nodeType":"4114","messageId":"4510","endLine":121,"endColumn":157},{"ruleId":"4305","severity":1,"message":"4306","line":122,"column":33,"nodeType":"4307","messageId":"4308","endLine":122,"endColumn":34,"fix":"4647"},{"ruleId":"4513","severity":1,"message":"4514","line":126,"column":9,"nodeType":"4307","messageId":"4515","endLine":126,"endColumn":19},{"ruleId":"4117","severity":1,"message":"4118","line":193,"column":47,"nodeType":"4119","messageId":"4120","endLine":193,"endColumn":49},{"ruleId":"4117","severity":1,"message":"4118","line":225,"column":47,"nodeType":"4119","messageId":"4120","endLine":225,"endColumn":49},{"ruleId":"4112","severity":1,"message":"4116","line":315,"column":17,"nodeType":"4114","messageId":"4115","endLine":315,"endColumn":19},{"ruleId":"4117","severity":1,"message":"4118","line":331,"column":45,"nodeType":"4119","messageId":"4120","endLine":331,"endColumn":47},{"ruleId":"4117","severity":1,"message":"4118","line":413,"column":21,"nodeType":"4119","messageId":"4120","endLine":413,"endColumn":23},{"ruleId":"4513","severity":1,"message":"4514","line":460,"column":7,"nodeType":"4307","messageId":"4515","endLine":460,"endColumn":17},{"ruleId":"4513","severity":1,"message":"4514","line":463,"column":7,"nodeType":"4307","messageId":"4515","endLine":463,"endColumn":17},{"ruleId":"4513","severity":1,"message":"4514","line":472,"column":11,"nodeType":"4307","messageId":"4515","endLine":472,"endColumn":21},{"ruleId":"4112","severity":1,"message":"4113","line":658,"column":33,"nodeType":"4114","messageId":"4115","endLine":658,"endColumn":35},{"ruleId":"4516","severity":1,"message":"4517","line":660,"column":8,"nodeType":"4096","messageId":"4518","endLine":660,"endColumn":18},{"ruleId":"4112","severity":1,"message":"4113","line":809,"column":29,"nodeType":"4114","messageId":"4115","endLine":809,"endColumn":31},{"ruleId":"4519","severity":1,"message":"4520","line":811,"column":6,"nodeType":"4186","endLine":811,"endColumn":55},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4122","line":2,"column":54,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":60},{"ruleId":"4094","severity":1,"message":"4192","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4244","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4326","line":19,"column":37,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":43},{"ruleId":"4094","severity":1,"message":"4522","line":24,"column":38,"nodeType":"4096","messageId":"4097","endLine":24,"endColumn":43},{"ruleId":"4112","severity":1,"message":"4116","line":32,"column":30,"nodeType":"4114","messageId":"4115","endLine":32,"endColumn":32},{"ruleId":"4094","severity":1,"message":"4523","line":38,"column":25,"nodeType":"4096","messageId":"4097","endLine":38,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4165","line":1,"column":17,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4122","line":2,"column":54,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":60},{"ruleId":"4094","severity":1,"message":"4192","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4244","line":7,"column":8,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4326","line":18,"column":37,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":43},{"ruleId":"4094","severity":1,"message":"4522","line":22,"column":38,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":43},{"ruleId":"4112","severity":1,"message":"4116","line":35,"column":22,"nodeType":"4114","messageId":"4115","endLine":35,"endColumn":24},{"ruleId":"4094","severity":1,"message":"4523","line":41,"column":17,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":83,"column":44,"nodeType":"4114","messageId":"4115","endLine":83,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":95,"column":24,"nodeType":"4114","messageId":"4115","endLine":95,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4113","line":106,"column":34,"nodeType":"4114","messageId":"4115","endLine":106,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":119,"column":31,"nodeType":"4114","messageId":"4115","endLine":119,"endColumn":33},{"ruleId":"4112","severity":1,"message":"4113","line":83,"column":44,"nodeType":"4114","messageId":"4115","endLine":83,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":95,"column":24,"nodeType":"4114","messageId":"4115","endLine":95,"endColumn":26},{"ruleId":"4112","severity":1,"message":"4113","line":106,"column":34,"nodeType":"4114","messageId":"4115","endLine":106,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":119,"column":31,"nodeType":"4114","messageId":"4115","endLine":119,"endColumn":33},{"ruleId":"4094","severity":1,"message":"4148","line":7,"column":10,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4254","line":9,"column":13,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4200","line":9,"column":45,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":54},{"ruleId":"4112","severity":1,"message":"4113","line":29,"column":50,"nodeType":"4114","messageId":"4115","endLine":29,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4648","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4649","line":23,"column":14,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":21},{"ruleId":"4117","severity":1,"message":"4118","line":52,"column":19,"nodeType":"4119","messageId":"4120","endLine":52,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4650","line":91,"column":11,"nodeType":"4096","messageId":"4097","endLine":91,"endColumn":24},{"ruleId":"4090","replacedBy":"4651"},{"ruleId":"4092","replacedBy":"4652"},{"ruleId":"4094","severity":1,"message":"4107","line":10,"column":17,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":25},{"ruleId":"4112","severity":1,"message":"4113","line":38,"column":49,"nodeType":"4114","messageId":"4115","endLine":38,"endColumn":51},{"ruleId":"4112","severity":1,"message":"4113","line":45,"column":47,"nodeType":"4114","messageId":"4115","endLine":45,"endColumn":49},{"ruleId":"4094","severity":1,"message":"4141","line":17,"column":9,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":10},{"ruleId":"4370","severity":1,"message":"4371","line":31,"column":1,"nodeType":"4372","endLine":33,"endColumn":5},{"ruleId":"4094","severity":1,"message":"4653","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4654","line":36,"column":11,"nodeType":"4096","messageId":"4097","endLine":36,"endColumn":19},{"ruleId":"4112","severity":1,"message":"4113","line":59,"column":24,"nodeType":"4114","messageId":"4115","endLine":59,"endColumn":26},{"ruleId":"4108","severity":1,"message":"4655","line":80,"column":6,"nodeType":"4110","endLine":80,"endColumn":24,"suggestions":"4656"},{"ruleId":"4094","severity":1,"message":"4200","line":81,"column":45,"nodeType":"4096","messageId":"4097","endLine":81,"endColumn":54},{"ruleId":"4094","severity":1,"message":"4102","line":81,"column":56,"nodeType":"4096","messageId":"4097","endLine":81,"endColumn":61},{"ruleId":"4117","severity":1,"message":"4118","line":89,"column":35,"nodeType":"4119","messageId":"4120","endLine":89,"endColumn":37},{"ruleId":"4112","severity":1,"message":"4113","line":203,"column":27,"nodeType":"4114","messageId":"4115","endLine":203,"endColumn":29},{"ruleId":"4117","severity":1,"message":"4118","line":306,"column":21,"nodeType":"4119","messageId":"4120","endLine":306,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":308,"column":14,"nodeType":"4114","messageId":"4115","endLine":308,"endColumn":16},{"ruleId":"4090","replacedBy":"4657"},{"ruleId":"4092","replacedBy":"4658"},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":5,"column":38,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":5,"column":49,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":5,"column":54,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4400","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4659","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4457","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4660","line":14,"column":8,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4661","line":16,"column":8,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4362","line":21,"column":12,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4662","line":21,"column":19,"nodeType":"4096","messageId":"4097","endLine":21,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4460","line":26,"column":12,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4461","line":26,"column":17,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":23},{"ruleId":"4108","severity":1,"message":"4450","line":56,"column":8,"nodeType":"4110","endLine":56,"endColumn":10,"suggestions":"4663"},{"ruleId":"4180","severity":1,"message":"4181","line":236,"column":21,"nodeType":"4182","messageId":"4183","endLine":236,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4664","line":1,"column":38,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":53},{"ruleId":"4094","severity":1,"message":"4166","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4167","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":17},{"ruleId":"4112","severity":1,"message":"4113","line":39,"column":46,"nodeType":"4114","messageId":"4115","endLine":39,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":42,"column":46,"nodeType":"4114","messageId":"4115","endLine":42,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4169","line":2,"column":8,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4099","line":5,"column":38,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":5,"column":49,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":5,"column":54,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4400","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4659","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4457","line":11,"column":8,"nodeType":"4096","messageId":"4097","endLine":11,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4362","line":22,"column":12,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4662","line":22,"column":19,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":27},{"ruleId":"4108","severity":1,"message":"4450","line":53,"column":8,"nodeType":"4110","endLine":53,"endColumn":10,"suggestions":"4665"},{"ruleId":"4112","severity":1,"message":"4113","line":189,"column":35,"nodeType":"4114","messageId":"4115","endLine":189,"endColumn":37},{"ruleId":"4112","severity":1,"message":"4113","line":210,"column":34,"nodeType":"4114","messageId":"4115","endLine":210,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":212,"column":34,"nodeType":"4114","messageId":"4115","endLine":212,"endColumn":36},{"ruleId":"4184","severity":1,"message":"4185","line":228,"column":25,"nodeType":"4186","messageId":"4187","endLine":231,"endColumn":20,"fix":"4666"},{"ruleId":"4112","severity":1,"message":"4113","line":234,"column":44,"nodeType":"4114","messageId":"4115","endLine":234,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4116","line":261,"column":29,"nodeType":"4114","messageId":"4115","endLine":261,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4116","line":261,"column":51,"nodeType":"4114","messageId":"4115","endLine":261,"endColumn":53},{"ruleId":"4112","severity":1,"message":"4116","line":265,"column":32,"nodeType":"4114","messageId":"4115","endLine":265,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4116","line":265,"column":54,"nodeType":"4114","messageId":"4115","endLine":265,"endColumn":56},{"ruleId":"4112","severity":1,"message":"4116","line":265,"column":75,"nodeType":"4114","messageId":"4115","endLine":265,"endColumn":77},{"ruleId":"4112","severity":1,"message":"4116","line":270,"column":33,"nodeType":"4114","messageId":"4115","endLine":270,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4116","line":270,"column":55,"nodeType":"4114","messageId":"4115","endLine":270,"endColumn":57},{"ruleId":"4180","severity":1,"message":"4181","line":319,"column":21,"nodeType":"4182","messageId":"4183","endLine":319,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4559","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4099","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4503","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4505","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4506","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4385","line":18,"column":3,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4122","line":19,"column":3,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4667","line":22,"column":10,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4125","line":23,"column":21,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4668","line":26,"column":10,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":20},{"ruleId":"4108","severity":1,"message":"4669","line":56,"column":8,"nodeType":"4110","endLine":56,"endColumn":10,"suggestions":"4670"},{"ruleId":"4112","severity":1,"message":"4113","line":114,"column":44,"nodeType":"4114","messageId":"4115","endLine":114,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":184,"column":32,"nodeType":"4114","messageId":"4115","endLine":184,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":205,"column":32,"nodeType":"4114","messageId":"4115","endLine":205,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4113","line":225,"column":43,"nodeType":"4114","messageId":"4115","endLine":225,"endColumn":45},{"ruleId":"4184","severity":1,"message":"4185","line":226,"column":21,"nodeType":"4186","messageId":"4187","endLine":226,"endColumn":76,"fix":"4671"},{"ruleId":"4112","severity":1,"message":"4113","line":251,"column":40,"nodeType":"4114","messageId":"4115","endLine":251,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":253,"column":28,"nodeType":"4114","messageId":"4115","endLine":253,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":263,"column":26,"nodeType":"4114","messageId":"4115","endLine":263,"endColumn":28},{"ruleId":"4112","severity":1,"message":"4113","line":303,"column":15,"nodeType":"4114","messageId":"4115","endLine":303,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4433","line":4,"column":10,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4227","line":54,"column":5,"nodeType":"4096","messageId":"4097","endLine":54,"endColumn":6},{"ruleId":"4094","severity":1,"message":"4227","line":65,"column":13,"nodeType":"4096","messageId":"4097","endLine":65,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4326","line":7,"column":36,"nodeType":"4096","messageId":"4097","endLine":7,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":20,"column":22,"nodeType":"4114","messageId":"4115","endLine":20,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4113","line":33,"column":28,"nodeType":"4114","messageId":"4115","endLine":33,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":46,"column":28,"nodeType":"4114","messageId":"4115","endLine":46,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":59,"column":27,"nodeType":"4114","messageId":"4115","endLine":59,"endColumn":29},{"ruleId":"4112","severity":1,"message":"4113","line":72,"column":27,"nodeType":"4114","messageId":"4115","endLine":72,"endColumn":29},{"ruleId":"4112","severity":1,"message":"4113","line":85,"column":28,"nodeType":"4114","messageId":"4115","endLine":85,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":174,"column":22,"nodeType":"4114","messageId":"4115","endLine":174,"endColumn":24},{"ruleId":"4112","severity":1,"message":"4113","line":174,"column":52,"nodeType":"4114","messageId":"4115","endLine":174,"endColumn":54},{"ruleId":"4112","severity":1,"message":"4113","line":174,"column":86,"nodeType":"4114","messageId":"4115","endLine":174,"endColumn":88},{"ruleId":"4094","severity":1,"message":"4200","line":18,"column":45,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":54},{"ruleId":"4094","severity":1,"message":"4200","line":18,"column":45,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":54},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4664","line":1,"column":38,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":53},{"ruleId":"4112","severity":1,"message":"4113","line":37,"column":46,"nodeType":"4114","messageId":"4115","endLine":37,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":40,"column":46,"nodeType":"4114","messageId":"4115","endLine":40,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4099","line":4,"column":38,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":4,"column":49,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":4,"column":54,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4362","line":14,"column":12,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4662","line":14,"column":19,"nodeType":"4096","messageId":"4097","endLine":14,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4460","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4461","line":19,"column":17,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":23},{"ruleId":"4094","severity":1,"message":"4421","line":41,"column":11,"nodeType":"4096","messageId":"4097","endLine":41,"endColumn":31},{"ruleId":"4108","severity":1,"message":"4450","line":49,"column":8,"nodeType":"4110","endLine":49,"endColumn":10,"suggestions":"4672"},{"ruleId":"4180","severity":1,"message":"4181","line":222,"column":21,"nodeType":"4182","messageId":"4183","endLine":222,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4099","line":4,"column":38,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":4,"column":49,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":4,"column":54,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4362","line":17,"column":12,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4662","line":17,"column":19,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4673","line":20,"column":12,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4674","line":20,"column":28,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":45},{"ruleId":"4108","severity":1,"message":"4450","line":43,"column":8,"nodeType":"4110","endLine":43,"endColumn":10,"suggestions":"4675"},{"ruleId":"4112","severity":1,"message":"4113","line":177,"column":35,"nodeType":"4114","messageId":"4115","endLine":177,"endColumn":37},{"ruleId":"4112","severity":1,"message":"4113","line":197,"column":34,"nodeType":"4114","messageId":"4115","endLine":197,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":199,"column":34,"nodeType":"4114","messageId":"4115","endLine":199,"endColumn":36},{"ruleId":"4184","severity":1,"message":"4185","line":216,"column":25,"nodeType":"4186","messageId":"4187","endLine":219,"endColumn":20,"fix":"4676"},{"ruleId":"4112","severity":1,"message":"4113","line":222,"column":44,"nodeType":"4114","messageId":"4115","endLine":222,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4116","line":249,"column":29,"nodeType":"4114","messageId":"4115","endLine":249,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4116","line":249,"column":51,"nodeType":"4114","messageId":"4115","endLine":249,"endColumn":53},{"ruleId":"4112","severity":1,"message":"4116","line":253,"column":32,"nodeType":"4114","messageId":"4115","endLine":253,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4116","line":253,"column":54,"nodeType":"4114","messageId":"4115","endLine":253,"endColumn":56},{"ruleId":"4112","severity":1,"message":"4116","line":253,"column":75,"nodeType":"4114","messageId":"4115","endLine":253,"endColumn":77},{"ruleId":"4112","severity":1,"message":"4116","line":258,"column":33,"nodeType":"4114","messageId":"4115","endLine":258,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4116","line":258,"column":55,"nodeType":"4114","messageId":"4115","endLine":258,"endColumn":57},{"ruleId":"4180","severity":1,"message":"4181","line":301,"column":21,"nodeType":"4182","messageId":"4183","endLine":301,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4653","line":19,"column":12,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":21},{"ruleId":"4112","severity":1,"message":"4113","line":59,"column":24,"nodeType":"4114","messageId":"4115","endLine":59,"endColumn":26},{"ruleId":"4108","severity":1,"message":"4655","line":80,"column":6,"nodeType":"4110","endLine":80,"endColumn":24,"suggestions":"4677"},{"ruleId":"4094","severity":1,"message":"4200","line":81,"column":45,"nodeType":"4096","messageId":"4097","endLine":81,"endColumn":54},{"ruleId":"4094","severity":1,"message":"4102","line":81,"column":56,"nodeType":"4096","messageId":"4097","endLine":81,"endColumn":61},{"ruleId":"4117","severity":1,"message":"4118","line":89,"column":35,"nodeType":"4119","messageId":"4120","endLine":89,"endColumn":37},{"ruleId":"4112","severity":1,"message":"4113","line":200,"column":27,"nodeType":"4114","messageId":"4115","endLine":200,"endColumn":29},{"ruleId":"4117","severity":1,"message":"4118","line":301,"column":21,"nodeType":"4119","messageId":"4120","endLine":301,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":303,"column":14,"nodeType":"4114","messageId":"4115","endLine":303,"endColumn":16},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4664","line":1,"column":38,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":53},{"ruleId":"4094","severity":1,"message":"4166","line":4,"column":8,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":13},{"ruleId":"4094","severity":1,"message":"4167","line":5,"column":10,"nodeType":"4096","messageId":"4097","endLine":5,"endColumn":17},{"ruleId":"4112","severity":1,"message":"4113","line":39,"column":46,"nodeType":"4114","messageId":"4115","endLine":39,"endColumn":48},{"ruleId":"4112","severity":1,"message":"4113","line":42,"column":46,"nodeType":"4114","messageId":"4115","endLine":42,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4099","line":4,"column":38,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":4,"column":49,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":4,"column":54,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":57},{"ruleId":"4094","severity":1,"message":"4362","line":17,"column":12,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4662","line":17,"column":19,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":27},{"ruleId":"4094","severity":1,"message":"4673","line":20,"column":12,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":26},{"ruleId":"4094","severity":1,"message":"4674","line":20,"column":28,"nodeType":"4096","messageId":"4097","endLine":20,"endColumn":45},{"ruleId":"4112","severity":1,"message":"4113","line":179,"column":35,"nodeType":"4114","messageId":"4115","endLine":179,"endColumn":37},{"ruleId":"4112","severity":1,"message":"4113","line":199,"column":34,"nodeType":"4114","messageId":"4115","endLine":199,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":201,"column":34,"nodeType":"4114","messageId":"4115","endLine":201,"endColumn":36},{"ruleId":"4184","severity":1,"message":"4185","line":219,"column":25,"nodeType":"4186","messageId":"4187","endLine":222,"endColumn":20,"fix":"4678"},{"ruleId":"4112","severity":1,"message":"4116","line":241,"column":29,"nodeType":"4114","messageId":"4115","endLine":241,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4116","line":241,"column":51,"nodeType":"4114","messageId":"4115","endLine":241,"endColumn":53},{"ruleId":"4112","severity":1,"message":"4116","line":245,"column":32,"nodeType":"4114","messageId":"4115","endLine":245,"endColumn":34},{"ruleId":"4112","severity":1,"message":"4116","line":245,"column":54,"nodeType":"4114","messageId":"4115","endLine":245,"endColumn":56},{"ruleId":"4112","severity":1,"message":"4116","line":245,"column":75,"nodeType":"4114","messageId":"4115","endLine":245,"endColumn":77},{"ruleId":"4112","severity":1,"message":"4116","line":250,"column":33,"nodeType":"4114","messageId":"4115","endLine":250,"endColumn":35},{"ruleId":"4112","severity":1,"message":"4116","line":250,"column":55,"nodeType":"4114","messageId":"4115","endLine":250,"endColumn":57},{"ruleId":"4180","severity":1,"message":"4181","line":295,"column":21,"nodeType":"4182","messageId":"4183","endLine":295,"endColumn":31},{"ruleId":"4112","severity":1,"message":"4113","line":57,"column":24,"nodeType":"4114","messageId":"4115","endLine":57,"endColumn":26},{"ruleId":"4108","severity":1,"message":"4679","line":76,"column":6,"nodeType":"4110","endLine":76,"endColumn":24,"suggestions":"4680"},{"ruleId":"4094","severity":1,"message":"4200","line":77,"column":45,"nodeType":"4096","messageId":"4097","endLine":77,"endColumn":54},{"ruleId":"4094","severity":1,"message":"4102","line":77,"column":56,"nodeType":"4096","messageId":"4097","endLine":77,"endColumn":61},{"ruleId":"4117","severity":1,"message":"4118","line":85,"column":35,"nodeType":"4119","messageId":"4120","endLine":85,"endColumn":37},{"ruleId":"4117","severity":1,"message":"4118","line":238,"column":21,"nodeType":"4119","messageId":"4120","endLine":238,"endColumn":23},{"ruleId":"4112","severity":1,"message":"4113","line":240,"column":9,"nodeType":"4114","messageId":"4115","endLine":240,"endColumn":11},{"ruleId":"4094","severity":1,"message":"4099","line":4,"column":38,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":47},{"ruleId":"4094","severity":1,"message":"4230","line":4,"column":49,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4231","line":4,"column":54,"nodeType":"4096","messageId":"4097","endLine":4,"endColumn":57},{"ruleId":"4180","severity":1,"message":"4181","line":197,"column":21,"nodeType":"4182","messageId":"4183","endLine":197,"endColumn":31},{"ruleId":"4094","severity":1,"message":"4102","line":22,"column":37,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":42},{"ruleId":"4094","severity":1,"message":"4681","line":9,"column":8,"nodeType":"4096","messageId":"4097","endLine":9,"endColumn":17},{"ruleId":"4094","severity":1,"message":"4101","line":12,"column":9,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4682","line":3,"column":37,"nodeType":"4096","messageId":"4097","endLine":3,"endColumn":48},{"ruleId":"4094","severity":1,"message":"4559","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4099","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4503","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4505","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4506","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4385","line":18,"column":3,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4122","line":19,"column":3,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4667","line":22,"column":10,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4125","line":23,"column":21,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4668","line":26,"column":10,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4683","line":34,"column":12,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4684","line":35,"column":12,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":21},{"ruleId":"4108","severity":1,"message":"4669","line":55,"column":8,"nodeType":"4110","endLine":55,"endColumn":10,"suggestions":"4685"},{"ruleId":"4094","severity":1,"message":"4686","line":56,"column":8,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":17},{"ruleId":"4112","severity":1,"message":"4113","line":113,"column":44,"nodeType":"4114","messageId":"4115","endLine":113,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":164,"column":34,"nodeType":"4114","messageId":"4115","endLine":164,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":182,"column":34,"nodeType":"4114","messageId":"4115","endLine":182,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":202,"column":43,"nodeType":"4114","messageId":"4115","endLine":202,"endColumn":45},{"ruleId":"4184","severity":1,"message":"4185","line":203,"column":21,"nodeType":"4186","messageId":"4187","endLine":203,"endColumn":76,"fix":"4687"},{"ruleId":"4112","severity":1,"message":"4113","line":228,"column":40,"nodeType":"4114","messageId":"4115","endLine":228,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":230,"column":28,"nodeType":"4114","messageId":"4115","endLine":230,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":232,"column":26,"nodeType":"4114","messageId":"4115","endLine":232,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4688","line":246,"column":13,"nodeType":"4096","messageId":"4097","endLine":246,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4559","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4099","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4503","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4505","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4506","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4385","line":18,"column":3,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4122","line":19,"column":3,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4667","line":22,"column":10,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4125","line":23,"column":21,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4668","line":26,"column":10,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4683","line":34,"column":12,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4684","line":35,"column":12,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":21},{"ruleId":"4108","severity":1,"message":"4669","line":55,"column":8,"nodeType":"4110","endLine":55,"endColumn":10,"suggestions":"4689"},{"ruleId":"4094","severity":1,"message":"4686","line":56,"column":8,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":17},{"ruleId":"4112","severity":1,"message":"4113","line":113,"column":44,"nodeType":"4114","messageId":"4115","endLine":113,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":164,"column":34,"nodeType":"4114","messageId":"4115","endLine":164,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":182,"column":34,"nodeType":"4114","messageId":"4115","endLine":182,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":202,"column":43,"nodeType":"4114","messageId":"4115","endLine":202,"endColumn":45},{"ruleId":"4184","severity":1,"message":"4185","line":203,"column":21,"nodeType":"4186","messageId":"4187","endLine":203,"endColumn":76,"fix":"4690"},{"ruleId":"4112","severity":1,"message":"4113","line":228,"column":40,"nodeType":"4114","messageId":"4115","endLine":228,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":230,"column":28,"nodeType":"4114","messageId":"4115","endLine":230,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":232,"column":26,"nodeType":"4114","messageId":"4115","endLine":232,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4688","line":246,"column":13,"nodeType":"4096","messageId":"4097","endLine":246,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4559","line":6,"column":8,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":19},{"ruleId":"4094","severity":1,"message":"4099","line":12,"column":3,"nodeType":"4096","messageId":"4097","endLine":12,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4503","line":15,"column":3,"nodeType":"4096","messageId":"4097","endLine":15,"endColumn":8},{"ruleId":"4094","severity":1,"message":"4505","line":16,"column":3,"nodeType":"4096","messageId":"4097","endLine":16,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4506","line":17,"column":3,"nodeType":"4096","messageId":"4097","endLine":17,"endColumn":12},{"ruleId":"4094","severity":1,"message":"4385","line":18,"column":3,"nodeType":"4096","messageId":"4097","endLine":18,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4122","line":19,"column":3,"nodeType":"4096","messageId":"4097","endLine":19,"endColumn":9},{"ruleId":"4094","severity":1,"message":"4667","line":22,"column":10,"nodeType":"4096","messageId":"4097","endLine":22,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4125","line":23,"column":21,"nodeType":"4096","messageId":"4097","endLine":23,"endColumn":25},{"ruleId":"4094","severity":1,"message":"4668","line":26,"column":10,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":20},{"ruleId":"4094","severity":1,"message":"4683","line":34,"column":12,"nodeType":"4096","messageId":"4097","endLine":34,"endColumn":21},{"ruleId":"4094","severity":1,"message":"4684","line":35,"column":12,"nodeType":"4096","messageId":"4097","endLine":35,"endColumn":21},{"ruleId":"4108","severity":1,"message":"4669","line":55,"column":8,"nodeType":"4110","endLine":55,"endColumn":10,"suggestions":"4691"},{"ruleId":"4094","severity":1,"message":"4686","line":56,"column":8,"nodeType":"4096","messageId":"4097","endLine":56,"endColumn":17},{"ruleId":"4112","severity":1,"message":"4113","line":113,"column":44,"nodeType":"4114","messageId":"4115","endLine":113,"endColumn":46},{"ruleId":"4112","severity":1,"message":"4113","line":164,"column":34,"nodeType":"4114","messageId":"4115","endLine":164,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":182,"column":34,"nodeType":"4114","messageId":"4115","endLine":182,"endColumn":36},{"ruleId":"4112","severity":1,"message":"4113","line":202,"column":43,"nodeType":"4114","messageId":"4115","endLine":202,"endColumn":45},{"ruleId":"4184","severity":1,"message":"4185","line":203,"column":21,"nodeType":"4186","messageId":"4187","endLine":203,"endColumn":76,"fix":"4692"},{"ruleId":"4112","severity":1,"message":"4113","line":228,"column":40,"nodeType":"4114","messageId":"4115","endLine":228,"endColumn":42},{"ruleId":"4112","severity":1,"message":"4113","line":230,"column":28,"nodeType":"4114","messageId":"4115","endLine":230,"endColumn":30},{"ruleId":"4112","severity":1,"message":"4113","line":232,"column":26,"nodeType":"4114","messageId":"4115","endLine":232,"endColumn":28},{"ruleId":"4094","severity":1,"message":"4688","line":246,"column":13,"nodeType":"4096","messageId":"4097","endLine":246,"endColumn":22},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4144","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4244","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4102","line":26,"column":35,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":40},{"ruleId":"4094","severity":1,"message":"4155","line":1,"column":27,"nodeType":"4096","messageId":"4097","endLine":1,"endColumn":36},{"ruleId":"4094","severity":1,"message":"4385","line":2,"column":41,"nodeType":"4096","messageId":"4097","endLine":2,"endColumn":52},{"ruleId":"4094","severity":1,"message":"4144","line":6,"column":10,"nodeType":"4096","messageId":"4097","endLine":6,"endColumn":18},{"ruleId":"4094","severity":1,"message":"4244","line":10,"column":8,"nodeType":"4096","messageId":"4097","endLine":10,"endColumn":14},{"ruleId":"4094","severity":1,"message":"4170","line":26,"column":9,"nodeType":"4096","messageId":"4097","endLine":26,"endColumn":15},{"ruleId":"4094","severity":1,"message":"4102","line":27,"column":35,"nodeType":"4096","messageId":"4097","endLine":27,"endColumn":40},"no-native-reassign",["4693"],"no-negated-in-lhs",["4694"],"no-unused-vars","'LoginFun' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'CardTitle' is defined but never used.","'Table' is defined but never used.","'alert' is assigned a value but never used.","'reset' is assigned a value but never used.","'store' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getQuery'. Either include it or remove the dependency array.","ArrayExpression",["4695"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useRef' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'getTime'. Either include it or remove the dependency array.",["4696"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["4697"],"'history' is assigned a value but never used.","'declinedStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQuery' and 'id'. Either include them or remove the dependency array.",["4698"],"'GetOTP' is defined but never used.","'phone2' is assigned a value but never used.","'setStore' is assigned a value but never used.","'setpassError' is assigned a value but never used.","'changeNum' is assigned a value but never used.","'setChangeNum' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'CountryNumStyle' is assigned a value but never used.",["4699"],"'s' is assigned a value but never used.","Array.prototype.filter() expects a return value from arrow function.","'CardBody' is defined but never used.","'useAlert' is defined but never used.","React Hook useEffect has missing dependencies: 'CountAllQuery', 'CountDeclined', 'CountInprogressAllocation', and 'CountInprogressProposal'. Either include them or remove the dependency array.",["4700"],"'Controller' is defined but never used.","'Spinner' is defined but never used.","'custError' is assigned a value but never used.","'b' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAcceptedProposal', 'getAllProposal', 'getDeclinedProposal', and 'getInprogressProposal'. Either include them or remove the dependency array.",["4701"],"React Hook useEffect has missing dependencies: 'getAllAssignment', 'getCompletedAssignment', 'getCustomerDeclinedPayment', and 'getInprogressAssignment'. Either include them or remove the dependency array.",["4702"],"'useEffect' is defined but never used.","'classNames' is defined but never used.","'amount_fixed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalDetails'. Either include it or remove the dependency array.",["4703"],"'yupResolver' is defined but never used.","'yup' is defined but never used.","'Swal' is defined but never used.",["4704"],["4705"],"'useState' is defined but never used.","'axios' is defined but never used.","'baseUrl' is defined but never used.","'thankyour' is assigned a value but never used.","'Layout' is defined but never used.","'userId' is assigned a value but never used.","'Tooltip' is defined but never used.","React Hook useEffect has a missing dependency: 'getChatting'. Either include it or remove the dependency array.",["4706"],"'Loader' is defined but never used.","'Markup' is defined but never used.","'val3' is assigned a value but never used.","'setVal3' is assigned a value but never used.",["4707"],"'timer' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"4708","text":"4709"},"'message_type' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.obj'. Either include it or remove the dependency array.",["4710"],"'CommonServices' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMessage'. Either include it or remove the dependency array.",["4711"],["4712"],"React Hook useEffect has missing dependencies: 'getAllPaid', 'getPaid', and 'getUnpaid'. Either include them or remove the dependency array.",["4713"],"'getValues' is assigned a value but never used.","'nn' is assigned a value but never used.","'mcatname' is assigned a value but never used.","'custCate2' is assigned a value but never used.","'postValue' is assigned a value but never used.","'emailPost' is assigned a value but never used.","'setEmailPost' is assigned a value but never used.","'valiEmailPost' is assigned a value but never used.","'setValiemailPost' is assigned a value but never used.","'invalidPost' is assigned a value but never used.","'setInvalidPost' is assigned a value but never used.","'wEmailPost' is assigned a value but never used.","'setWemailPost' is assigned a value but never used.","'display' is assigned a value but never used.","no-redeclare","'categeryName' is already defined.","redeclared","'allData1' is assigned a value but never used.","'emailHandler' is assigned a value but never used.","'emailValidation' is assigned a value but never used.","'email' is assigned a value but never used.","'post1' is assigned a value but never used.","'setPost1' is assigned a value but never used.","'post_name' is defined but never used.","'teamleader1' is assigned a value but never used.","'kk' is assigned a value but never used.","'parentCategoryName' is assigned a value but never used.","'a' is assigned a value but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'setDisplayQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["4714"],"'Redirect' is defined but never used.","'expectedDate' is assigned a value but never used.","'tlkey' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueryData'. Either include it or remove the dependency array.",["4715"],["4716"],"'expdeliverydate' is assigned a value but never used.","'expectedDeliveryDate' is assigned a value but never used.","'Reset' is defined but never used.","'Alerts' is defined but never used.","'Option' is assigned a value but never used.","'store2' is assigned a value but never used.","'setStore2' is assigned a value but never used.","'mcategory' is assigned a value but never used.","'mdata' is assigned a value but never used.","'setmdata' is assigned a value but never used.","'mdataName' is assigned a value but never used.","'setMdataname' is assigned a value but never used.","'error2' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'register' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTeamLeader'. Either include it or remove the dependency array.",["4717"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'createContext' is defined but never used.","'TaxProffesionalService' is defined but never used.","'numAvail' is assigned a value but never used.","'teamleader' is assigned a value but never used.","'setTeamLeader' is assigned a value but never used.","'tl' is assigned a value but never used.","'setTl' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'post_na' is assigned a value but never used.","'setPost_na' is assigned a value but never used.","'a' is defined but never used.","'dirvalue' is assigned a value but never used.","'indirvalue' is assigned a value but never used.","'allsubcatvalue' is assigned a value but never used.","'vv' is already defined.","React Hook useEffect has a missing dependency: 'getTutorial'. Either include it or remove the dependency array.",["4718"],"'subCat' is assigned a value but never used.","'setsubCat' is assigned a value but never used.",["4719"],"'dd' is assigned a value but never used.","'del' is assigned a value but never used.","'myPurpose' is assigned a value but never used.","'setPurpose' is assigned a value but never used.",["4720"],"'userid' is assigned a value but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.","'Recording' is defined but never used.","'tabIndex' is assigned a value but never used.","'setTabIndex' is assigned a value but never used.",["4721"],"Block is redundant.","redundantBlock",["4722"],["4723"],"'getId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getRecording'. Either include it or remove the dependency array.",["4724"],"'digit2' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"4725","text":"4726"},"'deleteCliente' is assigned a value but never used.","'subCategory' is assigned a value but never used.","'setSubCategory' is assigned a value but never used.","'custCate' is assigned a value but never used.","'categoryData' is assigned a value but never used.","'dir' is assigned a value but never used.","'indir' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getTeamLeader'. Either include them or remove the dependency array.",["4727"],"React Hook useEffect has a missing dependency: 'getTaxProf'. Either include it or remove the dependency array.",["4728"],"'admin_declined_query' is assigned a value but never used.","'customer_declined_Query' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["4729"],"'todaysDate' is assigned a value but never used.","'errors' is assigned a value but never used.",["4730"],"'result' is defined but never used.","'clientDiscussion' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentList'. Either include it or remove the dependency array.",["4731"],["4732"],"'declined2' is assigned a value but never used.",["4733"],"'tpkey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQueryData' and 'getTaxProfession'. Either include them or remove the dependency array.",["4734"],["4735"],"React Hook useEffect has a missing dependency: 'getFeedback'. Either include it or remove the dependency array.",["4736"],["4737"],["4738"],"'declined' is assigned a value but never used.",["4739"],"React Hook useEffect has missing dependencies: 'getAdditionalQuery' and 'getQueryDetails'. Either include them or remove the dependency array.",["4740"],"React Hook useEffect has a missing dependency: 'getReport'. Either include it or remove the dependency array.",["4741"],{"range":"4742","text":"4709"},"'setValue' is assigned a value but never used.",["4743"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["4744"],{"range":"4745","text":"4709"},["4746"],["4747"],["4748"],"React Hook useEffect has a missing dependency: 'checkAssigned'. Either include it or remove the dependency array.",["4749"],"'myStyle1' is assigned a value but never used.","'myStyle2' is assigned a value but never used.","'count' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPaymentStatus'. Either include it or remove the dependency array.",["4750"],"'id' is assigned a value but never used.",["4751"],["4752"],"'defaultSorted' is assigned a value but never used.","'Footer' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'MonthView' is defined but never used.","'DragDropProvider' is defined but never used.","'em' is assigned a value but never used.","'SetbaseMode' is assigned a value but never used.","'SetTranscode' is assigned a value but never used.","'SetAttendeeMode' is assigned a value but never used.","'SetVideoProfile' is assigned a value but never used.","'setCurrentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAssignmentNo', 'getData', and 'getUsers'. Either include them or remove the dependency array.",["4753"],"'msg' is already defined.","'variable' is already defined.","'ModalFooter' is defined but never used.","'ModalVideo' is defined but never used.",["4754"],"React Hook useEffect has a missing dependency: 'getInCompleteAssingment'. Either include it or remove the dependency array.",["4755"],"'OptGroup' is assigned a value but never used.","'setId' is assigned a value but never used.","'hide' is assigned a value but never used.","'setHide' is assigned a value but never used.",["4756"],"'assingmentStatus' is assigned a value but never used.","'finalId' is assigned a value but never used.","'setFinalId' is assigned a value but never used.","'status' is assigned a value but never used.",["4757"],"'TeamFilter' is defined but never used.","'Cookies' is defined but never used.","'baseMode' is assigned a value but never used.","'transcode' is assigned a value but never used.","'attendeeMode' is assigned a value but never used.","'videoProfile' is assigned a value but never used.",["4758"],"'ChangeHistoryIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'cust_id' is assigned a value but never used.",["4759"],"'useFieldArray' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'userid'. Either include them or remove the dependency array.",["4760"],["4761"],{"range":"4762","text":"4709"},["4763"],{"range":"4764","text":"4709"},"'useParams' is defined but never used.","'assignNo' is assigned a value but never used.","'ViewDiscussionToggel' is assigned a value but never used.",["4765"],["4766"],"React Hook useEffect has a missing dependency: 'getPendingforAcceptance'. Either include it or remove the dependency array.",["4767"],"'amount' is assigned a value but never used.","'payment_terms' is assigned a value but never used.","'no_of_installment' is assigned a value but never used.","'installment_amount' is assigned a value but never used.","'amount_type' is assigned a value but never used.","'amount_hourly' is assigned a value but never used.","'installAmount' is assigned a value but never used.","'useForm' is defined but never used.","React Hook useEffect has a missing dependency: 'getHistory'. Either include it or remove the dependency array.",["4768"],"'ChangeFormateDate' is defined but never used.","'name' is assigned a value but never used.","'records' is assigned a value but never used.","'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'getFeedback2'. Either include it or remove the dependency array.",["4769"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'selectedData' is assigned a value but never used.","'tax2' is assigned a value but never used.","'setTax2' is assigned a value but never used.","'status1' is assigned a value but never used.","'item' is assigned a value but never used.","'chatHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalList'. Either include it or remove the dependency array.",["4770"],{"range":"4771","text":"4709"},["4772"],{"range":"4773","text":"4709"},["4774"],{"range":"4775","text":"4709"},"'AccountBalanceIcon' is defined but never used.","'id2' is assigned a value but never used.","'setId2' is assigned a value but never used.","'tds' is assigned a value but never used.","'setTds' is assigned a value but never used.",["4776"],{"range":"4777","text":"4709"},"'useHistory' is defined but never used.","'AdditionalQuery' is defined but never used.","'AddAdditionalQuery' is defined but never used.","'DraftReports' is defined but never used.","'setSelectedData' is assigned a value but never used.","'loading' is assigned a value but never used.","'setShowVideoIcon' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getUsers'. Either include them or remove the dependency array.",["4778"],"'Select' is defined but never used.","'paymentcount' is assigned a value but never used.",{"range":"4779","text":"4709"},["4780"],"'assignment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNotification'. Either include it or remove the dependency array.",["4781"],"'feedbackNumber' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'ReactHlsPlayer' is defined but never used.",["4782"],{"range":"4783","text":"4709"},{"range":"4784","text":"4709"},"'date_of_delivery' is assigned a value but never used.","'cust_accept_date' is assigned a value but never used.","'timeTaken' is assigned a value but never used.","'difference' is assigned a value but never used.",{"range":"4785","text":"4709"},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","'tlname' is assigned a value but never used.",{"range":"4786","text":"4709"},{"range":"4787","text":"4709"},{"range":"4788","text":"4709"},["4789"],"'MicNoneIcon' is defined but never used.","'MicOffIcon' is defined but never used.","'Modal' is defined but never used.","'ModalTitle' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'red' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",{"range":"4790","text":"4791"},"'dom2' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","noDirectMutation","no-use-before-define","'resourceId' was used before it was defined.","usedBeforeDefined","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["4792"],"'start' is assigned a value but never used.","'fileList' is assigned a value but never used.","'formData2' is assigned a value but never used.","'values' is defined but never used.","'Schema' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["4793"],{"range":"4794","text":"4709"},{"range":"4795","text":"4709"},{"range":"4796","text":"4709"},"'AdminFilter' is defined but never used.","'assignmentCount' is assigned a value but never used.","'viewData' is assigned a value but never used.","'ViewHandler' is assigned a value but never used.","'useContext' is defined but never used.","'DataValue' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllQueriesData'. Either include it or remove the dependency array.",["4797"],{"range":"4798","text":"4709"},{"range":"4799","text":"4709"},{"range":"4800","text":"4709"},"'NavLink' is defined but never used.",{"range":"4801","text":"4709"},"'viewStyle' is assigned a value but never used.",["4802"],{"range":"4803","text":"4709"},{"range":"4804","text":"4709"},"'IntegratedEditing' is defined but never used.","'owner' is assigned a value but never used.",["4805"],"'messages' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'ReportUrl' is defined but never used.","'FeedbackIcon' is defined but never used.","'PaymentModal' is defined but never used.","'RejectedModal' is defined but never used.","'PaymentIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getAssignmentData'. Either include it or remove the dependency array.",["4806"],["4807"],"'dataItem' is assigned a value but never used.",["4808"],"'acceptHandler' is assigned a value but never used.","'rejectedItem' is assigned a value but never used.","'rejectHandler' is assigned a value but never used.",["4809"],"'proposalCount' is assigned a value but never used.","'reject' is assigned a value but never used.","'setRejected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalData'. Either include it or remove the dependency array.",["4810"],["4811"],{"range":"4812","text":"4709"},["4813"],{"range":"4814","text":"4709"},"'rejected' is assigned a value but never used.",["4815"],{"range":"4816","text":"4709"},"'useMemo' is defined but never used.","'queriesCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueriesData'. Either include it or remove the dependency array.",["4817"],"Unexpected mix of '>' and '==='. Use parentheses to clarify the intended order of operations.",["4818"],"'arr' is assigned a value but never used.","'date' is defined but never used.","'setLoading' is assigned a value but never used.",["4819"],"'DiscardReport' is defined but never used.","'PublishIcon' is defined but never used.",["4820"],"'Header' is defined but never used.",["4821"],["4822"],"'TaxProfessionalFilter' is defined but never used.",["4823"],["4824"],["4825"],["4826"],["4827"],["4828"],["4829"],"'localeData' is defined but never used.",["4830"],["4831"],"'complete' is assigned a value but never used.",["4832"],["4833"],["4834"],"'variable' is assigned a value but never used.",{"range":"4835","text":"4709"},{"range":"4836","text":"4709"},["4837"],["4838"],["4839"],["4840"],{"range":"4841","text":"4709"},["4842"],["4843"],{"range":"4844","text":"4709"},["4845"],["4846"],{"range":"4847","text":"4709"},["4848"],["4849"],{"range":"4850","text":"4709"},["4851"],{"range":"4852","text":"4709"},["4853"],{"range":"4854","text":"4709"},["4855"],["4856"],["4857"],["4858"],["4859"],"'customer_id' is assigned a value but never used.","'customer_secret' is assigned a value but never used.",{"range":"4860","text":"4861"},["4862"],{"range":"4863","text":"4709"},{"range":"4864","text":"4709"},["4865"],["4866"],{"range":"4867","text":"4791"},{"range":"4868","text":"4791"},"'CateFun' is defined but never used.","'options' is assigned a value but never used.","'valueProvider' is assigned a value but never used.",["4693"],["4694"],"'services2' is assigned a value but never used.","'disabled' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cgetRate', 'getDataild', 'props.billNo', 'props.generated', 'props.gstNo', and 'tdsRate'. Either include them or remove the dependency array. If 'setGstNum' needs the current value of 'props.gstNo', you can also switch to useReducer instead of useState and read 'props.gstNo' in the reducer.",["4869"],["4693"],["4694"],"'ChatHistory' is defined but never used.","'OutlinedInputIcons' is defined but never used.","'DescriptionOutlinedIcon' is defined but never used.","'setCount' is assigned a value but never used.",["4870"],"'useLayoutEffect' is defined but never used.",["4871"],{"range":"4872","text":"4709"},"'baseUrl2' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'paydetails2'. Either include it or remove the dependency array.",["4873"],{"range":"4874","text":"4709"},["4875"],"'ViewDiscussion' is assigned a value but never used.","'setViewDiscussion' is assigned a value but never used.",["4876"],{"range":"4877","text":"4709"},["4878"],{"range":"4879","text":"4709"},"React Hook useEffect has missing dependencies: 'cgetRate', 'getDataild', 'props.billNo', 'props.generated', 'props.gstNo', 'props.id', and 'tdsRate'. Either include them or remove the dependency array. If 'setGstNum' needs the current value of 'props.gstNo', you can also switch to useReducer instead of useState and read 'props.gstNo' in the reducer.",["4880"],"'LoginForm' is defined but never used.","'draftToHtml' is defined but never used.","'modalData' is assigned a value but never used.","'showTable' is assigned a value but never used.",["4881"],"'openModal' is assigned a value but never used.",{"range":"4882","text":"4709"},"'Container' is assigned a value but never used.",["4883"],{"range":"4884","text":"4709"},["4885"],{"range":"4886","text":"4709"},"no-global-assign","no-unsafe-negation",{"desc":"4887","fix":"4888"},{"desc":"4889","fix":"4890"},{"desc":"4891","fix":"4892"},{"desc":"4893","fix":"4894"},{"desc":"4889","fix":"4895"},{"desc":"4896","fix":"4897"},{"desc":"4898","fix":"4899"},{"desc":"4900","fix":"4901"},{"desc":"4902","fix":"4903"},{"desc":"4889","fix":"4904"},{"desc":"4889","fix":"4905"},{"desc":"4906","fix":"4907"},{"desc":"4887","fix":"4908"},[18331,18331]," rel=\"noreferrer\"",{"desc":"4909","fix":"4910"},{"desc":"4911","fix":"4912"},{"desc":"4911","fix":"4913"},{"desc":"4914","fix":"4915"},{"desc":"4916","fix":"4917"},{"desc":"4918","fix":"4919"},{"desc":"4920","fix":"4921"},{"desc":"4922","fix":"4923"},{"desc":"4924","fix":"4925"},{"desc":"4926","fix":"4927"},{"desc":"4916","fix":"4928"},{"desc":"4911","fix":"4929"},{"desc":"4909","fix":"4930"},{"desc":"4906","fix":"4931"},{"desc":"4932","fix":"4933"},[3946,3954],"\n      .",{"desc":"4934","fix":"4935"},{"desc":"4936","fix":"4937"},{"desc":"4938","fix":"4939"},{"desc":"4940","fix":"4941"},{"desc":"4942","fix":"4943"},{"desc":"4938","fix":"4944"},{"desc":"4893","fix":"4945"},{"desc":"4946","fix":"4947"},{"desc":"4920","fix":"4948"},{"desc":"4949","fix":"4950"},{"desc":"4914","fix":"4951"},{"desc":"4938","fix":"4952"},{"desc":"4938","fix":"4953"},{"desc":"4954","fix":"4955"},{"desc":"4956","fix":"4957"},[2347,2347],{"desc":"4942","fix":"4958"},{"desc":"4959","fix":"4960"},[12748,12748],{"desc":"4906","fix":"4961"},{"desc":"4911","fix":"4962"},{"desc":"4963","fix":"4964"},{"desc":"4965","fix":"4966"},{"desc":"4967","fix":"4968"},{"desc":"4967","fix":"4969"},{"desc":"4967","fix":"4970"},{"desc":"4971","fix":"4972"},{"desc":"4932","fix":"4973"},{"desc":"4974","fix":"4975"},{"desc":"4942","fix":"4976"},{"desc":"4942","fix":"4977"},{"desc":"4942","fix":"4978"},{"desc":"4967","fix":"4979"},{"desc":"4980","fix":"4981"},{"desc":"4967","fix":"4982"},[17026,17026],{"desc":"4967","fix":"4983"},[16807,16807],{"desc":"4974","fix":"4984"},{"desc":"4974","fix":"4985"},{"desc":"4986","fix":"4987"},{"desc":"4988","fix":"4989"},{"desc":"4990","fix":"4991"},{"desc":"4992","fix":"4993"},[9230,9230],{"desc":"4992","fix":"4994"},[9260,9260],{"desc":"4992","fix":"4995"},[11733,11733],{"desc":"4992","fix":"4996"},[10355,10355],{"desc":"4997","fix":"4998"},[12976,12976],{"desc":"4988","fix":"4999"},{"desc":"5000","fix":"5001"},{"desc":"4932","fix":"5002"},[2139,2139],[1219,1219],[3829,3829],[7935,7935],[8212,8212],[2333,2333],{"desc":"4988","fix":"5003"},[3364,3369],"\n   .",{"desc":"5004","fix":"5005"},{"desc":"5006","fix":"5007"},[4090,4090],[4605,4605],[13680,13680],{"desc":"5008","fix":"5009"},[6184,6184],[6245,6245],[6107,6107],[6745,6745],{"desc":"5006","fix":"5010"},[2913,2913],[3427,3427],{"desc":"4971","fix":"5011"},{"desc":"5012","fix":"5013"},{"desc":"5012","fix":"5014"},{"desc":"5012","fix":"5015"},{"desc":"5012","fix":"5016"},{"desc":"5017","fix":"5018"},{"desc":"5017","fix":"5019"},[9707,9707],{"desc":"5017","fix":"5020"},[11266,11266],{"desc":"5017","fix":"5021"},[11364,11364],{"desc":"5022","fix":"5023"},{"desc":"5022","fix":"5024"},{"desc":"5022","fix":"5025"},{"desc":"5022","fix":"5026"},{"desc":"4887","fix":"5027"},{"desc":"4906","fix":"5028"},{"desc":"4932","fix":"5029"},{"desc":"4949","fix":"5030"},{"desc":"4911","fix":"5031"},{"desc":"4963","fix":"5032"},{"desc":"4914","fix":"5033"},{"desc":"4942","fix":"5034"},{"desc":"4938","fix":"5035"},{"desc":"4938","fix":"5036"},{"desc":"4938","fix":"5037"},{"desc":"4938","fix":"5038"},{"desc":"4893","fix":"5039"},{"desc":"5006","fix":"5040"},[4616,4616],[5131,5131],{"desc":"4942","fix":"5041"},{"desc":"4942","fix":"5042"},{"desc":"4942","fix":"5043"},{"desc":"4967","fix":"5044"},[16612,16612],{"desc":"4967","fix":"5045"},{"desc":"4967","fix":"5046"},[16449,16449],{"desc":"4971","fix":"5047"},{"desc":"4992","fix":"5048"},[10009,10009],{"desc":"4980","fix":"5049"},{"desc":"4992","fix":"5050"},[9905,9905],{"desc":"4992","fix":"5051"},[8967,8967],{"desc":"4992","fix":"5052"},[9233,9233],{"desc":"4974","fix":"5053"},{"desc":"4986","fix":"5054"},{"desc":"4974","fix":"5055"},{"desc":"4974","fix":"5056"},{"desc":"4974","fix":"5057"},[2424,2434],"\n        .",{"desc":"5006","fix":"5058"},[4096,4096],[4610,4610],{"desc":"4988","fix":"5059"},{"desc":"5000","fix":"5060"},[3320,3325],[3321,3326],{"desc":"5061","fix":"5062"},{"desc":"4992","fix":"5063"},{"desc":"4992","fix":"5064"},[7048,7048],{"desc":"5065","fix":"5066"},[6493,6493],{"desc":"4992","fix":"5067"},{"desc":"4992","fix":"5068"},[6591,6591],{"desc":"5061","fix":"5069"},[6688,6688],{"desc":"5070","fix":"5071"},{"desc":"5065","fix":"5072"},[5434,5434],{"desc":"5065","fix":"5073"},[5444,5444],{"desc":"5065","fix":"5074"},[5443,5443],"Update the dependencies array to be: [getQuery]",{"range":"5075","text":"5076"},"Update the dependencies array to be: [getTime, load]",{"range":"5077","text":"5078"},"Update the dependencies array to be: [userId]",{"range":"5079","text":"5080"},"Update the dependencies array to be: [assingNo, getQuery, id]",{"range":"5081","text":"5082"},{"range":"5083","text":"5078"},"Update the dependencies array to be: [CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",{"range":"5084","text":"5085"},"Update the dependencies array to be: [getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",{"range":"5086","text":"5087"},"Update the dependencies array to be: [getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",{"range":"5088","text":"5089"},"Update the dependencies array to be: [getProposalDetails]",{"range":"5090","text":"5091"},{"range":"5092","text":"5078"},{"range":"5093","text":"5078"},"Update the dependencies array to be: [getChatting, id]",{"range":"5094","text":"5095"},{"range":"5096","text":"5076"},"Update the dependencies array to be: [item, props.location.obj]",{"range":"5097","text":"5098"},"Update the dependencies array to be: [getMessage]",{"range":"5099","text":"5100"},{"range":"5101","text":"5100"},"Update the dependencies array to be: [getAllPaid, getPaid, getUnpaid]",{"range":"5102","text":"5103"},"Update the dependencies array to be: [assingNo, id]",{"range":"5104","text":"5105"},"Update the dependencies array to be: [getQueryData]",{"range":"5106","text":"5107"},"Update the dependencies array to be: [getQuery, queryNo]",{"range":"5108","text":"5109"},"Update the dependencies array to be: [getTeamLeader, id]",{"range":"5110","text":"5111"},"Update the dependencies array to be: [getTutorial, id]",{"range":"5112","text":"5113"},"Update the dependencies array to be: [getTeamLeader]",{"range":"5114","text":"5115"},{"range":"5116","text":"5105"},{"range":"5117","text":"5100"},{"range":"5118","text":"5098"},{"range":"5119","text":"5095"},"Update the dependencies array to be: [getRecording]",{"range":"5120","text":"5121"},"Update the dependencies array to be: [getData, getTeamLeader]",{"range":"5122","text":"5123"},"Update the dependencies array to be: [getTaxProf, taxId]",{"range":"5124","text":"5125"},"Update the dependencies array to be: [userid]",{"range":"5126","text":"5127"},"Update the dependencies array to be: [getTaxProf]",{"range":"5128","text":"5129"},"Update the dependencies array to be: [getAssignmentList]",{"range":"5130","text":"5131"},{"range":"5132","text":"5127"},{"range":"5133","text":"5082"},"Update the dependencies array to be: [getQueryData, getTaxProfession]",{"range":"5134","text":"5135"},{"range":"5136","text":"5109"},"Update the dependencies array to be: [getFeedback]",{"range":"5137","text":"5138"},{"range":"5139","text":"5103"},{"range":"5140","text":"5127"},{"range":"5141","text":"5127"},"Update the dependencies array to be: [assingNo, getAdditionalQuery, getQueryDetails]",{"range":"5142","text":"5143"},"Update the dependencies array to be: [getReport]",{"range":"5144","text":"5145"},{"range":"5146","text":"5131"},"Update the dependencies array to be: [assignNo, getDetails]",{"range":"5147","text":"5148"},{"range":"5149","text":"5095"},{"range":"5150","text":"5100"},"Update the dependencies array to be: [props.location.obj]",{"range":"5151","text":"5152"},"Update the dependencies array to be: [checkAssigned, item]",{"range":"5153","text":"5154"},"Update the dependencies array to be: [getPaymentStatus]",{"range":"5155","text":"5156"},{"range":"5157","text":"5156"},{"range":"5158","text":"5156"},"Update the dependencies array to be: [getAssignmentNo, getData, getUsers]",{"range":"5159","text":"5160"},{"range":"5161","text":"5121"},"Update the dependencies array to be: [getInCompleteAssingment]",{"range":"5162","text":"5163"},{"range":"5164","text":"5131"},{"range":"5165","text":"5131"},{"range":"5166","text":"5131"},{"range":"5167","text":"5156"},"Update the dependencies array to be: [id, userid]",{"range":"5168","text":"5169"},{"range":"5170","text":"5156"},{"range":"5171","text":"5156"},{"range":"5172","text":"5163"},{"range":"5173","text":"5163"},"Update the dependencies array to be: [getPendingforAcceptance]",{"range":"5174","text":"5175"},"Update the dependencies array to be: [getHistory, report]",{"range":"5176","text":"5177"},"Update the dependencies array to be: [adminDashboard, getFeedback2]",{"range":"5178","text":"5179"},"Update the dependencies array to be: [getProposalList]",{"range":"5180","text":"5181"},{"range":"5182","text":"5181"},{"range":"5183","text":"5181"},{"range":"5184","text":"5181"},"Update the dependencies array to be: [getData, getUsers]",{"range":"5185","text":"5186"},{"range":"5187","text":"5177"},"Update the dependencies array to be: [getNotification, qno]",{"range":"5188","text":"5189"},{"range":"5190","text":"5121"},{"range":"5191","text":"5177"},"Update the dependencies array to be: [getNotification, tokenKey]",{"range":"5192","text":"5193"},"Update the dependencies array to be: [getData, report]",{"range":"5194","text":"5195"},"Update the dependencies array to be: [getAllQueriesData, props.allData]",{"range":"5196","text":"5197"},{"range":"5198","text":"5195"},{"range":"5199","text":"5160"},"Update the dependencies array to be: [getAssignmentData]",{"range":"5200","text":"5201"},{"range":"5202","text":"5201"},{"range":"5203","text":"5201"},{"range":"5204","text":"5201"},"Update the dependencies array to be: [getProposalData]",{"range":"5205","text":"5206"},{"range":"5207","text":"5206"},{"range":"5208","text":"5206"},{"range":"5209","text":"5206"},"Update the dependencies array to be: [getQueriesData]",{"range":"5210","text":"5211"},{"range":"5212","text":"5211"},{"range":"5213","text":"5211"},{"range":"5214","text":"5211"},{"range":"5215","text":"5076"},{"range":"5216","text":"5095"},{"range":"5217","text":"5121"},{"range":"5218","text":"5138"},{"range":"5219","text":"5100"},{"range":"5220","text":"5152"},{"range":"5221","text":"5103"},{"range":"5222","text":"5131"},{"range":"5223","text":"5127"},{"range":"5224","text":"5127"},{"range":"5225","text":"5127"},{"range":"5226","text":"5127"},{"range":"5227","text":"5082"},{"range":"5228","text":"5195"},{"range":"5229","text":"5131"},{"range":"5230","text":"5131"},{"range":"5231","text":"5131"},{"range":"5232","text":"5156"},{"range":"5233","text":"5156"},{"range":"5234","text":"5156"},{"range":"5235","text":"5160"},{"range":"5236","text":"5181"},{"range":"5237","text":"5169"},{"range":"5238","text":"5181"},{"range":"5239","text":"5181"},{"range":"5240","text":"5181"},{"range":"5241","text":"5163"},{"range":"5242","text":"5175"},{"range":"5243","text":"5163"},{"range":"5244","text":"5163"},{"range":"5245","text":"5163"},{"range":"5246","text":"5195"},{"range":"5247","text":"5177"},{"range":"5248","text":"5189"},"Update the dependencies array to be: [cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.paidAmount, tdsRate]",{"range":"5249","text":"5250"},{"range":"5251","text":"5181"},{"range":"5252","text":"5181"},"Update the dependencies array to be: [paydetails2]",{"range":"5253","text":"5254"},{"range":"5255","text":"5181"},{"range":"5256","text":"5181"},{"range":"5257","text":"5250"},"Update the dependencies array to be: [cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.id, props.paidAmount, tdsRate]",{"range":"5258","text":"5259"},{"range":"5260","text":"5254"},{"range":"5261","text":"5254"},{"range":"5262","text":"5254"},[2000,2002],"[getQuery]",[1601,1607],"[getTime, load]",[3702,3704],"[userId]",[5999,6009],"[assingNo, getQuery, id]",[2896,2902],[1130,1132],"[CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",[1114,1116],"[getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",[1146,1148],"[getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",[1827,1829],"[getProposalDetails]",[1444,1450],[1306,1312],[673,677],"[getChatting, id]",[2316,2318],[1565,1571],"[item, props.location.obj]",[995,997],"[getMessage]",[671,673],[808,810],"[getAllPaid, getPaid, getUnpaid]",[6724,6734],"[assingNo, id]",[2096,2098],"[getQueryData]",[2755,2764],"[getQuery, queryNo]",[3183,3187],"[getTeamLeader, id]",[4101,4105],"[getTutorial, id]",[4821,4823],"[getTeamLeader]",[1219,1229],[843,845],[1607,1613],[684,688],[1141,1143],"[getRecording]",[2515,2517],"[getData, getTeamLeader]",[2812,2819],"[getTaxProf, taxId]",[4965,4967],"[userid]",[680,682],"[getTaxProf]",[1017,1019],"[getAssignmentList]",[3073,3075],[6469,6479],[2082,2084],"[getQueryData, getTaxProfession]",[2848,2857],[717,719],"[getFeedback]",[810,812],[2200,2202],[2897,2899],[895,905],"[assingNo, getAdditionalQuery, getQueryDetails]",[630,632],"[getReport]",[928,930],[1232,1242],"[assignNo, getDetails]",[681,685],[1024,1026],[1612,1614],"[props.location.obj]",[1664,1670],"[checkAssigned, item]",[2396,2398],"[getPaymentStatus]",[2309,2311],[2281,2283],[1863,1865],"[getAssignmentNo, getData, getUsers]",[1199,1201],[965,967],"[getInCompleteAssingment]",[2094,2096],[2197,2199],[2596,2598],[1717,1719],[2212,2214],"[id, userid]",[1877,1879],[1869,1871],[1150,1152],[943,945],[1125,1127],"[getPendingforAcceptance]",[576,584],"[getHistory, report]",[1651,1667],"[adminDashboard, getFeedback2]",[1264,1266],"[getProposalList]",[1268,1270],[1305,1307],[1617,1619],[2227,2229],"[getData, getUsers]",[584,592],[425,430],"[getNotification, qno]",[1090,1092],[587,595],[365,375],"[getNotification, tokenKey]",[2218,2226],"[getData, report]",[983,998],"[getAllQueriesData, props.allData]",[958,966],[1567,1569],[1989,1991],"[getAssignmentData]",[1832,1834],[2063,2065],[2210,2212],[1136,1138],"[getProposalData]",[1377,1379],[1410,1412],[1661,1663],[1051,1053],"[getQueriesData]",[1604,1606],[2059,2061],[1307,1309],[1986,1988],[681,685],[1326,1328],[717,719],[1024,1026],[1569,1571],[810,812],[985,987],[2200,2202],[4919,4921],[3085,3087],[3000,3002],[5681,5691],[1499,1507],[2099,2101],[2299,2301],[2603,2605],[1661,1663],[1603,1605],[1882,1884],[1769,1771],[1329,1331],[2183,2185],[1324,1326],[1055,1057],[1282,1284],[976,978],[1211,1213],[954,956],[659,661],[675,677],[2225,2233],[584,592],[425,430],[2673,2691],"[cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.paidAmount, tdsRate]",[2049,2051],[2012,2014],[1657,1659],"[paydetails2]",[1592,1594],[1604,1606],[2675,2693],[2553,2571],"[cgetRate, getDataild, props.billNo, props.generated, props.gstNo, props.id, props.paidAmount, tdsRate]",[1518,1520],[1528,1530],[1527,1529]]